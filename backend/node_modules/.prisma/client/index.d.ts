
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model UserHistory
 * 
 */
export type UserHistory = $Result.DefaultSelection<Prisma.$UserHistoryPayload>
/**
 * Model ChurchIncome
 * 
 */
export type ChurchIncome = $Result.DefaultSelection<Prisma.$ChurchIncomePayload>
/**
 * Model ChurchIncomeHistory
 * 
 */
export type ChurchIncomeHistory = $Result.DefaultSelection<Prisma.$ChurchIncomeHistoryPayload>
/**
 * Model ChurchIncomeType
 * 
 */
export type ChurchIncomeType = $Result.DefaultSelection<Prisma.$ChurchIncomeTypePayload>
/**
 * Model ChurchSpending
 * 
 */
export type ChurchSpending = $Result.DefaultSelection<Prisma.$ChurchSpendingPayload>
/**
 * Model ChurchSpendingHistory
 * 
 */
export type ChurchSpendingHistory = $Result.DefaultSelection<Prisma.$ChurchSpendingHistoryPayload>
/**
 * Model ChurchSpendingType
 * 
 */
export type ChurchSpendingType = $Result.DefaultSelection<Prisma.$ChurchSpendingTypePayload>
/**
 * Model StoreIncome
 * 
 */
export type StoreIncome = $Result.DefaultSelection<Prisma.$StoreIncomePayload>
/**
 * Model StoreIncomeHistory
 * 
 */
export type StoreIncomeHistory = $Result.DefaultSelection<Prisma.$StoreIncomeHistoryPayload>
/**
 * Model StoreIncomeType
 * 
 */
export type StoreIncomeType = $Result.DefaultSelection<Prisma.$StoreIncomeTypePayload>
/**
 * Model StoreSpending
 * 
 */
export type StoreSpending = $Result.DefaultSelection<Prisma.$StoreSpendingPayload>
/**
 * Model StoreSpendingHistory
 * 
 */
export type StoreSpendingHistory = $Result.DefaultSelection<Prisma.$StoreSpendingHistoryPayload>
/**
 * Model StoreSpendingType
 * 
 */
export type StoreSpendingType = $Result.DefaultSelection<Prisma.$StoreSpendingTypePayload>
/**
 * Model FarmIncome
 * 
 */
export type FarmIncome = $Result.DefaultSelection<Prisma.$FarmIncomePayload>
/**
 * Model FarmIncomeHistory
 * 
 */
export type FarmIncomeHistory = $Result.DefaultSelection<Prisma.$FarmIncomeHistoryPayload>
/**
 * Model FarmIncomeType
 * 
 */
export type FarmIncomeType = $Result.DefaultSelection<Prisma.$FarmIncomeTypePayload>
/**
 * Model FarmSpending
 * 
 */
export type FarmSpending = $Result.DefaultSelection<Prisma.$FarmSpendingPayload>
/**
 * Model FarmSpendingHistory
 * 
 */
export type FarmSpendingHistory = $Result.DefaultSelection<Prisma.$FarmSpendingHistoryPayload>
/**
 * Model FarmSpendingType
 * 
 */
export type FarmSpendingType = $Result.DefaultSelection<Prisma.$FarmSpendingTypePayload>

/**
 * Enums
 */
export namespace $Enums {
  export const Role: {
  ADMIN: 'ADMIN',
  CHURCH: 'CHURCH',
  STORE: 'STORE',
  FARM: 'FARM'
};

export type Role = (typeof Role)[keyof typeof Role]

}

export type Role = $Enums.Role

export const Role: typeof $Enums.Role

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs, $Utils.Call<Prisma.TypeMapCb, {
    extArgs: ExtArgs
  }>, ClientOptions>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.userHistory`: Exposes CRUD operations for the **UserHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserHistories
    * const userHistories = await prisma.userHistory.findMany()
    * ```
    */
  get userHistory(): Prisma.UserHistoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.churchIncome`: Exposes CRUD operations for the **ChurchIncome** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ChurchIncomes
    * const churchIncomes = await prisma.churchIncome.findMany()
    * ```
    */
  get churchIncome(): Prisma.ChurchIncomeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.churchIncomeHistory`: Exposes CRUD operations for the **ChurchIncomeHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ChurchIncomeHistories
    * const churchIncomeHistories = await prisma.churchIncomeHistory.findMany()
    * ```
    */
  get churchIncomeHistory(): Prisma.ChurchIncomeHistoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.churchIncomeType`: Exposes CRUD operations for the **ChurchIncomeType** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ChurchIncomeTypes
    * const churchIncomeTypes = await prisma.churchIncomeType.findMany()
    * ```
    */
  get churchIncomeType(): Prisma.ChurchIncomeTypeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.churchSpending`: Exposes CRUD operations for the **ChurchSpending** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ChurchSpendings
    * const churchSpendings = await prisma.churchSpending.findMany()
    * ```
    */
  get churchSpending(): Prisma.ChurchSpendingDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.churchSpendingHistory`: Exposes CRUD operations for the **ChurchSpendingHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ChurchSpendingHistories
    * const churchSpendingHistories = await prisma.churchSpendingHistory.findMany()
    * ```
    */
  get churchSpendingHistory(): Prisma.ChurchSpendingHistoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.churchSpendingType`: Exposes CRUD operations for the **ChurchSpendingType** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ChurchSpendingTypes
    * const churchSpendingTypes = await prisma.churchSpendingType.findMany()
    * ```
    */
  get churchSpendingType(): Prisma.ChurchSpendingTypeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.storeIncome`: Exposes CRUD operations for the **StoreIncome** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StoreIncomes
    * const storeIncomes = await prisma.storeIncome.findMany()
    * ```
    */
  get storeIncome(): Prisma.StoreIncomeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.storeIncomeHistory`: Exposes CRUD operations for the **StoreIncomeHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StoreIncomeHistories
    * const storeIncomeHistories = await prisma.storeIncomeHistory.findMany()
    * ```
    */
  get storeIncomeHistory(): Prisma.StoreIncomeHistoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.storeIncomeType`: Exposes CRUD operations for the **StoreIncomeType** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StoreIncomeTypes
    * const storeIncomeTypes = await prisma.storeIncomeType.findMany()
    * ```
    */
  get storeIncomeType(): Prisma.StoreIncomeTypeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.storeSpending`: Exposes CRUD operations for the **StoreSpending** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StoreSpendings
    * const storeSpendings = await prisma.storeSpending.findMany()
    * ```
    */
  get storeSpending(): Prisma.StoreSpendingDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.storeSpendingHistory`: Exposes CRUD operations for the **StoreSpendingHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StoreSpendingHistories
    * const storeSpendingHistories = await prisma.storeSpendingHistory.findMany()
    * ```
    */
  get storeSpendingHistory(): Prisma.StoreSpendingHistoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.storeSpendingType`: Exposes CRUD operations for the **StoreSpendingType** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StoreSpendingTypes
    * const storeSpendingTypes = await prisma.storeSpendingType.findMany()
    * ```
    */
  get storeSpendingType(): Prisma.StoreSpendingTypeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.farmIncome`: Exposes CRUD operations for the **FarmIncome** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FarmIncomes
    * const farmIncomes = await prisma.farmIncome.findMany()
    * ```
    */
  get farmIncome(): Prisma.FarmIncomeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.farmIncomeHistory`: Exposes CRUD operations for the **FarmIncomeHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FarmIncomeHistories
    * const farmIncomeHistories = await prisma.farmIncomeHistory.findMany()
    * ```
    */
  get farmIncomeHistory(): Prisma.FarmIncomeHistoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.farmIncomeType`: Exposes CRUD operations for the **FarmIncomeType** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FarmIncomeTypes
    * const farmIncomeTypes = await prisma.farmIncomeType.findMany()
    * ```
    */
  get farmIncomeType(): Prisma.FarmIncomeTypeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.farmSpending`: Exposes CRUD operations for the **FarmSpending** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FarmSpendings
    * const farmSpendings = await prisma.farmSpending.findMany()
    * ```
    */
  get farmSpending(): Prisma.FarmSpendingDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.farmSpendingHistory`: Exposes CRUD operations for the **FarmSpendingHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FarmSpendingHistories
    * const farmSpendingHistories = await prisma.farmSpendingHistory.findMany()
    * ```
    */
  get farmSpendingHistory(): Prisma.FarmSpendingHistoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.farmSpendingType`: Exposes CRUD operations for the **FarmSpendingType** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FarmSpendingTypes
    * const farmSpendingTypes = await prisma.farmSpendingType.findMany()
    * ```
    */
  get farmSpendingType(): Prisma.FarmSpendingTypeDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.4.1
   * Query Engine version: a9055b89e58b4b5bfb59600785423b1db3d0e75d
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    UserHistory: 'UserHistory',
    ChurchIncome: 'ChurchIncome',
    ChurchIncomeHistory: 'ChurchIncomeHistory',
    ChurchIncomeType: 'ChurchIncomeType',
    ChurchSpending: 'ChurchSpending',
    ChurchSpendingHistory: 'ChurchSpendingHistory',
    ChurchSpendingType: 'ChurchSpendingType',
    StoreIncome: 'StoreIncome',
    StoreIncomeHistory: 'StoreIncomeHistory',
    StoreIncomeType: 'StoreIncomeType',
    StoreSpending: 'StoreSpending',
    StoreSpendingHistory: 'StoreSpendingHistory',
    StoreSpendingType: 'StoreSpendingType',
    FarmIncome: 'FarmIncome',
    FarmIncomeHistory: 'FarmIncomeHistory',
    FarmIncomeType: 'FarmIncomeType',
    FarmSpending: 'FarmSpending',
    FarmSpendingHistory: 'FarmSpendingHistory',
    FarmSpendingType: 'FarmSpendingType'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "user" | "userHistory" | "churchIncome" | "churchIncomeHistory" | "churchIncomeType" | "churchSpending" | "churchSpendingHistory" | "churchSpendingType" | "storeIncome" | "storeIncomeHistory" | "storeIncomeType" | "storeSpending" | "storeSpendingHistory" | "storeSpendingType" | "farmIncome" | "farmIncomeHistory" | "farmIncomeType" | "farmSpending" | "farmSpendingHistory" | "farmSpendingType"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      UserHistory: {
        payload: Prisma.$UserHistoryPayload<ExtArgs>
        fields: Prisma.UserHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHistoryPayload>
          }
          findFirst: {
            args: Prisma.UserHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHistoryPayload>
          }
          findMany: {
            args: Prisma.UserHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHistoryPayload>[]
          }
          create: {
            args: Prisma.UserHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHistoryPayload>
          }
          createMany: {
            args: Prisma.UserHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHistoryPayload>[]
          }
          delete: {
            args: Prisma.UserHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHistoryPayload>
          }
          update: {
            args: Prisma.UserHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHistoryPayload>
          }
          deleteMany: {
            args: Prisma.UserHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserHistoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHistoryPayload>[]
          }
          upsert: {
            args: Prisma.UserHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHistoryPayload>
          }
          aggregate: {
            args: Prisma.UserHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserHistory>
          }
          groupBy: {
            args: Prisma.UserHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<UserHistoryCountAggregateOutputType> | number
          }
        }
      }
      ChurchIncome: {
        payload: Prisma.$ChurchIncomePayload<ExtArgs>
        fields: Prisma.ChurchIncomeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ChurchIncomeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ChurchIncomeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomePayload>
          }
          findFirst: {
            args: Prisma.ChurchIncomeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ChurchIncomeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomePayload>
          }
          findMany: {
            args: Prisma.ChurchIncomeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomePayload>[]
          }
          create: {
            args: Prisma.ChurchIncomeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomePayload>
          }
          createMany: {
            args: Prisma.ChurchIncomeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ChurchIncomeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomePayload>[]
          }
          delete: {
            args: Prisma.ChurchIncomeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomePayload>
          }
          update: {
            args: Prisma.ChurchIncomeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomePayload>
          }
          deleteMany: {
            args: Prisma.ChurchIncomeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ChurchIncomeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ChurchIncomeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomePayload>[]
          }
          upsert: {
            args: Prisma.ChurchIncomeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomePayload>
          }
          aggregate: {
            args: Prisma.ChurchIncomeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChurchIncome>
          }
          groupBy: {
            args: Prisma.ChurchIncomeGroupByArgs<ExtArgs>
            result: $Utils.Optional<ChurchIncomeGroupByOutputType>[]
          }
          count: {
            args: Prisma.ChurchIncomeCountArgs<ExtArgs>
            result: $Utils.Optional<ChurchIncomeCountAggregateOutputType> | number
          }
        }
      }
      ChurchIncomeHistory: {
        payload: Prisma.$ChurchIncomeHistoryPayload<ExtArgs>
        fields: Prisma.ChurchIncomeHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ChurchIncomeHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomeHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ChurchIncomeHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomeHistoryPayload>
          }
          findFirst: {
            args: Prisma.ChurchIncomeHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomeHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ChurchIncomeHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomeHistoryPayload>
          }
          findMany: {
            args: Prisma.ChurchIncomeHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomeHistoryPayload>[]
          }
          create: {
            args: Prisma.ChurchIncomeHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomeHistoryPayload>
          }
          createMany: {
            args: Prisma.ChurchIncomeHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ChurchIncomeHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomeHistoryPayload>[]
          }
          delete: {
            args: Prisma.ChurchIncomeHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomeHistoryPayload>
          }
          update: {
            args: Prisma.ChurchIncomeHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomeHistoryPayload>
          }
          deleteMany: {
            args: Prisma.ChurchIncomeHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ChurchIncomeHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ChurchIncomeHistoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomeHistoryPayload>[]
          }
          upsert: {
            args: Prisma.ChurchIncomeHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomeHistoryPayload>
          }
          aggregate: {
            args: Prisma.ChurchIncomeHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChurchIncomeHistory>
          }
          groupBy: {
            args: Prisma.ChurchIncomeHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<ChurchIncomeHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.ChurchIncomeHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<ChurchIncomeHistoryCountAggregateOutputType> | number
          }
        }
      }
      ChurchIncomeType: {
        payload: Prisma.$ChurchIncomeTypePayload<ExtArgs>
        fields: Prisma.ChurchIncomeTypeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ChurchIncomeTypeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomeTypePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ChurchIncomeTypeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomeTypePayload>
          }
          findFirst: {
            args: Prisma.ChurchIncomeTypeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomeTypePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ChurchIncomeTypeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomeTypePayload>
          }
          findMany: {
            args: Prisma.ChurchIncomeTypeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomeTypePayload>[]
          }
          create: {
            args: Prisma.ChurchIncomeTypeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomeTypePayload>
          }
          createMany: {
            args: Prisma.ChurchIncomeTypeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ChurchIncomeTypeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomeTypePayload>[]
          }
          delete: {
            args: Prisma.ChurchIncomeTypeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomeTypePayload>
          }
          update: {
            args: Prisma.ChurchIncomeTypeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomeTypePayload>
          }
          deleteMany: {
            args: Prisma.ChurchIncomeTypeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ChurchIncomeTypeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ChurchIncomeTypeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomeTypePayload>[]
          }
          upsert: {
            args: Prisma.ChurchIncomeTypeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchIncomeTypePayload>
          }
          aggregate: {
            args: Prisma.ChurchIncomeTypeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChurchIncomeType>
          }
          groupBy: {
            args: Prisma.ChurchIncomeTypeGroupByArgs<ExtArgs>
            result: $Utils.Optional<ChurchIncomeTypeGroupByOutputType>[]
          }
          count: {
            args: Prisma.ChurchIncomeTypeCountArgs<ExtArgs>
            result: $Utils.Optional<ChurchIncomeTypeCountAggregateOutputType> | number
          }
        }
      }
      ChurchSpending: {
        payload: Prisma.$ChurchSpendingPayload<ExtArgs>
        fields: Prisma.ChurchSpendingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ChurchSpendingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ChurchSpendingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingPayload>
          }
          findFirst: {
            args: Prisma.ChurchSpendingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ChurchSpendingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingPayload>
          }
          findMany: {
            args: Prisma.ChurchSpendingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingPayload>[]
          }
          create: {
            args: Prisma.ChurchSpendingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingPayload>
          }
          createMany: {
            args: Prisma.ChurchSpendingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ChurchSpendingCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingPayload>[]
          }
          delete: {
            args: Prisma.ChurchSpendingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingPayload>
          }
          update: {
            args: Prisma.ChurchSpendingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingPayload>
          }
          deleteMany: {
            args: Prisma.ChurchSpendingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ChurchSpendingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ChurchSpendingUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingPayload>[]
          }
          upsert: {
            args: Prisma.ChurchSpendingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingPayload>
          }
          aggregate: {
            args: Prisma.ChurchSpendingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChurchSpending>
          }
          groupBy: {
            args: Prisma.ChurchSpendingGroupByArgs<ExtArgs>
            result: $Utils.Optional<ChurchSpendingGroupByOutputType>[]
          }
          count: {
            args: Prisma.ChurchSpendingCountArgs<ExtArgs>
            result: $Utils.Optional<ChurchSpendingCountAggregateOutputType> | number
          }
        }
      }
      ChurchSpendingHistory: {
        payload: Prisma.$ChurchSpendingHistoryPayload<ExtArgs>
        fields: Prisma.ChurchSpendingHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ChurchSpendingHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ChurchSpendingHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingHistoryPayload>
          }
          findFirst: {
            args: Prisma.ChurchSpendingHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ChurchSpendingHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingHistoryPayload>
          }
          findMany: {
            args: Prisma.ChurchSpendingHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingHistoryPayload>[]
          }
          create: {
            args: Prisma.ChurchSpendingHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingHistoryPayload>
          }
          createMany: {
            args: Prisma.ChurchSpendingHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ChurchSpendingHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingHistoryPayload>[]
          }
          delete: {
            args: Prisma.ChurchSpendingHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingHistoryPayload>
          }
          update: {
            args: Prisma.ChurchSpendingHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingHistoryPayload>
          }
          deleteMany: {
            args: Prisma.ChurchSpendingHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ChurchSpendingHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ChurchSpendingHistoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingHistoryPayload>[]
          }
          upsert: {
            args: Prisma.ChurchSpendingHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingHistoryPayload>
          }
          aggregate: {
            args: Prisma.ChurchSpendingHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChurchSpendingHistory>
          }
          groupBy: {
            args: Prisma.ChurchSpendingHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<ChurchSpendingHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.ChurchSpendingHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<ChurchSpendingHistoryCountAggregateOutputType> | number
          }
        }
      }
      ChurchSpendingType: {
        payload: Prisma.$ChurchSpendingTypePayload<ExtArgs>
        fields: Prisma.ChurchSpendingTypeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ChurchSpendingTypeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingTypePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ChurchSpendingTypeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingTypePayload>
          }
          findFirst: {
            args: Prisma.ChurchSpendingTypeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingTypePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ChurchSpendingTypeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingTypePayload>
          }
          findMany: {
            args: Prisma.ChurchSpendingTypeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingTypePayload>[]
          }
          create: {
            args: Prisma.ChurchSpendingTypeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingTypePayload>
          }
          createMany: {
            args: Prisma.ChurchSpendingTypeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ChurchSpendingTypeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingTypePayload>[]
          }
          delete: {
            args: Prisma.ChurchSpendingTypeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingTypePayload>
          }
          update: {
            args: Prisma.ChurchSpendingTypeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingTypePayload>
          }
          deleteMany: {
            args: Prisma.ChurchSpendingTypeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ChurchSpendingTypeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ChurchSpendingTypeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingTypePayload>[]
          }
          upsert: {
            args: Prisma.ChurchSpendingTypeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChurchSpendingTypePayload>
          }
          aggregate: {
            args: Prisma.ChurchSpendingTypeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChurchSpendingType>
          }
          groupBy: {
            args: Prisma.ChurchSpendingTypeGroupByArgs<ExtArgs>
            result: $Utils.Optional<ChurchSpendingTypeGroupByOutputType>[]
          }
          count: {
            args: Prisma.ChurchSpendingTypeCountArgs<ExtArgs>
            result: $Utils.Optional<ChurchSpendingTypeCountAggregateOutputType> | number
          }
        }
      }
      StoreIncome: {
        payload: Prisma.$StoreIncomePayload<ExtArgs>
        fields: Prisma.StoreIncomeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StoreIncomeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StoreIncomeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomePayload>
          }
          findFirst: {
            args: Prisma.StoreIncomeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StoreIncomeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomePayload>
          }
          findMany: {
            args: Prisma.StoreIncomeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomePayload>[]
          }
          create: {
            args: Prisma.StoreIncomeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomePayload>
          }
          createMany: {
            args: Prisma.StoreIncomeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.StoreIncomeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomePayload>[]
          }
          delete: {
            args: Prisma.StoreIncomeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomePayload>
          }
          update: {
            args: Prisma.StoreIncomeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomePayload>
          }
          deleteMany: {
            args: Prisma.StoreIncomeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StoreIncomeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.StoreIncomeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomePayload>[]
          }
          upsert: {
            args: Prisma.StoreIncomeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomePayload>
          }
          aggregate: {
            args: Prisma.StoreIncomeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStoreIncome>
          }
          groupBy: {
            args: Prisma.StoreIncomeGroupByArgs<ExtArgs>
            result: $Utils.Optional<StoreIncomeGroupByOutputType>[]
          }
          count: {
            args: Prisma.StoreIncomeCountArgs<ExtArgs>
            result: $Utils.Optional<StoreIncomeCountAggregateOutputType> | number
          }
        }
      }
      StoreIncomeHistory: {
        payload: Prisma.$StoreIncomeHistoryPayload<ExtArgs>
        fields: Prisma.StoreIncomeHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StoreIncomeHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomeHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StoreIncomeHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomeHistoryPayload>
          }
          findFirst: {
            args: Prisma.StoreIncomeHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomeHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StoreIncomeHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomeHistoryPayload>
          }
          findMany: {
            args: Prisma.StoreIncomeHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomeHistoryPayload>[]
          }
          create: {
            args: Prisma.StoreIncomeHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomeHistoryPayload>
          }
          createMany: {
            args: Prisma.StoreIncomeHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.StoreIncomeHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomeHistoryPayload>[]
          }
          delete: {
            args: Prisma.StoreIncomeHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomeHistoryPayload>
          }
          update: {
            args: Prisma.StoreIncomeHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomeHistoryPayload>
          }
          deleteMany: {
            args: Prisma.StoreIncomeHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StoreIncomeHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.StoreIncomeHistoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomeHistoryPayload>[]
          }
          upsert: {
            args: Prisma.StoreIncomeHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomeHistoryPayload>
          }
          aggregate: {
            args: Prisma.StoreIncomeHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStoreIncomeHistory>
          }
          groupBy: {
            args: Prisma.StoreIncomeHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<StoreIncomeHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.StoreIncomeHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<StoreIncomeHistoryCountAggregateOutputType> | number
          }
        }
      }
      StoreIncomeType: {
        payload: Prisma.$StoreIncomeTypePayload<ExtArgs>
        fields: Prisma.StoreIncomeTypeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StoreIncomeTypeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomeTypePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StoreIncomeTypeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomeTypePayload>
          }
          findFirst: {
            args: Prisma.StoreIncomeTypeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomeTypePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StoreIncomeTypeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomeTypePayload>
          }
          findMany: {
            args: Prisma.StoreIncomeTypeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomeTypePayload>[]
          }
          create: {
            args: Prisma.StoreIncomeTypeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomeTypePayload>
          }
          createMany: {
            args: Prisma.StoreIncomeTypeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.StoreIncomeTypeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomeTypePayload>[]
          }
          delete: {
            args: Prisma.StoreIncomeTypeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomeTypePayload>
          }
          update: {
            args: Prisma.StoreIncomeTypeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomeTypePayload>
          }
          deleteMany: {
            args: Prisma.StoreIncomeTypeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StoreIncomeTypeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.StoreIncomeTypeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomeTypePayload>[]
          }
          upsert: {
            args: Prisma.StoreIncomeTypeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreIncomeTypePayload>
          }
          aggregate: {
            args: Prisma.StoreIncomeTypeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStoreIncomeType>
          }
          groupBy: {
            args: Prisma.StoreIncomeTypeGroupByArgs<ExtArgs>
            result: $Utils.Optional<StoreIncomeTypeGroupByOutputType>[]
          }
          count: {
            args: Prisma.StoreIncomeTypeCountArgs<ExtArgs>
            result: $Utils.Optional<StoreIncomeTypeCountAggregateOutputType> | number
          }
        }
      }
      StoreSpending: {
        payload: Prisma.$StoreSpendingPayload<ExtArgs>
        fields: Prisma.StoreSpendingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StoreSpendingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StoreSpendingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingPayload>
          }
          findFirst: {
            args: Prisma.StoreSpendingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StoreSpendingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingPayload>
          }
          findMany: {
            args: Prisma.StoreSpendingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingPayload>[]
          }
          create: {
            args: Prisma.StoreSpendingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingPayload>
          }
          createMany: {
            args: Prisma.StoreSpendingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.StoreSpendingCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingPayload>[]
          }
          delete: {
            args: Prisma.StoreSpendingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingPayload>
          }
          update: {
            args: Prisma.StoreSpendingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingPayload>
          }
          deleteMany: {
            args: Prisma.StoreSpendingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StoreSpendingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.StoreSpendingUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingPayload>[]
          }
          upsert: {
            args: Prisma.StoreSpendingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingPayload>
          }
          aggregate: {
            args: Prisma.StoreSpendingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStoreSpending>
          }
          groupBy: {
            args: Prisma.StoreSpendingGroupByArgs<ExtArgs>
            result: $Utils.Optional<StoreSpendingGroupByOutputType>[]
          }
          count: {
            args: Prisma.StoreSpendingCountArgs<ExtArgs>
            result: $Utils.Optional<StoreSpendingCountAggregateOutputType> | number
          }
        }
      }
      StoreSpendingHistory: {
        payload: Prisma.$StoreSpendingHistoryPayload<ExtArgs>
        fields: Prisma.StoreSpendingHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StoreSpendingHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StoreSpendingHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingHistoryPayload>
          }
          findFirst: {
            args: Prisma.StoreSpendingHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StoreSpendingHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingHistoryPayload>
          }
          findMany: {
            args: Prisma.StoreSpendingHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingHistoryPayload>[]
          }
          create: {
            args: Prisma.StoreSpendingHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingHistoryPayload>
          }
          createMany: {
            args: Prisma.StoreSpendingHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.StoreSpendingHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingHistoryPayload>[]
          }
          delete: {
            args: Prisma.StoreSpendingHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingHistoryPayload>
          }
          update: {
            args: Prisma.StoreSpendingHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingHistoryPayload>
          }
          deleteMany: {
            args: Prisma.StoreSpendingHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StoreSpendingHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.StoreSpendingHistoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingHistoryPayload>[]
          }
          upsert: {
            args: Prisma.StoreSpendingHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingHistoryPayload>
          }
          aggregate: {
            args: Prisma.StoreSpendingHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStoreSpendingHistory>
          }
          groupBy: {
            args: Prisma.StoreSpendingHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<StoreSpendingHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.StoreSpendingHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<StoreSpendingHistoryCountAggregateOutputType> | number
          }
        }
      }
      StoreSpendingType: {
        payload: Prisma.$StoreSpendingTypePayload<ExtArgs>
        fields: Prisma.StoreSpendingTypeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StoreSpendingTypeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingTypePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StoreSpendingTypeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingTypePayload>
          }
          findFirst: {
            args: Prisma.StoreSpendingTypeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingTypePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StoreSpendingTypeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingTypePayload>
          }
          findMany: {
            args: Prisma.StoreSpendingTypeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingTypePayload>[]
          }
          create: {
            args: Prisma.StoreSpendingTypeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingTypePayload>
          }
          createMany: {
            args: Prisma.StoreSpendingTypeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.StoreSpendingTypeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingTypePayload>[]
          }
          delete: {
            args: Prisma.StoreSpendingTypeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingTypePayload>
          }
          update: {
            args: Prisma.StoreSpendingTypeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingTypePayload>
          }
          deleteMany: {
            args: Prisma.StoreSpendingTypeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StoreSpendingTypeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.StoreSpendingTypeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingTypePayload>[]
          }
          upsert: {
            args: Prisma.StoreSpendingTypeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreSpendingTypePayload>
          }
          aggregate: {
            args: Prisma.StoreSpendingTypeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStoreSpendingType>
          }
          groupBy: {
            args: Prisma.StoreSpendingTypeGroupByArgs<ExtArgs>
            result: $Utils.Optional<StoreSpendingTypeGroupByOutputType>[]
          }
          count: {
            args: Prisma.StoreSpendingTypeCountArgs<ExtArgs>
            result: $Utils.Optional<StoreSpendingTypeCountAggregateOutputType> | number
          }
        }
      }
      FarmIncome: {
        payload: Prisma.$FarmIncomePayload<ExtArgs>
        fields: Prisma.FarmIncomeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FarmIncomeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FarmIncomeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomePayload>
          }
          findFirst: {
            args: Prisma.FarmIncomeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FarmIncomeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomePayload>
          }
          findMany: {
            args: Prisma.FarmIncomeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomePayload>[]
          }
          create: {
            args: Prisma.FarmIncomeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomePayload>
          }
          createMany: {
            args: Prisma.FarmIncomeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FarmIncomeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomePayload>[]
          }
          delete: {
            args: Prisma.FarmIncomeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomePayload>
          }
          update: {
            args: Prisma.FarmIncomeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomePayload>
          }
          deleteMany: {
            args: Prisma.FarmIncomeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FarmIncomeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FarmIncomeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomePayload>[]
          }
          upsert: {
            args: Prisma.FarmIncomeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomePayload>
          }
          aggregate: {
            args: Prisma.FarmIncomeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFarmIncome>
          }
          groupBy: {
            args: Prisma.FarmIncomeGroupByArgs<ExtArgs>
            result: $Utils.Optional<FarmIncomeGroupByOutputType>[]
          }
          count: {
            args: Prisma.FarmIncomeCountArgs<ExtArgs>
            result: $Utils.Optional<FarmIncomeCountAggregateOutputType> | number
          }
        }
      }
      FarmIncomeHistory: {
        payload: Prisma.$FarmIncomeHistoryPayload<ExtArgs>
        fields: Prisma.FarmIncomeHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FarmIncomeHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomeHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FarmIncomeHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomeHistoryPayload>
          }
          findFirst: {
            args: Prisma.FarmIncomeHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomeHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FarmIncomeHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomeHistoryPayload>
          }
          findMany: {
            args: Prisma.FarmIncomeHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomeHistoryPayload>[]
          }
          create: {
            args: Prisma.FarmIncomeHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomeHistoryPayload>
          }
          createMany: {
            args: Prisma.FarmIncomeHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FarmIncomeHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomeHistoryPayload>[]
          }
          delete: {
            args: Prisma.FarmIncomeHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomeHistoryPayload>
          }
          update: {
            args: Prisma.FarmIncomeHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomeHistoryPayload>
          }
          deleteMany: {
            args: Prisma.FarmIncomeHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FarmIncomeHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FarmIncomeHistoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomeHistoryPayload>[]
          }
          upsert: {
            args: Prisma.FarmIncomeHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomeHistoryPayload>
          }
          aggregate: {
            args: Prisma.FarmIncomeHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFarmIncomeHistory>
          }
          groupBy: {
            args: Prisma.FarmIncomeHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<FarmIncomeHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.FarmIncomeHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<FarmIncomeHistoryCountAggregateOutputType> | number
          }
        }
      }
      FarmIncomeType: {
        payload: Prisma.$FarmIncomeTypePayload<ExtArgs>
        fields: Prisma.FarmIncomeTypeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FarmIncomeTypeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomeTypePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FarmIncomeTypeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomeTypePayload>
          }
          findFirst: {
            args: Prisma.FarmIncomeTypeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomeTypePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FarmIncomeTypeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomeTypePayload>
          }
          findMany: {
            args: Prisma.FarmIncomeTypeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomeTypePayload>[]
          }
          create: {
            args: Prisma.FarmIncomeTypeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomeTypePayload>
          }
          createMany: {
            args: Prisma.FarmIncomeTypeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FarmIncomeTypeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomeTypePayload>[]
          }
          delete: {
            args: Prisma.FarmIncomeTypeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomeTypePayload>
          }
          update: {
            args: Prisma.FarmIncomeTypeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomeTypePayload>
          }
          deleteMany: {
            args: Prisma.FarmIncomeTypeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FarmIncomeTypeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FarmIncomeTypeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomeTypePayload>[]
          }
          upsert: {
            args: Prisma.FarmIncomeTypeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmIncomeTypePayload>
          }
          aggregate: {
            args: Prisma.FarmIncomeTypeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFarmIncomeType>
          }
          groupBy: {
            args: Prisma.FarmIncomeTypeGroupByArgs<ExtArgs>
            result: $Utils.Optional<FarmIncomeTypeGroupByOutputType>[]
          }
          count: {
            args: Prisma.FarmIncomeTypeCountArgs<ExtArgs>
            result: $Utils.Optional<FarmIncomeTypeCountAggregateOutputType> | number
          }
        }
      }
      FarmSpending: {
        payload: Prisma.$FarmSpendingPayload<ExtArgs>
        fields: Prisma.FarmSpendingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FarmSpendingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FarmSpendingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingPayload>
          }
          findFirst: {
            args: Prisma.FarmSpendingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FarmSpendingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingPayload>
          }
          findMany: {
            args: Prisma.FarmSpendingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingPayload>[]
          }
          create: {
            args: Prisma.FarmSpendingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingPayload>
          }
          createMany: {
            args: Prisma.FarmSpendingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FarmSpendingCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingPayload>[]
          }
          delete: {
            args: Prisma.FarmSpendingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingPayload>
          }
          update: {
            args: Prisma.FarmSpendingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingPayload>
          }
          deleteMany: {
            args: Prisma.FarmSpendingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FarmSpendingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FarmSpendingUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingPayload>[]
          }
          upsert: {
            args: Prisma.FarmSpendingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingPayload>
          }
          aggregate: {
            args: Prisma.FarmSpendingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFarmSpending>
          }
          groupBy: {
            args: Prisma.FarmSpendingGroupByArgs<ExtArgs>
            result: $Utils.Optional<FarmSpendingGroupByOutputType>[]
          }
          count: {
            args: Prisma.FarmSpendingCountArgs<ExtArgs>
            result: $Utils.Optional<FarmSpendingCountAggregateOutputType> | number
          }
        }
      }
      FarmSpendingHistory: {
        payload: Prisma.$FarmSpendingHistoryPayload<ExtArgs>
        fields: Prisma.FarmSpendingHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FarmSpendingHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FarmSpendingHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingHistoryPayload>
          }
          findFirst: {
            args: Prisma.FarmSpendingHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FarmSpendingHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingHistoryPayload>
          }
          findMany: {
            args: Prisma.FarmSpendingHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingHistoryPayload>[]
          }
          create: {
            args: Prisma.FarmSpendingHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingHistoryPayload>
          }
          createMany: {
            args: Prisma.FarmSpendingHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FarmSpendingHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingHistoryPayload>[]
          }
          delete: {
            args: Prisma.FarmSpendingHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingHistoryPayload>
          }
          update: {
            args: Prisma.FarmSpendingHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingHistoryPayload>
          }
          deleteMany: {
            args: Prisma.FarmSpendingHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FarmSpendingHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FarmSpendingHistoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingHistoryPayload>[]
          }
          upsert: {
            args: Prisma.FarmSpendingHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingHistoryPayload>
          }
          aggregate: {
            args: Prisma.FarmSpendingHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFarmSpendingHistory>
          }
          groupBy: {
            args: Prisma.FarmSpendingHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<FarmSpendingHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.FarmSpendingHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<FarmSpendingHistoryCountAggregateOutputType> | number
          }
        }
      }
      FarmSpendingType: {
        payload: Prisma.$FarmSpendingTypePayload<ExtArgs>
        fields: Prisma.FarmSpendingTypeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FarmSpendingTypeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingTypePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FarmSpendingTypeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingTypePayload>
          }
          findFirst: {
            args: Prisma.FarmSpendingTypeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingTypePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FarmSpendingTypeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingTypePayload>
          }
          findMany: {
            args: Prisma.FarmSpendingTypeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingTypePayload>[]
          }
          create: {
            args: Prisma.FarmSpendingTypeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingTypePayload>
          }
          createMany: {
            args: Prisma.FarmSpendingTypeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FarmSpendingTypeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingTypePayload>[]
          }
          delete: {
            args: Prisma.FarmSpendingTypeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingTypePayload>
          }
          update: {
            args: Prisma.FarmSpendingTypeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingTypePayload>
          }
          deleteMany: {
            args: Prisma.FarmSpendingTypeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FarmSpendingTypeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FarmSpendingTypeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingTypePayload>[]
          }
          upsert: {
            args: Prisma.FarmSpendingTypeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FarmSpendingTypePayload>
          }
          aggregate: {
            args: Prisma.FarmSpendingTypeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFarmSpendingType>
          }
          groupBy: {
            args: Prisma.FarmSpendingTypeGroupByArgs<ExtArgs>
            result: $Utils.Optional<FarmSpendingTypeGroupByOutputType>[]
          }
          count: {
            args: Prisma.FarmSpendingTypeCountArgs<ExtArgs>
            result: $Utils.Optional<FarmSpendingTypeCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    user?: UserOmit
    userHistory?: UserHistoryOmit
    churchIncome?: ChurchIncomeOmit
    churchIncomeHistory?: ChurchIncomeHistoryOmit
    churchIncomeType?: ChurchIncomeTypeOmit
    churchSpending?: ChurchSpendingOmit
    churchSpendingHistory?: ChurchSpendingHistoryOmit
    churchSpendingType?: ChurchSpendingTypeOmit
    storeIncome?: StoreIncomeOmit
    storeIncomeHistory?: StoreIncomeHistoryOmit
    storeIncomeType?: StoreIncomeTypeOmit
    storeSpending?: StoreSpendingOmit
    storeSpendingHistory?: StoreSpendingHistoryOmit
    storeSpendingType?: StoreSpendingTypeOmit
    farmIncome?: FarmIncomeOmit
    farmIncomeHistory?: FarmIncomeHistoryOmit
    farmIncomeType?: FarmIncomeTypeOmit
    farmSpending?: FarmSpendingOmit
    farmSpendingHistory?: FarmSpendingHistoryOmit
    farmSpendingType?: FarmSpendingTypeOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    selfCreatedByRel: number
    selfUpdatedByRel: number
    churchIncomeCreateByRel: number
    churchIncomeUpdateByRel: number
    churchIncomeTypeCreateByRel: number
    churchIncomeTypeUpdateByRel: number
    churchSpendingCreateByRel: number
    churchSpendingUpdateByRel: number
    churchSpendingTypeCreateByRel: number
    churchSpendingTypeUpdateByRel: number
    storeIncomeCreateByRel: number
    storeIncomeUpdateByRel: number
    storeIncomeTypeCreateByRel: number
    storeIncomeTypeUpdateByRel: number
    storeSpendingCreateByRel: number
    storeSpendingUpdateByRel: number
    storeSpendingTypeCreateByRel: number
    storeSpendingTypeUpdateByRel: number
    farmIncomeCreateByRel: number
    farmIncomeUpdateByRel: number
    farmIncomeTypeCreateByRel: number
    farmIncomeTypeUpdateByRel: number
    farmSpendingCreateByRel: number
    farmSpendingUpdateByRel: number
    farmSpendingTypeCreateByRel: number
    farmSpendingTypeUpdateByRel: number
    userHistoryCreatedByRel: number
    userHistoryUpdatedByRel: number
    userHistoryIdRel: number
    churchIncomeHistoryCreateByRel: number
    churchIncomeHistoryUpdateByRel: number
    churchSpendingHistoryCreateByRel: number
    churchSpendingHistoryUpdateByRel: number
    storeIncomeHistoryCreateByRel: number
    storeIncomeHistoryUpdateByRel: number
    storeSpendingHistoryCreateByRel: number
    storeSpendingHistoryUpdateByRel: number
    farmIncomeHistoryCreateByRel: number
    farmIncomeHistoryUpdateByRel: number
    farmSpendingHistoryCreateByRel: number
    farmSpendingHistoryUpdateByRel: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    selfCreatedByRel?: boolean | UserCountOutputTypeCountSelfCreatedByRelArgs
    selfUpdatedByRel?: boolean | UserCountOutputTypeCountSelfUpdatedByRelArgs
    churchIncomeCreateByRel?: boolean | UserCountOutputTypeCountChurchIncomeCreateByRelArgs
    churchIncomeUpdateByRel?: boolean | UserCountOutputTypeCountChurchIncomeUpdateByRelArgs
    churchIncomeTypeCreateByRel?: boolean | UserCountOutputTypeCountChurchIncomeTypeCreateByRelArgs
    churchIncomeTypeUpdateByRel?: boolean | UserCountOutputTypeCountChurchIncomeTypeUpdateByRelArgs
    churchSpendingCreateByRel?: boolean | UserCountOutputTypeCountChurchSpendingCreateByRelArgs
    churchSpendingUpdateByRel?: boolean | UserCountOutputTypeCountChurchSpendingUpdateByRelArgs
    churchSpendingTypeCreateByRel?: boolean | UserCountOutputTypeCountChurchSpendingTypeCreateByRelArgs
    churchSpendingTypeUpdateByRel?: boolean | UserCountOutputTypeCountChurchSpendingTypeUpdateByRelArgs
    storeIncomeCreateByRel?: boolean | UserCountOutputTypeCountStoreIncomeCreateByRelArgs
    storeIncomeUpdateByRel?: boolean | UserCountOutputTypeCountStoreIncomeUpdateByRelArgs
    storeIncomeTypeCreateByRel?: boolean | UserCountOutputTypeCountStoreIncomeTypeCreateByRelArgs
    storeIncomeTypeUpdateByRel?: boolean | UserCountOutputTypeCountStoreIncomeTypeUpdateByRelArgs
    storeSpendingCreateByRel?: boolean | UserCountOutputTypeCountStoreSpendingCreateByRelArgs
    storeSpendingUpdateByRel?: boolean | UserCountOutputTypeCountStoreSpendingUpdateByRelArgs
    storeSpendingTypeCreateByRel?: boolean | UserCountOutputTypeCountStoreSpendingTypeCreateByRelArgs
    storeSpendingTypeUpdateByRel?: boolean | UserCountOutputTypeCountStoreSpendingTypeUpdateByRelArgs
    farmIncomeCreateByRel?: boolean | UserCountOutputTypeCountFarmIncomeCreateByRelArgs
    farmIncomeUpdateByRel?: boolean | UserCountOutputTypeCountFarmIncomeUpdateByRelArgs
    farmIncomeTypeCreateByRel?: boolean | UserCountOutputTypeCountFarmIncomeTypeCreateByRelArgs
    farmIncomeTypeUpdateByRel?: boolean | UserCountOutputTypeCountFarmIncomeTypeUpdateByRelArgs
    farmSpendingCreateByRel?: boolean | UserCountOutputTypeCountFarmSpendingCreateByRelArgs
    farmSpendingUpdateByRel?: boolean | UserCountOutputTypeCountFarmSpendingUpdateByRelArgs
    farmSpendingTypeCreateByRel?: boolean | UserCountOutputTypeCountFarmSpendingTypeCreateByRelArgs
    farmSpendingTypeUpdateByRel?: boolean | UserCountOutputTypeCountFarmSpendingTypeUpdateByRelArgs
    userHistoryCreatedByRel?: boolean | UserCountOutputTypeCountUserHistoryCreatedByRelArgs
    userHistoryUpdatedByRel?: boolean | UserCountOutputTypeCountUserHistoryUpdatedByRelArgs
    userHistoryIdRel?: boolean | UserCountOutputTypeCountUserHistoryIdRelArgs
    churchIncomeHistoryCreateByRel?: boolean | UserCountOutputTypeCountChurchIncomeHistoryCreateByRelArgs
    churchIncomeHistoryUpdateByRel?: boolean | UserCountOutputTypeCountChurchIncomeHistoryUpdateByRelArgs
    churchSpendingHistoryCreateByRel?: boolean | UserCountOutputTypeCountChurchSpendingHistoryCreateByRelArgs
    churchSpendingHistoryUpdateByRel?: boolean | UserCountOutputTypeCountChurchSpendingHistoryUpdateByRelArgs
    storeIncomeHistoryCreateByRel?: boolean | UserCountOutputTypeCountStoreIncomeHistoryCreateByRelArgs
    storeIncomeHistoryUpdateByRel?: boolean | UserCountOutputTypeCountStoreIncomeHistoryUpdateByRelArgs
    storeSpendingHistoryCreateByRel?: boolean | UserCountOutputTypeCountStoreSpendingHistoryCreateByRelArgs
    storeSpendingHistoryUpdateByRel?: boolean | UserCountOutputTypeCountStoreSpendingHistoryUpdateByRelArgs
    farmIncomeHistoryCreateByRel?: boolean | UserCountOutputTypeCountFarmIncomeHistoryCreateByRelArgs
    farmIncomeHistoryUpdateByRel?: boolean | UserCountOutputTypeCountFarmIncomeHistoryUpdateByRelArgs
    farmSpendingHistoryCreateByRel?: boolean | UserCountOutputTypeCountFarmSpendingHistoryCreateByRelArgs
    farmSpendingHistoryUpdateByRel?: boolean | UserCountOutputTypeCountFarmSpendingHistoryUpdateByRelArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSelfCreatedByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSelfUpdatedByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountChurchIncomeCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChurchIncomeWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountChurchIncomeUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChurchIncomeWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountChurchIncomeTypeCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChurchIncomeTypeWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountChurchIncomeTypeUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChurchIncomeTypeWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountChurchSpendingCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChurchSpendingWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountChurchSpendingUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChurchSpendingWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountChurchSpendingTypeCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChurchSpendingTypeWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountChurchSpendingTypeUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChurchSpendingTypeWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountStoreIncomeCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreIncomeWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountStoreIncomeUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreIncomeWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountStoreIncomeTypeCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreIncomeTypeWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountStoreIncomeTypeUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreIncomeTypeWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountStoreSpendingCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreSpendingWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountStoreSpendingUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreSpendingWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountStoreSpendingTypeCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreSpendingTypeWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountStoreSpendingTypeUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreSpendingTypeWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFarmIncomeCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FarmIncomeWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFarmIncomeUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FarmIncomeWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFarmIncomeTypeCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FarmIncomeTypeWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFarmIncomeTypeUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FarmIncomeTypeWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFarmSpendingCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FarmSpendingWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFarmSpendingUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FarmSpendingWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFarmSpendingTypeCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FarmSpendingTypeWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFarmSpendingTypeUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FarmSpendingTypeWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserHistoryCreatedByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserHistoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserHistoryUpdatedByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserHistoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserHistoryIdRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserHistoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountChurchIncomeHistoryCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChurchIncomeHistoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountChurchIncomeHistoryUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChurchIncomeHistoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountChurchSpendingHistoryCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChurchSpendingHistoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountChurchSpendingHistoryUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChurchSpendingHistoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountStoreIncomeHistoryCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreIncomeHistoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountStoreIncomeHistoryUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreIncomeHistoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountStoreSpendingHistoryCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreSpendingHistoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountStoreSpendingHistoryUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreSpendingHistoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFarmIncomeHistoryCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FarmIncomeHistoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFarmIncomeHistoryUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FarmIncomeHistoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFarmSpendingHistoryCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FarmSpendingHistoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFarmSpendingHistoryUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FarmSpendingHistoryWhereInput
  }


  /**
   * Count Type ChurchIncomeTypeCountOutputType
   */

  export type ChurchIncomeTypeCountOutputType = {
    churchIncomeTypeIdRel: number
    churchIncomeTypeHistoryIdRel: number
  }

  export type ChurchIncomeTypeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    churchIncomeTypeIdRel?: boolean | ChurchIncomeTypeCountOutputTypeCountChurchIncomeTypeIdRelArgs
    churchIncomeTypeHistoryIdRel?: boolean | ChurchIncomeTypeCountOutputTypeCountChurchIncomeTypeHistoryIdRelArgs
  }

  // Custom InputTypes
  /**
   * ChurchIncomeTypeCountOutputType without action
   */
  export type ChurchIncomeTypeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeTypeCountOutputType
     */
    select?: ChurchIncomeTypeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ChurchIncomeTypeCountOutputType without action
   */
  export type ChurchIncomeTypeCountOutputTypeCountChurchIncomeTypeIdRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChurchIncomeWhereInput
  }

  /**
   * ChurchIncomeTypeCountOutputType without action
   */
  export type ChurchIncomeTypeCountOutputTypeCountChurchIncomeTypeHistoryIdRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChurchIncomeHistoryWhereInput
  }


  /**
   * Count Type ChurchSpendingTypeCountOutputType
   */

  export type ChurchSpendingTypeCountOutputType = {
    churchSpendingTypeIdRel: number
    churchSpendingTypeHistoryIdRel: number
  }

  export type ChurchSpendingTypeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    churchSpendingTypeIdRel?: boolean | ChurchSpendingTypeCountOutputTypeCountChurchSpendingTypeIdRelArgs
    churchSpendingTypeHistoryIdRel?: boolean | ChurchSpendingTypeCountOutputTypeCountChurchSpendingTypeHistoryIdRelArgs
  }

  // Custom InputTypes
  /**
   * ChurchSpendingTypeCountOutputType without action
   */
  export type ChurchSpendingTypeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingTypeCountOutputType
     */
    select?: ChurchSpendingTypeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ChurchSpendingTypeCountOutputType without action
   */
  export type ChurchSpendingTypeCountOutputTypeCountChurchSpendingTypeIdRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChurchSpendingWhereInput
  }

  /**
   * ChurchSpendingTypeCountOutputType without action
   */
  export type ChurchSpendingTypeCountOutputTypeCountChurchSpendingTypeHistoryIdRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChurchSpendingHistoryWhereInput
  }


  /**
   * Count Type StoreIncomeTypeCountOutputType
   */

  export type StoreIncomeTypeCountOutputType = {
    storeIncomeTypeIdRel: number
    storeIncomeTypeHistoryIdRel: number
  }

  export type StoreIncomeTypeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    storeIncomeTypeIdRel?: boolean | StoreIncomeTypeCountOutputTypeCountStoreIncomeTypeIdRelArgs
    storeIncomeTypeHistoryIdRel?: boolean | StoreIncomeTypeCountOutputTypeCountStoreIncomeTypeHistoryIdRelArgs
  }

  // Custom InputTypes
  /**
   * StoreIncomeTypeCountOutputType without action
   */
  export type StoreIncomeTypeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeTypeCountOutputType
     */
    select?: StoreIncomeTypeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * StoreIncomeTypeCountOutputType without action
   */
  export type StoreIncomeTypeCountOutputTypeCountStoreIncomeTypeIdRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreIncomeWhereInput
  }

  /**
   * StoreIncomeTypeCountOutputType without action
   */
  export type StoreIncomeTypeCountOutputTypeCountStoreIncomeTypeHistoryIdRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreIncomeHistoryWhereInput
  }


  /**
   * Count Type StoreSpendingTypeCountOutputType
   */

  export type StoreSpendingTypeCountOutputType = {
    storeSpendingTypeIdRel: number
    storeSpendingTypeHistoryIdRel: number
  }

  export type StoreSpendingTypeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    storeSpendingTypeIdRel?: boolean | StoreSpendingTypeCountOutputTypeCountStoreSpendingTypeIdRelArgs
    storeSpendingTypeHistoryIdRel?: boolean | StoreSpendingTypeCountOutputTypeCountStoreSpendingTypeHistoryIdRelArgs
  }

  // Custom InputTypes
  /**
   * StoreSpendingTypeCountOutputType without action
   */
  export type StoreSpendingTypeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingTypeCountOutputType
     */
    select?: StoreSpendingTypeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * StoreSpendingTypeCountOutputType without action
   */
  export type StoreSpendingTypeCountOutputTypeCountStoreSpendingTypeIdRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreSpendingWhereInput
  }

  /**
   * StoreSpendingTypeCountOutputType without action
   */
  export type StoreSpendingTypeCountOutputTypeCountStoreSpendingTypeHistoryIdRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreSpendingHistoryWhereInput
  }


  /**
   * Count Type FarmIncomeTypeCountOutputType
   */

  export type FarmIncomeTypeCountOutputType = {
    farmIncomeTypeIdRel: number
    farmIncomeTypeHistoryIdRel: number
  }

  export type FarmIncomeTypeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmIncomeTypeIdRel?: boolean | FarmIncomeTypeCountOutputTypeCountFarmIncomeTypeIdRelArgs
    farmIncomeTypeHistoryIdRel?: boolean | FarmIncomeTypeCountOutputTypeCountFarmIncomeTypeHistoryIdRelArgs
  }

  // Custom InputTypes
  /**
   * FarmIncomeTypeCountOutputType without action
   */
  export type FarmIncomeTypeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeTypeCountOutputType
     */
    select?: FarmIncomeTypeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FarmIncomeTypeCountOutputType without action
   */
  export type FarmIncomeTypeCountOutputTypeCountFarmIncomeTypeIdRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FarmIncomeWhereInput
  }

  /**
   * FarmIncomeTypeCountOutputType without action
   */
  export type FarmIncomeTypeCountOutputTypeCountFarmIncomeTypeHistoryIdRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FarmIncomeHistoryWhereInput
  }


  /**
   * Count Type FarmSpendingTypeCountOutputType
   */

  export type FarmSpendingTypeCountOutputType = {
    farmSpendingTypeIdRel: number
    farmSpendingTypeHistoryIdRel: number
  }

  export type FarmSpendingTypeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmSpendingTypeIdRel?: boolean | FarmSpendingTypeCountOutputTypeCountFarmSpendingTypeIdRelArgs
    farmSpendingTypeHistoryIdRel?: boolean | FarmSpendingTypeCountOutputTypeCountFarmSpendingTypeHistoryIdRelArgs
  }

  // Custom InputTypes
  /**
   * FarmSpendingTypeCountOutputType without action
   */
  export type FarmSpendingTypeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingTypeCountOutputType
     */
    select?: FarmSpendingTypeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FarmSpendingTypeCountOutputType without action
   */
  export type FarmSpendingTypeCountOutputTypeCountFarmSpendingTypeIdRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FarmSpendingWhereInput
  }

  /**
   * FarmSpendingTypeCountOutputType without action
   */
  export type FarmSpendingTypeCountOutputTypeCountFarmSpendingTypeHistoryIdRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FarmSpendingHistoryWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
    createBy: number | null
    updatedBy: number | null
  }

  export type UserSumAggregateOutputType = {
    id: bigint | null
    createBy: bigint | null
    updatedBy: bigint | null
  }

  export type UserMinAggregateOutputType = {
    id: bigint | null
    userName: string | null
    fullName: string | null
    email: string | null
    password: string | null
    phoneNumber: string | null
    address: string | null
    role: $Enums.Role | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type UserMaxAggregateOutputType = {
    id: bigint | null
    userName: string | null
    fullName: string | null
    email: string | null
    password: string | null
    phoneNumber: string | null
    address: string | null
    role: $Enums.Role | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    userName: number
    fullName: number
    email: number
    password: number
    phoneNumber: number
    address: number
    role: number
    deleted: number
    createAt: number
    createBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
    createBy?: true
    updatedBy?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
    createBy?: true
    updatedBy?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    userName?: true
    fullName?: true
    email?: true
    password?: true
    phoneNumber?: true
    address?: true
    role?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    userName?: true
    fullName?: true
    email?: true
    password?: true
    phoneNumber?: true
    address?: true
    role?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    userName?: true
    fullName?: true
    email?: true
    password?: true
    phoneNumber?: true
    address?: true
    role?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: bigint
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted: boolean
    createAt: Date
    createBy: bigint | null
    updatedAt: Date
    updatedBy: bigint | null
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userName?: boolean
    fullName?: boolean
    email?: boolean
    password?: boolean
    phoneNumber?: boolean
    address?: boolean
    role?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    createdByRel?: boolean | User$createdByRelArgs<ExtArgs>
    selfCreatedByRel?: boolean | User$selfCreatedByRelArgs<ExtArgs>
    updatedByRel?: boolean | User$updatedByRelArgs<ExtArgs>
    selfUpdatedByRel?: boolean | User$selfUpdatedByRelArgs<ExtArgs>
    churchIncomeCreateByRel?: boolean | User$churchIncomeCreateByRelArgs<ExtArgs>
    churchIncomeUpdateByRel?: boolean | User$churchIncomeUpdateByRelArgs<ExtArgs>
    churchIncomeTypeCreateByRel?: boolean | User$churchIncomeTypeCreateByRelArgs<ExtArgs>
    churchIncomeTypeUpdateByRel?: boolean | User$churchIncomeTypeUpdateByRelArgs<ExtArgs>
    churchSpendingCreateByRel?: boolean | User$churchSpendingCreateByRelArgs<ExtArgs>
    churchSpendingUpdateByRel?: boolean | User$churchSpendingUpdateByRelArgs<ExtArgs>
    churchSpendingTypeCreateByRel?: boolean | User$churchSpendingTypeCreateByRelArgs<ExtArgs>
    churchSpendingTypeUpdateByRel?: boolean | User$churchSpendingTypeUpdateByRelArgs<ExtArgs>
    storeIncomeCreateByRel?: boolean | User$storeIncomeCreateByRelArgs<ExtArgs>
    storeIncomeUpdateByRel?: boolean | User$storeIncomeUpdateByRelArgs<ExtArgs>
    storeIncomeTypeCreateByRel?: boolean | User$storeIncomeTypeCreateByRelArgs<ExtArgs>
    storeIncomeTypeUpdateByRel?: boolean | User$storeIncomeTypeUpdateByRelArgs<ExtArgs>
    storeSpendingCreateByRel?: boolean | User$storeSpendingCreateByRelArgs<ExtArgs>
    storeSpendingUpdateByRel?: boolean | User$storeSpendingUpdateByRelArgs<ExtArgs>
    storeSpendingTypeCreateByRel?: boolean | User$storeSpendingTypeCreateByRelArgs<ExtArgs>
    storeSpendingTypeUpdateByRel?: boolean | User$storeSpendingTypeUpdateByRelArgs<ExtArgs>
    farmIncomeCreateByRel?: boolean | User$farmIncomeCreateByRelArgs<ExtArgs>
    farmIncomeUpdateByRel?: boolean | User$farmIncomeUpdateByRelArgs<ExtArgs>
    farmIncomeTypeCreateByRel?: boolean | User$farmIncomeTypeCreateByRelArgs<ExtArgs>
    farmIncomeTypeUpdateByRel?: boolean | User$farmIncomeTypeUpdateByRelArgs<ExtArgs>
    farmSpendingCreateByRel?: boolean | User$farmSpendingCreateByRelArgs<ExtArgs>
    farmSpendingUpdateByRel?: boolean | User$farmSpendingUpdateByRelArgs<ExtArgs>
    farmSpendingTypeCreateByRel?: boolean | User$farmSpendingTypeCreateByRelArgs<ExtArgs>
    farmSpendingTypeUpdateByRel?: boolean | User$farmSpendingTypeUpdateByRelArgs<ExtArgs>
    userHistoryCreatedByRel?: boolean | User$userHistoryCreatedByRelArgs<ExtArgs>
    userHistoryUpdatedByRel?: boolean | User$userHistoryUpdatedByRelArgs<ExtArgs>
    userHistoryIdRel?: boolean | User$userHistoryIdRelArgs<ExtArgs>
    churchIncomeHistoryCreateByRel?: boolean | User$churchIncomeHistoryCreateByRelArgs<ExtArgs>
    churchIncomeHistoryUpdateByRel?: boolean | User$churchIncomeHistoryUpdateByRelArgs<ExtArgs>
    churchSpendingHistoryCreateByRel?: boolean | User$churchSpendingHistoryCreateByRelArgs<ExtArgs>
    churchSpendingHistoryUpdateByRel?: boolean | User$churchSpendingHistoryUpdateByRelArgs<ExtArgs>
    storeIncomeHistoryCreateByRel?: boolean | User$storeIncomeHistoryCreateByRelArgs<ExtArgs>
    storeIncomeHistoryUpdateByRel?: boolean | User$storeIncomeHistoryUpdateByRelArgs<ExtArgs>
    storeSpendingHistoryCreateByRel?: boolean | User$storeSpendingHistoryCreateByRelArgs<ExtArgs>
    storeSpendingHistoryUpdateByRel?: boolean | User$storeSpendingHistoryUpdateByRelArgs<ExtArgs>
    farmIncomeHistoryCreateByRel?: boolean | User$farmIncomeHistoryCreateByRelArgs<ExtArgs>
    farmIncomeHistoryUpdateByRel?: boolean | User$farmIncomeHistoryUpdateByRelArgs<ExtArgs>
    farmSpendingHistoryCreateByRel?: boolean | User$farmSpendingHistoryCreateByRelArgs<ExtArgs>
    farmSpendingHistoryUpdateByRel?: boolean | User$farmSpendingHistoryUpdateByRelArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userName?: boolean
    fullName?: boolean
    email?: boolean
    password?: boolean
    phoneNumber?: boolean
    address?: boolean
    role?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    createdByRel?: boolean | User$createdByRelArgs<ExtArgs>
    updatedByRel?: boolean | User$updatedByRelArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userName?: boolean
    fullName?: boolean
    email?: boolean
    password?: boolean
    phoneNumber?: boolean
    address?: boolean
    role?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    createdByRel?: boolean | User$createdByRelArgs<ExtArgs>
    updatedByRel?: boolean | User$updatedByRelArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    userName?: boolean
    fullName?: boolean
    email?: boolean
    password?: boolean
    phoneNumber?: boolean
    address?: boolean
    role?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userName" | "fullName" | "email" | "password" | "phoneNumber" | "address" | "role" | "deleted" | "createAt" | "createBy" | "updatedAt" | "updatedBy", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdByRel?: boolean | User$createdByRelArgs<ExtArgs>
    selfCreatedByRel?: boolean | User$selfCreatedByRelArgs<ExtArgs>
    updatedByRel?: boolean | User$updatedByRelArgs<ExtArgs>
    selfUpdatedByRel?: boolean | User$selfUpdatedByRelArgs<ExtArgs>
    churchIncomeCreateByRel?: boolean | User$churchIncomeCreateByRelArgs<ExtArgs>
    churchIncomeUpdateByRel?: boolean | User$churchIncomeUpdateByRelArgs<ExtArgs>
    churchIncomeTypeCreateByRel?: boolean | User$churchIncomeTypeCreateByRelArgs<ExtArgs>
    churchIncomeTypeUpdateByRel?: boolean | User$churchIncomeTypeUpdateByRelArgs<ExtArgs>
    churchSpendingCreateByRel?: boolean | User$churchSpendingCreateByRelArgs<ExtArgs>
    churchSpendingUpdateByRel?: boolean | User$churchSpendingUpdateByRelArgs<ExtArgs>
    churchSpendingTypeCreateByRel?: boolean | User$churchSpendingTypeCreateByRelArgs<ExtArgs>
    churchSpendingTypeUpdateByRel?: boolean | User$churchSpendingTypeUpdateByRelArgs<ExtArgs>
    storeIncomeCreateByRel?: boolean | User$storeIncomeCreateByRelArgs<ExtArgs>
    storeIncomeUpdateByRel?: boolean | User$storeIncomeUpdateByRelArgs<ExtArgs>
    storeIncomeTypeCreateByRel?: boolean | User$storeIncomeTypeCreateByRelArgs<ExtArgs>
    storeIncomeTypeUpdateByRel?: boolean | User$storeIncomeTypeUpdateByRelArgs<ExtArgs>
    storeSpendingCreateByRel?: boolean | User$storeSpendingCreateByRelArgs<ExtArgs>
    storeSpendingUpdateByRel?: boolean | User$storeSpendingUpdateByRelArgs<ExtArgs>
    storeSpendingTypeCreateByRel?: boolean | User$storeSpendingTypeCreateByRelArgs<ExtArgs>
    storeSpendingTypeUpdateByRel?: boolean | User$storeSpendingTypeUpdateByRelArgs<ExtArgs>
    farmIncomeCreateByRel?: boolean | User$farmIncomeCreateByRelArgs<ExtArgs>
    farmIncomeUpdateByRel?: boolean | User$farmIncomeUpdateByRelArgs<ExtArgs>
    farmIncomeTypeCreateByRel?: boolean | User$farmIncomeTypeCreateByRelArgs<ExtArgs>
    farmIncomeTypeUpdateByRel?: boolean | User$farmIncomeTypeUpdateByRelArgs<ExtArgs>
    farmSpendingCreateByRel?: boolean | User$farmSpendingCreateByRelArgs<ExtArgs>
    farmSpendingUpdateByRel?: boolean | User$farmSpendingUpdateByRelArgs<ExtArgs>
    farmSpendingTypeCreateByRel?: boolean | User$farmSpendingTypeCreateByRelArgs<ExtArgs>
    farmSpendingTypeUpdateByRel?: boolean | User$farmSpendingTypeUpdateByRelArgs<ExtArgs>
    userHistoryCreatedByRel?: boolean | User$userHistoryCreatedByRelArgs<ExtArgs>
    userHistoryUpdatedByRel?: boolean | User$userHistoryUpdatedByRelArgs<ExtArgs>
    userHistoryIdRel?: boolean | User$userHistoryIdRelArgs<ExtArgs>
    churchIncomeHistoryCreateByRel?: boolean | User$churchIncomeHistoryCreateByRelArgs<ExtArgs>
    churchIncomeHistoryUpdateByRel?: boolean | User$churchIncomeHistoryUpdateByRelArgs<ExtArgs>
    churchSpendingHistoryCreateByRel?: boolean | User$churchSpendingHistoryCreateByRelArgs<ExtArgs>
    churchSpendingHistoryUpdateByRel?: boolean | User$churchSpendingHistoryUpdateByRelArgs<ExtArgs>
    storeIncomeHistoryCreateByRel?: boolean | User$storeIncomeHistoryCreateByRelArgs<ExtArgs>
    storeIncomeHistoryUpdateByRel?: boolean | User$storeIncomeHistoryUpdateByRelArgs<ExtArgs>
    storeSpendingHistoryCreateByRel?: boolean | User$storeSpendingHistoryCreateByRelArgs<ExtArgs>
    storeSpendingHistoryUpdateByRel?: boolean | User$storeSpendingHistoryUpdateByRelArgs<ExtArgs>
    farmIncomeHistoryCreateByRel?: boolean | User$farmIncomeHistoryCreateByRelArgs<ExtArgs>
    farmIncomeHistoryUpdateByRel?: boolean | User$farmIncomeHistoryUpdateByRelArgs<ExtArgs>
    farmSpendingHistoryCreateByRel?: boolean | User$farmSpendingHistoryCreateByRelArgs<ExtArgs>
    farmSpendingHistoryUpdateByRel?: boolean | User$farmSpendingHistoryUpdateByRelArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdByRel?: boolean | User$createdByRelArgs<ExtArgs>
    updatedByRel?: boolean | User$updatedByRelArgs<ExtArgs>
  }
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdByRel?: boolean | User$createdByRelArgs<ExtArgs>
    updatedByRel?: boolean | User$updatedByRelArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      createdByRel: Prisma.$UserPayload<ExtArgs> | null
      selfCreatedByRel: Prisma.$UserPayload<ExtArgs>[]
      updatedByRel: Prisma.$UserPayload<ExtArgs> | null
      selfUpdatedByRel: Prisma.$UserPayload<ExtArgs>[]
      churchIncomeCreateByRel: Prisma.$ChurchIncomePayload<ExtArgs>[]
      churchIncomeUpdateByRel: Prisma.$ChurchIncomePayload<ExtArgs>[]
      churchIncomeTypeCreateByRel: Prisma.$ChurchIncomeTypePayload<ExtArgs>[]
      churchIncomeTypeUpdateByRel: Prisma.$ChurchIncomeTypePayload<ExtArgs>[]
      churchSpendingCreateByRel: Prisma.$ChurchSpendingPayload<ExtArgs>[]
      churchSpendingUpdateByRel: Prisma.$ChurchSpendingPayload<ExtArgs>[]
      churchSpendingTypeCreateByRel: Prisma.$ChurchSpendingTypePayload<ExtArgs>[]
      churchSpendingTypeUpdateByRel: Prisma.$ChurchSpendingTypePayload<ExtArgs>[]
      storeIncomeCreateByRel: Prisma.$StoreIncomePayload<ExtArgs>[]
      storeIncomeUpdateByRel: Prisma.$StoreIncomePayload<ExtArgs>[]
      storeIncomeTypeCreateByRel: Prisma.$StoreIncomeTypePayload<ExtArgs>[]
      storeIncomeTypeUpdateByRel: Prisma.$StoreIncomeTypePayload<ExtArgs>[]
      storeSpendingCreateByRel: Prisma.$StoreSpendingPayload<ExtArgs>[]
      storeSpendingUpdateByRel: Prisma.$StoreSpendingPayload<ExtArgs>[]
      storeSpendingTypeCreateByRel: Prisma.$StoreSpendingTypePayload<ExtArgs>[]
      storeSpendingTypeUpdateByRel: Prisma.$StoreSpendingTypePayload<ExtArgs>[]
      farmIncomeCreateByRel: Prisma.$FarmIncomePayload<ExtArgs>[]
      farmIncomeUpdateByRel: Prisma.$FarmIncomePayload<ExtArgs>[]
      farmIncomeTypeCreateByRel: Prisma.$FarmIncomeTypePayload<ExtArgs>[]
      farmIncomeTypeUpdateByRel: Prisma.$FarmIncomeTypePayload<ExtArgs>[]
      farmSpendingCreateByRel: Prisma.$FarmSpendingPayload<ExtArgs>[]
      farmSpendingUpdateByRel: Prisma.$FarmSpendingPayload<ExtArgs>[]
      farmSpendingTypeCreateByRel: Prisma.$FarmSpendingTypePayload<ExtArgs>[]
      farmSpendingTypeUpdateByRel: Prisma.$FarmSpendingTypePayload<ExtArgs>[]
      userHistoryCreatedByRel: Prisma.$UserHistoryPayload<ExtArgs>[]
      userHistoryUpdatedByRel: Prisma.$UserHistoryPayload<ExtArgs>[]
      userHistoryIdRel: Prisma.$UserHistoryPayload<ExtArgs>[]
      churchIncomeHistoryCreateByRel: Prisma.$ChurchIncomeHistoryPayload<ExtArgs>[]
      churchIncomeHistoryUpdateByRel: Prisma.$ChurchIncomeHistoryPayload<ExtArgs>[]
      churchSpendingHistoryCreateByRel: Prisma.$ChurchSpendingHistoryPayload<ExtArgs>[]
      churchSpendingHistoryUpdateByRel: Prisma.$ChurchSpendingHistoryPayload<ExtArgs>[]
      storeIncomeHistoryCreateByRel: Prisma.$StoreIncomeHistoryPayload<ExtArgs>[]
      storeIncomeHistoryUpdateByRel: Prisma.$StoreIncomeHistoryPayload<ExtArgs>[]
      storeSpendingHistoryCreateByRel: Prisma.$StoreSpendingHistoryPayload<ExtArgs>[]
      storeSpendingHistoryUpdateByRel: Prisma.$StoreSpendingHistoryPayload<ExtArgs>[]
      farmIncomeHistoryCreateByRel: Prisma.$FarmIncomeHistoryPayload<ExtArgs>[]
      farmIncomeHistoryUpdateByRel: Prisma.$FarmIncomeHistoryPayload<ExtArgs>[]
      farmSpendingHistoryCreateByRel: Prisma.$FarmSpendingHistoryPayload<ExtArgs>[]
      farmSpendingHistoryUpdateByRel: Prisma.$FarmSpendingHistoryPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      userName: string
      fullName: string
      email: string
      password: string
      phoneNumber: string
      address: string
      role: $Enums.Role
      deleted: boolean
      createAt: Date
      createBy: bigint | null
      updatedAt: Date
      updatedBy: bigint | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    createdByRel<T extends User$createdByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$createdByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    selfCreatedByRel<T extends User$selfCreatedByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$selfCreatedByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    updatedByRel<T extends User$updatedByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$updatedByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    selfUpdatedByRel<T extends User$selfUpdatedByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$selfUpdatedByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    churchIncomeCreateByRel<T extends User$churchIncomeCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$churchIncomeCreateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchIncomePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    churchIncomeUpdateByRel<T extends User$churchIncomeUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$churchIncomeUpdateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchIncomePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    churchIncomeTypeCreateByRel<T extends User$churchIncomeTypeCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$churchIncomeTypeCreateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchIncomeTypePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    churchIncomeTypeUpdateByRel<T extends User$churchIncomeTypeUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$churchIncomeTypeUpdateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchIncomeTypePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    churchSpendingCreateByRel<T extends User$churchSpendingCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$churchSpendingCreateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchSpendingPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    churchSpendingUpdateByRel<T extends User$churchSpendingUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$churchSpendingUpdateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchSpendingPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    churchSpendingTypeCreateByRel<T extends User$churchSpendingTypeCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$churchSpendingTypeCreateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchSpendingTypePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    churchSpendingTypeUpdateByRel<T extends User$churchSpendingTypeUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$churchSpendingTypeUpdateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchSpendingTypePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    storeIncomeCreateByRel<T extends User$storeIncomeCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$storeIncomeCreateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreIncomePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    storeIncomeUpdateByRel<T extends User$storeIncomeUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$storeIncomeUpdateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreIncomePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    storeIncomeTypeCreateByRel<T extends User$storeIncomeTypeCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$storeIncomeTypeCreateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreIncomeTypePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    storeIncomeTypeUpdateByRel<T extends User$storeIncomeTypeUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$storeIncomeTypeUpdateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreIncomeTypePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    storeSpendingCreateByRel<T extends User$storeSpendingCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$storeSpendingCreateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreSpendingPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    storeSpendingUpdateByRel<T extends User$storeSpendingUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$storeSpendingUpdateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreSpendingPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    storeSpendingTypeCreateByRel<T extends User$storeSpendingTypeCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$storeSpendingTypeCreateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreSpendingTypePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    storeSpendingTypeUpdateByRel<T extends User$storeSpendingTypeUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$storeSpendingTypeUpdateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreSpendingTypePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    farmIncomeCreateByRel<T extends User$farmIncomeCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$farmIncomeCreateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmIncomePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    farmIncomeUpdateByRel<T extends User$farmIncomeUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$farmIncomeUpdateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmIncomePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    farmIncomeTypeCreateByRel<T extends User$farmIncomeTypeCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$farmIncomeTypeCreateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmIncomeTypePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    farmIncomeTypeUpdateByRel<T extends User$farmIncomeTypeUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$farmIncomeTypeUpdateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmIncomeTypePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    farmSpendingCreateByRel<T extends User$farmSpendingCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$farmSpendingCreateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmSpendingPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    farmSpendingUpdateByRel<T extends User$farmSpendingUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$farmSpendingUpdateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmSpendingPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    farmSpendingTypeCreateByRel<T extends User$farmSpendingTypeCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$farmSpendingTypeCreateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmSpendingTypePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    farmSpendingTypeUpdateByRel<T extends User$farmSpendingTypeUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$farmSpendingTypeUpdateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmSpendingTypePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    userHistoryCreatedByRel<T extends User$userHistoryCreatedByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$userHistoryCreatedByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserHistoryPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    userHistoryUpdatedByRel<T extends User$userHistoryUpdatedByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$userHistoryUpdatedByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserHistoryPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    userHistoryIdRel<T extends User$userHistoryIdRelArgs<ExtArgs> = {}>(args?: Subset<T, User$userHistoryIdRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserHistoryPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    churchIncomeHistoryCreateByRel<T extends User$churchIncomeHistoryCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$churchIncomeHistoryCreateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchIncomeHistoryPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    churchIncomeHistoryUpdateByRel<T extends User$churchIncomeHistoryUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$churchIncomeHistoryUpdateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchIncomeHistoryPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    churchSpendingHistoryCreateByRel<T extends User$churchSpendingHistoryCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$churchSpendingHistoryCreateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchSpendingHistoryPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    churchSpendingHistoryUpdateByRel<T extends User$churchSpendingHistoryUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$churchSpendingHistoryUpdateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchSpendingHistoryPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    storeIncomeHistoryCreateByRel<T extends User$storeIncomeHistoryCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$storeIncomeHistoryCreateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreIncomeHistoryPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    storeIncomeHistoryUpdateByRel<T extends User$storeIncomeHistoryUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$storeIncomeHistoryUpdateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreIncomeHistoryPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    storeSpendingHistoryCreateByRel<T extends User$storeSpendingHistoryCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$storeSpendingHistoryCreateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreSpendingHistoryPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    storeSpendingHistoryUpdateByRel<T extends User$storeSpendingHistoryUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$storeSpendingHistoryUpdateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreSpendingHistoryPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    farmIncomeHistoryCreateByRel<T extends User$farmIncomeHistoryCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$farmIncomeHistoryCreateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmIncomeHistoryPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    farmIncomeHistoryUpdateByRel<T extends User$farmIncomeHistoryUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$farmIncomeHistoryUpdateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmIncomeHistoryPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    farmSpendingHistoryCreateByRel<T extends User$farmSpendingHistoryCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$farmSpendingHistoryCreateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmSpendingHistoryPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    farmSpendingHistoryUpdateByRel<T extends User$farmSpendingHistoryUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, User$farmSpendingHistoryUpdateByRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmSpendingHistoryPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'BigInt'>
    readonly userName: FieldRef<"User", 'String'>
    readonly fullName: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly phoneNumber: FieldRef<"User", 'String'>
    readonly address: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'Role'>
    readonly deleted: FieldRef<"User", 'Boolean'>
    readonly createAt: FieldRef<"User", 'DateTime'>
    readonly createBy: FieldRef<"User", 'BigInt'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
    readonly updatedBy: FieldRef<"User", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.createdByRel
   */
  export type User$createdByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * User.selfCreatedByRel
   */
  export type User$selfCreatedByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User.updatedByRel
   */
  export type User$updatedByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * User.selfUpdatedByRel
   */
  export type User$selfUpdatedByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User.churchIncomeCreateByRel
   */
  export type User$churchIncomeCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncome
     */
    select?: ChurchIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncome
     */
    omit?: ChurchIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeInclude<ExtArgs> | null
    where?: ChurchIncomeWhereInput
    orderBy?: ChurchIncomeOrderByWithRelationInput | ChurchIncomeOrderByWithRelationInput[]
    cursor?: ChurchIncomeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChurchIncomeScalarFieldEnum | ChurchIncomeScalarFieldEnum[]
  }

  /**
   * User.churchIncomeUpdateByRel
   */
  export type User$churchIncomeUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncome
     */
    select?: ChurchIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncome
     */
    omit?: ChurchIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeInclude<ExtArgs> | null
    where?: ChurchIncomeWhereInput
    orderBy?: ChurchIncomeOrderByWithRelationInput | ChurchIncomeOrderByWithRelationInput[]
    cursor?: ChurchIncomeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChurchIncomeScalarFieldEnum | ChurchIncomeScalarFieldEnum[]
  }

  /**
   * User.churchIncomeTypeCreateByRel
   */
  export type User$churchIncomeTypeCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeType
     */
    select?: ChurchIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeType
     */
    omit?: ChurchIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeTypeInclude<ExtArgs> | null
    where?: ChurchIncomeTypeWhereInput
    orderBy?: ChurchIncomeTypeOrderByWithRelationInput | ChurchIncomeTypeOrderByWithRelationInput[]
    cursor?: ChurchIncomeTypeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChurchIncomeTypeScalarFieldEnum | ChurchIncomeTypeScalarFieldEnum[]
  }

  /**
   * User.churchIncomeTypeUpdateByRel
   */
  export type User$churchIncomeTypeUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeType
     */
    select?: ChurchIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeType
     */
    omit?: ChurchIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeTypeInclude<ExtArgs> | null
    where?: ChurchIncomeTypeWhereInput
    orderBy?: ChurchIncomeTypeOrderByWithRelationInput | ChurchIncomeTypeOrderByWithRelationInput[]
    cursor?: ChurchIncomeTypeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChurchIncomeTypeScalarFieldEnum | ChurchIncomeTypeScalarFieldEnum[]
  }

  /**
   * User.churchSpendingCreateByRel
   */
  export type User$churchSpendingCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpending
     */
    select?: ChurchSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpending
     */
    omit?: ChurchSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingInclude<ExtArgs> | null
    where?: ChurchSpendingWhereInput
    orderBy?: ChurchSpendingOrderByWithRelationInput | ChurchSpendingOrderByWithRelationInput[]
    cursor?: ChurchSpendingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChurchSpendingScalarFieldEnum | ChurchSpendingScalarFieldEnum[]
  }

  /**
   * User.churchSpendingUpdateByRel
   */
  export type User$churchSpendingUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpending
     */
    select?: ChurchSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpending
     */
    omit?: ChurchSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingInclude<ExtArgs> | null
    where?: ChurchSpendingWhereInput
    orderBy?: ChurchSpendingOrderByWithRelationInput | ChurchSpendingOrderByWithRelationInput[]
    cursor?: ChurchSpendingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChurchSpendingScalarFieldEnum | ChurchSpendingScalarFieldEnum[]
  }

  /**
   * User.churchSpendingTypeCreateByRel
   */
  export type User$churchSpendingTypeCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingType
     */
    select?: ChurchSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingType
     */
    omit?: ChurchSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingTypeInclude<ExtArgs> | null
    where?: ChurchSpendingTypeWhereInput
    orderBy?: ChurchSpendingTypeOrderByWithRelationInput | ChurchSpendingTypeOrderByWithRelationInput[]
    cursor?: ChurchSpendingTypeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChurchSpendingTypeScalarFieldEnum | ChurchSpendingTypeScalarFieldEnum[]
  }

  /**
   * User.churchSpendingTypeUpdateByRel
   */
  export type User$churchSpendingTypeUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingType
     */
    select?: ChurchSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingType
     */
    omit?: ChurchSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingTypeInclude<ExtArgs> | null
    where?: ChurchSpendingTypeWhereInput
    orderBy?: ChurchSpendingTypeOrderByWithRelationInput | ChurchSpendingTypeOrderByWithRelationInput[]
    cursor?: ChurchSpendingTypeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChurchSpendingTypeScalarFieldEnum | ChurchSpendingTypeScalarFieldEnum[]
  }

  /**
   * User.storeIncomeCreateByRel
   */
  export type User$storeIncomeCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncome
     */
    select?: StoreIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncome
     */
    omit?: StoreIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeInclude<ExtArgs> | null
    where?: StoreIncomeWhereInput
    orderBy?: StoreIncomeOrderByWithRelationInput | StoreIncomeOrderByWithRelationInput[]
    cursor?: StoreIncomeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StoreIncomeScalarFieldEnum | StoreIncomeScalarFieldEnum[]
  }

  /**
   * User.storeIncomeUpdateByRel
   */
  export type User$storeIncomeUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncome
     */
    select?: StoreIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncome
     */
    omit?: StoreIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeInclude<ExtArgs> | null
    where?: StoreIncomeWhereInput
    orderBy?: StoreIncomeOrderByWithRelationInput | StoreIncomeOrderByWithRelationInput[]
    cursor?: StoreIncomeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StoreIncomeScalarFieldEnum | StoreIncomeScalarFieldEnum[]
  }

  /**
   * User.storeIncomeTypeCreateByRel
   */
  export type User$storeIncomeTypeCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeType
     */
    select?: StoreIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeType
     */
    omit?: StoreIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeTypeInclude<ExtArgs> | null
    where?: StoreIncomeTypeWhereInput
    orderBy?: StoreIncomeTypeOrderByWithRelationInput | StoreIncomeTypeOrderByWithRelationInput[]
    cursor?: StoreIncomeTypeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StoreIncomeTypeScalarFieldEnum | StoreIncomeTypeScalarFieldEnum[]
  }

  /**
   * User.storeIncomeTypeUpdateByRel
   */
  export type User$storeIncomeTypeUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeType
     */
    select?: StoreIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeType
     */
    omit?: StoreIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeTypeInclude<ExtArgs> | null
    where?: StoreIncomeTypeWhereInput
    orderBy?: StoreIncomeTypeOrderByWithRelationInput | StoreIncomeTypeOrderByWithRelationInput[]
    cursor?: StoreIncomeTypeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StoreIncomeTypeScalarFieldEnum | StoreIncomeTypeScalarFieldEnum[]
  }

  /**
   * User.storeSpendingCreateByRel
   */
  export type User$storeSpendingCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpending
     */
    select?: StoreSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpending
     */
    omit?: StoreSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingInclude<ExtArgs> | null
    where?: StoreSpendingWhereInput
    orderBy?: StoreSpendingOrderByWithRelationInput | StoreSpendingOrderByWithRelationInput[]
    cursor?: StoreSpendingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StoreSpendingScalarFieldEnum | StoreSpendingScalarFieldEnum[]
  }

  /**
   * User.storeSpendingUpdateByRel
   */
  export type User$storeSpendingUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpending
     */
    select?: StoreSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpending
     */
    omit?: StoreSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingInclude<ExtArgs> | null
    where?: StoreSpendingWhereInput
    orderBy?: StoreSpendingOrderByWithRelationInput | StoreSpendingOrderByWithRelationInput[]
    cursor?: StoreSpendingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StoreSpendingScalarFieldEnum | StoreSpendingScalarFieldEnum[]
  }

  /**
   * User.storeSpendingTypeCreateByRel
   */
  export type User$storeSpendingTypeCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingType
     */
    select?: StoreSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingType
     */
    omit?: StoreSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingTypeInclude<ExtArgs> | null
    where?: StoreSpendingTypeWhereInput
    orderBy?: StoreSpendingTypeOrderByWithRelationInput | StoreSpendingTypeOrderByWithRelationInput[]
    cursor?: StoreSpendingTypeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StoreSpendingTypeScalarFieldEnum | StoreSpendingTypeScalarFieldEnum[]
  }

  /**
   * User.storeSpendingTypeUpdateByRel
   */
  export type User$storeSpendingTypeUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingType
     */
    select?: StoreSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingType
     */
    omit?: StoreSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingTypeInclude<ExtArgs> | null
    where?: StoreSpendingTypeWhereInput
    orderBy?: StoreSpendingTypeOrderByWithRelationInput | StoreSpendingTypeOrderByWithRelationInput[]
    cursor?: StoreSpendingTypeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StoreSpendingTypeScalarFieldEnum | StoreSpendingTypeScalarFieldEnum[]
  }

  /**
   * User.farmIncomeCreateByRel
   */
  export type User$farmIncomeCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncome
     */
    select?: FarmIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncome
     */
    omit?: FarmIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeInclude<ExtArgs> | null
    where?: FarmIncomeWhereInput
    orderBy?: FarmIncomeOrderByWithRelationInput | FarmIncomeOrderByWithRelationInput[]
    cursor?: FarmIncomeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FarmIncomeScalarFieldEnum | FarmIncomeScalarFieldEnum[]
  }

  /**
   * User.farmIncomeUpdateByRel
   */
  export type User$farmIncomeUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncome
     */
    select?: FarmIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncome
     */
    omit?: FarmIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeInclude<ExtArgs> | null
    where?: FarmIncomeWhereInput
    orderBy?: FarmIncomeOrderByWithRelationInput | FarmIncomeOrderByWithRelationInput[]
    cursor?: FarmIncomeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FarmIncomeScalarFieldEnum | FarmIncomeScalarFieldEnum[]
  }

  /**
   * User.farmIncomeTypeCreateByRel
   */
  export type User$farmIncomeTypeCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeType
     */
    select?: FarmIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeType
     */
    omit?: FarmIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeTypeInclude<ExtArgs> | null
    where?: FarmIncomeTypeWhereInput
    orderBy?: FarmIncomeTypeOrderByWithRelationInput | FarmIncomeTypeOrderByWithRelationInput[]
    cursor?: FarmIncomeTypeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FarmIncomeTypeScalarFieldEnum | FarmIncomeTypeScalarFieldEnum[]
  }

  /**
   * User.farmIncomeTypeUpdateByRel
   */
  export type User$farmIncomeTypeUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeType
     */
    select?: FarmIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeType
     */
    omit?: FarmIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeTypeInclude<ExtArgs> | null
    where?: FarmIncomeTypeWhereInput
    orderBy?: FarmIncomeTypeOrderByWithRelationInput | FarmIncomeTypeOrderByWithRelationInput[]
    cursor?: FarmIncomeTypeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FarmIncomeTypeScalarFieldEnum | FarmIncomeTypeScalarFieldEnum[]
  }

  /**
   * User.farmSpendingCreateByRel
   */
  export type User$farmSpendingCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpending
     */
    select?: FarmSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpending
     */
    omit?: FarmSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingInclude<ExtArgs> | null
    where?: FarmSpendingWhereInput
    orderBy?: FarmSpendingOrderByWithRelationInput | FarmSpendingOrderByWithRelationInput[]
    cursor?: FarmSpendingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FarmSpendingScalarFieldEnum | FarmSpendingScalarFieldEnum[]
  }

  /**
   * User.farmSpendingUpdateByRel
   */
  export type User$farmSpendingUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpending
     */
    select?: FarmSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpending
     */
    omit?: FarmSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingInclude<ExtArgs> | null
    where?: FarmSpendingWhereInput
    orderBy?: FarmSpendingOrderByWithRelationInput | FarmSpendingOrderByWithRelationInput[]
    cursor?: FarmSpendingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FarmSpendingScalarFieldEnum | FarmSpendingScalarFieldEnum[]
  }

  /**
   * User.farmSpendingTypeCreateByRel
   */
  export type User$farmSpendingTypeCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingType
     */
    select?: FarmSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingType
     */
    omit?: FarmSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingTypeInclude<ExtArgs> | null
    where?: FarmSpendingTypeWhereInput
    orderBy?: FarmSpendingTypeOrderByWithRelationInput | FarmSpendingTypeOrderByWithRelationInput[]
    cursor?: FarmSpendingTypeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FarmSpendingTypeScalarFieldEnum | FarmSpendingTypeScalarFieldEnum[]
  }

  /**
   * User.farmSpendingTypeUpdateByRel
   */
  export type User$farmSpendingTypeUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingType
     */
    select?: FarmSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingType
     */
    omit?: FarmSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingTypeInclude<ExtArgs> | null
    where?: FarmSpendingTypeWhereInput
    orderBy?: FarmSpendingTypeOrderByWithRelationInput | FarmSpendingTypeOrderByWithRelationInput[]
    cursor?: FarmSpendingTypeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FarmSpendingTypeScalarFieldEnum | FarmSpendingTypeScalarFieldEnum[]
  }

  /**
   * User.userHistoryCreatedByRel
   */
  export type User$userHistoryCreatedByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryInclude<ExtArgs> | null
    where?: UserHistoryWhereInput
    orderBy?: UserHistoryOrderByWithRelationInput | UserHistoryOrderByWithRelationInput[]
    cursor?: UserHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserHistoryScalarFieldEnum | UserHistoryScalarFieldEnum[]
  }

  /**
   * User.userHistoryUpdatedByRel
   */
  export type User$userHistoryUpdatedByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryInclude<ExtArgs> | null
    where?: UserHistoryWhereInput
    orderBy?: UserHistoryOrderByWithRelationInput | UserHistoryOrderByWithRelationInput[]
    cursor?: UserHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserHistoryScalarFieldEnum | UserHistoryScalarFieldEnum[]
  }

  /**
   * User.userHistoryIdRel
   */
  export type User$userHistoryIdRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryInclude<ExtArgs> | null
    where?: UserHistoryWhereInput
    orderBy?: UserHistoryOrderByWithRelationInput | UserHistoryOrderByWithRelationInput[]
    cursor?: UserHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserHistoryScalarFieldEnum | UserHistoryScalarFieldEnum[]
  }

  /**
   * User.churchIncomeHistoryCreateByRel
   */
  export type User$churchIncomeHistoryCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeHistory
     */
    select?: ChurchIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeHistory
     */
    omit?: ChurchIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeHistoryInclude<ExtArgs> | null
    where?: ChurchIncomeHistoryWhereInput
    orderBy?: ChurchIncomeHistoryOrderByWithRelationInput | ChurchIncomeHistoryOrderByWithRelationInput[]
    cursor?: ChurchIncomeHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChurchIncomeHistoryScalarFieldEnum | ChurchIncomeHistoryScalarFieldEnum[]
  }

  /**
   * User.churchIncomeHistoryUpdateByRel
   */
  export type User$churchIncomeHistoryUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeHistory
     */
    select?: ChurchIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeHistory
     */
    omit?: ChurchIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeHistoryInclude<ExtArgs> | null
    where?: ChurchIncomeHistoryWhereInput
    orderBy?: ChurchIncomeHistoryOrderByWithRelationInput | ChurchIncomeHistoryOrderByWithRelationInput[]
    cursor?: ChurchIncomeHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChurchIncomeHistoryScalarFieldEnum | ChurchIncomeHistoryScalarFieldEnum[]
  }

  /**
   * User.churchSpendingHistoryCreateByRel
   */
  export type User$churchSpendingHistoryCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingHistory
     */
    select?: ChurchSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingHistory
     */
    omit?: ChurchSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingHistoryInclude<ExtArgs> | null
    where?: ChurchSpendingHistoryWhereInput
    orderBy?: ChurchSpendingHistoryOrderByWithRelationInput | ChurchSpendingHistoryOrderByWithRelationInput[]
    cursor?: ChurchSpendingHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChurchSpendingHistoryScalarFieldEnum | ChurchSpendingHistoryScalarFieldEnum[]
  }

  /**
   * User.churchSpendingHistoryUpdateByRel
   */
  export type User$churchSpendingHistoryUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingHistory
     */
    select?: ChurchSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingHistory
     */
    omit?: ChurchSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingHistoryInclude<ExtArgs> | null
    where?: ChurchSpendingHistoryWhereInput
    orderBy?: ChurchSpendingHistoryOrderByWithRelationInput | ChurchSpendingHistoryOrderByWithRelationInput[]
    cursor?: ChurchSpendingHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChurchSpendingHistoryScalarFieldEnum | ChurchSpendingHistoryScalarFieldEnum[]
  }

  /**
   * User.storeIncomeHistoryCreateByRel
   */
  export type User$storeIncomeHistoryCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeHistory
     */
    select?: StoreIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeHistory
     */
    omit?: StoreIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeHistoryInclude<ExtArgs> | null
    where?: StoreIncomeHistoryWhereInput
    orderBy?: StoreIncomeHistoryOrderByWithRelationInput | StoreIncomeHistoryOrderByWithRelationInput[]
    cursor?: StoreIncomeHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StoreIncomeHistoryScalarFieldEnum | StoreIncomeHistoryScalarFieldEnum[]
  }

  /**
   * User.storeIncomeHistoryUpdateByRel
   */
  export type User$storeIncomeHistoryUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeHistory
     */
    select?: StoreIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeHistory
     */
    omit?: StoreIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeHistoryInclude<ExtArgs> | null
    where?: StoreIncomeHistoryWhereInput
    orderBy?: StoreIncomeHistoryOrderByWithRelationInput | StoreIncomeHistoryOrderByWithRelationInput[]
    cursor?: StoreIncomeHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StoreIncomeHistoryScalarFieldEnum | StoreIncomeHistoryScalarFieldEnum[]
  }

  /**
   * User.storeSpendingHistoryCreateByRel
   */
  export type User$storeSpendingHistoryCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingHistory
     */
    select?: StoreSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingHistory
     */
    omit?: StoreSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingHistoryInclude<ExtArgs> | null
    where?: StoreSpendingHistoryWhereInput
    orderBy?: StoreSpendingHistoryOrderByWithRelationInput | StoreSpendingHistoryOrderByWithRelationInput[]
    cursor?: StoreSpendingHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StoreSpendingHistoryScalarFieldEnum | StoreSpendingHistoryScalarFieldEnum[]
  }

  /**
   * User.storeSpendingHistoryUpdateByRel
   */
  export type User$storeSpendingHistoryUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingHistory
     */
    select?: StoreSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingHistory
     */
    omit?: StoreSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingHistoryInclude<ExtArgs> | null
    where?: StoreSpendingHistoryWhereInput
    orderBy?: StoreSpendingHistoryOrderByWithRelationInput | StoreSpendingHistoryOrderByWithRelationInput[]
    cursor?: StoreSpendingHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StoreSpendingHistoryScalarFieldEnum | StoreSpendingHistoryScalarFieldEnum[]
  }

  /**
   * User.farmIncomeHistoryCreateByRel
   */
  export type User$farmIncomeHistoryCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeHistory
     */
    select?: FarmIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeHistory
     */
    omit?: FarmIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeHistoryInclude<ExtArgs> | null
    where?: FarmIncomeHistoryWhereInput
    orderBy?: FarmIncomeHistoryOrderByWithRelationInput | FarmIncomeHistoryOrderByWithRelationInput[]
    cursor?: FarmIncomeHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FarmIncomeHistoryScalarFieldEnum | FarmIncomeHistoryScalarFieldEnum[]
  }

  /**
   * User.farmIncomeHistoryUpdateByRel
   */
  export type User$farmIncomeHistoryUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeHistory
     */
    select?: FarmIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeHistory
     */
    omit?: FarmIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeHistoryInclude<ExtArgs> | null
    where?: FarmIncomeHistoryWhereInput
    orderBy?: FarmIncomeHistoryOrderByWithRelationInput | FarmIncomeHistoryOrderByWithRelationInput[]
    cursor?: FarmIncomeHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FarmIncomeHistoryScalarFieldEnum | FarmIncomeHistoryScalarFieldEnum[]
  }

  /**
   * User.farmSpendingHistoryCreateByRel
   */
  export type User$farmSpendingHistoryCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingHistory
     */
    select?: FarmSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingHistory
     */
    omit?: FarmSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingHistoryInclude<ExtArgs> | null
    where?: FarmSpendingHistoryWhereInput
    orderBy?: FarmSpendingHistoryOrderByWithRelationInput | FarmSpendingHistoryOrderByWithRelationInput[]
    cursor?: FarmSpendingHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FarmSpendingHistoryScalarFieldEnum | FarmSpendingHistoryScalarFieldEnum[]
  }

  /**
   * User.farmSpendingHistoryUpdateByRel
   */
  export type User$farmSpendingHistoryUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingHistory
     */
    select?: FarmSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingHistory
     */
    omit?: FarmSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingHistoryInclude<ExtArgs> | null
    where?: FarmSpendingHistoryWhereInput
    orderBy?: FarmSpendingHistoryOrderByWithRelationInput | FarmSpendingHistoryOrderByWithRelationInput[]
    cursor?: FarmSpendingHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FarmSpendingHistoryScalarFieldEnum | FarmSpendingHistoryScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model UserHistory
   */

  export type AggregateUserHistory = {
    _count: UserHistoryCountAggregateOutputType | null
    _avg: UserHistoryAvgAggregateOutputType | null
    _sum: UserHistorySumAggregateOutputType | null
    _min: UserHistoryMinAggregateOutputType | null
    _max: UserHistoryMaxAggregateOutputType | null
  }

  export type UserHistoryAvgAggregateOutputType = {
    id: number | null
    userId: number | null
    createdBy: number | null
    updatedBy: number | null
  }

  export type UserHistorySumAggregateOutputType = {
    id: bigint | null
    userId: bigint | null
    createdBy: bigint | null
    updatedBy: bigint | null
  }

  export type UserHistoryMinAggregateOutputType = {
    id: bigint | null
    userId: bigint | null
    createdAt: Date | null
    createdBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
    deleted: boolean | null
  }

  export type UserHistoryMaxAggregateOutputType = {
    id: bigint | null
    userId: bigint | null
    createdAt: Date | null
    createdBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
    deleted: boolean | null
  }

  export type UserHistoryCountAggregateOutputType = {
    id: number
    userId: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deleted: number
    oldData: number
    newData: number
    _all: number
  }


  export type UserHistoryAvgAggregateInputType = {
    id?: true
    userId?: true
    createdBy?: true
    updatedBy?: true
  }

  export type UserHistorySumAggregateInputType = {
    id?: true
    userId?: true
    createdBy?: true
    updatedBy?: true
  }

  export type UserHistoryMinAggregateInputType = {
    id?: true
    userId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deleted?: true
  }

  export type UserHistoryMaxAggregateInputType = {
    id?: true
    userId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deleted?: true
  }

  export type UserHistoryCountAggregateInputType = {
    id?: true
    userId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deleted?: true
    oldData?: true
    newData?: true
    _all?: true
  }

  export type UserHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserHistory to aggregate.
     */
    where?: UserHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserHistories to fetch.
     */
    orderBy?: UserHistoryOrderByWithRelationInput | UserHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserHistories
    **/
    _count?: true | UserHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserHistoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserHistorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserHistoryMaxAggregateInputType
  }

  export type GetUserHistoryAggregateType<T extends UserHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregateUserHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserHistory[P]>
      : GetScalarType<T[P], AggregateUserHistory[P]>
  }




  export type UserHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserHistoryWhereInput
    orderBy?: UserHistoryOrderByWithAggregationInput | UserHistoryOrderByWithAggregationInput[]
    by: UserHistoryScalarFieldEnum[] | UserHistoryScalarFieldEnum
    having?: UserHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserHistoryCountAggregateInputType | true
    _avg?: UserHistoryAvgAggregateInputType
    _sum?: UserHistorySumAggregateInputType
    _min?: UserHistoryMinAggregateInputType
    _max?: UserHistoryMaxAggregateInputType
  }

  export type UserHistoryGroupByOutputType = {
    id: bigint
    userId: bigint
    createdAt: Date
    createdBy: bigint | null
    updatedAt: Date
    updatedBy: bigint | null
    deleted: boolean
    oldData: JsonValue
    newData: JsonValue
    _count: UserHistoryCountAggregateOutputType | null
    _avg: UserHistoryAvgAggregateOutputType | null
    _sum: UserHistorySumAggregateOutputType | null
    _min: UserHistoryMinAggregateOutputType | null
    _max: UserHistoryMaxAggregateOutputType | null
  }

  type GetUserHistoryGroupByPayload<T extends UserHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], UserHistoryGroupByOutputType[P]>
        }
      >
    >


  export type UserHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deleted?: boolean
    oldData?: boolean
    newData?: boolean
    userHistoryCreatedByRel?: boolean | UserHistory$userHistoryCreatedByRelArgs<ExtArgs>
    userHistoryUpdatedByRel?: boolean | UserHistory$userHistoryUpdatedByRelArgs<ExtArgs>
    userHistoryIdRel?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userHistory"]>

  export type UserHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deleted?: boolean
    oldData?: boolean
    newData?: boolean
    userHistoryCreatedByRel?: boolean | UserHistory$userHistoryCreatedByRelArgs<ExtArgs>
    userHistoryUpdatedByRel?: boolean | UserHistory$userHistoryUpdatedByRelArgs<ExtArgs>
    userHistoryIdRel?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userHistory"]>

  export type UserHistorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deleted?: boolean
    oldData?: boolean
    newData?: boolean
    userHistoryCreatedByRel?: boolean | UserHistory$userHistoryCreatedByRelArgs<ExtArgs>
    userHistoryUpdatedByRel?: boolean | UserHistory$userHistoryUpdatedByRelArgs<ExtArgs>
    userHistoryIdRel?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userHistory"]>

  export type UserHistorySelectScalar = {
    id?: boolean
    userId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deleted?: boolean
    oldData?: boolean
    newData?: boolean
  }

  export type UserHistoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deleted" | "oldData" | "newData", ExtArgs["result"]["userHistory"]>
  export type UserHistoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userHistoryCreatedByRel?: boolean | UserHistory$userHistoryCreatedByRelArgs<ExtArgs>
    userHistoryUpdatedByRel?: boolean | UserHistory$userHistoryUpdatedByRelArgs<ExtArgs>
    userHistoryIdRel?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserHistoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userHistoryCreatedByRel?: boolean | UserHistory$userHistoryCreatedByRelArgs<ExtArgs>
    userHistoryUpdatedByRel?: boolean | UserHistory$userHistoryUpdatedByRelArgs<ExtArgs>
    userHistoryIdRel?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserHistoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userHistoryCreatedByRel?: boolean | UserHistory$userHistoryCreatedByRelArgs<ExtArgs>
    userHistoryUpdatedByRel?: boolean | UserHistory$userHistoryUpdatedByRelArgs<ExtArgs>
    userHistoryIdRel?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $UserHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserHistory"
    objects: {
      userHistoryCreatedByRel: Prisma.$UserPayload<ExtArgs> | null
      userHistoryUpdatedByRel: Prisma.$UserPayload<ExtArgs> | null
      userHistoryIdRel: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      userId: bigint
      createdAt: Date
      createdBy: bigint | null
      updatedAt: Date
      updatedBy: bigint | null
      deleted: boolean
      oldData: Prisma.JsonValue
      newData: Prisma.JsonValue
    }, ExtArgs["result"]["userHistory"]>
    composites: {}
  }

  type UserHistoryGetPayload<S extends boolean | null | undefined | UserHistoryDefaultArgs> = $Result.GetResult<Prisma.$UserHistoryPayload, S>

  type UserHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserHistoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserHistoryCountAggregateInputType | true
    }

  export interface UserHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserHistory'], meta: { name: 'UserHistory' } }
    /**
     * Find zero or one UserHistory that matches the filter.
     * @param {UserHistoryFindUniqueArgs} args - Arguments to find a UserHistory
     * @example
     * // Get one UserHistory
     * const userHistory = await prisma.userHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserHistoryFindUniqueArgs>(args: SelectSubset<T, UserHistoryFindUniqueArgs<ExtArgs>>): Prisma__UserHistoryClient<$Result.GetResult<Prisma.$UserHistoryPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one UserHistory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserHistoryFindUniqueOrThrowArgs} args - Arguments to find a UserHistory
     * @example
     * // Get one UserHistory
     * const userHistory = await prisma.userHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, UserHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserHistoryClient<$Result.GetResult<Prisma.$UserHistoryPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first UserHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHistoryFindFirstArgs} args - Arguments to find a UserHistory
     * @example
     * // Get one UserHistory
     * const userHistory = await prisma.userHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserHistoryFindFirstArgs>(args?: SelectSubset<T, UserHistoryFindFirstArgs<ExtArgs>>): Prisma__UserHistoryClient<$Result.GetResult<Prisma.$UserHistoryPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first UserHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHistoryFindFirstOrThrowArgs} args - Arguments to find a UserHistory
     * @example
     * // Get one UserHistory
     * const userHistory = await prisma.userHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, UserHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserHistoryClient<$Result.GetResult<Prisma.$UserHistoryPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more UserHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserHistories
     * const userHistories = await prisma.userHistory.findMany()
     * 
     * // Get first 10 UserHistories
     * const userHistories = await prisma.userHistory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userHistoryWithIdOnly = await prisma.userHistory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserHistoryFindManyArgs>(args?: SelectSubset<T, UserHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserHistoryPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a UserHistory.
     * @param {UserHistoryCreateArgs} args - Arguments to create a UserHistory.
     * @example
     * // Create one UserHistory
     * const UserHistory = await prisma.userHistory.create({
     *   data: {
     *     // ... data to create a UserHistory
     *   }
     * })
     * 
     */
    create<T extends UserHistoryCreateArgs>(args: SelectSubset<T, UserHistoryCreateArgs<ExtArgs>>): Prisma__UserHistoryClient<$Result.GetResult<Prisma.$UserHistoryPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many UserHistories.
     * @param {UserHistoryCreateManyArgs} args - Arguments to create many UserHistories.
     * @example
     * // Create many UserHistories
     * const userHistory = await prisma.userHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserHistoryCreateManyArgs>(args?: SelectSubset<T, UserHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserHistories and returns the data saved in the database.
     * @param {UserHistoryCreateManyAndReturnArgs} args - Arguments to create many UserHistories.
     * @example
     * // Create many UserHistories
     * const userHistory = await prisma.userHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserHistories and only return the `id`
     * const userHistoryWithIdOnly = await prisma.userHistory.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, UserHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserHistoryPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a UserHistory.
     * @param {UserHistoryDeleteArgs} args - Arguments to delete one UserHistory.
     * @example
     * // Delete one UserHistory
     * const UserHistory = await prisma.userHistory.delete({
     *   where: {
     *     // ... filter to delete one UserHistory
     *   }
     * })
     * 
     */
    delete<T extends UserHistoryDeleteArgs>(args: SelectSubset<T, UserHistoryDeleteArgs<ExtArgs>>): Prisma__UserHistoryClient<$Result.GetResult<Prisma.$UserHistoryPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one UserHistory.
     * @param {UserHistoryUpdateArgs} args - Arguments to update one UserHistory.
     * @example
     * // Update one UserHistory
     * const userHistory = await prisma.userHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserHistoryUpdateArgs>(args: SelectSubset<T, UserHistoryUpdateArgs<ExtArgs>>): Prisma__UserHistoryClient<$Result.GetResult<Prisma.$UserHistoryPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more UserHistories.
     * @param {UserHistoryDeleteManyArgs} args - Arguments to filter UserHistories to delete.
     * @example
     * // Delete a few UserHistories
     * const { count } = await prisma.userHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserHistoryDeleteManyArgs>(args?: SelectSubset<T, UserHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserHistories
     * const userHistory = await prisma.userHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserHistoryUpdateManyArgs>(args: SelectSubset<T, UserHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserHistories and returns the data updated in the database.
     * @param {UserHistoryUpdateManyAndReturnArgs} args - Arguments to update many UserHistories.
     * @example
     * // Update many UserHistories
     * const userHistory = await prisma.userHistory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UserHistories and only return the `id`
     * const userHistoryWithIdOnly = await prisma.userHistory.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserHistoryUpdateManyAndReturnArgs>(args: SelectSubset<T, UserHistoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserHistoryPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one UserHistory.
     * @param {UserHistoryUpsertArgs} args - Arguments to update or create a UserHistory.
     * @example
     * // Update or create a UserHistory
     * const userHistory = await prisma.userHistory.upsert({
     *   create: {
     *     // ... data to create a UserHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserHistory we want to update
     *   }
     * })
     */
    upsert<T extends UserHistoryUpsertArgs>(args: SelectSubset<T, UserHistoryUpsertArgs<ExtArgs>>): Prisma__UserHistoryClient<$Result.GetResult<Prisma.$UserHistoryPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of UserHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHistoryCountArgs} args - Arguments to filter UserHistories to count.
     * @example
     * // Count the number of UserHistories
     * const count = await prisma.userHistory.count({
     *   where: {
     *     // ... the filter for the UserHistories we want to count
     *   }
     * })
    **/
    count<T extends UserHistoryCountArgs>(
      args?: Subset<T, UserHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserHistoryAggregateArgs>(args: Subset<T, UserHistoryAggregateArgs>): Prisma.PrismaPromise<GetUserHistoryAggregateType<T>>

    /**
     * Group by UserHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserHistoryGroupByArgs['orderBy'] }
        : { orderBy?: UserHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserHistory model
   */
  readonly fields: UserHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userHistoryCreatedByRel<T extends UserHistory$userHistoryCreatedByRelArgs<ExtArgs> = {}>(args?: Subset<T, UserHistory$userHistoryCreatedByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    userHistoryUpdatedByRel<T extends UserHistory$userHistoryUpdatedByRelArgs<ExtArgs> = {}>(args?: Subset<T, UserHistory$userHistoryUpdatedByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    userHistoryIdRel<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserHistory model
   */ 
  interface UserHistoryFieldRefs {
    readonly id: FieldRef<"UserHistory", 'BigInt'>
    readonly userId: FieldRef<"UserHistory", 'BigInt'>
    readonly createdAt: FieldRef<"UserHistory", 'DateTime'>
    readonly createdBy: FieldRef<"UserHistory", 'BigInt'>
    readonly updatedAt: FieldRef<"UserHistory", 'DateTime'>
    readonly updatedBy: FieldRef<"UserHistory", 'BigInt'>
    readonly deleted: FieldRef<"UserHistory", 'Boolean'>
    readonly oldData: FieldRef<"UserHistory", 'Json'>
    readonly newData: FieldRef<"UserHistory", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * UserHistory findUnique
   */
  export type UserHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryInclude<ExtArgs> | null
    /**
     * Filter, which UserHistory to fetch.
     */
    where: UserHistoryWhereUniqueInput
  }

  /**
   * UserHistory findUniqueOrThrow
   */
  export type UserHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryInclude<ExtArgs> | null
    /**
     * Filter, which UserHistory to fetch.
     */
    where: UserHistoryWhereUniqueInput
  }

  /**
   * UserHistory findFirst
   */
  export type UserHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryInclude<ExtArgs> | null
    /**
     * Filter, which UserHistory to fetch.
     */
    where?: UserHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserHistories to fetch.
     */
    orderBy?: UserHistoryOrderByWithRelationInput | UserHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserHistories.
     */
    cursor?: UserHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserHistories.
     */
    distinct?: UserHistoryScalarFieldEnum | UserHistoryScalarFieldEnum[]
  }

  /**
   * UserHistory findFirstOrThrow
   */
  export type UserHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryInclude<ExtArgs> | null
    /**
     * Filter, which UserHistory to fetch.
     */
    where?: UserHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserHistories to fetch.
     */
    orderBy?: UserHistoryOrderByWithRelationInput | UserHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserHistories.
     */
    cursor?: UserHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserHistories.
     */
    distinct?: UserHistoryScalarFieldEnum | UserHistoryScalarFieldEnum[]
  }

  /**
   * UserHistory findMany
   */
  export type UserHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryInclude<ExtArgs> | null
    /**
     * Filter, which UserHistories to fetch.
     */
    where?: UserHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserHistories to fetch.
     */
    orderBy?: UserHistoryOrderByWithRelationInput | UserHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserHistories.
     */
    cursor?: UserHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserHistories.
     */
    skip?: number
    distinct?: UserHistoryScalarFieldEnum | UserHistoryScalarFieldEnum[]
  }

  /**
   * UserHistory create
   */
  export type UserHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryInclude<ExtArgs> | null
    /**
     * The data needed to create a UserHistory.
     */
    data: XOR<UserHistoryCreateInput, UserHistoryUncheckedCreateInput>
  }

  /**
   * UserHistory createMany
   */
  export type UserHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserHistories.
     */
    data: UserHistoryCreateManyInput | UserHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserHistory createManyAndReturn
   */
  export type UserHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * The data used to create many UserHistories.
     */
    data: UserHistoryCreateManyInput | UserHistoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserHistory update
   */
  export type UserHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryInclude<ExtArgs> | null
    /**
     * The data needed to update a UserHistory.
     */
    data: XOR<UserHistoryUpdateInput, UserHistoryUncheckedUpdateInput>
    /**
     * Choose, which UserHistory to update.
     */
    where: UserHistoryWhereUniqueInput
  }

  /**
   * UserHistory updateMany
   */
  export type UserHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserHistories.
     */
    data: XOR<UserHistoryUpdateManyMutationInput, UserHistoryUncheckedUpdateManyInput>
    /**
     * Filter which UserHistories to update
     */
    where?: UserHistoryWhereInput
    /**
     * Limit how many UserHistories to update.
     */
    limit?: number
  }

  /**
   * UserHistory updateManyAndReturn
   */
  export type UserHistoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * The data used to update UserHistories.
     */
    data: XOR<UserHistoryUpdateManyMutationInput, UserHistoryUncheckedUpdateManyInput>
    /**
     * Filter which UserHistories to update
     */
    where?: UserHistoryWhereInput
    /**
     * Limit how many UserHistories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserHistory upsert
   */
  export type UserHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryInclude<ExtArgs> | null
    /**
     * The filter to search for the UserHistory to update in case it exists.
     */
    where: UserHistoryWhereUniqueInput
    /**
     * In case the UserHistory found by the `where` argument doesn't exist, create a new UserHistory with this data.
     */
    create: XOR<UserHistoryCreateInput, UserHistoryUncheckedCreateInput>
    /**
     * In case the UserHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserHistoryUpdateInput, UserHistoryUncheckedUpdateInput>
  }

  /**
   * UserHistory delete
   */
  export type UserHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryInclude<ExtArgs> | null
    /**
     * Filter which UserHistory to delete.
     */
    where: UserHistoryWhereUniqueInput
  }

  /**
   * UserHistory deleteMany
   */
  export type UserHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserHistories to delete
     */
    where?: UserHistoryWhereInput
    /**
     * Limit how many UserHistories to delete.
     */
    limit?: number
  }

  /**
   * UserHistory.userHistoryCreatedByRel
   */
  export type UserHistory$userHistoryCreatedByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * UserHistory.userHistoryUpdatedByRel
   */
  export type UserHistory$userHistoryUpdatedByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * UserHistory without action
   */
  export type UserHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHistory
     */
    select?: UserHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHistory
     */
    omit?: UserHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHistoryInclude<ExtArgs> | null
  }


  /**
   * Model ChurchIncome
   */

  export type AggregateChurchIncome = {
    _count: ChurchIncomeCountAggregateOutputType | null
    _avg: ChurchIncomeAvgAggregateOutputType | null
    _sum: ChurchIncomeSumAggregateOutputType | null
    _min: ChurchIncomeMinAggregateOutputType | null
    _max: ChurchIncomeMaxAggregateOutputType | null
  }

  export type ChurchIncomeAvgAggregateOutputType = {
    id: number | null
    incomeTypeId: number | null
    funds: number | null
    createBy: number | null
    updatedBy: number | null
  }

  export type ChurchIncomeSumAggregateOutputType = {
    id: bigint | null
    incomeTypeId: bigint | null
    funds: bigint | null
    createBy: bigint | null
    updatedBy: bigint | null
  }

  export type ChurchIncomeMinAggregateOutputType = {
    id: bigint | null
    incomeTypeId: bigint | null
    detail: string | null
    funds: bigint | null
    date: Date | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type ChurchIncomeMaxAggregateOutputType = {
    id: bigint | null
    incomeTypeId: bigint | null
    detail: string | null
    funds: bigint | null
    date: Date | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type ChurchIncomeCountAggregateOutputType = {
    id: number
    incomeTypeId: number
    detail: number
    funds: number
    date: number
    deleted: number
    createAt: number
    createBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type ChurchIncomeAvgAggregateInputType = {
    id?: true
    incomeTypeId?: true
    funds?: true
    createBy?: true
    updatedBy?: true
  }

  export type ChurchIncomeSumAggregateInputType = {
    id?: true
    incomeTypeId?: true
    funds?: true
    createBy?: true
    updatedBy?: true
  }

  export type ChurchIncomeMinAggregateInputType = {
    id?: true
    incomeTypeId?: true
    detail?: true
    funds?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type ChurchIncomeMaxAggregateInputType = {
    id?: true
    incomeTypeId?: true
    detail?: true
    funds?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type ChurchIncomeCountAggregateInputType = {
    id?: true
    incomeTypeId?: true
    detail?: true
    funds?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type ChurchIncomeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChurchIncome to aggregate.
     */
    where?: ChurchIncomeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChurchIncomes to fetch.
     */
    orderBy?: ChurchIncomeOrderByWithRelationInput | ChurchIncomeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ChurchIncomeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChurchIncomes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChurchIncomes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ChurchIncomes
    **/
    _count?: true | ChurchIncomeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ChurchIncomeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ChurchIncomeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChurchIncomeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChurchIncomeMaxAggregateInputType
  }

  export type GetChurchIncomeAggregateType<T extends ChurchIncomeAggregateArgs> = {
        [P in keyof T & keyof AggregateChurchIncome]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChurchIncome[P]>
      : GetScalarType<T[P], AggregateChurchIncome[P]>
  }




  export type ChurchIncomeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChurchIncomeWhereInput
    orderBy?: ChurchIncomeOrderByWithAggregationInput | ChurchIncomeOrderByWithAggregationInput[]
    by: ChurchIncomeScalarFieldEnum[] | ChurchIncomeScalarFieldEnum
    having?: ChurchIncomeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChurchIncomeCountAggregateInputType | true
    _avg?: ChurchIncomeAvgAggregateInputType
    _sum?: ChurchIncomeSumAggregateInputType
    _min?: ChurchIncomeMinAggregateInputType
    _max?: ChurchIncomeMaxAggregateInputType
  }

  export type ChurchIncomeGroupByOutputType = {
    id: bigint
    incomeTypeId: bigint
    detail: string | null
    funds: bigint
    date: Date
    deleted: boolean
    createAt: Date
    createBy: bigint | null
    updatedAt: Date
    updatedBy: bigint | null
    _count: ChurchIncomeCountAggregateOutputType | null
    _avg: ChurchIncomeAvgAggregateOutputType | null
    _sum: ChurchIncomeSumAggregateOutputType | null
    _min: ChurchIncomeMinAggregateOutputType | null
    _max: ChurchIncomeMaxAggregateOutputType | null
  }

  type GetChurchIncomeGroupByPayload<T extends ChurchIncomeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ChurchIncomeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChurchIncomeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChurchIncomeGroupByOutputType[P]>
            : GetScalarType<T[P], ChurchIncomeGroupByOutputType[P]>
        }
      >
    >


  export type ChurchIncomeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    incomeTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    churchIncomeTypeIdRel?: boolean | ChurchIncomeTypeDefaultArgs<ExtArgs>
    churchIncomeCreateByRel?: boolean | ChurchIncome$churchIncomeCreateByRelArgs<ExtArgs>
    churchIncomeUpdateByRel?: boolean | ChurchIncome$churchIncomeUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["churchIncome"]>

  export type ChurchIncomeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    incomeTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    churchIncomeTypeIdRel?: boolean | ChurchIncomeTypeDefaultArgs<ExtArgs>
    churchIncomeCreateByRel?: boolean | ChurchIncome$churchIncomeCreateByRelArgs<ExtArgs>
    churchIncomeUpdateByRel?: boolean | ChurchIncome$churchIncomeUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["churchIncome"]>

  export type ChurchIncomeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    incomeTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    churchIncomeTypeIdRel?: boolean | ChurchIncomeTypeDefaultArgs<ExtArgs>
    churchIncomeCreateByRel?: boolean | ChurchIncome$churchIncomeCreateByRelArgs<ExtArgs>
    churchIncomeUpdateByRel?: boolean | ChurchIncome$churchIncomeUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["churchIncome"]>

  export type ChurchIncomeSelectScalar = {
    id?: boolean
    incomeTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type ChurchIncomeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "incomeTypeId" | "detail" | "funds" | "date" | "deleted" | "createAt" | "createBy" | "updatedAt" | "updatedBy", ExtArgs["result"]["churchIncome"]>
  export type ChurchIncomeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    churchIncomeTypeIdRel?: boolean | ChurchIncomeTypeDefaultArgs<ExtArgs>
    churchIncomeCreateByRel?: boolean | ChurchIncome$churchIncomeCreateByRelArgs<ExtArgs>
    churchIncomeUpdateByRel?: boolean | ChurchIncome$churchIncomeUpdateByRelArgs<ExtArgs>
  }
  export type ChurchIncomeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    churchIncomeTypeIdRel?: boolean | ChurchIncomeTypeDefaultArgs<ExtArgs>
    churchIncomeCreateByRel?: boolean | ChurchIncome$churchIncomeCreateByRelArgs<ExtArgs>
    churchIncomeUpdateByRel?: boolean | ChurchIncome$churchIncomeUpdateByRelArgs<ExtArgs>
  }
  export type ChurchIncomeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    churchIncomeTypeIdRel?: boolean | ChurchIncomeTypeDefaultArgs<ExtArgs>
    churchIncomeCreateByRel?: boolean | ChurchIncome$churchIncomeCreateByRelArgs<ExtArgs>
    churchIncomeUpdateByRel?: boolean | ChurchIncome$churchIncomeUpdateByRelArgs<ExtArgs>
  }

  export type $ChurchIncomePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ChurchIncome"
    objects: {
      churchIncomeTypeIdRel: Prisma.$ChurchIncomeTypePayload<ExtArgs>
      churchIncomeCreateByRel: Prisma.$UserPayload<ExtArgs> | null
      churchIncomeUpdateByRel: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      incomeTypeId: bigint
      detail: string | null
      funds: bigint
      date: Date
      deleted: boolean
      createAt: Date
      createBy: bigint | null
      updatedAt: Date
      updatedBy: bigint | null
    }, ExtArgs["result"]["churchIncome"]>
    composites: {}
  }

  type ChurchIncomeGetPayload<S extends boolean | null | undefined | ChurchIncomeDefaultArgs> = $Result.GetResult<Prisma.$ChurchIncomePayload, S>

  type ChurchIncomeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ChurchIncomeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ChurchIncomeCountAggregateInputType | true
    }

  export interface ChurchIncomeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ChurchIncome'], meta: { name: 'ChurchIncome' } }
    /**
     * Find zero or one ChurchIncome that matches the filter.
     * @param {ChurchIncomeFindUniqueArgs} args - Arguments to find a ChurchIncome
     * @example
     * // Get one ChurchIncome
     * const churchIncome = await prisma.churchIncome.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ChurchIncomeFindUniqueArgs>(args: SelectSubset<T, ChurchIncomeFindUniqueArgs<ExtArgs>>): Prisma__ChurchIncomeClient<$Result.GetResult<Prisma.$ChurchIncomePayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one ChurchIncome that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ChurchIncomeFindUniqueOrThrowArgs} args - Arguments to find a ChurchIncome
     * @example
     * // Get one ChurchIncome
     * const churchIncome = await prisma.churchIncome.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ChurchIncomeFindUniqueOrThrowArgs>(args: SelectSubset<T, ChurchIncomeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ChurchIncomeClient<$Result.GetResult<Prisma.$ChurchIncomePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first ChurchIncome that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchIncomeFindFirstArgs} args - Arguments to find a ChurchIncome
     * @example
     * // Get one ChurchIncome
     * const churchIncome = await prisma.churchIncome.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ChurchIncomeFindFirstArgs>(args?: SelectSubset<T, ChurchIncomeFindFirstArgs<ExtArgs>>): Prisma__ChurchIncomeClient<$Result.GetResult<Prisma.$ChurchIncomePayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first ChurchIncome that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchIncomeFindFirstOrThrowArgs} args - Arguments to find a ChurchIncome
     * @example
     * // Get one ChurchIncome
     * const churchIncome = await prisma.churchIncome.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ChurchIncomeFindFirstOrThrowArgs>(args?: SelectSubset<T, ChurchIncomeFindFirstOrThrowArgs<ExtArgs>>): Prisma__ChurchIncomeClient<$Result.GetResult<Prisma.$ChurchIncomePayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more ChurchIncomes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchIncomeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ChurchIncomes
     * const churchIncomes = await prisma.churchIncome.findMany()
     * 
     * // Get first 10 ChurchIncomes
     * const churchIncomes = await prisma.churchIncome.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const churchIncomeWithIdOnly = await prisma.churchIncome.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ChurchIncomeFindManyArgs>(args?: SelectSubset<T, ChurchIncomeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchIncomePayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a ChurchIncome.
     * @param {ChurchIncomeCreateArgs} args - Arguments to create a ChurchIncome.
     * @example
     * // Create one ChurchIncome
     * const ChurchIncome = await prisma.churchIncome.create({
     *   data: {
     *     // ... data to create a ChurchIncome
     *   }
     * })
     * 
     */
    create<T extends ChurchIncomeCreateArgs>(args: SelectSubset<T, ChurchIncomeCreateArgs<ExtArgs>>): Prisma__ChurchIncomeClient<$Result.GetResult<Prisma.$ChurchIncomePayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many ChurchIncomes.
     * @param {ChurchIncomeCreateManyArgs} args - Arguments to create many ChurchIncomes.
     * @example
     * // Create many ChurchIncomes
     * const churchIncome = await prisma.churchIncome.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ChurchIncomeCreateManyArgs>(args?: SelectSubset<T, ChurchIncomeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ChurchIncomes and returns the data saved in the database.
     * @param {ChurchIncomeCreateManyAndReturnArgs} args - Arguments to create many ChurchIncomes.
     * @example
     * // Create many ChurchIncomes
     * const churchIncome = await prisma.churchIncome.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ChurchIncomes and only return the `id`
     * const churchIncomeWithIdOnly = await prisma.churchIncome.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ChurchIncomeCreateManyAndReturnArgs>(args?: SelectSubset<T, ChurchIncomeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchIncomePayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a ChurchIncome.
     * @param {ChurchIncomeDeleteArgs} args - Arguments to delete one ChurchIncome.
     * @example
     * // Delete one ChurchIncome
     * const ChurchIncome = await prisma.churchIncome.delete({
     *   where: {
     *     // ... filter to delete one ChurchIncome
     *   }
     * })
     * 
     */
    delete<T extends ChurchIncomeDeleteArgs>(args: SelectSubset<T, ChurchIncomeDeleteArgs<ExtArgs>>): Prisma__ChurchIncomeClient<$Result.GetResult<Prisma.$ChurchIncomePayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one ChurchIncome.
     * @param {ChurchIncomeUpdateArgs} args - Arguments to update one ChurchIncome.
     * @example
     * // Update one ChurchIncome
     * const churchIncome = await prisma.churchIncome.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ChurchIncomeUpdateArgs>(args: SelectSubset<T, ChurchIncomeUpdateArgs<ExtArgs>>): Prisma__ChurchIncomeClient<$Result.GetResult<Prisma.$ChurchIncomePayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more ChurchIncomes.
     * @param {ChurchIncomeDeleteManyArgs} args - Arguments to filter ChurchIncomes to delete.
     * @example
     * // Delete a few ChurchIncomes
     * const { count } = await prisma.churchIncome.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ChurchIncomeDeleteManyArgs>(args?: SelectSubset<T, ChurchIncomeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChurchIncomes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchIncomeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ChurchIncomes
     * const churchIncome = await prisma.churchIncome.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ChurchIncomeUpdateManyArgs>(args: SelectSubset<T, ChurchIncomeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChurchIncomes and returns the data updated in the database.
     * @param {ChurchIncomeUpdateManyAndReturnArgs} args - Arguments to update many ChurchIncomes.
     * @example
     * // Update many ChurchIncomes
     * const churchIncome = await prisma.churchIncome.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ChurchIncomes and only return the `id`
     * const churchIncomeWithIdOnly = await prisma.churchIncome.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ChurchIncomeUpdateManyAndReturnArgs>(args: SelectSubset<T, ChurchIncomeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchIncomePayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one ChurchIncome.
     * @param {ChurchIncomeUpsertArgs} args - Arguments to update or create a ChurchIncome.
     * @example
     * // Update or create a ChurchIncome
     * const churchIncome = await prisma.churchIncome.upsert({
     *   create: {
     *     // ... data to create a ChurchIncome
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ChurchIncome we want to update
     *   }
     * })
     */
    upsert<T extends ChurchIncomeUpsertArgs>(args: SelectSubset<T, ChurchIncomeUpsertArgs<ExtArgs>>): Prisma__ChurchIncomeClient<$Result.GetResult<Prisma.$ChurchIncomePayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of ChurchIncomes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchIncomeCountArgs} args - Arguments to filter ChurchIncomes to count.
     * @example
     * // Count the number of ChurchIncomes
     * const count = await prisma.churchIncome.count({
     *   where: {
     *     // ... the filter for the ChurchIncomes we want to count
     *   }
     * })
    **/
    count<T extends ChurchIncomeCountArgs>(
      args?: Subset<T, ChurchIncomeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChurchIncomeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ChurchIncome.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchIncomeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChurchIncomeAggregateArgs>(args: Subset<T, ChurchIncomeAggregateArgs>): Prisma.PrismaPromise<GetChurchIncomeAggregateType<T>>

    /**
     * Group by ChurchIncome.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchIncomeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ChurchIncomeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ChurchIncomeGroupByArgs['orderBy'] }
        : { orderBy?: ChurchIncomeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ChurchIncomeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChurchIncomeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ChurchIncome model
   */
  readonly fields: ChurchIncomeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ChurchIncome.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ChurchIncomeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    churchIncomeTypeIdRel<T extends ChurchIncomeTypeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ChurchIncomeTypeDefaultArgs<ExtArgs>>): Prisma__ChurchIncomeTypeClient<$Result.GetResult<Prisma.$ChurchIncomeTypePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    churchIncomeCreateByRel<T extends ChurchIncome$churchIncomeCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, ChurchIncome$churchIncomeCreateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    churchIncomeUpdateByRel<T extends ChurchIncome$churchIncomeUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, ChurchIncome$churchIncomeUpdateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ChurchIncome model
   */ 
  interface ChurchIncomeFieldRefs {
    readonly id: FieldRef<"ChurchIncome", 'BigInt'>
    readonly incomeTypeId: FieldRef<"ChurchIncome", 'BigInt'>
    readonly detail: FieldRef<"ChurchIncome", 'String'>
    readonly funds: FieldRef<"ChurchIncome", 'BigInt'>
    readonly date: FieldRef<"ChurchIncome", 'DateTime'>
    readonly deleted: FieldRef<"ChurchIncome", 'Boolean'>
    readonly createAt: FieldRef<"ChurchIncome", 'DateTime'>
    readonly createBy: FieldRef<"ChurchIncome", 'BigInt'>
    readonly updatedAt: FieldRef<"ChurchIncome", 'DateTime'>
    readonly updatedBy: FieldRef<"ChurchIncome", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * ChurchIncome findUnique
   */
  export type ChurchIncomeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncome
     */
    select?: ChurchIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncome
     */
    omit?: ChurchIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeInclude<ExtArgs> | null
    /**
     * Filter, which ChurchIncome to fetch.
     */
    where: ChurchIncomeWhereUniqueInput
  }

  /**
   * ChurchIncome findUniqueOrThrow
   */
  export type ChurchIncomeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncome
     */
    select?: ChurchIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncome
     */
    omit?: ChurchIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeInclude<ExtArgs> | null
    /**
     * Filter, which ChurchIncome to fetch.
     */
    where: ChurchIncomeWhereUniqueInput
  }

  /**
   * ChurchIncome findFirst
   */
  export type ChurchIncomeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncome
     */
    select?: ChurchIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncome
     */
    omit?: ChurchIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeInclude<ExtArgs> | null
    /**
     * Filter, which ChurchIncome to fetch.
     */
    where?: ChurchIncomeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChurchIncomes to fetch.
     */
    orderBy?: ChurchIncomeOrderByWithRelationInput | ChurchIncomeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChurchIncomes.
     */
    cursor?: ChurchIncomeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChurchIncomes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChurchIncomes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChurchIncomes.
     */
    distinct?: ChurchIncomeScalarFieldEnum | ChurchIncomeScalarFieldEnum[]
  }

  /**
   * ChurchIncome findFirstOrThrow
   */
  export type ChurchIncomeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncome
     */
    select?: ChurchIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncome
     */
    omit?: ChurchIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeInclude<ExtArgs> | null
    /**
     * Filter, which ChurchIncome to fetch.
     */
    where?: ChurchIncomeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChurchIncomes to fetch.
     */
    orderBy?: ChurchIncomeOrderByWithRelationInput | ChurchIncomeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChurchIncomes.
     */
    cursor?: ChurchIncomeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChurchIncomes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChurchIncomes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChurchIncomes.
     */
    distinct?: ChurchIncomeScalarFieldEnum | ChurchIncomeScalarFieldEnum[]
  }

  /**
   * ChurchIncome findMany
   */
  export type ChurchIncomeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncome
     */
    select?: ChurchIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncome
     */
    omit?: ChurchIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeInclude<ExtArgs> | null
    /**
     * Filter, which ChurchIncomes to fetch.
     */
    where?: ChurchIncomeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChurchIncomes to fetch.
     */
    orderBy?: ChurchIncomeOrderByWithRelationInput | ChurchIncomeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ChurchIncomes.
     */
    cursor?: ChurchIncomeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChurchIncomes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChurchIncomes.
     */
    skip?: number
    distinct?: ChurchIncomeScalarFieldEnum | ChurchIncomeScalarFieldEnum[]
  }

  /**
   * ChurchIncome create
   */
  export type ChurchIncomeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncome
     */
    select?: ChurchIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncome
     */
    omit?: ChurchIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeInclude<ExtArgs> | null
    /**
     * The data needed to create a ChurchIncome.
     */
    data: XOR<ChurchIncomeCreateInput, ChurchIncomeUncheckedCreateInput>
  }

  /**
   * ChurchIncome createMany
   */
  export type ChurchIncomeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ChurchIncomes.
     */
    data: ChurchIncomeCreateManyInput | ChurchIncomeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ChurchIncome createManyAndReturn
   */
  export type ChurchIncomeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncome
     */
    select?: ChurchIncomeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncome
     */
    omit?: ChurchIncomeOmit<ExtArgs> | null
    /**
     * The data used to create many ChurchIncomes.
     */
    data: ChurchIncomeCreateManyInput | ChurchIncomeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ChurchIncome update
   */
  export type ChurchIncomeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncome
     */
    select?: ChurchIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncome
     */
    omit?: ChurchIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeInclude<ExtArgs> | null
    /**
     * The data needed to update a ChurchIncome.
     */
    data: XOR<ChurchIncomeUpdateInput, ChurchIncomeUncheckedUpdateInput>
    /**
     * Choose, which ChurchIncome to update.
     */
    where: ChurchIncomeWhereUniqueInput
  }

  /**
   * ChurchIncome updateMany
   */
  export type ChurchIncomeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ChurchIncomes.
     */
    data: XOR<ChurchIncomeUpdateManyMutationInput, ChurchIncomeUncheckedUpdateManyInput>
    /**
     * Filter which ChurchIncomes to update
     */
    where?: ChurchIncomeWhereInput
    /**
     * Limit how many ChurchIncomes to update.
     */
    limit?: number
  }

  /**
   * ChurchIncome updateManyAndReturn
   */
  export type ChurchIncomeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncome
     */
    select?: ChurchIncomeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncome
     */
    omit?: ChurchIncomeOmit<ExtArgs> | null
    /**
     * The data used to update ChurchIncomes.
     */
    data: XOR<ChurchIncomeUpdateManyMutationInput, ChurchIncomeUncheckedUpdateManyInput>
    /**
     * Filter which ChurchIncomes to update
     */
    where?: ChurchIncomeWhereInput
    /**
     * Limit how many ChurchIncomes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ChurchIncome upsert
   */
  export type ChurchIncomeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncome
     */
    select?: ChurchIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncome
     */
    omit?: ChurchIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeInclude<ExtArgs> | null
    /**
     * The filter to search for the ChurchIncome to update in case it exists.
     */
    where: ChurchIncomeWhereUniqueInput
    /**
     * In case the ChurchIncome found by the `where` argument doesn't exist, create a new ChurchIncome with this data.
     */
    create: XOR<ChurchIncomeCreateInput, ChurchIncomeUncheckedCreateInput>
    /**
     * In case the ChurchIncome was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ChurchIncomeUpdateInput, ChurchIncomeUncheckedUpdateInput>
  }

  /**
   * ChurchIncome delete
   */
  export type ChurchIncomeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncome
     */
    select?: ChurchIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncome
     */
    omit?: ChurchIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeInclude<ExtArgs> | null
    /**
     * Filter which ChurchIncome to delete.
     */
    where: ChurchIncomeWhereUniqueInput
  }

  /**
   * ChurchIncome deleteMany
   */
  export type ChurchIncomeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChurchIncomes to delete
     */
    where?: ChurchIncomeWhereInput
    /**
     * Limit how many ChurchIncomes to delete.
     */
    limit?: number
  }

  /**
   * ChurchIncome.churchIncomeCreateByRel
   */
  export type ChurchIncome$churchIncomeCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ChurchIncome.churchIncomeUpdateByRel
   */
  export type ChurchIncome$churchIncomeUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ChurchIncome without action
   */
  export type ChurchIncomeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncome
     */
    select?: ChurchIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncome
     */
    omit?: ChurchIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeInclude<ExtArgs> | null
  }


  /**
   * Model ChurchIncomeHistory
   */

  export type AggregateChurchIncomeHistory = {
    _count: ChurchIncomeHistoryCountAggregateOutputType | null
    _avg: ChurchIncomeHistoryAvgAggregateOutputType | null
    _sum: ChurchIncomeHistorySumAggregateOutputType | null
    _min: ChurchIncomeHistoryMinAggregateOutputType | null
    _max: ChurchIncomeHistoryMaxAggregateOutputType | null
  }

  export type ChurchIncomeHistoryAvgAggregateOutputType = {
    revId: number | null
    id: number | null
    incomeTypeId: number | null
    funds: number | null
    createBy: number | null
    updatedBy: number | null
  }

  export type ChurchIncomeHistorySumAggregateOutputType = {
    revId: bigint | null
    id: bigint | null
    incomeTypeId: bigint | null
    funds: bigint | null
    createBy: bigint | null
    updatedBy: bigint | null
  }

  export type ChurchIncomeHistoryMinAggregateOutputType = {
    revId: bigint | null
    id: bigint | null
    incomeTypeId: bigint | null
    detail: string | null
    funds: bigint | null
    date: Date | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type ChurchIncomeHistoryMaxAggregateOutputType = {
    revId: bigint | null
    id: bigint | null
    incomeTypeId: bigint | null
    detail: string | null
    funds: bigint | null
    date: Date | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type ChurchIncomeHistoryCountAggregateOutputType = {
    revId: number
    id: number
    incomeTypeId: number
    detail: number
    funds: number
    date: number
    deleted: number
    createAt: number
    createBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type ChurchIncomeHistoryAvgAggregateInputType = {
    revId?: true
    id?: true
    incomeTypeId?: true
    funds?: true
    createBy?: true
    updatedBy?: true
  }

  export type ChurchIncomeHistorySumAggregateInputType = {
    revId?: true
    id?: true
    incomeTypeId?: true
    funds?: true
    createBy?: true
    updatedBy?: true
  }

  export type ChurchIncomeHistoryMinAggregateInputType = {
    revId?: true
    id?: true
    incomeTypeId?: true
    detail?: true
    funds?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type ChurchIncomeHistoryMaxAggregateInputType = {
    revId?: true
    id?: true
    incomeTypeId?: true
    detail?: true
    funds?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type ChurchIncomeHistoryCountAggregateInputType = {
    revId?: true
    id?: true
    incomeTypeId?: true
    detail?: true
    funds?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type ChurchIncomeHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChurchIncomeHistory to aggregate.
     */
    where?: ChurchIncomeHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChurchIncomeHistories to fetch.
     */
    orderBy?: ChurchIncomeHistoryOrderByWithRelationInput | ChurchIncomeHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ChurchIncomeHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChurchIncomeHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChurchIncomeHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ChurchIncomeHistories
    **/
    _count?: true | ChurchIncomeHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ChurchIncomeHistoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ChurchIncomeHistorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChurchIncomeHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChurchIncomeHistoryMaxAggregateInputType
  }

  export type GetChurchIncomeHistoryAggregateType<T extends ChurchIncomeHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregateChurchIncomeHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChurchIncomeHistory[P]>
      : GetScalarType<T[P], AggregateChurchIncomeHistory[P]>
  }




  export type ChurchIncomeHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChurchIncomeHistoryWhereInput
    orderBy?: ChurchIncomeHistoryOrderByWithAggregationInput | ChurchIncomeHistoryOrderByWithAggregationInput[]
    by: ChurchIncomeHistoryScalarFieldEnum[] | ChurchIncomeHistoryScalarFieldEnum
    having?: ChurchIncomeHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChurchIncomeHistoryCountAggregateInputType | true
    _avg?: ChurchIncomeHistoryAvgAggregateInputType
    _sum?: ChurchIncomeHistorySumAggregateInputType
    _min?: ChurchIncomeHistoryMinAggregateInputType
    _max?: ChurchIncomeHistoryMaxAggregateInputType
  }

  export type ChurchIncomeHistoryGroupByOutputType = {
    revId: bigint
    id: bigint
    incomeTypeId: bigint
    detail: string | null
    funds: bigint
    date: Date
    deleted: boolean
    createAt: Date
    createBy: bigint | null
    updatedAt: Date
    updatedBy: bigint | null
    _count: ChurchIncomeHistoryCountAggregateOutputType | null
    _avg: ChurchIncomeHistoryAvgAggregateOutputType | null
    _sum: ChurchIncomeHistorySumAggregateOutputType | null
    _min: ChurchIncomeHistoryMinAggregateOutputType | null
    _max: ChurchIncomeHistoryMaxAggregateOutputType | null
  }

  type GetChurchIncomeHistoryGroupByPayload<T extends ChurchIncomeHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ChurchIncomeHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChurchIncomeHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChurchIncomeHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], ChurchIncomeHistoryGroupByOutputType[P]>
        }
      >
    >


  export type ChurchIncomeHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    revId?: boolean
    id?: boolean
    incomeTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    churchIncomeTypeHistoryIdRel?: boolean | ChurchIncomeTypeDefaultArgs<ExtArgs>
    churchIncomeHistoryCreateByRel?: boolean | ChurchIncomeHistory$churchIncomeHistoryCreateByRelArgs<ExtArgs>
    churchIncomeHistoryUpdateByRel?: boolean | ChurchIncomeHistory$churchIncomeHistoryUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["churchIncomeHistory"]>

  export type ChurchIncomeHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    revId?: boolean
    id?: boolean
    incomeTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    churchIncomeTypeHistoryIdRel?: boolean | ChurchIncomeTypeDefaultArgs<ExtArgs>
    churchIncomeHistoryCreateByRel?: boolean | ChurchIncomeHistory$churchIncomeHistoryCreateByRelArgs<ExtArgs>
    churchIncomeHistoryUpdateByRel?: boolean | ChurchIncomeHistory$churchIncomeHistoryUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["churchIncomeHistory"]>

  export type ChurchIncomeHistorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    revId?: boolean
    id?: boolean
    incomeTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    churchIncomeTypeHistoryIdRel?: boolean | ChurchIncomeTypeDefaultArgs<ExtArgs>
    churchIncomeHistoryCreateByRel?: boolean | ChurchIncomeHistory$churchIncomeHistoryCreateByRelArgs<ExtArgs>
    churchIncomeHistoryUpdateByRel?: boolean | ChurchIncomeHistory$churchIncomeHistoryUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["churchIncomeHistory"]>

  export type ChurchIncomeHistorySelectScalar = {
    revId?: boolean
    id?: boolean
    incomeTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type ChurchIncomeHistoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"revId" | "id" | "incomeTypeId" | "detail" | "funds" | "date" | "deleted" | "createAt" | "createBy" | "updatedAt" | "updatedBy", ExtArgs["result"]["churchIncomeHistory"]>
  export type ChurchIncomeHistoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    churchIncomeTypeHistoryIdRel?: boolean | ChurchIncomeTypeDefaultArgs<ExtArgs>
    churchIncomeHistoryCreateByRel?: boolean | ChurchIncomeHistory$churchIncomeHistoryCreateByRelArgs<ExtArgs>
    churchIncomeHistoryUpdateByRel?: boolean | ChurchIncomeHistory$churchIncomeHistoryUpdateByRelArgs<ExtArgs>
  }
  export type ChurchIncomeHistoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    churchIncomeTypeHistoryIdRel?: boolean | ChurchIncomeTypeDefaultArgs<ExtArgs>
    churchIncomeHistoryCreateByRel?: boolean | ChurchIncomeHistory$churchIncomeHistoryCreateByRelArgs<ExtArgs>
    churchIncomeHistoryUpdateByRel?: boolean | ChurchIncomeHistory$churchIncomeHistoryUpdateByRelArgs<ExtArgs>
  }
  export type ChurchIncomeHistoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    churchIncomeTypeHistoryIdRel?: boolean | ChurchIncomeTypeDefaultArgs<ExtArgs>
    churchIncomeHistoryCreateByRel?: boolean | ChurchIncomeHistory$churchIncomeHistoryCreateByRelArgs<ExtArgs>
    churchIncomeHistoryUpdateByRel?: boolean | ChurchIncomeHistory$churchIncomeHistoryUpdateByRelArgs<ExtArgs>
  }

  export type $ChurchIncomeHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ChurchIncomeHistory"
    objects: {
      churchIncomeTypeHistoryIdRel: Prisma.$ChurchIncomeTypePayload<ExtArgs>
      churchIncomeHistoryCreateByRel: Prisma.$UserPayload<ExtArgs> | null
      churchIncomeHistoryUpdateByRel: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      revId: bigint
      id: bigint
      incomeTypeId: bigint
      detail: string | null
      funds: bigint
      date: Date
      deleted: boolean
      createAt: Date
      createBy: bigint | null
      updatedAt: Date
      updatedBy: bigint | null
    }, ExtArgs["result"]["churchIncomeHistory"]>
    composites: {}
  }

  type ChurchIncomeHistoryGetPayload<S extends boolean | null | undefined | ChurchIncomeHistoryDefaultArgs> = $Result.GetResult<Prisma.$ChurchIncomeHistoryPayload, S>

  type ChurchIncomeHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ChurchIncomeHistoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ChurchIncomeHistoryCountAggregateInputType | true
    }

  export interface ChurchIncomeHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ChurchIncomeHistory'], meta: { name: 'ChurchIncomeHistory' } }
    /**
     * Find zero or one ChurchIncomeHistory that matches the filter.
     * @param {ChurchIncomeHistoryFindUniqueArgs} args - Arguments to find a ChurchIncomeHistory
     * @example
     * // Get one ChurchIncomeHistory
     * const churchIncomeHistory = await prisma.churchIncomeHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ChurchIncomeHistoryFindUniqueArgs>(args: SelectSubset<T, ChurchIncomeHistoryFindUniqueArgs<ExtArgs>>): Prisma__ChurchIncomeHistoryClient<$Result.GetResult<Prisma.$ChurchIncomeHistoryPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one ChurchIncomeHistory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ChurchIncomeHistoryFindUniqueOrThrowArgs} args - Arguments to find a ChurchIncomeHistory
     * @example
     * // Get one ChurchIncomeHistory
     * const churchIncomeHistory = await prisma.churchIncomeHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ChurchIncomeHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, ChurchIncomeHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ChurchIncomeHistoryClient<$Result.GetResult<Prisma.$ChurchIncomeHistoryPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first ChurchIncomeHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchIncomeHistoryFindFirstArgs} args - Arguments to find a ChurchIncomeHistory
     * @example
     * // Get one ChurchIncomeHistory
     * const churchIncomeHistory = await prisma.churchIncomeHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ChurchIncomeHistoryFindFirstArgs>(args?: SelectSubset<T, ChurchIncomeHistoryFindFirstArgs<ExtArgs>>): Prisma__ChurchIncomeHistoryClient<$Result.GetResult<Prisma.$ChurchIncomeHistoryPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first ChurchIncomeHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchIncomeHistoryFindFirstOrThrowArgs} args - Arguments to find a ChurchIncomeHistory
     * @example
     * // Get one ChurchIncomeHistory
     * const churchIncomeHistory = await prisma.churchIncomeHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ChurchIncomeHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, ChurchIncomeHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__ChurchIncomeHistoryClient<$Result.GetResult<Prisma.$ChurchIncomeHistoryPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more ChurchIncomeHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchIncomeHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ChurchIncomeHistories
     * const churchIncomeHistories = await prisma.churchIncomeHistory.findMany()
     * 
     * // Get first 10 ChurchIncomeHistories
     * const churchIncomeHistories = await prisma.churchIncomeHistory.findMany({ take: 10 })
     * 
     * // Only select the `revId`
     * const churchIncomeHistoryWithRevIdOnly = await prisma.churchIncomeHistory.findMany({ select: { revId: true } })
     * 
     */
    findMany<T extends ChurchIncomeHistoryFindManyArgs>(args?: SelectSubset<T, ChurchIncomeHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchIncomeHistoryPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a ChurchIncomeHistory.
     * @param {ChurchIncomeHistoryCreateArgs} args - Arguments to create a ChurchIncomeHistory.
     * @example
     * // Create one ChurchIncomeHistory
     * const ChurchIncomeHistory = await prisma.churchIncomeHistory.create({
     *   data: {
     *     // ... data to create a ChurchIncomeHistory
     *   }
     * })
     * 
     */
    create<T extends ChurchIncomeHistoryCreateArgs>(args: SelectSubset<T, ChurchIncomeHistoryCreateArgs<ExtArgs>>): Prisma__ChurchIncomeHistoryClient<$Result.GetResult<Prisma.$ChurchIncomeHistoryPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many ChurchIncomeHistories.
     * @param {ChurchIncomeHistoryCreateManyArgs} args - Arguments to create many ChurchIncomeHistories.
     * @example
     * // Create many ChurchIncomeHistories
     * const churchIncomeHistory = await prisma.churchIncomeHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ChurchIncomeHistoryCreateManyArgs>(args?: SelectSubset<T, ChurchIncomeHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ChurchIncomeHistories and returns the data saved in the database.
     * @param {ChurchIncomeHistoryCreateManyAndReturnArgs} args - Arguments to create many ChurchIncomeHistories.
     * @example
     * // Create many ChurchIncomeHistories
     * const churchIncomeHistory = await prisma.churchIncomeHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ChurchIncomeHistories and only return the `revId`
     * const churchIncomeHistoryWithRevIdOnly = await prisma.churchIncomeHistory.createManyAndReturn({
     *   select: { revId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ChurchIncomeHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, ChurchIncomeHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchIncomeHistoryPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a ChurchIncomeHistory.
     * @param {ChurchIncomeHistoryDeleteArgs} args - Arguments to delete one ChurchIncomeHistory.
     * @example
     * // Delete one ChurchIncomeHistory
     * const ChurchIncomeHistory = await prisma.churchIncomeHistory.delete({
     *   where: {
     *     // ... filter to delete one ChurchIncomeHistory
     *   }
     * })
     * 
     */
    delete<T extends ChurchIncomeHistoryDeleteArgs>(args: SelectSubset<T, ChurchIncomeHistoryDeleteArgs<ExtArgs>>): Prisma__ChurchIncomeHistoryClient<$Result.GetResult<Prisma.$ChurchIncomeHistoryPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one ChurchIncomeHistory.
     * @param {ChurchIncomeHistoryUpdateArgs} args - Arguments to update one ChurchIncomeHistory.
     * @example
     * // Update one ChurchIncomeHistory
     * const churchIncomeHistory = await prisma.churchIncomeHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ChurchIncomeHistoryUpdateArgs>(args: SelectSubset<T, ChurchIncomeHistoryUpdateArgs<ExtArgs>>): Prisma__ChurchIncomeHistoryClient<$Result.GetResult<Prisma.$ChurchIncomeHistoryPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more ChurchIncomeHistories.
     * @param {ChurchIncomeHistoryDeleteManyArgs} args - Arguments to filter ChurchIncomeHistories to delete.
     * @example
     * // Delete a few ChurchIncomeHistories
     * const { count } = await prisma.churchIncomeHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ChurchIncomeHistoryDeleteManyArgs>(args?: SelectSubset<T, ChurchIncomeHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChurchIncomeHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchIncomeHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ChurchIncomeHistories
     * const churchIncomeHistory = await prisma.churchIncomeHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ChurchIncomeHistoryUpdateManyArgs>(args: SelectSubset<T, ChurchIncomeHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChurchIncomeHistories and returns the data updated in the database.
     * @param {ChurchIncomeHistoryUpdateManyAndReturnArgs} args - Arguments to update many ChurchIncomeHistories.
     * @example
     * // Update many ChurchIncomeHistories
     * const churchIncomeHistory = await prisma.churchIncomeHistory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ChurchIncomeHistories and only return the `revId`
     * const churchIncomeHistoryWithRevIdOnly = await prisma.churchIncomeHistory.updateManyAndReturn({
     *   select: { revId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ChurchIncomeHistoryUpdateManyAndReturnArgs>(args: SelectSubset<T, ChurchIncomeHistoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchIncomeHistoryPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one ChurchIncomeHistory.
     * @param {ChurchIncomeHistoryUpsertArgs} args - Arguments to update or create a ChurchIncomeHistory.
     * @example
     * // Update or create a ChurchIncomeHistory
     * const churchIncomeHistory = await prisma.churchIncomeHistory.upsert({
     *   create: {
     *     // ... data to create a ChurchIncomeHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ChurchIncomeHistory we want to update
     *   }
     * })
     */
    upsert<T extends ChurchIncomeHistoryUpsertArgs>(args: SelectSubset<T, ChurchIncomeHistoryUpsertArgs<ExtArgs>>): Prisma__ChurchIncomeHistoryClient<$Result.GetResult<Prisma.$ChurchIncomeHistoryPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of ChurchIncomeHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchIncomeHistoryCountArgs} args - Arguments to filter ChurchIncomeHistories to count.
     * @example
     * // Count the number of ChurchIncomeHistories
     * const count = await prisma.churchIncomeHistory.count({
     *   where: {
     *     // ... the filter for the ChurchIncomeHistories we want to count
     *   }
     * })
    **/
    count<T extends ChurchIncomeHistoryCountArgs>(
      args?: Subset<T, ChurchIncomeHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChurchIncomeHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ChurchIncomeHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchIncomeHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChurchIncomeHistoryAggregateArgs>(args: Subset<T, ChurchIncomeHistoryAggregateArgs>): Prisma.PrismaPromise<GetChurchIncomeHistoryAggregateType<T>>

    /**
     * Group by ChurchIncomeHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchIncomeHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ChurchIncomeHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ChurchIncomeHistoryGroupByArgs['orderBy'] }
        : { orderBy?: ChurchIncomeHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ChurchIncomeHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChurchIncomeHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ChurchIncomeHistory model
   */
  readonly fields: ChurchIncomeHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ChurchIncomeHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ChurchIncomeHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    churchIncomeTypeHistoryIdRel<T extends ChurchIncomeTypeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ChurchIncomeTypeDefaultArgs<ExtArgs>>): Prisma__ChurchIncomeTypeClient<$Result.GetResult<Prisma.$ChurchIncomeTypePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    churchIncomeHistoryCreateByRel<T extends ChurchIncomeHistory$churchIncomeHistoryCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, ChurchIncomeHistory$churchIncomeHistoryCreateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    churchIncomeHistoryUpdateByRel<T extends ChurchIncomeHistory$churchIncomeHistoryUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, ChurchIncomeHistory$churchIncomeHistoryUpdateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ChurchIncomeHistory model
   */ 
  interface ChurchIncomeHistoryFieldRefs {
    readonly revId: FieldRef<"ChurchIncomeHistory", 'BigInt'>
    readonly id: FieldRef<"ChurchIncomeHistory", 'BigInt'>
    readonly incomeTypeId: FieldRef<"ChurchIncomeHistory", 'BigInt'>
    readonly detail: FieldRef<"ChurchIncomeHistory", 'String'>
    readonly funds: FieldRef<"ChurchIncomeHistory", 'BigInt'>
    readonly date: FieldRef<"ChurchIncomeHistory", 'DateTime'>
    readonly deleted: FieldRef<"ChurchIncomeHistory", 'Boolean'>
    readonly createAt: FieldRef<"ChurchIncomeHistory", 'DateTime'>
    readonly createBy: FieldRef<"ChurchIncomeHistory", 'BigInt'>
    readonly updatedAt: FieldRef<"ChurchIncomeHistory", 'DateTime'>
    readonly updatedBy: FieldRef<"ChurchIncomeHistory", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * ChurchIncomeHistory findUnique
   */
  export type ChurchIncomeHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeHistory
     */
    select?: ChurchIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeHistory
     */
    omit?: ChurchIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeHistoryInclude<ExtArgs> | null
    /**
     * Filter, which ChurchIncomeHistory to fetch.
     */
    where: ChurchIncomeHistoryWhereUniqueInput
  }

  /**
   * ChurchIncomeHistory findUniqueOrThrow
   */
  export type ChurchIncomeHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeHistory
     */
    select?: ChurchIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeHistory
     */
    omit?: ChurchIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeHistoryInclude<ExtArgs> | null
    /**
     * Filter, which ChurchIncomeHistory to fetch.
     */
    where: ChurchIncomeHistoryWhereUniqueInput
  }

  /**
   * ChurchIncomeHistory findFirst
   */
  export type ChurchIncomeHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeHistory
     */
    select?: ChurchIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeHistory
     */
    omit?: ChurchIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeHistoryInclude<ExtArgs> | null
    /**
     * Filter, which ChurchIncomeHistory to fetch.
     */
    where?: ChurchIncomeHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChurchIncomeHistories to fetch.
     */
    orderBy?: ChurchIncomeHistoryOrderByWithRelationInput | ChurchIncomeHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChurchIncomeHistories.
     */
    cursor?: ChurchIncomeHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChurchIncomeHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChurchIncomeHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChurchIncomeHistories.
     */
    distinct?: ChurchIncomeHistoryScalarFieldEnum | ChurchIncomeHistoryScalarFieldEnum[]
  }

  /**
   * ChurchIncomeHistory findFirstOrThrow
   */
  export type ChurchIncomeHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeHistory
     */
    select?: ChurchIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeHistory
     */
    omit?: ChurchIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeHistoryInclude<ExtArgs> | null
    /**
     * Filter, which ChurchIncomeHistory to fetch.
     */
    where?: ChurchIncomeHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChurchIncomeHistories to fetch.
     */
    orderBy?: ChurchIncomeHistoryOrderByWithRelationInput | ChurchIncomeHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChurchIncomeHistories.
     */
    cursor?: ChurchIncomeHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChurchIncomeHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChurchIncomeHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChurchIncomeHistories.
     */
    distinct?: ChurchIncomeHistoryScalarFieldEnum | ChurchIncomeHistoryScalarFieldEnum[]
  }

  /**
   * ChurchIncomeHistory findMany
   */
  export type ChurchIncomeHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeHistory
     */
    select?: ChurchIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeHistory
     */
    omit?: ChurchIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeHistoryInclude<ExtArgs> | null
    /**
     * Filter, which ChurchIncomeHistories to fetch.
     */
    where?: ChurchIncomeHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChurchIncomeHistories to fetch.
     */
    orderBy?: ChurchIncomeHistoryOrderByWithRelationInput | ChurchIncomeHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ChurchIncomeHistories.
     */
    cursor?: ChurchIncomeHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChurchIncomeHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChurchIncomeHistories.
     */
    skip?: number
    distinct?: ChurchIncomeHistoryScalarFieldEnum | ChurchIncomeHistoryScalarFieldEnum[]
  }

  /**
   * ChurchIncomeHistory create
   */
  export type ChurchIncomeHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeHistory
     */
    select?: ChurchIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeHistory
     */
    omit?: ChurchIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeHistoryInclude<ExtArgs> | null
    /**
     * The data needed to create a ChurchIncomeHistory.
     */
    data: XOR<ChurchIncomeHistoryCreateInput, ChurchIncomeHistoryUncheckedCreateInput>
  }

  /**
   * ChurchIncomeHistory createMany
   */
  export type ChurchIncomeHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ChurchIncomeHistories.
     */
    data: ChurchIncomeHistoryCreateManyInput | ChurchIncomeHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ChurchIncomeHistory createManyAndReturn
   */
  export type ChurchIncomeHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeHistory
     */
    select?: ChurchIncomeHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeHistory
     */
    omit?: ChurchIncomeHistoryOmit<ExtArgs> | null
    /**
     * The data used to create many ChurchIncomeHistories.
     */
    data: ChurchIncomeHistoryCreateManyInput | ChurchIncomeHistoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeHistoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ChurchIncomeHistory update
   */
  export type ChurchIncomeHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeHistory
     */
    select?: ChurchIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeHistory
     */
    omit?: ChurchIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeHistoryInclude<ExtArgs> | null
    /**
     * The data needed to update a ChurchIncomeHistory.
     */
    data: XOR<ChurchIncomeHistoryUpdateInput, ChurchIncomeHistoryUncheckedUpdateInput>
    /**
     * Choose, which ChurchIncomeHistory to update.
     */
    where: ChurchIncomeHistoryWhereUniqueInput
  }

  /**
   * ChurchIncomeHistory updateMany
   */
  export type ChurchIncomeHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ChurchIncomeHistories.
     */
    data: XOR<ChurchIncomeHistoryUpdateManyMutationInput, ChurchIncomeHistoryUncheckedUpdateManyInput>
    /**
     * Filter which ChurchIncomeHistories to update
     */
    where?: ChurchIncomeHistoryWhereInput
    /**
     * Limit how many ChurchIncomeHistories to update.
     */
    limit?: number
  }

  /**
   * ChurchIncomeHistory updateManyAndReturn
   */
  export type ChurchIncomeHistoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeHistory
     */
    select?: ChurchIncomeHistorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeHistory
     */
    omit?: ChurchIncomeHistoryOmit<ExtArgs> | null
    /**
     * The data used to update ChurchIncomeHistories.
     */
    data: XOR<ChurchIncomeHistoryUpdateManyMutationInput, ChurchIncomeHistoryUncheckedUpdateManyInput>
    /**
     * Filter which ChurchIncomeHistories to update
     */
    where?: ChurchIncomeHistoryWhereInput
    /**
     * Limit how many ChurchIncomeHistories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeHistoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ChurchIncomeHistory upsert
   */
  export type ChurchIncomeHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeHistory
     */
    select?: ChurchIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeHistory
     */
    omit?: ChurchIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeHistoryInclude<ExtArgs> | null
    /**
     * The filter to search for the ChurchIncomeHistory to update in case it exists.
     */
    where: ChurchIncomeHistoryWhereUniqueInput
    /**
     * In case the ChurchIncomeHistory found by the `where` argument doesn't exist, create a new ChurchIncomeHistory with this data.
     */
    create: XOR<ChurchIncomeHistoryCreateInput, ChurchIncomeHistoryUncheckedCreateInput>
    /**
     * In case the ChurchIncomeHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ChurchIncomeHistoryUpdateInput, ChurchIncomeHistoryUncheckedUpdateInput>
  }

  /**
   * ChurchIncomeHistory delete
   */
  export type ChurchIncomeHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeHistory
     */
    select?: ChurchIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeHistory
     */
    omit?: ChurchIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeHistoryInclude<ExtArgs> | null
    /**
     * Filter which ChurchIncomeHistory to delete.
     */
    where: ChurchIncomeHistoryWhereUniqueInput
  }

  /**
   * ChurchIncomeHistory deleteMany
   */
  export type ChurchIncomeHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChurchIncomeHistories to delete
     */
    where?: ChurchIncomeHistoryWhereInput
    /**
     * Limit how many ChurchIncomeHistories to delete.
     */
    limit?: number
  }

  /**
   * ChurchIncomeHistory.churchIncomeHistoryCreateByRel
   */
  export type ChurchIncomeHistory$churchIncomeHistoryCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ChurchIncomeHistory.churchIncomeHistoryUpdateByRel
   */
  export type ChurchIncomeHistory$churchIncomeHistoryUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ChurchIncomeHistory without action
   */
  export type ChurchIncomeHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeHistory
     */
    select?: ChurchIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeHistory
     */
    omit?: ChurchIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeHistoryInclude<ExtArgs> | null
  }


  /**
   * Model ChurchIncomeType
   */

  export type AggregateChurchIncomeType = {
    _count: ChurchIncomeTypeCountAggregateOutputType | null
    _avg: ChurchIncomeTypeAvgAggregateOutputType | null
    _sum: ChurchIncomeTypeSumAggregateOutputType | null
    _min: ChurchIncomeTypeMinAggregateOutputType | null
    _max: ChurchIncomeTypeMaxAggregateOutputType | null
  }

  export type ChurchIncomeTypeAvgAggregateOutputType = {
    id: number | null
    createBy: number | null
    updatedBy: number | null
  }

  export type ChurchIncomeTypeSumAggregateOutputType = {
    id: bigint | null
    createBy: bigint | null
    updatedBy: bigint | null
  }

  export type ChurchIncomeTypeMinAggregateOutputType = {
    id: bigint | null
    incomeTypeName: string | null
    code: string | null
    description: string | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type ChurchIncomeTypeMaxAggregateOutputType = {
    id: bigint | null
    incomeTypeName: string | null
    code: string | null
    description: string | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type ChurchIncomeTypeCountAggregateOutputType = {
    id: number
    incomeTypeName: number
    code: number
    description: number
    deleted: number
    createAt: number
    createBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type ChurchIncomeTypeAvgAggregateInputType = {
    id?: true
    createBy?: true
    updatedBy?: true
  }

  export type ChurchIncomeTypeSumAggregateInputType = {
    id?: true
    createBy?: true
    updatedBy?: true
  }

  export type ChurchIncomeTypeMinAggregateInputType = {
    id?: true
    incomeTypeName?: true
    code?: true
    description?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type ChurchIncomeTypeMaxAggregateInputType = {
    id?: true
    incomeTypeName?: true
    code?: true
    description?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type ChurchIncomeTypeCountAggregateInputType = {
    id?: true
    incomeTypeName?: true
    code?: true
    description?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type ChurchIncomeTypeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChurchIncomeType to aggregate.
     */
    where?: ChurchIncomeTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChurchIncomeTypes to fetch.
     */
    orderBy?: ChurchIncomeTypeOrderByWithRelationInput | ChurchIncomeTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ChurchIncomeTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChurchIncomeTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChurchIncomeTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ChurchIncomeTypes
    **/
    _count?: true | ChurchIncomeTypeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ChurchIncomeTypeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ChurchIncomeTypeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChurchIncomeTypeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChurchIncomeTypeMaxAggregateInputType
  }

  export type GetChurchIncomeTypeAggregateType<T extends ChurchIncomeTypeAggregateArgs> = {
        [P in keyof T & keyof AggregateChurchIncomeType]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChurchIncomeType[P]>
      : GetScalarType<T[P], AggregateChurchIncomeType[P]>
  }




  export type ChurchIncomeTypeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChurchIncomeTypeWhereInput
    orderBy?: ChurchIncomeTypeOrderByWithAggregationInput | ChurchIncomeTypeOrderByWithAggregationInput[]
    by: ChurchIncomeTypeScalarFieldEnum[] | ChurchIncomeTypeScalarFieldEnum
    having?: ChurchIncomeTypeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChurchIncomeTypeCountAggregateInputType | true
    _avg?: ChurchIncomeTypeAvgAggregateInputType
    _sum?: ChurchIncomeTypeSumAggregateInputType
    _min?: ChurchIncomeTypeMinAggregateInputType
    _max?: ChurchIncomeTypeMaxAggregateInputType
  }

  export type ChurchIncomeTypeGroupByOutputType = {
    id: bigint
    incomeTypeName: string
    code: string
    description: string
    deleted: boolean
    createAt: Date
    createBy: bigint | null
    updatedAt: Date
    updatedBy: bigint | null
    _count: ChurchIncomeTypeCountAggregateOutputType | null
    _avg: ChurchIncomeTypeAvgAggregateOutputType | null
    _sum: ChurchIncomeTypeSumAggregateOutputType | null
    _min: ChurchIncomeTypeMinAggregateOutputType | null
    _max: ChurchIncomeTypeMaxAggregateOutputType | null
  }

  type GetChurchIncomeTypeGroupByPayload<T extends ChurchIncomeTypeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ChurchIncomeTypeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChurchIncomeTypeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChurchIncomeTypeGroupByOutputType[P]>
            : GetScalarType<T[P], ChurchIncomeTypeGroupByOutputType[P]>
        }
      >
    >


  export type ChurchIncomeTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    incomeTypeName?: boolean
    code?: boolean
    description?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    churchIncomeTypeCreateByRel?: boolean | ChurchIncomeType$churchIncomeTypeCreateByRelArgs<ExtArgs>
    churchIncomeTypeUpdateByRel?: boolean | ChurchIncomeType$churchIncomeTypeUpdateByRelArgs<ExtArgs>
    churchIncomeTypeIdRel?: boolean | ChurchIncomeType$churchIncomeTypeIdRelArgs<ExtArgs>
    churchIncomeTypeHistoryIdRel?: boolean | ChurchIncomeType$churchIncomeTypeHistoryIdRelArgs<ExtArgs>
    _count?: boolean | ChurchIncomeTypeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["churchIncomeType"]>

  export type ChurchIncomeTypeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    incomeTypeName?: boolean
    code?: boolean
    description?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    churchIncomeTypeCreateByRel?: boolean | ChurchIncomeType$churchIncomeTypeCreateByRelArgs<ExtArgs>
    churchIncomeTypeUpdateByRel?: boolean | ChurchIncomeType$churchIncomeTypeUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["churchIncomeType"]>

  export type ChurchIncomeTypeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    incomeTypeName?: boolean
    code?: boolean
    description?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    churchIncomeTypeCreateByRel?: boolean | ChurchIncomeType$churchIncomeTypeCreateByRelArgs<ExtArgs>
    churchIncomeTypeUpdateByRel?: boolean | ChurchIncomeType$churchIncomeTypeUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["churchIncomeType"]>

  export type ChurchIncomeTypeSelectScalar = {
    id?: boolean
    incomeTypeName?: boolean
    code?: boolean
    description?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type ChurchIncomeTypeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "incomeTypeName" | "code" | "description" | "deleted" | "createAt" | "createBy" | "updatedAt" | "updatedBy", ExtArgs["result"]["churchIncomeType"]>
  export type ChurchIncomeTypeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    churchIncomeTypeCreateByRel?: boolean | ChurchIncomeType$churchIncomeTypeCreateByRelArgs<ExtArgs>
    churchIncomeTypeUpdateByRel?: boolean | ChurchIncomeType$churchIncomeTypeUpdateByRelArgs<ExtArgs>
    churchIncomeTypeIdRel?: boolean | ChurchIncomeType$churchIncomeTypeIdRelArgs<ExtArgs>
    churchIncomeTypeHistoryIdRel?: boolean | ChurchIncomeType$churchIncomeTypeHistoryIdRelArgs<ExtArgs>
    _count?: boolean | ChurchIncomeTypeCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ChurchIncomeTypeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    churchIncomeTypeCreateByRel?: boolean | ChurchIncomeType$churchIncomeTypeCreateByRelArgs<ExtArgs>
    churchIncomeTypeUpdateByRel?: boolean | ChurchIncomeType$churchIncomeTypeUpdateByRelArgs<ExtArgs>
  }
  export type ChurchIncomeTypeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    churchIncomeTypeCreateByRel?: boolean | ChurchIncomeType$churchIncomeTypeCreateByRelArgs<ExtArgs>
    churchIncomeTypeUpdateByRel?: boolean | ChurchIncomeType$churchIncomeTypeUpdateByRelArgs<ExtArgs>
  }

  export type $ChurchIncomeTypePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ChurchIncomeType"
    objects: {
      churchIncomeTypeCreateByRel: Prisma.$UserPayload<ExtArgs> | null
      churchIncomeTypeUpdateByRel: Prisma.$UserPayload<ExtArgs> | null
      churchIncomeTypeIdRel: Prisma.$ChurchIncomePayload<ExtArgs>[]
      churchIncomeTypeHistoryIdRel: Prisma.$ChurchIncomeHistoryPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      incomeTypeName: string
      code: string
      description: string
      deleted: boolean
      createAt: Date
      createBy: bigint | null
      updatedAt: Date
      updatedBy: bigint | null
    }, ExtArgs["result"]["churchIncomeType"]>
    composites: {}
  }

  type ChurchIncomeTypeGetPayload<S extends boolean | null | undefined | ChurchIncomeTypeDefaultArgs> = $Result.GetResult<Prisma.$ChurchIncomeTypePayload, S>

  type ChurchIncomeTypeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ChurchIncomeTypeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ChurchIncomeTypeCountAggregateInputType | true
    }

  export interface ChurchIncomeTypeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ChurchIncomeType'], meta: { name: 'ChurchIncomeType' } }
    /**
     * Find zero or one ChurchIncomeType that matches the filter.
     * @param {ChurchIncomeTypeFindUniqueArgs} args - Arguments to find a ChurchIncomeType
     * @example
     * // Get one ChurchIncomeType
     * const churchIncomeType = await prisma.churchIncomeType.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ChurchIncomeTypeFindUniqueArgs>(args: SelectSubset<T, ChurchIncomeTypeFindUniqueArgs<ExtArgs>>): Prisma__ChurchIncomeTypeClient<$Result.GetResult<Prisma.$ChurchIncomeTypePayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one ChurchIncomeType that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ChurchIncomeTypeFindUniqueOrThrowArgs} args - Arguments to find a ChurchIncomeType
     * @example
     * // Get one ChurchIncomeType
     * const churchIncomeType = await prisma.churchIncomeType.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ChurchIncomeTypeFindUniqueOrThrowArgs>(args: SelectSubset<T, ChurchIncomeTypeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ChurchIncomeTypeClient<$Result.GetResult<Prisma.$ChurchIncomeTypePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first ChurchIncomeType that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchIncomeTypeFindFirstArgs} args - Arguments to find a ChurchIncomeType
     * @example
     * // Get one ChurchIncomeType
     * const churchIncomeType = await prisma.churchIncomeType.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ChurchIncomeTypeFindFirstArgs>(args?: SelectSubset<T, ChurchIncomeTypeFindFirstArgs<ExtArgs>>): Prisma__ChurchIncomeTypeClient<$Result.GetResult<Prisma.$ChurchIncomeTypePayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first ChurchIncomeType that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchIncomeTypeFindFirstOrThrowArgs} args - Arguments to find a ChurchIncomeType
     * @example
     * // Get one ChurchIncomeType
     * const churchIncomeType = await prisma.churchIncomeType.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ChurchIncomeTypeFindFirstOrThrowArgs>(args?: SelectSubset<T, ChurchIncomeTypeFindFirstOrThrowArgs<ExtArgs>>): Prisma__ChurchIncomeTypeClient<$Result.GetResult<Prisma.$ChurchIncomeTypePayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more ChurchIncomeTypes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchIncomeTypeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ChurchIncomeTypes
     * const churchIncomeTypes = await prisma.churchIncomeType.findMany()
     * 
     * // Get first 10 ChurchIncomeTypes
     * const churchIncomeTypes = await prisma.churchIncomeType.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const churchIncomeTypeWithIdOnly = await prisma.churchIncomeType.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ChurchIncomeTypeFindManyArgs>(args?: SelectSubset<T, ChurchIncomeTypeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchIncomeTypePayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a ChurchIncomeType.
     * @param {ChurchIncomeTypeCreateArgs} args - Arguments to create a ChurchIncomeType.
     * @example
     * // Create one ChurchIncomeType
     * const ChurchIncomeType = await prisma.churchIncomeType.create({
     *   data: {
     *     // ... data to create a ChurchIncomeType
     *   }
     * })
     * 
     */
    create<T extends ChurchIncomeTypeCreateArgs>(args: SelectSubset<T, ChurchIncomeTypeCreateArgs<ExtArgs>>): Prisma__ChurchIncomeTypeClient<$Result.GetResult<Prisma.$ChurchIncomeTypePayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many ChurchIncomeTypes.
     * @param {ChurchIncomeTypeCreateManyArgs} args - Arguments to create many ChurchIncomeTypes.
     * @example
     * // Create many ChurchIncomeTypes
     * const churchIncomeType = await prisma.churchIncomeType.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ChurchIncomeTypeCreateManyArgs>(args?: SelectSubset<T, ChurchIncomeTypeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ChurchIncomeTypes and returns the data saved in the database.
     * @param {ChurchIncomeTypeCreateManyAndReturnArgs} args - Arguments to create many ChurchIncomeTypes.
     * @example
     * // Create many ChurchIncomeTypes
     * const churchIncomeType = await prisma.churchIncomeType.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ChurchIncomeTypes and only return the `id`
     * const churchIncomeTypeWithIdOnly = await prisma.churchIncomeType.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ChurchIncomeTypeCreateManyAndReturnArgs>(args?: SelectSubset<T, ChurchIncomeTypeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchIncomeTypePayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a ChurchIncomeType.
     * @param {ChurchIncomeTypeDeleteArgs} args - Arguments to delete one ChurchIncomeType.
     * @example
     * // Delete one ChurchIncomeType
     * const ChurchIncomeType = await prisma.churchIncomeType.delete({
     *   where: {
     *     // ... filter to delete one ChurchIncomeType
     *   }
     * })
     * 
     */
    delete<T extends ChurchIncomeTypeDeleteArgs>(args: SelectSubset<T, ChurchIncomeTypeDeleteArgs<ExtArgs>>): Prisma__ChurchIncomeTypeClient<$Result.GetResult<Prisma.$ChurchIncomeTypePayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one ChurchIncomeType.
     * @param {ChurchIncomeTypeUpdateArgs} args - Arguments to update one ChurchIncomeType.
     * @example
     * // Update one ChurchIncomeType
     * const churchIncomeType = await prisma.churchIncomeType.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ChurchIncomeTypeUpdateArgs>(args: SelectSubset<T, ChurchIncomeTypeUpdateArgs<ExtArgs>>): Prisma__ChurchIncomeTypeClient<$Result.GetResult<Prisma.$ChurchIncomeTypePayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more ChurchIncomeTypes.
     * @param {ChurchIncomeTypeDeleteManyArgs} args - Arguments to filter ChurchIncomeTypes to delete.
     * @example
     * // Delete a few ChurchIncomeTypes
     * const { count } = await prisma.churchIncomeType.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ChurchIncomeTypeDeleteManyArgs>(args?: SelectSubset<T, ChurchIncomeTypeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChurchIncomeTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchIncomeTypeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ChurchIncomeTypes
     * const churchIncomeType = await prisma.churchIncomeType.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ChurchIncomeTypeUpdateManyArgs>(args: SelectSubset<T, ChurchIncomeTypeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChurchIncomeTypes and returns the data updated in the database.
     * @param {ChurchIncomeTypeUpdateManyAndReturnArgs} args - Arguments to update many ChurchIncomeTypes.
     * @example
     * // Update many ChurchIncomeTypes
     * const churchIncomeType = await prisma.churchIncomeType.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ChurchIncomeTypes and only return the `id`
     * const churchIncomeTypeWithIdOnly = await prisma.churchIncomeType.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ChurchIncomeTypeUpdateManyAndReturnArgs>(args: SelectSubset<T, ChurchIncomeTypeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchIncomeTypePayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one ChurchIncomeType.
     * @param {ChurchIncomeTypeUpsertArgs} args - Arguments to update or create a ChurchIncomeType.
     * @example
     * // Update or create a ChurchIncomeType
     * const churchIncomeType = await prisma.churchIncomeType.upsert({
     *   create: {
     *     // ... data to create a ChurchIncomeType
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ChurchIncomeType we want to update
     *   }
     * })
     */
    upsert<T extends ChurchIncomeTypeUpsertArgs>(args: SelectSubset<T, ChurchIncomeTypeUpsertArgs<ExtArgs>>): Prisma__ChurchIncomeTypeClient<$Result.GetResult<Prisma.$ChurchIncomeTypePayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of ChurchIncomeTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchIncomeTypeCountArgs} args - Arguments to filter ChurchIncomeTypes to count.
     * @example
     * // Count the number of ChurchIncomeTypes
     * const count = await prisma.churchIncomeType.count({
     *   where: {
     *     // ... the filter for the ChurchIncomeTypes we want to count
     *   }
     * })
    **/
    count<T extends ChurchIncomeTypeCountArgs>(
      args?: Subset<T, ChurchIncomeTypeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChurchIncomeTypeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ChurchIncomeType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchIncomeTypeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChurchIncomeTypeAggregateArgs>(args: Subset<T, ChurchIncomeTypeAggregateArgs>): Prisma.PrismaPromise<GetChurchIncomeTypeAggregateType<T>>

    /**
     * Group by ChurchIncomeType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchIncomeTypeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ChurchIncomeTypeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ChurchIncomeTypeGroupByArgs['orderBy'] }
        : { orderBy?: ChurchIncomeTypeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ChurchIncomeTypeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChurchIncomeTypeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ChurchIncomeType model
   */
  readonly fields: ChurchIncomeTypeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ChurchIncomeType.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ChurchIncomeTypeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    churchIncomeTypeCreateByRel<T extends ChurchIncomeType$churchIncomeTypeCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, ChurchIncomeType$churchIncomeTypeCreateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    churchIncomeTypeUpdateByRel<T extends ChurchIncomeType$churchIncomeTypeUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, ChurchIncomeType$churchIncomeTypeUpdateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    churchIncomeTypeIdRel<T extends ChurchIncomeType$churchIncomeTypeIdRelArgs<ExtArgs> = {}>(args?: Subset<T, ChurchIncomeType$churchIncomeTypeIdRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchIncomePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    churchIncomeTypeHistoryIdRel<T extends ChurchIncomeType$churchIncomeTypeHistoryIdRelArgs<ExtArgs> = {}>(args?: Subset<T, ChurchIncomeType$churchIncomeTypeHistoryIdRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchIncomeHistoryPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ChurchIncomeType model
   */ 
  interface ChurchIncomeTypeFieldRefs {
    readonly id: FieldRef<"ChurchIncomeType", 'BigInt'>
    readonly incomeTypeName: FieldRef<"ChurchIncomeType", 'String'>
    readonly code: FieldRef<"ChurchIncomeType", 'String'>
    readonly description: FieldRef<"ChurchIncomeType", 'String'>
    readonly deleted: FieldRef<"ChurchIncomeType", 'Boolean'>
    readonly createAt: FieldRef<"ChurchIncomeType", 'DateTime'>
    readonly createBy: FieldRef<"ChurchIncomeType", 'BigInt'>
    readonly updatedAt: FieldRef<"ChurchIncomeType", 'DateTime'>
    readonly updatedBy: FieldRef<"ChurchIncomeType", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * ChurchIncomeType findUnique
   */
  export type ChurchIncomeTypeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeType
     */
    select?: ChurchIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeType
     */
    omit?: ChurchIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeTypeInclude<ExtArgs> | null
    /**
     * Filter, which ChurchIncomeType to fetch.
     */
    where: ChurchIncomeTypeWhereUniqueInput
  }

  /**
   * ChurchIncomeType findUniqueOrThrow
   */
  export type ChurchIncomeTypeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeType
     */
    select?: ChurchIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeType
     */
    omit?: ChurchIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeTypeInclude<ExtArgs> | null
    /**
     * Filter, which ChurchIncomeType to fetch.
     */
    where: ChurchIncomeTypeWhereUniqueInput
  }

  /**
   * ChurchIncomeType findFirst
   */
  export type ChurchIncomeTypeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeType
     */
    select?: ChurchIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeType
     */
    omit?: ChurchIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeTypeInclude<ExtArgs> | null
    /**
     * Filter, which ChurchIncomeType to fetch.
     */
    where?: ChurchIncomeTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChurchIncomeTypes to fetch.
     */
    orderBy?: ChurchIncomeTypeOrderByWithRelationInput | ChurchIncomeTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChurchIncomeTypes.
     */
    cursor?: ChurchIncomeTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChurchIncomeTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChurchIncomeTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChurchIncomeTypes.
     */
    distinct?: ChurchIncomeTypeScalarFieldEnum | ChurchIncomeTypeScalarFieldEnum[]
  }

  /**
   * ChurchIncomeType findFirstOrThrow
   */
  export type ChurchIncomeTypeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeType
     */
    select?: ChurchIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeType
     */
    omit?: ChurchIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeTypeInclude<ExtArgs> | null
    /**
     * Filter, which ChurchIncomeType to fetch.
     */
    where?: ChurchIncomeTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChurchIncomeTypes to fetch.
     */
    orderBy?: ChurchIncomeTypeOrderByWithRelationInput | ChurchIncomeTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChurchIncomeTypes.
     */
    cursor?: ChurchIncomeTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChurchIncomeTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChurchIncomeTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChurchIncomeTypes.
     */
    distinct?: ChurchIncomeTypeScalarFieldEnum | ChurchIncomeTypeScalarFieldEnum[]
  }

  /**
   * ChurchIncomeType findMany
   */
  export type ChurchIncomeTypeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeType
     */
    select?: ChurchIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeType
     */
    omit?: ChurchIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeTypeInclude<ExtArgs> | null
    /**
     * Filter, which ChurchIncomeTypes to fetch.
     */
    where?: ChurchIncomeTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChurchIncomeTypes to fetch.
     */
    orderBy?: ChurchIncomeTypeOrderByWithRelationInput | ChurchIncomeTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ChurchIncomeTypes.
     */
    cursor?: ChurchIncomeTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChurchIncomeTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChurchIncomeTypes.
     */
    skip?: number
    distinct?: ChurchIncomeTypeScalarFieldEnum | ChurchIncomeTypeScalarFieldEnum[]
  }

  /**
   * ChurchIncomeType create
   */
  export type ChurchIncomeTypeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeType
     */
    select?: ChurchIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeType
     */
    omit?: ChurchIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeTypeInclude<ExtArgs> | null
    /**
     * The data needed to create a ChurchIncomeType.
     */
    data: XOR<ChurchIncomeTypeCreateInput, ChurchIncomeTypeUncheckedCreateInput>
  }

  /**
   * ChurchIncomeType createMany
   */
  export type ChurchIncomeTypeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ChurchIncomeTypes.
     */
    data: ChurchIncomeTypeCreateManyInput | ChurchIncomeTypeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ChurchIncomeType createManyAndReturn
   */
  export type ChurchIncomeTypeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeType
     */
    select?: ChurchIncomeTypeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeType
     */
    omit?: ChurchIncomeTypeOmit<ExtArgs> | null
    /**
     * The data used to create many ChurchIncomeTypes.
     */
    data: ChurchIncomeTypeCreateManyInput | ChurchIncomeTypeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeTypeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ChurchIncomeType update
   */
  export type ChurchIncomeTypeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeType
     */
    select?: ChurchIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeType
     */
    omit?: ChurchIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeTypeInclude<ExtArgs> | null
    /**
     * The data needed to update a ChurchIncomeType.
     */
    data: XOR<ChurchIncomeTypeUpdateInput, ChurchIncomeTypeUncheckedUpdateInput>
    /**
     * Choose, which ChurchIncomeType to update.
     */
    where: ChurchIncomeTypeWhereUniqueInput
  }

  /**
   * ChurchIncomeType updateMany
   */
  export type ChurchIncomeTypeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ChurchIncomeTypes.
     */
    data: XOR<ChurchIncomeTypeUpdateManyMutationInput, ChurchIncomeTypeUncheckedUpdateManyInput>
    /**
     * Filter which ChurchIncomeTypes to update
     */
    where?: ChurchIncomeTypeWhereInput
    /**
     * Limit how many ChurchIncomeTypes to update.
     */
    limit?: number
  }

  /**
   * ChurchIncomeType updateManyAndReturn
   */
  export type ChurchIncomeTypeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeType
     */
    select?: ChurchIncomeTypeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeType
     */
    omit?: ChurchIncomeTypeOmit<ExtArgs> | null
    /**
     * The data used to update ChurchIncomeTypes.
     */
    data: XOR<ChurchIncomeTypeUpdateManyMutationInput, ChurchIncomeTypeUncheckedUpdateManyInput>
    /**
     * Filter which ChurchIncomeTypes to update
     */
    where?: ChurchIncomeTypeWhereInput
    /**
     * Limit how many ChurchIncomeTypes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeTypeIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ChurchIncomeType upsert
   */
  export type ChurchIncomeTypeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeType
     */
    select?: ChurchIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeType
     */
    omit?: ChurchIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeTypeInclude<ExtArgs> | null
    /**
     * The filter to search for the ChurchIncomeType to update in case it exists.
     */
    where: ChurchIncomeTypeWhereUniqueInput
    /**
     * In case the ChurchIncomeType found by the `where` argument doesn't exist, create a new ChurchIncomeType with this data.
     */
    create: XOR<ChurchIncomeTypeCreateInput, ChurchIncomeTypeUncheckedCreateInput>
    /**
     * In case the ChurchIncomeType was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ChurchIncomeTypeUpdateInput, ChurchIncomeTypeUncheckedUpdateInput>
  }

  /**
   * ChurchIncomeType delete
   */
  export type ChurchIncomeTypeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeType
     */
    select?: ChurchIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeType
     */
    omit?: ChurchIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeTypeInclude<ExtArgs> | null
    /**
     * Filter which ChurchIncomeType to delete.
     */
    where: ChurchIncomeTypeWhereUniqueInput
  }

  /**
   * ChurchIncomeType deleteMany
   */
  export type ChurchIncomeTypeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChurchIncomeTypes to delete
     */
    where?: ChurchIncomeTypeWhereInput
    /**
     * Limit how many ChurchIncomeTypes to delete.
     */
    limit?: number
  }

  /**
   * ChurchIncomeType.churchIncomeTypeCreateByRel
   */
  export type ChurchIncomeType$churchIncomeTypeCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ChurchIncomeType.churchIncomeTypeUpdateByRel
   */
  export type ChurchIncomeType$churchIncomeTypeUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ChurchIncomeType.churchIncomeTypeIdRel
   */
  export type ChurchIncomeType$churchIncomeTypeIdRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncome
     */
    select?: ChurchIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncome
     */
    omit?: ChurchIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeInclude<ExtArgs> | null
    where?: ChurchIncomeWhereInput
    orderBy?: ChurchIncomeOrderByWithRelationInput | ChurchIncomeOrderByWithRelationInput[]
    cursor?: ChurchIncomeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChurchIncomeScalarFieldEnum | ChurchIncomeScalarFieldEnum[]
  }

  /**
   * ChurchIncomeType.churchIncomeTypeHistoryIdRel
   */
  export type ChurchIncomeType$churchIncomeTypeHistoryIdRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeHistory
     */
    select?: ChurchIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeHistory
     */
    omit?: ChurchIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeHistoryInclude<ExtArgs> | null
    where?: ChurchIncomeHistoryWhereInput
    orderBy?: ChurchIncomeHistoryOrderByWithRelationInput | ChurchIncomeHistoryOrderByWithRelationInput[]
    cursor?: ChurchIncomeHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChurchIncomeHistoryScalarFieldEnum | ChurchIncomeHistoryScalarFieldEnum[]
  }

  /**
   * ChurchIncomeType without action
   */
  export type ChurchIncomeTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchIncomeType
     */
    select?: ChurchIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchIncomeType
     */
    omit?: ChurchIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchIncomeTypeInclude<ExtArgs> | null
  }


  /**
   * Model ChurchSpending
   */

  export type AggregateChurchSpending = {
    _count: ChurchSpendingCountAggregateOutputType | null
    _avg: ChurchSpendingAvgAggregateOutputType | null
    _sum: ChurchSpendingSumAggregateOutputType | null
    _min: ChurchSpendingMinAggregateOutputType | null
    _max: ChurchSpendingMaxAggregateOutputType | null
  }

  export type ChurchSpendingAvgAggregateOutputType = {
    id: number | null
    spendingTypeId: number | null
    funds: number | null
    createBy: number | null
    updatedBy: number | null
  }

  export type ChurchSpendingSumAggregateOutputType = {
    id: bigint | null
    spendingTypeId: bigint | null
    funds: bigint | null
    createBy: bigint | null
    updatedBy: bigint | null
  }

  export type ChurchSpendingMinAggregateOutputType = {
    id: bigint | null
    spendingTypeId: bigint | null
    detail: string | null
    funds: bigint | null
    date: Date | null
    bill: string | null
    billNumber: string | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type ChurchSpendingMaxAggregateOutputType = {
    id: bigint | null
    spendingTypeId: bigint | null
    detail: string | null
    funds: bigint | null
    date: Date | null
    bill: string | null
    billNumber: string | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type ChurchSpendingCountAggregateOutputType = {
    id: number
    spendingTypeId: number
    detail: number
    funds: number
    date: number
    bill: number
    billNumber: number
    deleted: number
    createAt: number
    createBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type ChurchSpendingAvgAggregateInputType = {
    id?: true
    spendingTypeId?: true
    funds?: true
    createBy?: true
    updatedBy?: true
  }

  export type ChurchSpendingSumAggregateInputType = {
    id?: true
    spendingTypeId?: true
    funds?: true
    createBy?: true
    updatedBy?: true
  }

  export type ChurchSpendingMinAggregateInputType = {
    id?: true
    spendingTypeId?: true
    detail?: true
    funds?: true
    date?: true
    bill?: true
    billNumber?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type ChurchSpendingMaxAggregateInputType = {
    id?: true
    spendingTypeId?: true
    detail?: true
    funds?: true
    date?: true
    bill?: true
    billNumber?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type ChurchSpendingCountAggregateInputType = {
    id?: true
    spendingTypeId?: true
    detail?: true
    funds?: true
    date?: true
    bill?: true
    billNumber?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type ChurchSpendingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChurchSpending to aggregate.
     */
    where?: ChurchSpendingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChurchSpendings to fetch.
     */
    orderBy?: ChurchSpendingOrderByWithRelationInput | ChurchSpendingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ChurchSpendingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChurchSpendings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChurchSpendings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ChurchSpendings
    **/
    _count?: true | ChurchSpendingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ChurchSpendingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ChurchSpendingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChurchSpendingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChurchSpendingMaxAggregateInputType
  }

  export type GetChurchSpendingAggregateType<T extends ChurchSpendingAggregateArgs> = {
        [P in keyof T & keyof AggregateChurchSpending]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChurchSpending[P]>
      : GetScalarType<T[P], AggregateChurchSpending[P]>
  }




  export type ChurchSpendingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChurchSpendingWhereInput
    orderBy?: ChurchSpendingOrderByWithAggregationInput | ChurchSpendingOrderByWithAggregationInput[]
    by: ChurchSpendingScalarFieldEnum[] | ChurchSpendingScalarFieldEnum
    having?: ChurchSpendingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChurchSpendingCountAggregateInputType | true
    _avg?: ChurchSpendingAvgAggregateInputType
    _sum?: ChurchSpendingSumAggregateInputType
    _min?: ChurchSpendingMinAggregateInputType
    _max?: ChurchSpendingMaxAggregateInputType
  }

  export type ChurchSpendingGroupByOutputType = {
    id: bigint
    spendingTypeId: bigint
    detail: string | null
    funds: bigint
    date: Date
    bill: string | null
    billNumber: string | null
    deleted: boolean
    createAt: Date
    createBy: bigint | null
    updatedAt: Date
    updatedBy: bigint | null
    _count: ChurchSpendingCountAggregateOutputType | null
    _avg: ChurchSpendingAvgAggregateOutputType | null
    _sum: ChurchSpendingSumAggregateOutputType | null
    _min: ChurchSpendingMinAggregateOutputType | null
    _max: ChurchSpendingMaxAggregateOutputType | null
  }

  type GetChurchSpendingGroupByPayload<T extends ChurchSpendingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ChurchSpendingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChurchSpendingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChurchSpendingGroupByOutputType[P]>
            : GetScalarType<T[P], ChurchSpendingGroupByOutputType[P]>
        }
      >
    >


  export type ChurchSpendingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    spendingTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    bill?: boolean
    billNumber?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    churchSpendingTypeIdRel?: boolean | ChurchSpendingTypeDefaultArgs<ExtArgs>
    churchSpendingCreateByRel?: boolean | ChurchSpending$churchSpendingCreateByRelArgs<ExtArgs>
    churchSpendingUpdateByRel?: boolean | ChurchSpending$churchSpendingUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["churchSpending"]>

  export type ChurchSpendingSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    spendingTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    bill?: boolean
    billNumber?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    churchSpendingTypeIdRel?: boolean | ChurchSpendingTypeDefaultArgs<ExtArgs>
    churchSpendingCreateByRel?: boolean | ChurchSpending$churchSpendingCreateByRelArgs<ExtArgs>
    churchSpendingUpdateByRel?: boolean | ChurchSpending$churchSpendingUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["churchSpending"]>

  export type ChurchSpendingSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    spendingTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    bill?: boolean
    billNumber?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    churchSpendingTypeIdRel?: boolean | ChurchSpendingTypeDefaultArgs<ExtArgs>
    churchSpendingCreateByRel?: boolean | ChurchSpending$churchSpendingCreateByRelArgs<ExtArgs>
    churchSpendingUpdateByRel?: boolean | ChurchSpending$churchSpendingUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["churchSpending"]>

  export type ChurchSpendingSelectScalar = {
    id?: boolean
    spendingTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    bill?: boolean
    billNumber?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type ChurchSpendingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "spendingTypeId" | "detail" | "funds" | "date" | "bill" | "billNumber" | "deleted" | "createAt" | "createBy" | "updatedAt" | "updatedBy", ExtArgs["result"]["churchSpending"]>
  export type ChurchSpendingInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    churchSpendingTypeIdRel?: boolean | ChurchSpendingTypeDefaultArgs<ExtArgs>
    churchSpendingCreateByRel?: boolean | ChurchSpending$churchSpendingCreateByRelArgs<ExtArgs>
    churchSpendingUpdateByRel?: boolean | ChurchSpending$churchSpendingUpdateByRelArgs<ExtArgs>
  }
  export type ChurchSpendingIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    churchSpendingTypeIdRel?: boolean | ChurchSpendingTypeDefaultArgs<ExtArgs>
    churchSpendingCreateByRel?: boolean | ChurchSpending$churchSpendingCreateByRelArgs<ExtArgs>
    churchSpendingUpdateByRel?: boolean | ChurchSpending$churchSpendingUpdateByRelArgs<ExtArgs>
  }
  export type ChurchSpendingIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    churchSpendingTypeIdRel?: boolean | ChurchSpendingTypeDefaultArgs<ExtArgs>
    churchSpendingCreateByRel?: boolean | ChurchSpending$churchSpendingCreateByRelArgs<ExtArgs>
    churchSpendingUpdateByRel?: boolean | ChurchSpending$churchSpendingUpdateByRelArgs<ExtArgs>
  }

  export type $ChurchSpendingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ChurchSpending"
    objects: {
      churchSpendingTypeIdRel: Prisma.$ChurchSpendingTypePayload<ExtArgs>
      churchSpendingCreateByRel: Prisma.$UserPayload<ExtArgs> | null
      churchSpendingUpdateByRel: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      spendingTypeId: bigint
      detail: string | null
      funds: bigint
      date: Date
      bill: string | null
      billNumber: string | null
      deleted: boolean
      createAt: Date
      createBy: bigint | null
      updatedAt: Date
      updatedBy: bigint | null
    }, ExtArgs["result"]["churchSpending"]>
    composites: {}
  }

  type ChurchSpendingGetPayload<S extends boolean | null | undefined | ChurchSpendingDefaultArgs> = $Result.GetResult<Prisma.$ChurchSpendingPayload, S>

  type ChurchSpendingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ChurchSpendingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ChurchSpendingCountAggregateInputType | true
    }

  export interface ChurchSpendingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ChurchSpending'], meta: { name: 'ChurchSpending' } }
    /**
     * Find zero or one ChurchSpending that matches the filter.
     * @param {ChurchSpendingFindUniqueArgs} args - Arguments to find a ChurchSpending
     * @example
     * // Get one ChurchSpending
     * const churchSpending = await prisma.churchSpending.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ChurchSpendingFindUniqueArgs>(args: SelectSubset<T, ChurchSpendingFindUniqueArgs<ExtArgs>>): Prisma__ChurchSpendingClient<$Result.GetResult<Prisma.$ChurchSpendingPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one ChurchSpending that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ChurchSpendingFindUniqueOrThrowArgs} args - Arguments to find a ChurchSpending
     * @example
     * // Get one ChurchSpending
     * const churchSpending = await prisma.churchSpending.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ChurchSpendingFindUniqueOrThrowArgs>(args: SelectSubset<T, ChurchSpendingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ChurchSpendingClient<$Result.GetResult<Prisma.$ChurchSpendingPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first ChurchSpending that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchSpendingFindFirstArgs} args - Arguments to find a ChurchSpending
     * @example
     * // Get one ChurchSpending
     * const churchSpending = await prisma.churchSpending.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ChurchSpendingFindFirstArgs>(args?: SelectSubset<T, ChurchSpendingFindFirstArgs<ExtArgs>>): Prisma__ChurchSpendingClient<$Result.GetResult<Prisma.$ChurchSpendingPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first ChurchSpending that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchSpendingFindFirstOrThrowArgs} args - Arguments to find a ChurchSpending
     * @example
     * // Get one ChurchSpending
     * const churchSpending = await prisma.churchSpending.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ChurchSpendingFindFirstOrThrowArgs>(args?: SelectSubset<T, ChurchSpendingFindFirstOrThrowArgs<ExtArgs>>): Prisma__ChurchSpendingClient<$Result.GetResult<Prisma.$ChurchSpendingPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more ChurchSpendings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchSpendingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ChurchSpendings
     * const churchSpendings = await prisma.churchSpending.findMany()
     * 
     * // Get first 10 ChurchSpendings
     * const churchSpendings = await prisma.churchSpending.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const churchSpendingWithIdOnly = await prisma.churchSpending.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ChurchSpendingFindManyArgs>(args?: SelectSubset<T, ChurchSpendingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchSpendingPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a ChurchSpending.
     * @param {ChurchSpendingCreateArgs} args - Arguments to create a ChurchSpending.
     * @example
     * // Create one ChurchSpending
     * const ChurchSpending = await prisma.churchSpending.create({
     *   data: {
     *     // ... data to create a ChurchSpending
     *   }
     * })
     * 
     */
    create<T extends ChurchSpendingCreateArgs>(args: SelectSubset<T, ChurchSpendingCreateArgs<ExtArgs>>): Prisma__ChurchSpendingClient<$Result.GetResult<Prisma.$ChurchSpendingPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many ChurchSpendings.
     * @param {ChurchSpendingCreateManyArgs} args - Arguments to create many ChurchSpendings.
     * @example
     * // Create many ChurchSpendings
     * const churchSpending = await prisma.churchSpending.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ChurchSpendingCreateManyArgs>(args?: SelectSubset<T, ChurchSpendingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ChurchSpendings and returns the data saved in the database.
     * @param {ChurchSpendingCreateManyAndReturnArgs} args - Arguments to create many ChurchSpendings.
     * @example
     * // Create many ChurchSpendings
     * const churchSpending = await prisma.churchSpending.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ChurchSpendings and only return the `id`
     * const churchSpendingWithIdOnly = await prisma.churchSpending.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ChurchSpendingCreateManyAndReturnArgs>(args?: SelectSubset<T, ChurchSpendingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchSpendingPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a ChurchSpending.
     * @param {ChurchSpendingDeleteArgs} args - Arguments to delete one ChurchSpending.
     * @example
     * // Delete one ChurchSpending
     * const ChurchSpending = await prisma.churchSpending.delete({
     *   where: {
     *     // ... filter to delete one ChurchSpending
     *   }
     * })
     * 
     */
    delete<T extends ChurchSpendingDeleteArgs>(args: SelectSubset<T, ChurchSpendingDeleteArgs<ExtArgs>>): Prisma__ChurchSpendingClient<$Result.GetResult<Prisma.$ChurchSpendingPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one ChurchSpending.
     * @param {ChurchSpendingUpdateArgs} args - Arguments to update one ChurchSpending.
     * @example
     * // Update one ChurchSpending
     * const churchSpending = await prisma.churchSpending.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ChurchSpendingUpdateArgs>(args: SelectSubset<T, ChurchSpendingUpdateArgs<ExtArgs>>): Prisma__ChurchSpendingClient<$Result.GetResult<Prisma.$ChurchSpendingPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more ChurchSpendings.
     * @param {ChurchSpendingDeleteManyArgs} args - Arguments to filter ChurchSpendings to delete.
     * @example
     * // Delete a few ChurchSpendings
     * const { count } = await prisma.churchSpending.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ChurchSpendingDeleteManyArgs>(args?: SelectSubset<T, ChurchSpendingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChurchSpendings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchSpendingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ChurchSpendings
     * const churchSpending = await prisma.churchSpending.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ChurchSpendingUpdateManyArgs>(args: SelectSubset<T, ChurchSpendingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChurchSpendings and returns the data updated in the database.
     * @param {ChurchSpendingUpdateManyAndReturnArgs} args - Arguments to update many ChurchSpendings.
     * @example
     * // Update many ChurchSpendings
     * const churchSpending = await prisma.churchSpending.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ChurchSpendings and only return the `id`
     * const churchSpendingWithIdOnly = await prisma.churchSpending.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ChurchSpendingUpdateManyAndReturnArgs>(args: SelectSubset<T, ChurchSpendingUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchSpendingPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one ChurchSpending.
     * @param {ChurchSpendingUpsertArgs} args - Arguments to update or create a ChurchSpending.
     * @example
     * // Update or create a ChurchSpending
     * const churchSpending = await prisma.churchSpending.upsert({
     *   create: {
     *     // ... data to create a ChurchSpending
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ChurchSpending we want to update
     *   }
     * })
     */
    upsert<T extends ChurchSpendingUpsertArgs>(args: SelectSubset<T, ChurchSpendingUpsertArgs<ExtArgs>>): Prisma__ChurchSpendingClient<$Result.GetResult<Prisma.$ChurchSpendingPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of ChurchSpendings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchSpendingCountArgs} args - Arguments to filter ChurchSpendings to count.
     * @example
     * // Count the number of ChurchSpendings
     * const count = await prisma.churchSpending.count({
     *   where: {
     *     // ... the filter for the ChurchSpendings we want to count
     *   }
     * })
    **/
    count<T extends ChurchSpendingCountArgs>(
      args?: Subset<T, ChurchSpendingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChurchSpendingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ChurchSpending.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchSpendingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChurchSpendingAggregateArgs>(args: Subset<T, ChurchSpendingAggregateArgs>): Prisma.PrismaPromise<GetChurchSpendingAggregateType<T>>

    /**
     * Group by ChurchSpending.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchSpendingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ChurchSpendingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ChurchSpendingGroupByArgs['orderBy'] }
        : { orderBy?: ChurchSpendingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ChurchSpendingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChurchSpendingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ChurchSpending model
   */
  readonly fields: ChurchSpendingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ChurchSpending.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ChurchSpendingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    churchSpendingTypeIdRel<T extends ChurchSpendingTypeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ChurchSpendingTypeDefaultArgs<ExtArgs>>): Prisma__ChurchSpendingTypeClient<$Result.GetResult<Prisma.$ChurchSpendingTypePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    churchSpendingCreateByRel<T extends ChurchSpending$churchSpendingCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, ChurchSpending$churchSpendingCreateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    churchSpendingUpdateByRel<T extends ChurchSpending$churchSpendingUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, ChurchSpending$churchSpendingUpdateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ChurchSpending model
   */ 
  interface ChurchSpendingFieldRefs {
    readonly id: FieldRef<"ChurchSpending", 'BigInt'>
    readonly spendingTypeId: FieldRef<"ChurchSpending", 'BigInt'>
    readonly detail: FieldRef<"ChurchSpending", 'String'>
    readonly funds: FieldRef<"ChurchSpending", 'BigInt'>
    readonly date: FieldRef<"ChurchSpending", 'DateTime'>
    readonly bill: FieldRef<"ChurchSpending", 'String'>
    readonly billNumber: FieldRef<"ChurchSpending", 'String'>
    readonly deleted: FieldRef<"ChurchSpending", 'Boolean'>
    readonly createAt: FieldRef<"ChurchSpending", 'DateTime'>
    readonly createBy: FieldRef<"ChurchSpending", 'BigInt'>
    readonly updatedAt: FieldRef<"ChurchSpending", 'DateTime'>
    readonly updatedBy: FieldRef<"ChurchSpending", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * ChurchSpending findUnique
   */
  export type ChurchSpendingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpending
     */
    select?: ChurchSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpending
     */
    omit?: ChurchSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingInclude<ExtArgs> | null
    /**
     * Filter, which ChurchSpending to fetch.
     */
    where: ChurchSpendingWhereUniqueInput
  }

  /**
   * ChurchSpending findUniqueOrThrow
   */
  export type ChurchSpendingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpending
     */
    select?: ChurchSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpending
     */
    omit?: ChurchSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingInclude<ExtArgs> | null
    /**
     * Filter, which ChurchSpending to fetch.
     */
    where: ChurchSpendingWhereUniqueInput
  }

  /**
   * ChurchSpending findFirst
   */
  export type ChurchSpendingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpending
     */
    select?: ChurchSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpending
     */
    omit?: ChurchSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingInclude<ExtArgs> | null
    /**
     * Filter, which ChurchSpending to fetch.
     */
    where?: ChurchSpendingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChurchSpendings to fetch.
     */
    orderBy?: ChurchSpendingOrderByWithRelationInput | ChurchSpendingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChurchSpendings.
     */
    cursor?: ChurchSpendingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChurchSpendings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChurchSpendings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChurchSpendings.
     */
    distinct?: ChurchSpendingScalarFieldEnum | ChurchSpendingScalarFieldEnum[]
  }

  /**
   * ChurchSpending findFirstOrThrow
   */
  export type ChurchSpendingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpending
     */
    select?: ChurchSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpending
     */
    omit?: ChurchSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingInclude<ExtArgs> | null
    /**
     * Filter, which ChurchSpending to fetch.
     */
    where?: ChurchSpendingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChurchSpendings to fetch.
     */
    orderBy?: ChurchSpendingOrderByWithRelationInput | ChurchSpendingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChurchSpendings.
     */
    cursor?: ChurchSpendingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChurchSpendings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChurchSpendings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChurchSpendings.
     */
    distinct?: ChurchSpendingScalarFieldEnum | ChurchSpendingScalarFieldEnum[]
  }

  /**
   * ChurchSpending findMany
   */
  export type ChurchSpendingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpending
     */
    select?: ChurchSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpending
     */
    omit?: ChurchSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingInclude<ExtArgs> | null
    /**
     * Filter, which ChurchSpendings to fetch.
     */
    where?: ChurchSpendingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChurchSpendings to fetch.
     */
    orderBy?: ChurchSpendingOrderByWithRelationInput | ChurchSpendingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ChurchSpendings.
     */
    cursor?: ChurchSpendingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChurchSpendings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChurchSpendings.
     */
    skip?: number
    distinct?: ChurchSpendingScalarFieldEnum | ChurchSpendingScalarFieldEnum[]
  }

  /**
   * ChurchSpending create
   */
  export type ChurchSpendingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpending
     */
    select?: ChurchSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpending
     */
    omit?: ChurchSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingInclude<ExtArgs> | null
    /**
     * The data needed to create a ChurchSpending.
     */
    data: XOR<ChurchSpendingCreateInput, ChurchSpendingUncheckedCreateInput>
  }

  /**
   * ChurchSpending createMany
   */
  export type ChurchSpendingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ChurchSpendings.
     */
    data: ChurchSpendingCreateManyInput | ChurchSpendingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ChurchSpending createManyAndReturn
   */
  export type ChurchSpendingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpending
     */
    select?: ChurchSpendingSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpending
     */
    omit?: ChurchSpendingOmit<ExtArgs> | null
    /**
     * The data used to create many ChurchSpendings.
     */
    data: ChurchSpendingCreateManyInput | ChurchSpendingCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ChurchSpending update
   */
  export type ChurchSpendingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpending
     */
    select?: ChurchSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpending
     */
    omit?: ChurchSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingInclude<ExtArgs> | null
    /**
     * The data needed to update a ChurchSpending.
     */
    data: XOR<ChurchSpendingUpdateInput, ChurchSpendingUncheckedUpdateInput>
    /**
     * Choose, which ChurchSpending to update.
     */
    where: ChurchSpendingWhereUniqueInput
  }

  /**
   * ChurchSpending updateMany
   */
  export type ChurchSpendingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ChurchSpendings.
     */
    data: XOR<ChurchSpendingUpdateManyMutationInput, ChurchSpendingUncheckedUpdateManyInput>
    /**
     * Filter which ChurchSpendings to update
     */
    where?: ChurchSpendingWhereInput
    /**
     * Limit how many ChurchSpendings to update.
     */
    limit?: number
  }

  /**
   * ChurchSpending updateManyAndReturn
   */
  export type ChurchSpendingUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpending
     */
    select?: ChurchSpendingSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpending
     */
    omit?: ChurchSpendingOmit<ExtArgs> | null
    /**
     * The data used to update ChurchSpendings.
     */
    data: XOR<ChurchSpendingUpdateManyMutationInput, ChurchSpendingUncheckedUpdateManyInput>
    /**
     * Filter which ChurchSpendings to update
     */
    where?: ChurchSpendingWhereInput
    /**
     * Limit how many ChurchSpendings to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ChurchSpending upsert
   */
  export type ChurchSpendingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpending
     */
    select?: ChurchSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpending
     */
    omit?: ChurchSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingInclude<ExtArgs> | null
    /**
     * The filter to search for the ChurchSpending to update in case it exists.
     */
    where: ChurchSpendingWhereUniqueInput
    /**
     * In case the ChurchSpending found by the `where` argument doesn't exist, create a new ChurchSpending with this data.
     */
    create: XOR<ChurchSpendingCreateInput, ChurchSpendingUncheckedCreateInput>
    /**
     * In case the ChurchSpending was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ChurchSpendingUpdateInput, ChurchSpendingUncheckedUpdateInput>
  }

  /**
   * ChurchSpending delete
   */
  export type ChurchSpendingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpending
     */
    select?: ChurchSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpending
     */
    omit?: ChurchSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingInclude<ExtArgs> | null
    /**
     * Filter which ChurchSpending to delete.
     */
    where: ChurchSpendingWhereUniqueInput
  }

  /**
   * ChurchSpending deleteMany
   */
  export type ChurchSpendingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChurchSpendings to delete
     */
    where?: ChurchSpendingWhereInput
    /**
     * Limit how many ChurchSpendings to delete.
     */
    limit?: number
  }

  /**
   * ChurchSpending.churchSpendingCreateByRel
   */
  export type ChurchSpending$churchSpendingCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ChurchSpending.churchSpendingUpdateByRel
   */
  export type ChurchSpending$churchSpendingUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ChurchSpending without action
   */
  export type ChurchSpendingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpending
     */
    select?: ChurchSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpending
     */
    omit?: ChurchSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingInclude<ExtArgs> | null
  }


  /**
   * Model ChurchSpendingHistory
   */

  export type AggregateChurchSpendingHistory = {
    _count: ChurchSpendingHistoryCountAggregateOutputType | null
    _avg: ChurchSpendingHistoryAvgAggregateOutputType | null
    _sum: ChurchSpendingHistorySumAggregateOutputType | null
    _min: ChurchSpendingHistoryMinAggregateOutputType | null
    _max: ChurchSpendingHistoryMaxAggregateOutputType | null
  }

  export type ChurchSpendingHistoryAvgAggregateOutputType = {
    revId: number | null
    id: number | null
    spendingTypeId: number | null
    funds: number | null
    createBy: number | null
    updatedBy: number | null
  }

  export type ChurchSpendingHistorySumAggregateOutputType = {
    revId: bigint | null
    id: bigint | null
    spendingTypeId: bigint | null
    funds: bigint | null
    createBy: bigint | null
    updatedBy: bigint | null
  }

  export type ChurchSpendingHistoryMinAggregateOutputType = {
    revId: bigint | null
    id: bigint | null
    spendingTypeId: bigint | null
    detail: string | null
    funds: bigint | null
    date: Date | null
    bill: string | null
    billNumber: string | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type ChurchSpendingHistoryMaxAggregateOutputType = {
    revId: bigint | null
    id: bigint | null
    spendingTypeId: bigint | null
    detail: string | null
    funds: bigint | null
    date: Date | null
    bill: string | null
    billNumber: string | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type ChurchSpendingHistoryCountAggregateOutputType = {
    revId: number
    id: number
    spendingTypeId: number
    detail: number
    funds: number
    date: number
    bill: number
    billNumber: number
    deleted: number
    createAt: number
    createBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type ChurchSpendingHistoryAvgAggregateInputType = {
    revId?: true
    id?: true
    spendingTypeId?: true
    funds?: true
    createBy?: true
    updatedBy?: true
  }

  export type ChurchSpendingHistorySumAggregateInputType = {
    revId?: true
    id?: true
    spendingTypeId?: true
    funds?: true
    createBy?: true
    updatedBy?: true
  }

  export type ChurchSpendingHistoryMinAggregateInputType = {
    revId?: true
    id?: true
    spendingTypeId?: true
    detail?: true
    funds?: true
    date?: true
    bill?: true
    billNumber?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type ChurchSpendingHistoryMaxAggregateInputType = {
    revId?: true
    id?: true
    spendingTypeId?: true
    detail?: true
    funds?: true
    date?: true
    bill?: true
    billNumber?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type ChurchSpendingHistoryCountAggregateInputType = {
    revId?: true
    id?: true
    spendingTypeId?: true
    detail?: true
    funds?: true
    date?: true
    bill?: true
    billNumber?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type ChurchSpendingHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChurchSpendingHistory to aggregate.
     */
    where?: ChurchSpendingHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChurchSpendingHistories to fetch.
     */
    orderBy?: ChurchSpendingHistoryOrderByWithRelationInput | ChurchSpendingHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ChurchSpendingHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChurchSpendingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChurchSpendingHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ChurchSpendingHistories
    **/
    _count?: true | ChurchSpendingHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ChurchSpendingHistoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ChurchSpendingHistorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChurchSpendingHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChurchSpendingHistoryMaxAggregateInputType
  }

  export type GetChurchSpendingHistoryAggregateType<T extends ChurchSpendingHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregateChurchSpendingHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChurchSpendingHistory[P]>
      : GetScalarType<T[P], AggregateChurchSpendingHistory[P]>
  }




  export type ChurchSpendingHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChurchSpendingHistoryWhereInput
    orderBy?: ChurchSpendingHistoryOrderByWithAggregationInput | ChurchSpendingHistoryOrderByWithAggregationInput[]
    by: ChurchSpendingHistoryScalarFieldEnum[] | ChurchSpendingHistoryScalarFieldEnum
    having?: ChurchSpendingHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChurchSpendingHistoryCountAggregateInputType | true
    _avg?: ChurchSpendingHistoryAvgAggregateInputType
    _sum?: ChurchSpendingHistorySumAggregateInputType
    _min?: ChurchSpendingHistoryMinAggregateInputType
    _max?: ChurchSpendingHistoryMaxAggregateInputType
  }

  export type ChurchSpendingHistoryGroupByOutputType = {
    revId: bigint
    id: bigint
    spendingTypeId: bigint
    detail: string | null
    funds: bigint
    date: Date
    bill: string
    billNumber: string
    deleted: boolean
    createAt: Date
    createBy: bigint | null
    updatedAt: Date
    updatedBy: bigint | null
    _count: ChurchSpendingHistoryCountAggregateOutputType | null
    _avg: ChurchSpendingHistoryAvgAggregateOutputType | null
    _sum: ChurchSpendingHistorySumAggregateOutputType | null
    _min: ChurchSpendingHistoryMinAggregateOutputType | null
    _max: ChurchSpendingHistoryMaxAggregateOutputType | null
  }

  type GetChurchSpendingHistoryGroupByPayload<T extends ChurchSpendingHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ChurchSpendingHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChurchSpendingHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChurchSpendingHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], ChurchSpendingHistoryGroupByOutputType[P]>
        }
      >
    >


  export type ChurchSpendingHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    revId?: boolean
    id?: boolean
    spendingTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    bill?: boolean
    billNumber?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    churchSpendingTypeHistoryIdRel?: boolean | ChurchSpendingTypeDefaultArgs<ExtArgs>
    churchSpendingHistoryCreateByRel?: boolean | ChurchSpendingHistory$churchSpendingHistoryCreateByRelArgs<ExtArgs>
    churchSpendingHistoryUpdateByRel?: boolean | ChurchSpendingHistory$churchSpendingHistoryUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["churchSpendingHistory"]>

  export type ChurchSpendingHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    revId?: boolean
    id?: boolean
    spendingTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    bill?: boolean
    billNumber?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    churchSpendingTypeHistoryIdRel?: boolean | ChurchSpendingTypeDefaultArgs<ExtArgs>
    churchSpendingHistoryCreateByRel?: boolean | ChurchSpendingHistory$churchSpendingHistoryCreateByRelArgs<ExtArgs>
    churchSpendingHistoryUpdateByRel?: boolean | ChurchSpendingHistory$churchSpendingHistoryUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["churchSpendingHistory"]>

  export type ChurchSpendingHistorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    revId?: boolean
    id?: boolean
    spendingTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    bill?: boolean
    billNumber?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    churchSpendingTypeHistoryIdRel?: boolean | ChurchSpendingTypeDefaultArgs<ExtArgs>
    churchSpendingHistoryCreateByRel?: boolean | ChurchSpendingHistory$churchSpendingHistoryCreateByRelArgs<ExtArgs>
    churchSpendingHistoryUpdateByRel?: boolean | ChurchSpendingHistory$churchSpendingHistoryUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["churchSpendingHistory"]>

  export type ChurchSpendingHistorySelectScalar = {
    revId?: boolean
    id?: boolean
    spendingTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    bill?: boolean
    billNumber?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type ChurchSpendingHistoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"revId" | "id" | "spendingTypeId" | "detail" | "funds" | "date" | "bill" | "billNumber" | "deleted" | "createAt" | "createBy" | "updatedAt" | "updatedBy", ExtArgs["result"]["churchSpendingHistory"]>
  export type ChurchSpendingHistoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    churchSpendingTypeHistoryIdRel?: boolean | ChurchSpendingTypeDefaultArgs<ExtArgs>
    churchSpendingHistoryCreateByRel?: boolean | ChurchSpendingHistory$churchSpendingHistoryCreateByRelArgs<ExtArgs>
    churchSpendingHistoryUpdateByRel?: boolean | ChurchSpendingHistory$churchSpendingHistoryUpdateByRelArgs<ExtArgs>
  }
  export type ChurchSpendingHistoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    churchSpendingTypeHistoryIdRel?: boolean | ChurchSpendingTypeDefaultArgs<ExtArgs>
    churchSpendingHistoryCreateByRel?: boolean | ChurchSpendingHistory$churchSpendingHistoryCreateByRelArgs<ExtArgs>
    churchSpendingHistoryUpdateByRel?: boolean | ChurchSpendingHistory$churchSpendingHistoryUpdateByRelArgs<ExtArgs>
  }
  export type ChurchSpendingHistoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    churchSpendingTypeHistoryIdRel?: boolean | ChurchSpendingTypeDefaultArgs<ExtArgs>
    churchSpendingHistoryCreateByRel?: boolean | ChurchSpendingHistory$churchSpendingHistoryCreateByRelArgs<ExtArgs>
    churchSpendingHistoryUpdateByRel?: boolean | ChurchSpendingHistory$churchSpendingHistoryUpdateByRelArgs<ExtArgs>
  }

  export type $ChurchSpendingHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ChurchSpendingHistory"
    objects: {
      churchSpendingTypeHistoryIdRel: Prisma.$ChurchSpendingTypePayload<ExtArgs>
      churchSpendingHistoryCreateByRel: Prisma.$UserPayload<ExtArgs> | null
      churchSpendingHistoryUpdateByRel: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      revId: bigint
      id: bigint
      spendingTypeId: bigint
      detail: string | null
      funds: bigint
      date: Date
      bill: string
      billNumber: string
      deleted: boolean
      createAt: Date
      createBy: bigint | null
      updatedAt: Date
      updatedBy: bigint | null
    }, ExtArgs["result"]["churchSpendingHistory"]>
    composites: {}
  }

  type ChurchSpendingHistoryGetPayload<S extends boolean | null | undefined | ChurchSpendingHistoryDefaultArgs> = $Result.GetResult<Prisma.$ChurchSpendingHistoryPayload, S>

  type ChurchSpendingHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ChurchSpendingHistoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ChurchSpendingHistoryCountAggregateInputType | true
    }

  export interface ChurchSpendingHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ChurchSpendingHistory'], meta: { name: 'ChurchSpendingHistory' } }
    /**
     * Find zero or one ChurchSpendingHistory that matches the filter.
     * @param {ChurchSpendingHistoryFindUniqueArgs} args - Arguments to find a ChurchSpendingHistory
     * @example
     * // Get one ChurchSpendingHistory
     * const churchSpendingHistory = await prisma.churchSpendingHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ChurchSpendingHistoryFindUniqueArgs>(args: SelectSubset<T, ChurchSpendingHistoryFindUniqueArgs<ExtArgs>>): Prisma__ChurchSpendingHistoryClient<$Result.GetResult<Prisma.$ChurchSpendingHistoryPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one ChurchSpendingHistory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ChurchSpendingHistoryFindUniqueOrThrowArgs} args - Arguments to find a ChurchSpendingHistory
     * @example
     * // Get one ChurchSpendingHistory
     * const churchSpendingHistory = await prisma.churchSpendingHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ChurchSpendingHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, ChurchSpendingHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ChurchSpendingHistoryClient<$Result.GetResult<Prisma.$ChurchSpendingHistoryPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first ChurchSpendingHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchSpendingHistoryFindFirstArgs} args - Arguments to find a ChurchSpendingHistory
     * @example
     * // Get one ChurchSpendingHistory
     * const churchSpendingHistory = await prisma.churchSpendingHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ChurchSpendingHistoryFindFirstArgs>(args?: SelectSubset<T, ChurchSpendingHistoryFindFirstArgs<ExtArgs>>): Prisma__ChurchSpendingHistoryClient<$Result.GetResult<Prisma.$ChurchSpendingHistoryPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first ChurchSpendingHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchSpendingHistoryFindFirstOrThrowArgs} args - Arguments to find a ChurchSpendingHistory
     * @example
     * // Get one ChurchSpendingHistory
     * const churchSpendingHistory = await prisma.churchSpendingHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ChurchSpendingHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, ChurchSpendingHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__ChurchSpendingHistoryClient<$Result.GetResult<Prisma.$ChurchSpendingHistoryPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more ChurchSpendingHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchSpendingHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ChurchSpendingHistories
     * const churchSpendingHistories = await prisma.churchSpendingHistory.findMany()
     * 
     * // Get first 10 ChurchSpendingHistories
     * const churchSpendingHistories = await prisma.churchSpendingHistory.findMany({ take: 10 })
     * 
     * // Only select the `revId`
     * const churchSpendingHistoryWithRevIdOnly = await prisma.churchSpendingHistory.findMany({ select: { revId: true } })
     * 
     */
    findMany<T extends ChurchSpendingHistoryFindManyArgs>(args?: SelectSubset<T, ChurchSpendingHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchSpendingHistoryPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a ChurchSpendingHistory.
     * @param {ChurchSpendingHistoryCreateArgs} args - Arguments to create a ChurchSpendingHistory.
     * @example
     * // Create one ChurchSpendingHistory
     * const ChurchSpendingHistory = await prisma.churchSpendingHistory.create({
     *   data: {
     *     // ... data to create a ChurchSpendingHistory
     *   }
     * })
     * 
     */
    create<T extends ChurchSpendingHistoryCreateArgs>(args: SelectSubset<T, ChurchSpendingHistoryCreateArgs<ExtArgs>>): Prisma__ChurchSpendingHistoryClient<$Result.GetResult<Prisma.$ChurchSpendingHistoryPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many ChurchSpendingHistories.
     * @param {ChurchSpendingHistoryCreateManyArgs} args - Arguments to create many ChurchSpendingHistories.
     * @example
     * // Create many ChurchSpendingHistories
     * const churchSpendingHistory = await prisma.churchSpendingHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ChurchSpendingHistoryCreateManyArgs>(args?: SelectSubset<T, ChurchSpendingHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ChurchSpendingHistories and returns the data saved in the database.
     * @param {ChurchSpendingHistoryCreateManyAndReturnArgs} args - Arguments to create many ChurchSpendingHistories.
     * @example
     * // Create many ChurchSpendingHistories
     * const churchSpendingHistory = await prisma.churchSpendingHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ChurchSpendingHistories and only return the `revId`
     * const churchSpendingHistoryWithRevIdOnly = await prisma.churchSpendingHistory.createManyAndReturn({
     *   select: { revId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ChurchSpendingHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, ChurchSpendingHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchSpendingHistoryPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a ChurchSpendingHistory.
     * @param {ChurchSpendingHistoryDeleteArgs} args - Arguments to delete one ChurchSpendingHistory.
     * @example
     * // Delete one ChurchSpendingHistory
     * const ChurchSpendingHistory = await prisma.churchSpendingHistory.delete({
     *   where: {
     *     // ... filter to delete one ChurchSpendingHistory
     *   }
     * })
     * 
     */
    delete<T extends ChurchSpendingHistoryDeleteArgs>(args: SelectSubset<T, ChurchSpendingHistoryDeleteArgs<ExtArgs>>): Prisma__ChurchSpendingHistoryClient<$Result.GetResult<Prisma.$ChurchSpendingHistoryPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one ChurchSpendingHistory.
     * @param {ChurchSpendingHistoryUpdateArgs} args - Arguments to update one ChurchSpendingHistory.
     * @example
     * // Update one ChurchSpendingHistory
     * const churchSpendingHistory = await prisma.churchSpendingHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ChurchSpendingHistoryUpdateArgs>(args: SelectSubset<T, ChurchSpendingHistoryUpdateArgs<ExtArgs>>): Prisma__ChurchSpendingHistoryClient<$Result.GetResult<Prisma.$ChurchSpendingHistoryPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more ChurchSpendingHistories.
     * @param {ChurchSpendingHistoryDeleteManyArgs} args - Arguments to filter ChurchSpendingHistories to delete.
     * @example
     * // Delete a few ChurchSpendingHistories
     * const { count } = await prisma.churchSpendingHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ChurchSpendingHistoryDeleteManyArgs>(args?: SelectSubset<T, ChurchSpendingHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChurchSpendingHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchSpendingHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ChurchSpendingHistories
     * const churchSpendingHistory = await prisma.churchSpendingHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ChurchSpendingHistoryUpdateManyArgs>(args: SelectSubset<T, ChurchSpendingHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChurchSpendingHistories and returns the data updated in the database.
     * @param {ChurchSpendingHistoryUpdateManyAndReturnArgs} args - Arguments to update many ChurchSpendingHistories.
     * @example
     * // Update many ChurchSpendingHistories
     * const churchSpendingHistory = await prisma.churchSpendingHistory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ChurchSpendingHistories and only return the `revId`
     * const churchSpendingHistoryWithRevIdOnly = await prisma.churchSpendingHistory.updateManyAndReturn({
     *   select: { revId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ChurchSpendingHistoryUpdateManyAndReturnArgs>(args: SelectSubset<T, ChurchSpendingHistoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchSpendingHistoryPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one ChurchSpendingHistory.
     * @param {ChurchSpendingHistoryUpsertArgs} args - Arguments to update or create a ChurchSpendingHistory.
     * @example
     * // Update or create a ChurchSpendingHistory
     * const churchSpendingHistory = await prisma.churchSpendingHistory.upsert({
     *   create: {
     *     // ... data to create a ChurchSpendingHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ChurchSpendingHistory we want to update
     *   }
     * })
     */
    upsert<T extends ChurchSpendingHistoryUpsertArgs>(args: SelectSubset<T, ChurchSpendingHistoryUpsertArgs<ExtArgs>>): Prisma__ChurchSpendingHistoryClient<$Result.GetResult<Prisma.$ChurchSpendingHistoryPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of ChurchSpendingHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchSpendingHistoryCountArgs} args - Arguments to filter ChurchSpendingHistories to count.
     * @example
     * // Count the number of ChurchSpendingHistories
     * const count = await prisma.churchSpendingHistory.count({
     *   where: {
     *     // ... the filter for the ChurchSpendingHistories we want to count
     *   }
     * })
    **/
    count<T extends ChurchSpendingHistoryCountArgs>(
      args?: Subset<T, ChurchSpendingHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChurchSpendingHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ChurchSpendingHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchSpendingHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChurchSpendingHistoryAggregateArgs>(args: Subset<T, ChurchSpendingHistoryAggregateArgs>): Prisma.PrismaPromise<GetChurchSpendingHistoryAggregateType<T>>

    /**
     * Group by ChurchSpendingHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchSpendingHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ChurchSpendingHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ChurchSpendingHistoryGroupByArgs['orderBy'] }
        : { orderBy?: ChurchSpendingHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ChurchSpendingHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChurchSpendingHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ChurchSpendingHistory model
   */
  readonly fields: ChurchSpendingHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ChurchSpendingHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ChurchSpendingHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    churchSpendingTypeHistoryIdRel<T extends ChurchSpendingTypeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ChurchSpendingTypeDefaultArgs<ExtArgs>>): Prisma__ChurchSpendingTypeClient<$Result.GetResult<Prisma.$ChurchSpendingTypePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    churchSpendingHistoryCreateByRel<T extends ChurchSpendingHistory$churchSpendingHistoryCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, ChurchSpendingHistory$churchSpendingHistoryCreateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    churchSpendingHistoryUpdateByRel<T extends ChurchSpendingHistory$churchSpendingHistoryUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, ChurchSpendingHistory$churchSpendingHistoryUpdateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ChurchSpendingHistory model
   */ 
  interface ChurchSpendingHistoryFieldRefs {
    readonly revId: FieldRef<"ChurchSpendingHistory", 'BigInt'>
    readonly id: FieldRef<"ChurchSpendingHistory", 'BigInt'>
    readonly spendingTypeId: FieldRef<"ChurchSpendingHistory", 'BigInt'>
    readonly detail: FieldRef<"ChurchSpendingHistory", 'String'>
    readonly funds: FieldRef<"ChurchSpendingHistory", 'BigInt'>
    readonly date: FieldRef<"ChurchSpendingHistory", 'DateTime'>
    readonly bill: FieldRef<"ChurchSpendingHistory", 'String'>
    readonly billNumber: FieldRef<"ChurchSpendingHistory", 'String'>
    readonly deleted: FieldRef<"ChurchSpendingHistory", 'Boolean'>
    readonly createAt: FieldRef<"ChurchSpendingHistory", 'DateTime'>
    readonly createBy: FieldRef<"ChurchSpendingHistory", 'BigInt'>
    readonly updatedAt: FieldRef<"ChurchSpendingHistory", 'DateTime'>
    readonly updatedBy: FieldRef<"ChurchSpendingHistory", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * ChurchSpendingHistory findUnique
   */
  export type ChurchSpendingHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingHistory
     */
    select?: ChurchSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingHistory
     */
    omit?: ChurchSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which ChurchSpendingHistory to fetch.
     */
    where: ChurchSpendingHistoryWhereUniqueInput
  }

  /**
   * ChurchSpendingHistory findUniqueOrThrow
   */
  export type ChurchSpendingHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingHistory
     */
    select?: ChurchSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingHistory
     */
    omit?: ChurchSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which ChurchSpendingHistory to fetch.
     */
    where: ChurchSpendingHistoryWhereUniqueInput
  }

  /**
   * ChurchSpendingHistory findFirst
   */
  export type ChurchSpendingHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingHistory
     */
    select?: ChurchSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingHistory
     */
    omit?: ChurchSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which ChurchSpendingHistory to fetch.
     */
    where?: ChurchSpendingHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChurchSpendingHistories to fetch.
     */
    orderBy?: ChurchSpendingHistoryOrderByWithRelationInput | ChurchSpendingHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChurchSpendingHistories.
     */
    cursor?: ChurchSpendingHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChurchSpendingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChurchSpendingHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChurchSpendingHistories.
     */
    distinct?: ChurchSpendingHistoryScalarFieldEnum | ChurchSpendingHistoryScalarFieldEnum[]
  }

  /**
   * ChurchSpendingHistory findFirstOrThrow
   */
  export type ChurchSpendingHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingHistory
     */
    select?: ChurchSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingHistory
     */
    omit?: ChurchSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which ChurchSpendingHistory to fetch.
     */
    where?: ChurchSpendingHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChurchSpendingHistories to fetch.
     */
    orderBy?: ChurchSpendingHistoryOrderByWithRelationInput | ChurchSpendingHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChurchSpendingHistories.
     */
    cursor?: ChurchSpendingHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChurchSpendingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChurchSpendingHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChurchSpendingHistories.
     */
    distinct?: ChurchSpendingHistoryScalarFieldEnum | ChurchSpendingHistoryScalarFieldEnum[]
  }

  /**
   * ChurchSpendingHistory findMany
   */
  export type ChurchSpendingHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingHistory
     */
    select?: ChurchSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingHistory
     */
    omit?: ChurchSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which ChurchSpendingHistories to fetch.
     */
    where?: ChurchSpendingHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChurchSpendingHistories to fetch.
     */
    orderBy?: ChurchSpendingHistoryOrderByWithRelationInput | ChurchSpendingHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ChurchSpendingHistories.
     */
    cursor?: ChurchSpendingHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChurchSpendingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChurchSpendingHistories.
     */
    skip?: number
    distinct?: ChurchSpendingHistoryScalarFieldEnum | ChurchSpendingHistoryScalarFieldEnum[]
  }

  /**
   * ChurchSpendingHistory create
   */
  export type ChurchSpendingHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingHistory
     */
    select?: ChurchSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingHistory
     */
    omit?: ChurchSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingHistoryInclude<ExtArgs> | null
    /**
     * The data needed to create a ChurchSpendingHistory.
     */
    data: XOR<ChurchSpendingHistoryCreateInput, ChurchSpendingHistoryUncheckedCreateInput>
  }

  /**
   * ChurchSpendingHistory createMany
   */
  export type ChurchSpendingHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ChurchSpendingHistories.
     */
    data: ChurchSpendingHistoryCreateManyInput | ChurchSpendingHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ChurchSpendingHistory createManyAndReturn
   */
  export type ChurchSpendingHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingHistory
     */
    select?: ChurchSpendingHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingHistory
     */
    omit?: ChurchSpendingHistoryOmit<ExtArgs> | null
    /**
     * The data used to create many ChurchSpendingHistories.
     */
    data: ChurchSpendingHistoryCreateManyInput | ChurchSpendingHistoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingHistoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ChurchSpendingHistory update
   */
  export type ChurchSpendingHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingHistory
     */
    select?: ChurchSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingHistory
     */
    omit?: ChurchSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingHistoryInclude<ExtArgs> | null
    /**
     * The data needed to update a ChurchSpendingHistory.
     */
    data: XOR<ChurchSpendingHistoryUpdateInput, ChurchSpendingHistoryUncheckedUpdateInput>
    /**
     * Choose, which ChurchSpendingHistory to update.
     */
    where: ChurchSpendingHistoryWhereUniqueInput
  }

  /**
   * ChurchSpendingHistory updateMany
   */
  export type ChurchSpendingHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ChurchSpendingHistories.
     */
    data: XOR<ChurchSpendingHistoryUpdateManyMutationInput, ChurchSpendingHistoryUncheckedUpdateManyInput>
    /**
     * Filter which ChurchSpendingHistories to update
     */
    where?: ChurchSpendingHistoryWhereInput
    /**
     * Limit how many ChurchSpendingHistories to update.
     */
    limit?: number
  }

  /**
   * ChurchSpendingHistory updateManyAndReturn
   */
  export type ChurchSpendingHistoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingHistory
     */
    select?: ChurchSpendingHistorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingHistory
     */
    omit?: ChurchSpendingHistoryOmit<ExtArgs> | null
    /**
     * The data used to update ChurchSpendingHistories.
     */
    data: XOR<ChurchSpendingHistoryUpdateManyMutationInput, ChurchSpendingHistoryUncheckedUpdateManyInput>
    /**
     * Filter which ChurchSpendingHistories to update
     */
    where?: ChurchSpendingHistoryWhereInput
    /**
     * Limit how many ChurchSpendingHistories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingHistoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ChurchSpendingHistory upsert
   */
  export type ChurchSpendingHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingHistory
     */
    select?: ChurchSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingHistory
     */
    omit?: ChurchSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingHistoryInclude<ExtArgs> | null
    /**
     * The filter to search for the ChurchSpendingHistory to update in case it exists.
     */
    where: ChurchSpendingHistoryWhereUniqueInput
    /**
     * In case the ChurchSpendingHistory found by the `where` argument doesn't exist, create a new ChurchSpendingHistory with this data.
     */
    create: XOR<ChurchSpendingHistoryCreateInput, ChurchSpendingHistoryUncheckedCreateInput>
    /**
     * In case the ChurchSpendingHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ChurchSpendingHistoryUpdateInput, ChurchSpendingHistoryUncheckedUpdateInput>
  }

  /**
   * ChurchSpendingHistory delete
   */
  export type ChurchSpendingHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingHistory
     */
    select?: ChurchSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingHistory
     */
    omit?: ChurchSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingHistoryInclude<ExtArgs> | null
    /**
     * Filter which ChurchSpendingHistory to delete.
     */
    where: ChurchSpendingHistoryWhereUniqueInput
  }

  /**
   * ChurchSpendingHistory deleteMany
   */
  export type ChurchSpendingHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChurchSpendingHistories to delete
     */
    where?: ChurchSpendingHistoryWhereInput
    /**
     * Limit how many ChurchSpendingHistories to delete.
     */
    limit?: number
  }

  /**
   * ChurchSpendingHistory.churchSpendingHistoryCreateByRel
   */
  export type ChurchSpendingHistory$churchSpendingHistoryCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ChurchSpendingHistory.churchSpendingHistoryUpdateByRel
   */
  export type ChurchSpendingHistory$churchSpendingHistoryUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ChurchSpendingHistory without action
   */
  export type ChurchSpendingHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingHistory
     */
    select?: ChurchSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingHistory
     */
    omit?: ChurchSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingHistoryInclude<ExtArgs> | null
  }


  /**
   * Model ChurchSpendingType
   */

  export type AggregateChurchSpendingType = {
    _count: ChurchSpendingTypeCountAggregateOutputType | null
    _avg: ChurchSpendingTypeAvgAggregateOutputType | null
    _sum: ChurchSpendingTypeSumAggregateOutputType | null
    _min: ChurchSpendingTypeMinAggregateOutputType | null
    _max: ChurchSpendingTypeMaxAggregateOutputType | null
  }

  export type ChurchSpendingTypeAvgAggregateOutputType = {
    id: number | null
    createBy: number | null
    updatedBy: number | null
  }

  export type ChurchSpendingTypeSumAggregateOutputType = {
    id: bigint | null
    createBy: bigint | null
    updatedBy: bigint | null
  }

  export type ChurchSpendingTypeMinAggregateOutputType = {
    id: bigint | null
    spendingTypeName: string | null
    code: string | null
    description: string | null
    createAt: Date | null
    createBy: bigint | null
    deleted: boolean | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type ChurchSpendingTypeMaxAggregateOutputType = {
    id: bigint | null
    spendingTypeName: string | null
    code: string | null
    description: string | null
    createAt: Date | null
    createBy: bigint | null
    deleted: boolean | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type ChurchSpendingTypeCountAggregateOutputType = {
    id: number
    spendingTypeName: number
    code: number
    description: number
    createAt: number
    createBy: number
    deleted: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type ChurchSpendingTypeAvgAggregateInputType = {
    id?: true
    createBy?: true
    updatedBy?: true
  }

  export type ChurchSpendingTypeSumAggregateInputType = {
    id?: true
    createBy?: true
    updatedBy?: true
  }

  export type ChurchSpendingTypeMinAggregateInputType = {
    id?: true
    spendingTypeName?: true
    code?: true
    description?: true
    createAt?: true
    createBy?: true
    deleted?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type ChurchSpendingTypeMaxAggregateInputType = {
    id?: true
    spendingTypeName?: true
    code?: true
    description?: true
    createAt?: true
    createBy?: true
    deleted?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type ChurchSpendingTypeCountAggregateInputType = {
    id?: true
    spendingTypeName?: true
    code?: true
    description?: true
    createAt?: true
    createBy?: true
    deleted?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type ChurchSpendingTypeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChurchSpendingType to aggregate.
     */
    where?: ChurchSpendingTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChurchSpendingTypes to fetch.
     */
    orderBy?: ChurchSpendingTypeOrderByWithRelationInput | ChurchSpendingTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ChurchSpendingTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChurchSpendingTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChurchSpendingTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ChurchSpendingTypes
    **/
    _count?: true | ChurchSpendingTypeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ChurchSpendingTypeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ChurchSpendingTypeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChurchSpendingTypeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChurchSpendingTypeMaxAggregateInputType
  }

  export type GetChurchSpendingTypeAggregateType<T extends ChurchSpendingTypeAggregateArgs> = {
        [P in keyof T & keyof AggregateChurchSpendingType]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChurchSpendingType[P]>
      : GetScalarType<T[P], AggregateChurchSpendingType[P]>
  }




  export type ChurchSpendingTypeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChurchSpendingTypeWhereInput
    orderBy?: ChurchSpendingTypeOrderByWithAggregationInput | ChurchSpendingTypeOrderByWithAggregationInput[]
    by: ChurchSpendingTypeScalarFieldEnum[] | ChurchSpendingTypeScalarFieldEnum
    having?: ChurchSpendingTypeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChurchSpendingTypeCountAggregateInputType | true
    _avg?: ChurchSpendingTypeAvgAggregateInputType
    _sum?: ChurchSpendingTypeSumAggregateInputType
    _min?: ChurchSpendingTypeMinAggregateInputType
    _max?: ChurchSpendingTypeMaxAggregateInputType
  }

  export type ChurchSpendingTypeGroupByOutputType = {
    id: bigint
    spendingTypeName: string
    code: string
    description: string
    createAt: Date
    createBy: bigint | null
    deleted: boolean
    updatedAt: Date
    updatedBy: bigint | null
    _count: ChurchSpendingTypeCountAggregateOutputType | null
    _avg: ChurchSpendingTypeAvgAggregateOutputType | null
    _sum: ChurchSpendingTypeSumAggregateOutputType | null
    _min: ChurchSpendingTypeMinAggregateOutputType | null
    _max: ChurchSpendingTypeMaxAggregateOutputType | null
  }

  type GetChurchSpendingTypeGroupByPayload<T extends ChurchSpendingTypeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ChurchSpendingTypeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChurchSpendingTypeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChurchSpendingTypeGroupByOutputType[P]>
            : GetScalarType<T[P], ChurchSpendingTypeGroupByOutputType[P]>
        }
      >
    >


  export type ChurchSpendingTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    spendingTypeName?: boolean
    code?: boolean
    description?: boolean
    createAt?: boolean
    createBy?: boolean
    deleted?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    churchSpendingTypeCreateByRel?: boolean | ChurchSpendingType$churchSpendingTypeCreateByRelArgs<ExtArgs>
    churchSpendingTypeUpdateByRel?: boolean | ChurchSpendingType$churchSpendingTypeUpdateByRelArgs<ExtArgs>
    churchSpendingTypeIdRel?: boolean | ChurchSpendingType$churchSpendingTypeIdRelArgs<ExtArgs>
    churchSpendingTypeHistoryIdRel?: boolean | ChurchSpendingType$churchSpendingTypeHistoryIdRelArgs<ExtArgs>
    _count?: boolean | ChurchSpendingTypeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["churchSpendingType"]>

  export type ChurchSpendingTypeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    spendingTypeName?: boolean
    code?: boolean
    description?: boolean
    createAt?: boolean
    createBy?: boolean
    deleted?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    churchSpendingTypeCreateByRel?: boolean | ChurchSpendingType$churchSpendingTypeCreateByRelArgs<ExtArgs>
    churchSpendingTypeUpdateByRel?: boolean | ChurchSpendingType$churchSpendingTypeUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["churchSpendingType"]>

  export type ChurchSpendingTypeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    spendingTypeName?: boolean
    code?: boolean
    description?: boolean
    createAt?: boolean
    createBy?: boolean
    deleted?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    churchSpendingTypeCreateByRel?: boolean | ChurchSpendingType$churchSpendingTypeCreateByRelArgs<ExtArgs>
    churchSpendingTypeUpdateByRel?: boolean | ChurchSpendingType$churchSpendingTypeUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["churchSpendingType"]>

  export type ChurchSpendingTypeSelectScalar = {
    id?: boolean
    spendingTypeName?: boolean
    code?: boolean
    description?: boolean
    createAt?: boolean
    createBy?: boolean
    deleted?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type ChurchSpendingTypeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "spendingTypeName" | "code" | "description" | "createAt" | "createBy" | "deleted" | "updatedAt" | "updatedBy", ExtArgs["result"]["churchSpendingType"]>
  export type ChurchSpendingTypeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    churchSpendingTypeCreateByRel?: boolean | ChurchSpendingType$churchSpendingTypeCreateByRelArgs<ExtArgs>
    churchSpendingTypeUpdateByRel?: boolean | ChurchSpendingType$churchSpendingTypeUpdateByRelArgs<ExtArgs>
    churchSpendingTypeIdRel?: boolean | ChurchSpendingType$churchSpendingTypeIdRelArgs<ExtArgs>
    churchSpendingTypeHistoryIdRel?: boolean | ChurchSpendingType$churchSpendingTypeHistoryIdRelArgs<ExtArgs>
    _count?: boolean | ChurchSpendingTypeCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ChurchSpendingTypeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    churchSpendingTypeCreateByRel?: boolean | ChurchSpendingType$churchSpendingTypeCreateByRelArgs<ExtArgs>
    churchSpendingTypeUpdateByRel?: boolean | ChurchSpendingType$churchSpendingTypeUpdateByRelArgs<ExtArgs>
  }
  export type ChurchSpendingTypeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    churchSpendingTypeCreateByRel?: boolean | ChurchSpendingType$churchSpendingTypeCreateByRelArgs<ExtArgs>
    churchSpendingTypeUpdateByRel?: boolean | ChurchSpendingType$churchSpendingTypeUpdateByRelArgs<ExtArgs>
  }

  export type $ChurchSpendingTypePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ChurchSpendingType"
    objects: {
      churchSpendingTypeCreateByRel: Prisma.$UserPayload<ExtArgs> | null
      churchSpendingTypeUpdateByRel: Prisma.$UserPayload<ExtArgs> | null
      churchSpendingTypeIdRel: Prisma.$ChurchSpendingPayload<ExtArgs>[]
      churchSpendingTypeHistoryIdRel: Prisma.$ChurchSpendingHistoryPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      spendingTypeName: string
      code: string
      description: string
      createAt: Date
      createBy: bigint | null
      deleted: boolean
      updatedAt: Date
      updatedBy: bigint | null
    }, ExtArgs["result"]["churchSpendingType"]>
    composites: {}
  }

  type ChurchSpendingTypeGetPayload<S extends boolean | null | undefined | ChurchSpendingTypeDefaultArgs> = $Result.GetResult<Prisma.$ChurchSpendingTypePayload, S>

  type ChurchSpendingTypeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ChurchSpendingTypeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ChurchSpendingTypeCountAggregateInputType | true
    }

  export interface ChurchSpendingTypeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ChurchSpendingType'], meta: { name: 'ChurchSpendingType' } }
    /**
     * Find zero or one ChurchSpendingType that matches the filter.
     * @param {ChurchSpendingTypeFindUniqueArgs} args - Arguments to find a ChurchSpendingType
     * @example
     * // Get one ChurchSpendingType
     * const churchSpendingType = await prisma.churchSpendingType.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ChurchSpendingTypeFindUniqueArgs>(args: SelectSubset<T, ChurchSpendingTypeFindUniqueArgs<ExtArgs>>): Prisma__ChurchSpendingTypeClient<$Result.GetResult<Prisma.$ChurchSpendingTypePayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one ChurchSpendingType that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ChurchSpendingTypeFindUniqueOrThrowArgs} args - Arguments to find a ChurchSpendingType
     * @example
     * // Get one ChurchSpendingType
     * const churchSpendingType = await prisma.churchSpendingType.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ChurchSpendingTypeFindUniqueOrThrowArgs>(args: SelectSubset<T, ChurchSpendingTypeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ChurchSpendingTypeClient<$Result.GetResult<Prisma.$ChurchSpendingTypePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first ChurchSpendingType that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchSpendingTypeFindFirstArgs} args - Arguments to find a ChurchSpendingType
     * @example
     * // Get one ChurchSpendingType
     * const churchSpendingType = await prisma.churchSpendingType.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ChurchSpendingTypeFindFirstArgs>(args?: SelectSubset<T, ChurchSpendingTypeFindFirstArgs<ExtArgs>>): Prisma__ChurchSpendingTypeClient<$Result.GetResult<Prisma.$ChurchSpendingTypePayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first ChurchSpendingType that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchSpendingTypeFindFirstOrThrowArgs} args - Arguments to find a ChurchSpendingType
     * @example
     * // Get one ChurchSpendingType
     * const churchSpendingType = await prisma.churchSpendingType.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ChurchSpendingTypeFindFirstOrThrowArgs>(args?: SelectSubset<T, ChurchSpendingTypeFindFirstOrThrowArgs<ExtArgs>>): Prisma__ChurchSpendingTypeClient<$Result.GetResult<Prisma.$ChurchSpendingTypePayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more ChurchSpendingTypes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchSpendingTypeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ChurchSpendingTypes
     * const churchSpendingTypes = await prisma.churchSpendingType.findMany()
     * 
     * // Get first 10 ChurchSpendingTypes
     * const churchSpendingTypes = await prisma.churchSpendingType.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const churchSpendingTypeWithIdOnly = await prisma.churchSpendingType.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ChurchSpendingTypeFindManyArgs>(args?: SelectSubset<T, ChurchSpendingTypeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchSpendingTypePayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a ChurchSpendingType.
     * @param {ChurchSpendingTypeCreateArgs} args - Arguments to create a ChurchSpendingType.
     * @example
     * // Create one ChurchSpendingType
     * const ChurchSpendingType = await prisma.churchSpendingType.create({
     *   data: {
     *     // ... data to create a ChurchSpendingType
     *   }
     * })
     * 
     */
    create<T extends ChurchSpendingTypeCreateArgs>(args: SelectSubset<T, ChurchSpendingTypeCreateArgs<ExtArgs>>): Prisma__ChurchSpendingTypeClient<$Result.GetResult<Prisma.$ChurchSpendingTypePayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many ChurchSpendingTypes.
     * @param {ChurchSpendingTypeCreateManyArgs} args - Arguments to create many ChurchSpendingTypes.
     * @example
     * // Create many ChurchSpendingTypes
     * const churchSpendingType = await prisma.churchSpendingType.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ChurchSpendingTypeCreateManyArgs>(args?: SelectSubset<T, ChurchSpendingTypeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ChurchSpendingTypes and returns the data saved in the database.
     * @param {ChurchSpendingTypeCreateManyAndReturnArgs} args - Arguments to create many ChurchSpendingTypes.
     * @example
     * // Create many ChurchSpendingTypes
     * const churchSpendingType = await prisma.churchSpendingType.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ChurchSpendingTypes and only return the `id`
     * const churchSpendingTypeWithIdOnly = await prisma.churchSpendingType.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ChurchSpendingTypeCreateManyAndReturnArgs>(args?: SelectSubset<T, ChurchSpendingTypeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchSpendingTypePayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a ChurchSpendingType.
     * @param {ChurchSpendingTypeDeleteArgs} args - Arguments to delete one ChurchSpendingType.
     * @example
     * // Delete one ChurchSpendingType
     * const ChurchSpendingType = await prisma.churchSpendingType.delete({
     *   where: {
     *     // ... filter to delete one ChurchSpendingType
     *   }
     * })
     * 
     */
    delete<T extends ChurchSpendingTypeDeleteArgs>(args: SelectSubset<T, ChurchSpendingTypeDeleteArgs<ExtArgs>>): Prisma__ChurchSpendingTypeClient<$Result.GetResult<Prisma.$ChurchSpendingTypePayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one ChurchSpendingType.
     * @param {ChurchSpendingTypeUpdateArgs} args - Arguments to update one ChurchSpendingType.
     * @example
     * // Update one ChurchSpendingType
     * const churchSpendingType = await prisma.churchSpendingType.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ChurchSpendingTypeUpdateArgs>(args: SelectSubset<T, ChurchSpendingTypeUpdateArgs<ExtArgs>>): Prisma__ChurchSpendingTypeClient<$Result.GetResult<Prisma.$ChurchSpendingTypePayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more ChurchSpendingTypes.
     * @param {ChurchSpendingTypeDeleteManyArgs} args - Arguments to filter ChurchSpendingTypes to delete.
     * @example
     * // Delete a few ChurchSpendingTypes
     * const { count } = await prisma.churchSpendingType.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ChurchSpendingTypeDeleteManyArgs>(args?: SelectSubset<T, ChurchSpendingTypeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChurchSpendingTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchSpendingTypeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ChurchSpendingTypes
     * const churchSpendingType = await prisma.churchSpendingType.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ChurchSpendingTypeUpdateManyArgs>(args: SelectSubset<T, ChurchSpendingTypeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChurchSpendingTypes and returns the data updated in the database.
     * @param {ChurchSpendingTypeUpdateManyAndReturnArgs} args - Arguments to update many ChurchSpendingTypes.
     * @example
     * // Update many ChurchSpendingTypes
     * const churchSpendingType = await prisma.churchSpendingType.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ChurchSpendingTypes and only return the `id`
     * const churchSpendingTypeWithIdOnly = await prisma.churchSpendingType.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ChurchSpendingTypeUpdateManyAndReturnArgs>(args: SelectSubset<T, ChurchSpendingTypeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchSpendingTypePayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one ChurchSpendingType.
     * @param {ChurchSpendingTypeUpsertArgs} args - Arguments to update or create a ChurchSpendingType.
     * @example
     * // Update or create a ChurchSpendingType
     * const churchSpendingType = await prisma.churchSpendingType.upsert({
     *   create: {
     *     // ... data to create a ChurchSpendingType
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ChurchSpendingType we want to update
     *   }
     * })
     */
    upsert<T extends ChurchSpendingTypeUpsertArgs>(args: SelectSubset<T, ChurchSpendingTypeUpsertArgs<ExtArgs>>): Prisma__ChurchSpendingTypeClient<$Result.GetResult<Prisma.$ChurchSpendingTypePayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of ChurchSpendingTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchSpendingTypeCountArgs} args - Arguments to filter ChurchSpendingTypes to count.
     * @example
     * // Count the number of ChurchSpendingTypes
     * const count = await prisma.churchSpendingType.count({
     *   where: {
     *     // ... the filter for the ChurchSpendingTypes we want to count
     *   }
     * })
    **/
    count<T extends ChurchSpendingTypeCountArgs>(
      args?: Subset<T, ChurchSpendingTypeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChurchSpendingTypeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ChurchSpendingType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchSpendingTypeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChurchSpendingTypeAggregateArgs>(args: Subset<T, ChurchSpendingTypeAggregateArgs>): Prisma.PrismaPromise<GetChurchSpendingTypeAggregateType<T>>

    /**
     * Group by ChurchSpendingType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChurchSpendingTypeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ChurchSpendingTypeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ChurchSpendingTypeGroupByArgs['orderBy'] }
        : { orderBy?: ChurchSpendingTypeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ChurchSpendingTypeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChurchSpendingTypeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ChurchSpendingType model
   */
  readonly fields: ChurchSpendingTypeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ChurchSpendingType.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ChurchSpendingTypeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    churchSpendingTypeCreateByRel<T extends ChurchSpendingType$churchSpendingTypeCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, ChurchSpendingType$churchSpendingTypeCreateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    churchSpendingTypeUpdateByRel<T extends ChurchSpendingType$churchSpendingTypeUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, ChurchSpendingType$churchSpendingTypeUpdateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    churchSpendingTypeIdRel<T extends ChurchSpendingType$churchSpendingTypeIdRelArgs<ExtArgs> = {}>(args?: Subset<T, ChurchSpendingType$churchSpendingTypeIdRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchSpendingPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    churchSpendingTypeHistoryIdRel<T extends ChurchSpendingType$churchSpendingTypeHistoryIdRelArgs<ExtArgs> = {}>(args?: Subset<T, ChurchSpendingType$churchSpendingTypeHistoryIdRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChurchSpendingHistoryPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ChurchSpendingType model
   */ 
  interface ChurchSpendingTypeFieldRefs {
    readonly id: FieldRef<"ChurchSpendingType", 'BigInt'>
    readonly spendingTypeName: FieldRef<"ChurchSpendingType", 'String'>
    readonly code: FieldRef<"ChurchSpendingType", 'String'>
    readonly description: FieldRef<"ChurchSpendingType", 'String'>
    readonly createAt: FieldRef<"ChurchSpendingType", 'DateTime'>
    readonly createBy: FieldRef<"ChurchSpendingType", 'BigInt'>
    readonly deleted: FieldRef<"ChurchSpendingType", 'Boolean'>
    readonly updatedAt: FieldRef<"ChurchSpendingType", 'DateTime'>
    readonly updatedBy: FieldRef<"ChurchSpendingType", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * ChurchSpendingType findUnique
   */
  export type ChurchSpendingTypeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingType
     */
    select?: ChurchSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingType
     */
    omit?: ChurchSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingTypeInclude<ExtArgs> | null
    /**
     * Filter, which ChurchSpendingType to fetch.
     */
    where: ChurchSpendingTypeWhereUniqueInput
  }

  /**
   * ChurchSpendingType findUniqueOrThrow
   */
  export type ChurchSpendingTypeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingType
     */
    select?: ChurchSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingType
     */
    omit?: ChurchSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingTypeInclude<ExtArgs> | null
    /**
     * Filter, which ChurchSpendingType to fetch.
     */
    where: ChurchSpendingTypeWhereUniqueInput
  }

  /**
   * ChurchSpendingType findFirst
   */
  export type ChurchSpendingTypeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingType
     */
    select?: ChurchSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingType
     */
    omit?: ChurchSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingTypeInclude<ExtArgs> | null
    /**
     * Filter, which ChurchSpendingType to fetch.
     */
    where?: ChurchSpendingTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChurchSpendingTypes to fetch.
     */
    orderBy?: ChurchSpendingTypeOrderByWithRelationInput | ChurchSpendingTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChurchSpendingTypes.
     */
    cursor?: ChurchSpendingTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChurchSpendingTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChurchSpendingTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChurchSpendingTypes.
     */
    distinct?: ChurchSpendingTypeScalarFieldEnum | ChurchSpendingTypeScalarFieldEnum[]
  }

  /**
   * ChurchSpendingType findFirstOrThrow
   */
  export type ChurchSpendingTypeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingType
     */
    select?: ChurchSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingType
     */
    omit?: ChurchSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingTypeInclude<ExtArgs> | null
    /**
     * Filter, which ChurchSpendingType to fetch.
     */
    where?: ChurchSpendingTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChurchSpendingTypes to fetch.
     */
    orderBy?: ChurchSpendingTypeOrderByWithRelationInput | ChurchSpendingTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChurchSpendingTypes.
     */
    cursor?: ChurchSpendingTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChurchSpendingTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChurchSpendingTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChurchSpendingTypes.
     */
    distinct?: ChurchSpendingTypeScalarFieldEnum | ChurchSpendingTypeScalarFieldEnum[]
  }

  /**
   * ChurchSpendingType findMany
   */
  export type ChurchSpendingTypeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingType
     */
    select?: ChurchSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingType
     */
    omit?: ChurchSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingTypeInclude<ExtArgs> | null
    /**
     * Filter, which ChurchSpendingTypes to fetch.
     */
    where?: ChurchSpendingTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChurchSpendingTypes to fetch.
     */
    orderBy?: ChurchSpendingTypeOrderByWithRelationInput | ChurchSpendingTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ChurchSpendingTypes.
     */
    cursor?: ChurchSpendingTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChurchSpendingTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChurchSpendingTypes.
     */
    skip?: number
    distinct?: ChurchSpendingTypeScalarFieldEnum | ChurchSpendingTypeScalarFieldEnum[]
  }

  /**
   * ChurchSpendingType create
   */
  export type ChurchSpendingTypeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingType
     */
    select?: ChurchSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingType
     */
    omit?: ChurchSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingTypeInclude<ExtArgs> | null
    /**
     * The data needed to create a ChurchSpendingType.
     */
    data: XOR<ChurchSpendingTypeCreateInput, ChurchSpendingTypeUncheckedCreateInput>
  }

  /**
   * ChurchSpendingType createMany
   */
  export type ChurchSpendingTypeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ChurchSpendingTypes.
     */
    data: ChurchSpendingTypeCreateManyInput | ChurchSpendingTypeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ChurchSpendingType createManyAndReturn
   */
  export type ChurchSpendingTypeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingType
     */
    select?: ChurchSpendingTypeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingType
     */
    omit?: ChurchSpendingTypeOmit<ExtArgs> | null
    /**
     * The data used to create many ChurchSpendingTypes.
     */
    data: ChurchSpendingTypeCreateManyInput | ChurchSpendingTypeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingTypeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ChurchSpendingType update
   */
  export type ChurchSpendingTypeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingType
     */
    select?: ChurchSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingType
     */
    omit?: ChurchSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingTypeInclude<ExtArgs> | null
    /**
     * The data needed to update a ChurchSpendingType.
     */
    data: XOR<ChurchSpendingTypeUpdateInput, ChurchSpendingTypeUncheckedUpdateInput>
    /**
     * Choose, which ChurchSpendingType to update.
     */
    where: ChurchSpendingTypeWhereUniqueInput
  }

  /**
   * ChurchSpendingType updateMany
   */
  export type ChurchSpendingTypeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ChurchSpendingTypes.
     */
    data: XOR<ChurchSpendingTypeUpdateManyMutationInput, ChurchSpendingTypeUncheckedUpdateManyInput>
    /**
     * Filter which ChurchSpendingTypes to update
     */
    where?: ChurchSpendingTypeWhereInput
    /**
     * Limit how many ChurchSpendingTypes to update.
     */
    limit?: number
  }

  /**
   * ChurchSpendingType updateManyAndReturn
   */
  export type ChurchSpendingTypeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingType
     */
    select?: ChurchSpendingTypeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingType
     */
    omit?: ChurchSpendingTypeOmit<ExtArgs> | null
    /**
     * The data used to update ChurchSpendingTypes.
     */
    data: XOR<ChurchSpendingTypeUpdateManyMutationInput, ChurchSpendingTypeUncheckedUpdateManyInput>
    /**
     * Filter which ChurchSpendingTypes to update
     */
    where?: ChurchSpendingTypeWhereInput
    /**
     * Limit how many ChurchSpendingTypes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingTypeIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ChurchSpendingType upsert
   */
  export type ChurchSpendingTypeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingType
     */
    select?: ChurchSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingType
     */
    omit?: ChurchSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingTypeInclude<ExtArgs> | null
    /**
     * The filter to search for the ChurchSpendingType to update in case it exists.
     */
    where: ChurchSpendingTypeWhereUniqueInput
    /**
     * In case the ChurchSpendingType found by the `where` argument doesn't exist, create a new ChurchSpendingType with this data.
     */
    create: XOR<ChurchSpendingTypeCreateInput, ChurchSpendingTypeUncheckedCreateInput>
    /**
     * In case the ChurchSpendingType was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ChurchSpendingTypeUpdateInput, ChurchSpendingTypeUncheckedUpdateInput>
  }

  /**
   * ChurchSpendingType delete
   */
  export type ChurchSpendingTypeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingType
     */
    select?: ChurchSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingType
     */
    omit?: ChurchSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingTypeInclude<ExtArgs> | null
    /**
     * Filter which ChurchSpendingType to delete.
     */
    where: ChurchSpendingTypeWhereUniqueInput
  }

  /**
   * ChurchSpendingType deleteMany
   */
  export type ChurchSpendingTypeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChurchSpendingTypes to delete
     */
    where?: ChurchSpendingTypeWhereInput
    /**
     * Limit how many ChurchSpendingTypes to delete.
     */
    limit?: number
  }

  /**
   * ChurchSpendingType.churchSpendingTypeCreateByRel
   */
  export type ChurchSpendingType$churchSpendingTypeCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ChurchSpendingType.churchSpendingTypeUpdateByRel
   */
  export type ChurchSpendingType$churchSpendingTypeUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ChurchSpendingType.churchSpendingTypeIdRel
   */
  export type ChurchSpendingType$churchSpendingTypeIdRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpending
     */
    select?: ChurchSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpending
     */
    omit?: ChurchSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingInclude<ExtArgs> | null
    where?: ChurchSpendingWhereInput
    orderBy?: ChurchSpendingOrderByWithRelationInput | ChurchSpendingOrderByWithRelationInput[]
    cursor?: ChurchSpendingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChurchSpendingScalarFieldEnum | ChurchSpendingScalarFieldEnum[]
  }

  /**
   * ChurchSpendingType.churchSpendingTypeHistoryIdRel
   */
  export type ChurchSpendingType$churchSpendingTypeHistoryIdRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingHistory
     */
    select?: ChurchSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingHistory
     */
    omit?: ChurchSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingHistoryInclude<ExtArgs> | null
    where?: ChurchSpendingHistoryWhereInput
    orderBy?: ChurchSpendingHistoryOrderByWithRelationInput | ChurchSpendingHistoryOrderByWithRelationInput[]
    cursor?: ChurchSpendingHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChurchSpendingHistoryScalarFieldEnum | ChurchSpendingHistoryScalarFieldEnum[]
  }

  /**
   * ChurchSpendingType without action
   */
  export type ChurchSpendingTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChurchSpendingType
     */
    select?: ChurchSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChurchSpendingType
     */
    omit?: ChurchSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChurchSpendingTypeInclude<ExtArgs> | null
  }


  /**
   * Model StoreIncome
   */

  export type AggregateStoreIncome = {
    _count: StoreIncomeCountAggregateOutputType | null
    _avg: StoreIncomeAvgAggregateOutputType | null
    _sum: StoreIncomeSumAggregateOutputType | null
    _min: StoreIncomeMinAggregateOutputType | null
    _max: StoreIncomeMaxAggregateOutputType | null
  }

  export type StoreIncomeAvgAggregateOutputType = {
    id: number | null
    incomeTypeId: number | null
    funds: number | null
    createBy: number | null
    updatedBy: number | null
  }

  export type StoreIncomeSumAggregateOutputType = {
    id: bigint | null
    incomeTypeId: bigint | null
    funds: bigint | null
    createBy: bigint | null
    updatedBy: bigint | null
  }

  export type StoreIncomeMinAggregateOutputType = {
    id: bigint | null
    incomeTypeId: bigint | null
    detail: string | null
    funds: bigint | null
    date: Date | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type StoreIncomeMaxAggregateOutputType = {
    id: bigint | null
    incomeTypeId: bigint | null
    detail: string | null
    funds: bigint | null
    date: Date | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type StoreIncomeCountAggregateOutputType = {
    id: number
    incomeTypeId: number
    detail: number
    funds: number
    date: number
    deleted: number
    createAt: number
    createBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type StoreIncomeAvgAggregateInputType = {
    id?: true
    incomeTypeId?: true
    funds?: true
    createBy?: true
    updatedBy?: true
  }

  export type StoreIncomeSumAggregateInputType = {
    id?: true
    incomeTypeId?: true
    funds?: true
    createBy?: true
    updatedBy?: true
  }

  export type StoreIncomeMinAggregateInputType = {
    id?: true
    incomeTypeId?: true
    detail?: true
    funds?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type StoreIncomeMaxAggregateInputType = {
    id?: true
    incomeTypeId?: true
    detail?: true
    funds?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type StoreIncomeCountAggregateInputType = {
    id?: true
    incomeTypeId?: true
    detail?: true
    funds?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type StoreIncomeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StoreIncome to aggregate.
     */
    where?: StoreIncomeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreIncomes to fetch.
     */
    orderBy?: StoreIncomeOrderByWithRelationInput | StoreIncomeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StoreIncomeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreIncomes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreIncomes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StoreIncomes
    **/
    _count?: true | StoreIncomeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StoreIncomeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StoreIncomeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StoreIncomeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StoreIncomeMaxAggregateInputType
  }

  export type GetStoreIncomeAggregateType<T extends StoreIncomeAggregateArgs> = {
        [P in keyof T & keyof AggregateStoreIncome]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStoreIncome[P]>
      : GetScalarType<T[P], AggregateStoreIncome[P]>
  }




  export type StoreIncomeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreIncomeWhereInput
    orderBy?: StoreIncomeOrderByWithAggregationInput | StoreIncomeOrderByWithAggregationInput[]
    by: StoreIncomeScalarFieldEnum[] | StoreIncomeScalarFieldEnum
    having?: StoreIncomeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StoreIncomeCountAggregateInputType | true
    _avg?: StoreIncomeAvgAggregateInputType
    _sum?: StoreIncomeSumAggregateInputType
    _min?: StoreIncomeMinAggregateInputType
    _max?: StoreIncomeMaxAggregateInputType
  }

  export type StoreIncomeGroupByOutputType = {
    id: bigint
    incomeTypeId: bigint
    detail: string | null
    funds: bigint
    date: Date
    deleted: boolean
    createAt: Date
    createBy: bigint | null
    updatedAt: Date
    updatedBy: bigint | null
    _count: StoreIncomeCountAggregateOutputType | null
    _avg: StoreIncomeAvgAggregateOutputType | null
    _sum: StoreIncomeSumAggregateOutputType | null
    _min: StoreIncomeMinAggregateOutputType | null
    _max: StoreIncomeMaxAggregateOutputType | null
  }

  type GetStoreIncomeGroupByPayload<T extends StoreIncomeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StoreIncomeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StoreIncomeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StoreIncomeGroupByOutputType[P]>
            : GetScalarType<T[P], StoreIncomeGroupByOutputType[P]>
        }
      >
    >


  export type StoreIncomeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    incomeTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    storeIncomeTypeIdRel?: boolean | StoreIncomeTypeDefaultArgs<ExtArgs>
    storeIncomeCreateByRel?: boolean | StoreIncome$storeIncomeCreateByRelArgs<ExtArgs>
    storeIncomeUpdateByRel?: boolean | StoreIncome$storeIncomeUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["storeIncome"]>

  export type StoreIncomeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    incomeTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    storeIncomeTypeIdRel?: boolean | StoreIncomeTypeDefaultArgs<ExtArgs>
    storeIncomeCreateByRel?: boolean | StoreIncome$storeIncomeCreateByRelArgs<ExtArgs>
    storeIncomeUpdateByRel?: boolean | StoreIncome$storeIncomeUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["storeIncome"]>

  export type StoreIncomeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    incomeTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    storeIncomeTypeIdRel?: boolean | StoreIncomeTypeDefaultArgs<ExtArgs>
    storeIncomeCreateByRel?: boolean | StoreIncome$storeIncomeCreateByRelArgs<ExtArgs>
    storeIncomeUpdateByRel?: boolean | StoreIncome$storeIncomeUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["storeIncome"]>

  export type StoreIncomeSelectScalar = {
    id?: boolean
    incomeTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type StoreIncomeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "incomeTypeId" | "detail" | "funds" | "date" | "deleted" | "createAt" | "createBy" | "updatedAt" | "updatedBy", ExtArgs["result"]["storeIncome"]>
  export type StoreIncomeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    storeIncomeTypeIdRel?: boolean | StoreIncomeTypeDefaultArgs<ExtArgs>
    storeIncomeCreateByRel?: boolean | StoreIncome$storeIncomeCreateByRelArgs<ExtArgs>
    storeIncomeUpdateByRel?: boolean | StoreIncome$storeIncomeUpdateByRelArgs<ExtArgs>
  }
  export type StoreIncomeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    storeIncomeTypeIdRel?: boolean | StoreIncomeTypeDefaultArgs<ExtArgs>
    storeIncomeCreateByRel?: boolean | StoreIncome$storeIncomeCreateByRelArgs<ExtArgs>
    storeIncomeUpdateByRel?: boolean | StoreIncome$storeIncomeUpdateByRelArgs<ExtArgs>
  }
  export type StoreIncomeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    storeIncomeTypeIdRel?: boolean | StoreIncomeTypeDefaultArgs<ExtArgs>
    storeIncomeCreateByRel?: boolean | StoreIncome$storeIncomeCreateByRelArgs<ExtArgs>
    storeIncomeUpdateByRel?: boolean | StoreIncome$storeIncomeUpdateByRelArgs<ExtArgs>
  }

  export type $StoreIncomePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StoreIncome"
    objects: {
      storeIncomeTypeIdRel: Prisma.$StoreIncomeTypePayload<ExtArgs>
      storeIncomeCreateByRel: Prisma.$UserPayload<ExtArgs> | null
      storeIncomeUpdateByRel: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      incomeTypeId: bigint
      detail: string | null
      funds: bigint
      date: Date
      deleted: boolean
      createAt: Date
      createBy: bigint | null
      updatedAt: Date
      updatedBy: bigint | null
    }, ExtArgs["result"]["storeIncome"]>
    composites: {}
  }

  type StoreIncomeGetPayload<S extends boolean | null | undefined | StoreIncomeDefaultArgs> = $Result.GetResult<Prisma.$StoreIncomePayload, S>

  type StoreIncomeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StoreIncomeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StoreIncomeCountAggregateInputType | true
    }

  export interface StoreIncomeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StoreIncome'], meta: { name: 'StoreIncome' } }
    /**
     * Find zero or one StoreIncome that matches the filter.
     * @param {StoreIncomeFindUniqueArgs} args - Arguments to find a StoreIncome
     * @example
     * // Get one StoreIncome
     * const storeIncome = await prisma.storeIncome.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StoreIncomeFindUniqueArgs>(args: SelectSubset<T, StoreIncomeFindUniqueArgs<ExtArgs>>): Prisma__StoreIncomeClient<$Result.GetResult<Prisma.$StoreIncomePayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one StoreIncome that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StoreIncomeFindUniqueOrThrowArgs} args - Arguments to find a StoreIncome
     * @example
     * // Get one StoreIncome
     * const storeIncome = await prisma.storeIncome.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StoreIncomeFindUniqueOrThrowArgs>(args: SelectSubset<T, StoreIncomeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StoreIncomeClient<$Result.GetResult<Prisma.$StoreIncomePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first StoreIncome that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreIncomeFindFirstArgs} args - Arguments to find a StoreIncome
     * @example
     * // Get one StoreIncome
     * const storeIncome = await prisma.storeIncome.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StoreIncomeFindFirstArgs>(args?: SelectSubset<T, StoreIncomeFindFirstArgs<ExtArgs>>): Prisma__StoreIncomeClient<$Result.GetResult<Prisma.$StoreIncomePayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first StoreIncome that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreIncomeFindFirstOrThrowArgs} args - Arguments to find a StoreIncome
     * @example
     * // Get one StoreIncome
     * const storeIncome = await prisma.storeIncome.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StoreIncomeFindFirstOrThrowArgs>(args?: SelectSubset<T, StoreIncomeFindFirstOrThrowArgs<ExtArgs>>): Prisma__StoreIncomeClient<$Result.GetResult<Prisma.$StoreIncomePayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more StoreIncomes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreIncomeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StoreIncomes
     * const storeIncomes = await prisma.storeIncome.findMany()
     * 
     * // Get first 10 StoreIncomes
     * const storeIncomes = await prisma.storeIncome.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const storeIncomeWithIdOnly = await prisma.storeIncome.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StoreIncomeFindManyArgs>(args?: SelectSubset<T, StoreIncomeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreIncomePayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a StoreIncome.
     * @param {StoreIncomeCreateArgs} args - Arguments to create a StoreIncome.
     * @example
     * // Create one StoreIncome
     * const StoreIncome = await prisma.storeIncome.create({
     *   data: {
     *     // ... data to create a StoreIncome
     *   }
     * })
     * 
     */
    create<T extends StoreIncomeCreateArgs>(args: SelectSubset<T, StoreIncomeCreateArgs<ExtArgs>>): Prisma__StoreIncomeClient<$Result.GetResult<Prisma.$StoreIncomePayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many StoreIncomes.
     * @param {StoreIncomeCreateManyArgs} args - Arguments to create many StoreIncomes.
     * @example
     * // Create many StoreIncomes
     * const storeIncome = await prisma.storeIncome.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StoreIncomeCreateManyArgs>(args?: SelectSubset<T, StoreIncomeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many StoreIncomes and returns the data saved in the database.
     * @param {StoreIncomeCreateManyAndReturnArgs} args - Arguments to create many StoreIncomes.
     * @example
     * // Create many StoreIncomes
     * const storeIncome = await prisma.storeIncome.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many StoreIncomes and only return the `id`
     * const storeIncomeWithIdOnly = await prisma.storeIncome.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends StoreIncomeCreateManyAndReturnArgs>(args?: SelectSubset<T, StoreIncomeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreIncomePayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a StoreIncome.
     * @param {StoreIncomeDeleteArgs} args - Arguments to delete one StoreIncome.
     * @example
     * // Delete one StoreIncome
     * const StoreIncome = await prisma.storeIncome.delete({
     *   where: {
     *     // ... filter to delete one StoreIncome
     *   }
     * })
     * 
     */
    delete<T extends StoreIncomeDeleteArgs>(args: SelectSubset<T, StoreIncomeDeleteArgs<ExtArgs>>): Prisma__StoreIncomeClient<$Result.GetResult<Prisma.$StoreIncomePayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one StoreIncome.
     * @param {StoreIncomeUpdateArgs} args - Arguments to update one StoreIncome.
     * @example
     * // Update one StoreIncome
     * const storeIncome = await prisma.storeIncome.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StoreIncomeUpdateArgs>(args: SelectSubset<T, StoreIncomeUpdateArgs<ExtArgs>>): Prisma__StoreIncomeClient<$Result.GetResult<Prisma.$StoreIncomePayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more StoreIncomes.
     * @param {StoreIncomeDeleteManyArgs} args - Arguments to filter StoreIncomes to delete.
     * @example
     * // Delete a few StoreIncomes
     * const { count } = await prisma.storeIncome.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StoreIncomeDeleteManyArgs>(args?: SelectSubset<T, StoreIncomeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StoreIncomes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreIncomeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StoreIncomes
     * const storeIncome = await prisma.storeIncome.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StoreIncomeUpdateManyArgs>(args: SelectSubset<T, StoreIncomeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StoreIncomes and returns the data updated in the database.
     * @param {StoreIncomeUpdateManyAndReturnArgs} args - Arguments to update many StoreIncomes.
     * @example
     * // Update many StoreIncomes
     * const storeIncome = await prisma.storeIncome.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more StoreIncomes and only return the `id`
     * const storeIncomeWithIdOnly = await prisma.storeIncome.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends StoreIncomeUpdateManyAndReturnArgs>(args: SelectSubset<T, StoreIncomeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreIncomePayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one StoreIncome.
     * @param {StoreIncomeUpsertArgs} args - Arguments to update or create a StoreIncome.
     * @example
     * // Update or create a StoreIncome
     * const storeIncome = await prisma.storeIncome.upsert({
     *   create: {
     *     // ... data to create a StoreIncome
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StoreIncome we want to update
     *   }
     * })
     */
    upsert<T extends StoreIncomeUpsertArgs>(args: SelectSubset<T, StoreIncomeUpsertArgs<ExtArgs>>): Prisma__StoreIncomeClient<$Result.GetResult<Prisma.$StoreIncomePayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of StoreIncomes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreIncomeCountArgs} args - Arguments to filter StoreIncomes to count.
     * @example
     * // Count the number of StoreIncomes
     * const count = await prisma.storeIncome.count({
     *   where: {
     *     // ... the filter for the StoreIncomes we want to count
     *   }
     * })
    **/
    count<T extends StoreIncomeCountArgs>(
      args?: Subset<T, StoreIncomeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StoreIncomeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StoreIncome.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreIncomeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StoreIncomeAggregateArgs>(args: Subset<T, StoreIncomeAggregateArgs>): Prisma.PrismaPromise<GetStoreIncomeAggregateType<T>>

    /**
     * Group by StoreIncome.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreIncomeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StoreIncomeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StoreIncomeGroupByArgs['orderBy'] }
        : { orderBy?: StoreIncomeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StoreIncomeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStoreIncomeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StoreIncome model
   */
  readonly fields: StoreIncomeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StoreIncome.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StoreIncomeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    storeIncomeTypeIdRel<T extends StoreIncomeTypeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, StoreIncomeTypeDefaultArgs<ExtArgs>>): Prisma__StoreIncomeTypeClient<$Result.GetResult<Prisma.$StoreIncomeTypePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    storeIncomeCreateByRel<T extends StoreIncome$storeIncomeCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, StoreIncome$storeIncomeCreateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    storeIncomeUpdateByRel<T extends StoreIncome$storeIncomeUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, StoreIncome$storeIncomeUpdateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StoreIncome model
   */ 
  interface StoreIncomeFieldRefs {
    readonly id: FieldRef<"StoreIncome", 'BigInt'>
    readonly incomeTypeId: FieldRef<"StoreIncome", 'BigInt'>
    readonly detail: FieldRef<"StoreIncome", 'String'>
    readonly funds: FieldRef<"StoreIncome", 'BigInt'>
    readonly date: FieldRef<"StoreIncome", 'DateTime'>
    readonly deleted: FieldRef<"StoreIncome", 'Boolean'>
    readonly createAt: FieldRef<"StoreIncome", 'DateTime'>
    readonly createBy: FieldRef<"StoreIncome", 'BigInt'>
    readonly updatedAt: FieldRef<"StoreIncome", 'DateTime'>
    readonly updatedBy: FieldRef<"StoreIncome", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * StoreIncome findUnique
   */
  export type StoreIncomeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncome
     */
    select?: StoreIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncome
     */
    omit?: StoreIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeInclude<ExtArgs> | null
    /**
     * Filter, which StoreIncome to fetch.
     */
    where: StoreIncomeWhereUniqueInput
  }

  /**
   * StoreIncome findUniqueOrThrow
   */
  export type StoreIncomeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncome
     */
    select?: StoreIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncome
     */
    omit?: StoreIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeInclude<ExtArgs> | null
    /**
     * Filter, which StoreIncome to fetch.
     */
    where: StoreIncomeWhereUniqueInput
  }

  /**
   * StoreIncome findFirst
   */
  export type StoreIncomeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncome
     */
    select?: StoreIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncome
     */
    omit?: StoreIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeInclude<ExtArgs> | null
    /**
     * Filter, which StoreIncome to fetch.
     */
    where?: StoreIncomeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreIncomes to fetch.
     */
    orderBy?: StoreIncomeOrderByWithRelationInput | StoreIncomeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StoreIncomes.
     */
    cursor?: StoreIncomeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreIncomes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreIncomes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StoreIncomes.
     */
    distinct?: StoreIncomeScalarFieldEnum | StoreIncomeScalarFieldEnum[]
  }

  /**
   * StoreIncome findFirstOrThrow
   */
  export type StoreIncomeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncome
     */
    select?: StoreIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncome
     */
    omit?: StoreIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeInclude<ExtArgs> | null
    /**
     * Filter, which StoreIncome to fetch.
     */
    where?: StoreIncomeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreIncomes to fetch.
     */
    orderBy?: StoreIncomeOrderByWithRelationInput | StoreIncomeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StoreIncomes.
     */
    cursor?: StoreIncomeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreIncomes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreIncomes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StoreIncomes.
     */
    distinct?: StoreIncomeScalarFieldEnum | StoreIncomeScalarFieldEnum[]
  }

  /**
   * StoreIncome findMany
   */
  export type StoreIncomeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncome
     */
    select?: StoreIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncome
     */
    omit?: StoreIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeInclude<ExtArgs> | null
    /**
     * Filter, which StoreIncomes to fetch.
     */
    where?: StoreIncomeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreIncomes to fetch.
     */
    orderBy?: StoreIncomeOrderByWithRelationInput | StoreIncomeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StoreIncomes.
     */
    cursor?: StoreIncomeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreIncomes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreIncomes.
     */
    skip?: number
    distinct?: StoreIncomeScalarFieldEnum | StoreIncomeScalarFieldEnum[]
  }

  /**
   * StoreIncome create
   */
  export type StoreIncomeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncome
     */
    select?: StoreIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncome
     */
    omit?: StoreIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeInclude<ExtArgs> | null
    /**
     * The data needed to create a StoreIncome.
     */
    data: XOR<StoreIncomeCreateInput, StoreIncomeUncheckedCreateInput>
  }

  /**
   * StoreIncome createMany
   */
  export type StoreIncomeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StoreIncomes.
     */
    data: StoreIncomeCreateManyInput | StoreIncomeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StoreIncome createManyAndReturn
   */
  export type StoreIncomeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncome
     */
    select?: StoreIncomeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncome
     */
    omit?: StoreIncomeOmit<ExtArgs> | null
    /**
     * The data used to create many StoreIncomes.
     */
    data: StoreIncomeCreateManyInput | StoreIncomeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * StoreIncome update
   */
  export type StoreIncomeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncome
     */
    select?: StoreIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncome
     */
    omit?: StoreIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeInclude<ExtArgs> | null
    /**
     * The data needed to update a StoreIncome.
     */
    data: XOR<StoreIncomeUpdateInput, StoreIncomeUncheckedUpdateInput>
    /**
     * Choose, which StoreIncome to update.
     */
    where: StoreIncomeWhereUniqueInput
  }

  /**
   * StoreIncome updateMany
   */
  export type StoreIncomeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StoreIncomes.
     */
    data: XOR<StoreIncomeUpdateManyMutationInput, StoreIncomeUncheckedUpdateManyInput>
    /**
     * Filter which StoreIncomes to update
     */
    where?: StoreIncomeWhereInput
    /**
     * Limit how many StoreIncomes to update.
     */
    limit?: number
  }

  /**
   * StoreIncome updateManyAndReturn
   */
  export type StoreIncomeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncome
     */
    select?: StoreIncomeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncome
     */
    omit?: StoreIncomeOmit<ExtArgs> | null
    /**
     * The data used to update StoreIncomes.
     */
    data: XOR<StoreIncomeUpdateManyMutationInput, StoreIncomeUncheckedUpdateManyInput>
    /**
     * Filter which StoreIncomes to update
     */
    where?: StoreIncomeWhereInput
    /**
     * Limit how many StoreIncomes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * StoreIncome upsert
   */
  export type StoreIncomeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncome
     */
    select?: StoreIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncome
     */
    omit?: StoreIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeInclude<ExtArgs> | null
    /**
     * The filter to search for the StoreIncome to update in case it exists.
     */
    where: StoreIncomeWhereUniqueInput
    /**
     * In case the StoreIncome found by the `where` argument doesn't exist, create a new StoreIncome with this data.
     */
    create: XOR<StoreIncomeCreateInput, StoreIncomeUncheckedCreateInput>
    /**
     * In case the StoreIncome was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StoreIncomeUpdateInput, StoreIncomeUncheckedUpdateInput>
  }

  /**
   * StoreIncome delete
   */
  export type StoreIncomeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncome
     */
    select?: StoreIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncome
     */
    omit?: StoreIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeInclude<ExtArgs> | null
    /**
     * Filter which StoreIncome to delete.
     */
    where: StoreIncomeWhereUniqueInput
  }

  /**
   * StoreIncome deleteMany
   */
  export type StoreIncomeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StoreIncomes to delete
     */
    where?: StoreIncomeWhereInput
    /**
     * Limit how many StoreIncomes to delete.
     */
    limit?: number
  }

  /**
   * StoreIncome.storeIncomeCreateByRel
   */
  export type StoreIncome$storeIncomeCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * StoreIncome.storeIncomeUpdateByRel
   */
  export type StoreIncome$storeIncomeUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * StoreIncome without action
   */
  export type StoreIncomeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncome
     */
    select?: StoreIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncome
     */
    omit?: StoreIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeInclude<ExtArgs> | null
  }


  /**
   * Model StoreIncomeHistory
   */

  export type AggregateStoreIncomeHistory = {
    _count: StoreIncomeHistoryCountAggregateOutputType | null
    _avg: StoreIncomeHistoryAvgAggregateOutputType | null
    _sum: StoreIncomeHistorySumAggregateOutputType | null
    _min: StoreIncomeHistoryMinAggregateOutputType | null
    _max: StoreIncomeHistoryMaxAggregateOutputType | null
  }

  export type StoreIncomeHistoryAvgAggregateOutputType = {
    revId: number | null
    id: number | null
    incomeTypeId: number | null
    funds: number | null
    createBy: number | null
    updatedBy: number | null
  }

  export type StoreIncomeHistorySumAggregateOutputType = {
    revId: bigint | null
    id: bigint | null
    incomeTypeId: bigint | null
    funds: bigint | null
    createBy: bigint | null
    updatedBy: bigint | null
  }

  export type StoreIncomeHistoryMinAggregateOutputType = {
    revId: bigint | null
    id: bigint | null
    incomeTypeId: bigint | null
    detail: string | null
    funds: bigint | null
    date: Date | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type StoreIncomeHistoryMaxAggregateOutputType = {
    revId: bigint | null
    id: bigint | null
    incomeTypeId: bigint | null
    detail: string | null
    funds: bigint | null
    date: Date | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type StoreIncomeHistoryCountAggregateOutputType = {
    revId: number
    id: number
    incomeTypeId: number
    detail: number
    funds: number
    date: number
    deleted: number
    createAt: number
    createBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type StoreIncomeHistoryAvgAggregateInputType = {
    revId?: true
    id?: true
    incomeTypeId?: true
    funds?: true
    createBy?: true
    updatedBy?: true
  }

  export type StoreIncomeHistorySumAggregateInputType = {
    revId?: true
    id?: true
    incomeTypeId?: true
    funds?: true
    createBy?: true
    updatedBy?: true
  }

  export type StoreIncomeHistoryMinAggregateInputType = {
    revId?: true
    id?: true
    incomeTypeId?: true
    detail?: true
    funds?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type StoreIncomeHistoryMaxAggregateInputType = {
    revId?: true
    id?: true
    incomeTypeId?: true
    detail?: true
    funds?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type StoreIncomeHistoryCountAggregateInputType = {
    revId?: true
    id?: true
    incomeTypeId?: true
    detail?: true
    funds?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type StoreIncomeHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StoreIncomeHistory to aggregate.
     */
    where?: StoreIncomeHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreIncomeHistories to fetch.
     */
    orderBy?: StoreIncomeHistoryOrderByWithRelationInput | StoreIncomeHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StoreIncomeHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreIncomeHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreIncomeHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StoreIncomeHistories
    **/
    _count?: true | StoreIncomeHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StoreIncomeHistoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StoreIncomeHistorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StoreIncomeHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StoreIncomeHistoryMaxAggregateInputType
  }

  export type GetStoreIncomeHistoryAggregateType<T extends StoreIncomeHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregateStoreIncomeHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStoreIncomeHistory[P]>
      : GetScalarType<T[P], AggregateStoreIncomeHistory[P]>
  }




  export type StoreIncomeHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreIncomeHistoryWhereInput
    orderBy?: StoreIncomeHistoryOrderByWithAggregationInput | StoreIncomeHistoryOrderByWithAggregationInput[]
    by: StoreIncomeHistoryScalarFieldEnum[] | StoreIncomeHistoryScalarFieldEnum
    having?: StoreIncomeHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StoreIncomeHistoryCountAggregateInputType | true
    _avg?: StoreIncomeHistoryAvgAggregateInputType
    _sum?: StoreIncomeHistorySumAggregateInputType
    _min?: StoreIncomeHistoryMinAggregateInputType
    _max?: StoreIncomeHistoryMaxAggregateInputType
  }

  export type StoreIncomeHistoryGroupByOutputType = {
    revId: bigint
    id: bigint
    incomeTypeId: bigint
    detail: string | null
    funds: bigint
    date: Date
    deleted: boolean
    createAt: Date
    createBy: bigint | null
    updatedAt: Date
    updatedBy: bigint | null
    _count: StoreIncomeHistoryCountAggregateOutputType | null
    _avg: StoreIncomeHistoryAvgAggregateOutputType | null
    _sum: StoreIncomeHistorySumAggregateOutputType | null
    _min: StoreIncomeHistoryMinAggregateOutputType | null
    _max: StoreIncomeHistoryMaxAggregateOutputType | null
  }

  type GetStoreIncomeHistoryGroupByPayload<T extends StoreIncomeHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StoreIncomeHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StoreIncomeHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StoreIncomeHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], StoreIncomeHistoryGroupByOutputType[P]>
        }
      >
    >


  export type StoreIncomeHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    revId?: boolean
    id?: boolean
    incomeTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    storeIncomeTypeHistoryIdRel?: boolean | StoreIncomeTypeDefaultArgs<ExtArgs>
    storeIncomeHistoryCreateByRel?: boolean | StoreIncomeHistory$storeIncomeHistoryCreateByRelArgs<ExtArgs>
    storeIncomeHistoryUpdateByRel?: boolean | StoreIncomeHistory$storeIncomeHistoryUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["storeIncomeHistory"]>

  export type StoreIncomeHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    revId?: boolean
    id?: boolean
    incomeTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    storeIncomeTypeHistoryIdRel?: boolean | StoreIncomeTypeDefaultArgs<ExtArgs>
    storeIncomeHistoryCreateByRel?: boolean | StoreIncomeHistory$storeIncomeHistoryCreateByRelArgs<ExtArgs>
    storeIncomeHistoryUpdateByRel?: boolean | StoreIncomeHistory$storeIncomeHistoryUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["storeIncomeHistory"]>

  export type StoreIncomeHistorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    revId?: boolean
    id?: boolean
    incomeTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    storeIncomeTypeHistoryIdRel?: boolean | StoreIncomeTypeDefaultArgs<ExtArgs>
    storeIncomeHistoryCreateByRel?: boolean | StoreIncomeHistory$storeIncomeHistoryCreateByRelArgs<ExtArgs>
    storeIncomeHistoryUpdateByRel?: boolean | StoreIncomeHistory$storeIncomeHistoryUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["storeIncomeHistory"]>

  export type StoreIncomeHistorySelectScalar = {
    revId?: boolean
    id?: boolean
    incomeTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type StoreIncomeHistoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"revId" | "id" | "incomeTypeId" | "detail" | "funds" | "date" | "deleted" | "createAt" | "createBy" | "updatedAt" | "updatedBy", ExtArgs["result"]["storeIncomeHistory"]>
  export type StoreIncomeHistoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    storeIncomeTypeHistoryIdRel?: boolean | StoreIncomeTypeDefaultArgs<ExtArgs>
    storeIncomeHistoryCreateByRel?: boolean | StoreIncomeHistory$storeIncomeHistoryCreateByRelArgs<ExtArgs>
    storeIncomeHistoryUpdateByRel?: boolean | StoreIncomeHistory$storeIncomeHistoryUpdateByRelArgs<ExtArgs>
  }
  export type StoreIncomeHistoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    storeIncomeTypeHistoryIdRel?: boolean | StoreIncomeTypeDefaultArgs<ExtArgs>
    storeIncomeHistoryCreateByRel?: boolean | StoreIncomeHistory$storeIncomeHistoryCreateByRelArgs<ExtArgs>
    storeIncomeHistoryUpdateByRel?: boolean | StoreIncomeHistory$storeIncomeHistoryUpdateByRelArgs<ExtArgs>
  }
  export type StoreIncomeHistoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    storeIncomeTypeHistoryIdRel?: boolean | StoreIncomeTypeDefaultArgs<ExtArgs>
    storeIncomeHistoryCreateByRel?: boolean | StoreIncomeHistory$storeIncomeHistoryCreateByRelArgs<ExtArgs>
    storeIncomeHistoryUpdateByRel?: boolean | StoreIncomeHistory$storeIncomeHistoryUpdateByRelArgs<ExtArgs>
  }

  export type $StoreIncomeHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StoreIncomeHistory"
    objects: {
      storeIncomeTypeHistoryIdRel: Prisma.$StoreIncomeTypePayload<ExtArgs>
      storeIncomeHistoryCreateByRel: Prisma.$UserPayload<ExtArgs> | null
      storeIncomeHistoryUpdateByRel: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      revId: bigint
      id: bigint
      incomeTypeId: bigint
      detail: string | null
      funds: bigint
      date: Date
      deleted: boolean
      createAt: Date
      createBy: bigint | null
      updatedAt: Date
      updatedBy: bigint | null
    }, ExtArgs["result"]["storeIncomeHistory"]>
    composites: {}
  }

  type StoreIncomeHistoryGetPayload<S extends boolean | null | undefined | StoreIncomeHistoryDefaultArgs> = $Result.GetResult<Prisma.$StoreIncomeHistoryPayload, S>

  type StoreIncomeHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StoreIncomeHistoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StoreIncomeHistoryCountAggregateInputType | true
    }

  export interface StoreIncomeHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StoreIncomeHistory'], meta: { name: 'StoreIncomeHistory' } }
    /**
     * Find zero or one StoreIncomeHistory that matches the filter.
     * @param {StoreIncomeHistoryFindUniqueArgs} args - Arguments to find a StoreIncomeHistory
     * @example
     * // Get one StoreIncomeHistory
     * const storeIncomeHistory = await prisma.storeIncomeHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StoreIncomeHistoryFindUniqueArgs>(args: SelectSubset<T, StoreIncomeHistoryFindUniqueArgs<ExtArgs>>): Prisma__StoreIncomeHistoryClient<$Result.GetResult<Prisma.$StoreIncomeHistoryPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one StoreIncomeHistory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StoreIncomeHistoryFindUniqueOrThrowArgs} args - Arguments to find a StoreIncomeHistory
     * @example
     * // Get one StoreIncomeHistory
     * const storeIncomeHistory = await prisma.storeIncomeHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StoreIncomeHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, StoreIncomeHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StoreIncomeHistoryClient<$Result.GetResult<Prisma.$StoreIncomeHistoryPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first StoreIncomeHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreIncomeHistoryFindFirstArgs} args - Arguments to find a StoreIncomeHistory
     * @example
     * // Get one StoreIncomeHistory
     * const storeIncomeHistory = await prisma.storeIncomeHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StoreIncomeHistoryFindFirstArgs>(args?: SelectSubset<T, StoreIncomeHistoryFindFirstArgs<ExtArgs>>): Prisma__StoreIncomeHistoryClient<$Result.GetResult<Prisma.$StoreIncomeHistoryPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first StoreIncomeHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreIncomeHistoryFindFirstOrThrowArgs} args - Arguments to find a StoreIncomeHistory
     * @example
     * // Get one StoreIncomeHistory
     * const storeIncomeHistory = await prisma.storeIncomeHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StoreIncomeHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, StoreIncomeHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__StoreIncomeHistoryClient<$Result.GetResult<Prisma.$StoreIncomeHistoryPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more StoreIncomeHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreIncomeHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StoreIncomeHistories
     * const storeIncomeHistories = await prisma.storeIncomeHistory.findMany()
     * 
     * // Get first 10 StoreIncomeHistories
     * const storeIncomeHistories = await prisma.storeIncomeHistory.findMany({ take: 10 })
     * 
     * // Only select the `revId`
     * const storeIncomeHistoryWithRevIdOnly = await prisma.storeIncomeHistory.findMany({ select: { revId: true } })
     * 
     */
    findMany<T extends StoreIncomeHistoryFindManyArgs>(args?: SelectSubset<T, StoreIncomeHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreIncomeHistoryPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a StoreIncomeHistory.
     * @param {StoreIncomeHistoryCreateArgs} args - Arguments to create a StoreIncomeHistory.
     * @example
     * // Create one StoreIncomeHistory
     * const StoreIncomeHistory = await prisma.storeIncomeHistory.create({
     *   data: {
     *     // ... data to create a StoreIncomeHistory
     *   }
     * })
     * 
     */
    create<T extends StoreIncomeHistoryCreateArgs>(args: SelectSubset<T, StoreIncomeHistoryCreateArgs<ExtArgs>>): Prisma__StoreIncomeHistoryClient<$Result.GetResult<Prisma.$StoreIncomeHistoryPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many StoreIncomeHistories.
     * @param {StoreIncomeHistoryCreateManyArgs} args - Arguments to create many StoreIncomeHistories.
     * @example
     * // Create many StoreIncomeHistories
     * const storeIncomeHistory = await prisma.storeIncomeHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StoreIncomeHistoryCreateManyArgs>(args?: SelectSubset<T, StoreIncomeHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many StoreIncomeHistories and returns the data saved in the database.
     * @param {StoreIncomeHistoryCreateManyAndReturnArgs} args - Arguments to create many StoreIncomeHistories.
     * @example
     * // Create many StoreIncomeHistories
     * const storeIncomeHistory = await prisma.storeIncomeHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many StoreIncomeHistories and only return the `revId`
     * const storeIncomeHistoryWithRevIdOnly = await prisma.storeIncomeHistory.createManyAndReturn({
     *   select: { revId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends StoreIncomeHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, StoreIncomeHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreIncomeHistoryPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a StoreIncomeHistory.
     * @param {StoreIncomeHistoryDeleteArgs} args - Arguments to delete one StoreIncomeHistory.
     * @example
     * // Delete one StoreIncomeHistory
     * const StoreIncomeHistory = await prisma.storeIncomeHistory.delete({
     *   where: {
     *     // ... filter to delete one StoreIncomeHistory
     *   }
     * })
     * 
     */
    delete<T extends StoreIncomeHistoryDeleteArgs>(args: SelectSubset<T, StoreIncomeHistoryDeleteArgs<ExtArgs>>): Prisma__StoreIncomeHistoryClient<$Result.GetResult<Prisma.$StoreIncomeHistoryPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one StoreIncomeHistory.
     * @param {StoreIncomeHistoryUpdateArgs} args - Arguments to update one StoreIncomeHistory.
     * @example
     * // Update one StoreIncomeHistory
     * const storeIncomeHistory = await prisma.storeIncomeHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StoreIncomeHistoryUpdateArgs>(args: SelectSubset<T, StoreIncomeHistoryUpdateArgs<ExtArgs>>): Prisma__StoreIncomeHistoryClient<$Result.GetResult<Prisma.$StoreIncomeHistoryPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more StoreIncomeHistories.
     * @param {StoreIncomeHistoryDeleteManyArgs} args - Arguments to filter StoreIncomeHistories to delete.
     * @example
     * // Delete a few StoreIncomeHistories
     * const { count } = await prisma.storeIncomeHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StoreIncomeHistoryDeleteManyArgs>(args?: SelectSubset<T, StoreIncomeHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StoreIncomeHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreIncomeHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StoreIncomeHistories
     * const storeIncomeHistory = await prisma.storeIncomeHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StoreIncomeHistoryUpdateManyArgs>(args: SelectSubset<T, StoreIncomeHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StoreIncomeHistories and returns the data updated in the database.
     * @param {StoreIncomeHistoryUpdateManyAndReturnArgs} args - Arguments to update many StoreIncomeHistories.
     * @example
     * // Update many StoreIncomeHistories
     * const storeIncomeHistory = await prisma.storeIncomeHistory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more StoreIncomeHistories and only return the `revId`
     * const storeIncomeHistoryWithRevIdOnly = await prisma.storeIncomeHistory.updateManyAndReturn({
     *   select: { revId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends StoreIncomeHistoryUpdateManyAndReturnArgs>(args: SelectSubset<T, StoreIncomeHistoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreIncomeHistoryPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one StoreIncomeHistory.
     * @param {StoreIncomeHistoryUpsertArgs} args - Arguments to update or create a StoreIncomeHistory.
     * @example
     * // Update or create a StoreIncomeHistory
     * const storeIncomeHistory = await prisma.storeIncomeHistory.upsert({
     *   create: {
     *     // ... data to create a StoreIncomeHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StoreIncomeHistory we want to update
     *   }
     * })
     */
    upsert<T extends StoreIncomeHistoryUpsertArgs>(args: SelectSubset<T, StoreIncomeHistoryUpsertArgs<ExtArgs>>): Prisma__StoreIncomeHistoryClient<$Result.GetResult<Prisma.$StoreIncomeHistoryPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of StoreIncomeHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreIncomeHistoryCountArgs} args - Arguments to filter StoreIncomeHistories to count.
     * @example
     * // Count the number of StoreIncomeHistories
     * const count = await prisma.storeIncomeHistory.count({
     *   where: {
     *     // ... the filter for the StoreIncomeHistories we want to count
     *   }
     * })
    **/
    count<T extends StoreIncomeHistoryCountArgs>(
      args?: Subset<T, StoreIncomeHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StoreIncomeHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StoreIncomeHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreIncomeHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StoreIncomeHistoryAggregateArgs>(args: Subset<T, StoreIncomeHistoryAggregateArgs>): Prisma.PrismaPromise<GetStoreIncomeHistoryAggregateType<T>>

    /**
     * Group by StoreIncomeHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreIncomeHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StoreIncomeHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StoreIncomeHistoryGroupByArgs['orderBy'] }
        : { orderBy?: StoreIncomeHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StoreIncomeHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStoreIncomeHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StoreIncomeHistory model
   */
  readonly fields: StoreIncomeHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StoreIncomeHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StoreIncomeHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    storeIncomeTypeHistoryIdRel<T extends StoreIncomeTypeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, StoreIncomeTypeDefaultArgs<ExtArgs>>): Prisma__StoreIncomeTypeClient<$Result.GetResult<Prisma.$StoreIncomeTypePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    storeIncomeHistoryCreateByRel<T extends StoreIncomeHistory$storeIncomeHistoryCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, StoreIncomeHistory$storeIncomeHistoryCreateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    storeIncomeHistoryUpdateByRel<T extends StoreIncomeHistory$storeIncomeHistoryUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, StoreIncomeHistory$storeIncomeHistoryUpdateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StoreIncomeHistory model
   */ 
  interface StoreIncomeHistoryFieldRefs {
    readonly revId: FieldRef<"StoreIncomeHistory", 'BigInt'>
    readonly id: FieldRef<"StoreIncomeHistory", 'BigInt'>
    readonly incomeTypeId: FieldRef<"StoreIncomeHistory", 'BigInt'>
    readonly detail: FieldRef<"StoreIncomeHistory", 'String'>
    readonly funds: FieldRef<"StoreIncomeHistory", 'BigInt'>
    readonly date: FieldRef<"StoreIncomeHistory", 'DateTime'>
    readonly deleted: FieldRef<"StoreIncomeHistory", 'Boolean'>
    readonly createAt: FieldRef<"StoreIncomeHistory", 'DateTime'>
    readonly createBy: FieldRef<"StoreIncomeHistory", 'BigInt'>
    readonly updatedAt: FieldRef<"StoreIncomeHistory", 'DateTime'>
    readonly updatedBy: FieldRef<"StoreIncomeHistory", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * StoreIncomeHistory findUnique
   */
  export type StoreIncomeHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeHistory
     */
    select?: StoreIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeHistory
     */
    omit?: StoreIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeHistoryInclude<ExtArgs> | null
    /**
     * Filter, which StoreIncomeHistory to fetch.
     */
    where: StoreIncomeHistoryWhereUniqueInput
  }

  /**
   * StoreIncomeHistory findUniqueOrThrow
   */
  export type StoreIncomeHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeHistory
     */
    select?: StoreIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeHistory
     */
    omit?: StoreIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeHistoryInclude<ExtArgs> | null
    /**
     * Filter, which StoreIncomeHistory to fetch.
     */
    where: StoreIncomeHistoryWhereUniqueInput
  }

  /**
   * StoreIncomeHistory findFirst
   */
  export type StoreIncomeHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeHistory
     */
    select?: StoreIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeHistory
     */
    omit?: StoreIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeHistoryInclude<ExtArgs> | null
    /**
     * Filter, which StoreIncomeHistory to fetch.
     */
    where?: StoreIncomeHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreIncomeHistories to fetch.
     */
    orderBy?: StoreIncomeHistoryOrderByWithRelationInput | StoreIncomeHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StoreIncomeHistories.
     */
    cursor?: StoreIncomeHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreIncomeHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreIncomeHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StoreIncomeHistories.
     */
    distinct?: StoreIncomeHistoryScalarFieldEnum | StoreIncomeHistoryScalarFieldEnum[]
  }

  /**
   * StoreIncomeHistory findFirstOrThrow
   */
  export type StoreIncomeHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeHistory
     */
    select?: StoreIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeHistory
     */
    omit?: StoreIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeHistoryInclude<ExtArgs> | null
    /**
     * Filter, which StoreIncomeHistory to fetch.
     */
    where?: StoreIncomeHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreIncomeHistories to fetch.
     */
    orderBy?: StoreIncomeHistoryOrderByWithRelationInput | StoreIncomeHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StoreIncomeHistories.
     */
    cursor?: StoreIncomeHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreIncomeHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreIncomeHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StoreIncomeHistories.
     */
    distinct?: StoreIncomeHistoryScalarFieldEnum | StoreIncomeHistoryScalarFieldEnum[]
  }

  /**
   * StoreIncomeHistory findMany
   */
  export type StoreIncomeHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeHistory
     */
    select?: StoreIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeHistory
     */
    omit?: StoreIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeHistoryInclude<ExtArgs> | null
    /**
     * Filter, which StoreIncomeHistories to fetch.
     */
    where?: StoreIncomeHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreIncomeHistories to fetch.
     */
    orderBy?: StoreIncomeHistoryOrderByWithRelationInput | StoreIncomeHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StoreIncomeHistories.
     */
    cursor?: StoreIncomeHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreIncomeHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreIncomeHistories.
     */
    skip?: number
    distinct?: StoreIncomeHistoryScalarFieldEnum | StoreIncomeHistoryScalarFieldEnum[]
  }

  /**
   * StoreIncomeHistory create
   */
  export type StoreIncomeHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeHistory
     */
    select?: StoreIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeHistory
     */
    omit?: StoreIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeHistoryInclude<ExtArgs> | null
    /**
     * The data needed to create a StoreIncomeHistory.
     */
    data: XOR<StoreIncomeHistoryCreateInput, StoreIncomeHistoryUncheckedCreateInput>
  }

  /**
   * StoreIncomeHistory createMany
   */
  export type StoreIncomeHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StoreIncomeHistories.
     */
    data: StoreIncomeHistoryCreateManyInput | StoreIncomeHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StoreIncomeHistory createManyAndReturn
   */
  export type StoreIncomeHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeHistory
     */
    select?: StoreIncomeHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeHistory
     */
    omit?: StoreIncomeHistoryOmit<ExtArgs> | null
    /**
     * The data used to create many StoreIncomeHistories.
     */
    data: StoreIncomeHistoryCreateManyInput | StoreIncomeHistoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeHistoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * StoreIncomeHistory update
   */
  export type StoreIncomeHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeHistory
     */
    select?: StoreIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeHistory
     */
    omit?: StoreIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeHistoryInclude<ExtArgs> | null
    /**
     * The data needed to update a StoreIncomeHistory.
     */
    data: XOR<StoreIncomeHistoryUpdateInput, StoreIncomeHistoryUncheckedUpdateInput>
    /**
     * Choose, which StoreIncomeHistory to update.
     */
    where: StoreIncomeHistoryWhereUniqueInput
  }

  /**
   * StoreIncomeHistory updateMany
   */
  export type StoreIncomeHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StoreIncomeHistories.
     */
    data: XOR<StoreIncomeHistoryUpdateManyMutationInput, StoreIncomeHistoryUncheckedUpdateManyInput>
    /**
     * Filter which StoreIncomeHistories to update
     */
    where?: StoreIncomeHistoryWhereInput
    /**
     * Limit how many StoreIncomeHistories to update.
     */
    limit?: number
  }

  /**
   * StoreIncomeHistory updateManyAndReturn
   */
  export type StoreIncomeHistoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeHistory
     */
    select?: StoreIncomeHistorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeHistory
     */
    omit?: StoreIncomeHistoryOmit<ExtArgs> | null
    /**
     * The data used to update StoreIncomeHistories.
     */
    data: XOR<StoreIncomeHistoryUpdateManyMutationInput, StoreIncomeHistoryUncheckedUpdateManyInput>
    /**
     * Filter which StoreIncomeHistories to update
     */
    where?: StoreIncomeHistoryWhereInput
    /**
     * Limit how many StoreIncomeHistories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeHistoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * StoreIncomeHistory upsert
   */
  export type StoreIncomeHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeHistory
     */
    select?: StoreIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeHistory
     */
    omit?: StoreIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeHistoryInclude<ExtArgs> | null
    /**
     * The filter to search for the StoreIncomeHistory to update in case it exists.
     */
    where: StoreIncomeHistoryWhereUniqueInput
    /**
     * In case the StoreIncomeHistory found by the `where` argument doesn't exist, create a new StoreIncomeHistory with this data.
     */
    create: XOR<StoreIncomeHistoryCreateInput, StoreIncomeHistoryUncheckedCreateInput>
    /**
     * In case the StoreIncomeHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StoreIncomeHistoryUpdateInput, StoreIncomeHistoryUncheckedUpdateInput>
  }

  /**
   * StoreIncomeHistory delete
   */
  export type StoreIncomeHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeHistory
     */
    select?: StoreIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeHistory
     */
    omit?: StoreIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeHistoryInclude<ExtArgs> | null
    /**
     * Filter which StoreIncomeHistory to delete.
     */
    where: StoreIncomeHistoryWhereUniqueInput
  }

  /**
   * StoreIncomeHistory deleteMany
   */
  export type StoreIncomeHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StoreIncomeHistories to delete
     */
    where?: StoreIncomeHistoryWhereInput
    /**
     * Limit how many StoreIncomeHistories to delete.
     */
    limit?: number
  }

  /**
   * StoreIncomeHistory.storeIncomeHistoryCreateByRel
   */
  export type StoreIncomeHistory$storeIncomeHistoryCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * StoreIncomeHistory.storeIncomeHistoryUpdateByRel
   */
  export type StoreIncomeHistory$storeIncomeHistoryUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * StoreIncomeHistory without action
   */
  export type StoreIncomeHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeHistory
     */
    select?: StoreIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeHistory
     */
    omit?: StoreIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeHistoryInclude<ExtArgs> | null
  }


  /**
   * Model StoreIncomeType
   */

  export type AggregateStoreIncomeType = {
    _count: StoreIncomeTypeCountAggregateOutputType | null
    _avg: StoreIncomeTypeAvgAggregateOutputType | null
    _sum: StoreIncomeTypeSumAggregateOutputType | null
    _min: StoreIncomeTypeMinAggregateOutputType | null
    _max: StoreIncomeTypeMaxAggregateOutputType | null
  }

  export type StoreIncomeTypeAvgAggregateOutputType = {
    id: number | null
    createBy: number | null
    updatedBy: number | null
  }

  export type StoreIncomeTypeSumAggregateOutputType = {
    id: bigint | null
    createBy: bigint | null
    updatedBy: bigint | null
  }

  export type StoreIncomeTypeMinAggregateOutputType = {
    id: bigint | null
    incomeTypeName: string | null
    code: string | null
    description: string | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type StoreIncomeTypeMaxAggregateOutputType = {
    id: bigint | null
    incomeTypeName: string | null
    code: string | null
    description: string | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type StoreIncomeTypeCountAggregateOutputType = {
    id: number
    incomeTypeName: number
    code: number
    description: number
    deleted: number
    createAt: number
    createBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type StoreIncomeTypeAvgAggregateInputType = {
    id?: true
    createBy?: true
    updatedBy?: true
  }

  export type StoreIncomeTypeSumAggregateInputType = {
    id?: true
    createBy?: true
    updatedBy?: true
  }

  export type StoreIncomeTypeMinAggregateInputType = {
    id?: true
    incomeTypeName?: true
    code?: true
    description?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type StoreIncomeTypeMaxAggregateInputType = {
    id?: true
    incomeTypeName?: true
    code?: true
    description?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type StoreIncomeTypeCountAggregateInputType = {
    id?: true
    incomeTypeName?: true
    code?: true
    description?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type StoreIncomeTypeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StoreIncomeType to aggregate.
     */
    where?: StoreIncomeTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreIncomeTypes to fetch.
     */
    orderBy?: StoreIncomeTypeOrderByWithRelationInput | StoreIncomeTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StoreIncomeTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreIncomeTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreIncomeTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StoreIncomeTypes
    **/
    _count?: true | StoreIncomeTypeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StoreIncomeTypeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StoreIncomeTypeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StoreIncomeTypeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StoreIncomeTypeMaxAggregateInputType
  }

  export type GetStoreIncomeTypeAggregateType<T extends StoreIncomeTypeAggregateArgs> = {
        [P in keyof T & keyof AggregateStoreIncomeType]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStoreIncomeType[P]>
      : GetScalarType<T[P], AggregateStoreIncomeType[P]>
  }




  export type StoreIncomeTypeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreIncomeTypeWhereInput
    orderBy?: StoreIncomeTypeOrderByWithAggregationInput | StoreIncomeTypeOrderByWithAggregationInput[]
    by: StoreIncomeTypeScalarFieldEnum[] | StoreIncomeTypeScalarFieldEnum
    having?: StoreIncomeTypeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StoreIncomeTypeCountAggregateInputType | true
    _avg?: StoreIncomeTypeAvgAggregateInputType
    _sum?: StoreIncomeTypeSumAggregateInputType
    _min?: StoreIncomeTypeMinAggregateInputType
    _max?: StoreIncomeTypeMaxAggregateInputType
  }

  export type StoreIncomeTypeGroupByOutputType = {
    id: bigint
    incomeTypeName: string
    code: string
    description: string
    deleted: boolean
    createAt: Date
    createBy: bigint | null
    updatedAt: Date
    updatedBy: bigint | null
    _count: StoreIncomeTypeCountAggregateOutputType | null
    _avg: StoreIncomeTypeAvgAggregateOutputType | null
    _sum: StoreIncomeTypeSumAggregateOutputType | null
    _min: StoreIncomeTypeMinAggregateOutputType | null
    _max: StoreIncomeTypeMaxAggregateOutputType | null
  }

  type GetStoreIncomeTypeGroupByPayload<T extends StoreIncomeTypeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StoreIncomeTypeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StoreIncomeTypeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StoreIncomeTypeGroupByOutputType[P]>
            : GetScalarType<T[P], StoreIncomeTypeGroupByOutputType[P]>
        }
      >
    >


  export type StoreIncomeTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    incomeTypeName?: boolean
    code?: boolean
    description?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    storeIncomeTypeCreateByRel?: boolean | StoreIncomeType$storeIncomeTypeCreateByRelArgs<ExtArgs>
    storeIncomeTypeUpdateByRel?: boolean | StoreIncomeType$storeIncomeTypeUpdateByRelArgs<ExtArgs>
    storeIncomeTypeIdRel?: boolean | StoreIncomeType$storeIncomeTypeIdRelArgs<ExtArgs>
    storeIncomeTypeHistoryIdRel?: boolean | StoreIncomeType$storeIncomeTypeHistoryIdRelArgs<ExtArgs>
    _count?: boolean | StoreIncomeTypeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["storeIncomeType"]>

  export type StoreIncomeTypeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    incomeTypeName?: boolean
    code?: boolean
    description?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    storeIncomeTypeCreateByRel?: boolean | StoreIncomeType$storeIncomeTypeCreateByRelArgs<ExtArgs>
    storeIncomeTypeUpdateByRel?: boolean | StoreIncomeType$storeIncomeTypeUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["storeIncomeType"]>

  export type StoreIncomeTypeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    incomeTypeName?: boolean
    code?: boolean
    description?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    storeIncomeTypeCreateByRel?: boolean | StoreIncomeType$storeIncomeTypeCreateByRelArgs<ExtArgs>
    storeIncomeTypeUpdateByRel?: boolean | StoreIncomeType$storeIncomeTypeUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["storeIncomeType"]>

  export type StoreIncomeTypeSelectScalar = {
    id?: boolean
    incomeTypeName?: boolean
    code?: boolean
    description?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type StoreIncomeTypeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "incomeTypeName" | "code" | "description" | "deleted" | "createAt" | "createBy" | "updatedAt" | "updatedBy", ExtArgs["result"]["storeIncomeType"]>
  export type StoreIncomeTypeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    storeIncomeTypeCreateByRel?: boolean | StoreIncomeType$storeIncomeTypeCreateByRelArgs<ExtArgs>
    storeIncomeTypeUpdateByRel?: boolean | StoreIncomeType$storeIncomeTypeUpdateByRelArgs<ExtArgs>
    storeIncomeTypeIdRel?: boolean | StoreIncomeType$storeIncomeTypeIdRelArgs<ExtArgs>
    storeIncomeTypeHistoryIdRel?: boolean | StoreIncomeType$storeIncomeTypeHistoryIdRelArgs<ExtArgs>
    _count?: boolean | StoreIncomeTypeCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type StoreIncomeTypeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    storeIncomeTypeCreateByRel?: boolean | StoreIncomeType$storeIncomeTypeCreateByRelArgs<ExtArgs>
    storeIncomeTypeUpdateByRel?: boolean | StoreIncomeType$storeIncomeTypeUpdateByRelArgs<ExtArgs>
  }
  export type StoreIncomeTypeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    storeIncomeTypeCreateByRel?: boolean | StoreIncomeType$storeIncomeTypeCreateByRelArgs<ExtArgs>
    storeIncomeTypeUpdateByRel?: boolean | StoreIncomeType$storeIncomeTypeUpdateByRelArgs<ExtArgs>
  }

  export type $StoreIncomeTypePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StoreIncomeType"
    objects: {
      storeIncomeTypeCreateByRel: Prisma.$UserPayload<ExtArgs> | null
      storeIncomeTypeUpdateByRel: Prisma.$UserPayload<ExtArgs> | null
      storeIncomeTypeIdRel: Prisma.$StoreIncomePayload<ExtArgs>[]
      storeIncomeTypeHistoryIdRel: Prisma.$StoreIncomeHistoryPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      incomeTypeName: string
      code: string
      description: string
      deleted: boolean
      createAt: Date
      createBy: bigint | null
      updatedAt: Date
      updatedBy: bigint | null
    }, ExtArgs["result"]["storeIncomeType"]>
    composites: {}
  }

  type StoreIncomeTypeGetPayload<S extends boolean | null | undefined | StoreIncomeTypeDefaultArgs> = $Result.GetResult<Prisma.$StoreIncomeTypePayload, S>

  type StoreIncomeTypeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StoreIncomeTypeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StoreIncomeTypeCountAggregateInputType | true
    }

  export interface StoreIncomeTypeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StoreIncomeType'], meta: { name: 'StoreIncomeType' } }
    /**
     * Find zero or one StoreIncomeType that matches the filter.
     * @param {StoreIncomeTypeFindUniqueArgs} args - Arguments to find a StoreIncomeType
     * @example
     * // Get one StoreIncomeType
     * const storeIncomeType = await prisma.storeIncomeType.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StoreIncomeTypeFindUniqueArgs>(args: SelectSubset<T, StoreIncomeTypeFindUniqueArgs<ExtArgs>>): Prisma__StoreIncomeTypeClient<$Result.GetResult<Prisma.$StoreIncomeTypePayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one StoreIncomeType that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StoreIncomeTypeFindUniqueOrThrowArgs} args - Arguments to find a StoreIncomeType
     * @example
     * // Get one StoreIncomeType
     * const storeIncomeType = await prisma.storeIncomeType.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StoreIncomeTypeFindUniqueOrThrowArgs>(args: SelectSubset<T, StoreIncomeTypeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StoreIncomeTypeClient<$Result.GetResult<Prisma.$StoreIncomeTypePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first StoreIncomeType that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreIncomeTypeFindFirstArgs} args - Arguments to find a StoreIncomeType
     * @example
     * // Get one StoreIncomeType
     * const storeIncomeType = await prisma.storeIncomeType.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StoreIncomeTypeFindFirstArgs>(args?: SelectSubset<T, StoreIncomeTypeFindFirstArgs<ExtArgs>>): Prisma__StoreIncomeTypeClient<$Result.GetResult<Prisma.$StoreIncomeTypePayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first StoreIncomeType that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreIncomeTypeFindFirstOrThrowArgs} args - Arguments to find a StoreIncomeType
     * @example
     * // Get one StoreIncomeType
     * const storeIncomeType = await prisma.storeIncomeType.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StoreIncomeTypeFindFirstOrThrowArgs>(args?: SelectSubset<T, StoreIncomeTypeFindFirstOrThrowArgs<ExtArgs>>): Prisma__StoreIncomeTypeClient<$Result.GetResult<Prisma.$StoreIncomeTypePayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more StoreIncomeTypes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreIncomeTypeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StoreIncomeTypes
     * const storeIncomeTypes = await prisma.storeIncomeType.findMany()
     * 
     * // Get first 10 StoreIncomeTypes
     * const storeIncomeTypes = await prisma.storeIncomeType.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const storeIncomeTypeWithIdOnly = await prisma.storeIncomeType.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StoreIncomeTypeFindManyArgs>(args?: SelectSubset<T, StoreIncomeTypeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreIncomeTypePayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a StoreIncomeType.
     * @param {StoreIncomeTypeCreateArgs} args - Arguments to create a StoreIncomeType.
     * @example
     * // Create one StoreIncomeType
     * const StoreIncomeType = await prisma.storeIncomeType.create({
     *   data: {
     *     // ... data to create a StoreIncomeType
     *   }
     * })
     * 
     */
    create<T extends StoreIncomeTypeCreateArgs>(args: SelectSubset<T, StoreIncomeTypeCreateArgs<ExtArgs>>): Prisma__StoreIncomeTypeClient<$Result.GetResult<Prisma.$StoreIncomeTypePayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many StoreIncomeTypes.
     * @param {StoreIncomeTypeCreateManyArgs} args - Arguments to create many StoreIncomeTypes.
     * @example
     * // Create many StoreIncomeTypes
     * const storeIncomeType = await prisma.storeIncomeType.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StoreIncomeTypeCreateManyArgs>(args?: SelectSubset<T, StoreIncomeTypeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many StoreIncomeTypes and returns the data saved in the database.
     * @param {StoreIncomeTypeCreateManyAndReturnArgs} args - Arguments to create many StoreIncomeTypes.
     * @example
     * // Create many StoreIncomeTypes
     * const storeIncomeType = await prisma.storeIncomeType.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many StoreIncomeTypes and only return the `id`
     * const storeIncomeTypeWithIdOnly = await prisma.storeIncomeType.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends StoreIncomeTypeCreateManyAndReturnArgs>(args?: SelectSubset<T, StoreIncomeTypeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreIncomeTypePayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a StoreIncomeType.
     * @param {StoreIncomeTypeDeleteArgs} args - Arguments to delete one StoreIncomeType.
     * @example
     * // Delete one StoreIncomeType
     * const StoreIncomeType = await prisma.storeIncomeType.delete({
     *   where: {
     *     // ... filter to delete one StoreIncomeType
     *   }
     * })
     * 
     */
    delete<T extends StoreIncomeTypeDeleteArgs>(args: SelectSubset<T, StoreIncomeTypeDeleteArgs<ExtArgs>>): Prisma__StoreIncomeTypeClient<$Result.GetResult<Prisma.$StoreIncomeTypePayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one StoreIncomeType.
     * @param {StoreIncomeTypeUpdateArgs} args - Arguments to update one StoreIncomeType.
     * @example
     * // Update one StoreIncomeType
     * const storeIncomeType = await prisma.storeIncomeType.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StoreIncomeTypeUpdateArgs>(args: SelectSubset<T, StoreIncomeTypeUpdateArgs<ExtArgs>>): Prisma__StoreIncomeTypeClient<$Result.GetResult<Prisma.$StoreIncomeTypePayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more StoreIncomeTypes.
     * @param {StoreIncomeTypeDeleteManyArgs} args - Arguments to filter StoreIncomeTypes to delete.
     * @example
     * // Delete a few StoreIncomeTypes
     * const { count } = await prisma.storeIncomeType.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StoreIncomeTypeDeleteManyArgs>(args?: SelectSubset<T, StoreIncomeTypeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StoreIncomeTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreIncomeTypeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StoreIncomeTypes
     * const storeIncomeType = await prisma.storeIncomeType.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StoreIncomeTypeUpdateManyArgs>(args: SelectSubset<T, StoreIncomeTypeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StoreIncomeTypes and returns the data updated in the database.
     * @param {StoreIncomeTypeUpdateManyAndReturnArgs} args - Arguments to update many StoreIncomeTypes.
     * @example
     * // Update many StoreIncomeTypes
     * const storeIncomeType = await prisma.storeIncomeType.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more StoreIncomeTypes and only return the `id`
     * const storeIncomeTypeWithIdOnly = await prisma.storeIncomeType.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends StoreIncomeTypeUpdateManyAndReturnArgs>(args: SelectSubset<T, StoreIncomeTypeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreIncomeTypePayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one StoreIncomeType.
     * @param {StoreIncomeTypeUpsertArgs} args - Arguments to update or create a StoreIncomeType.
     * @example
     * // Update or create a StoreIncomeType
     * const storeIncomeType = await prisma.storeIncomeType.upsert({
     *   create: {
     *     // ... data to create a StoreIncomeType
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StoreIncomeType we want to update
     *   }
     * })
     */
    upsert<T extends StoreIncomeTypeUpsertArgs>(args: SelectSubset<T, StoreIncomeTypeUpsertArgs<ExtArgs>>): Prisma__StoreIncomeTypeClient<$Result.GetResult<Prisma.$StoreIncomeTypePayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of StoreIncomeTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreIncomeTypeCountArgs} args - Arguments to filter StoreIncomeTypes to count.
     * @example
     * // Count the number of StoreIncomeTypes
     * const count = await prisma.storeIncomeType.count({
     *   where: {
     *     // ... the filter for the StoreIncomeTypes we want to count
     *   }
     * })
    **/
    count<T extends StoreIncomeTypeCountArgs>(
      args?: Subset<T, StoreIncomeTypeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StoreIncomeTypeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StoreIncomeType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreIncomeTypeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StoreIncomeTypeAggregateArgs>(args: Subset<T, StoreIncomeTypeAggregateArgs>): Prisma.PrismaPromise<GetStoreIncomeTypeAggregateType<T>>

    /**
     * Group by StoreIncomeType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreIncomeTypeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StoreIncomeTypeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StoreIncomeTypeGroupByArgs['orderBy'] }
        : { orderBy?: StoreIncomeTypeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StoreIncomeTypeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStoreIncomeTypeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StoreIncomeType model
   */
  readonly fields: StoreIncomeTypeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StoreIncomeType.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StoreIncomeTypeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    storeIncomeTypeCreateByRel<T extends StoreIncomeType$storeIncomeTypeCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, StoreIncomeType$storeIncomeTypeCreateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    storeIncomeTypeUpdateByRel<T extends StoreIncomeType$storeIncomeTypeUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, StoreIncomeType$storeIncomeTypeUpdateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    storeIncomeTypeIdRel<T extends StoreIncomeType$storeIncomeTypeIdRelArgs<ExtArgs> = {}>(args?: Subset<T, StoreIncomeType$storeIncomeTypeIdRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreIncomePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    storeIncomeTypeHistoryIdRel<T extends StoreIncomeType$storeIncomeTypeHistoryIdRelArgs<ExtArgs> = {}>(args?: Subset<T, StoreIncomeType$storeIncomeTypeHistoryIdRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreIncomeHistoryPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StoreIncomeType model
   */ 
  interface StoreIncomeTypeFieldRefs {
    readonly id: FieldRef<"StoreIncomeType", 'BigInt'>
    readonly incomeTypeName: FieldRef<"StoreIncomeType", 'String'>
    readonly code: FieldRef<"StoreIncomeType", 'String'>
    readonly description: FieldRef<"StoreIncomeType", 'String'>
    readonly deleted: FieldRef<"StoreIncomeType", 'Boolean'>
    readonly createAt: FieldRef<"StoreIncomeType", 'DateTime'>
    readonly createBy: FieldRef<"StoreIncomeType", 'BigInt'>
    readonly updatedAt: FieldRef<"StoreIncomeType", 'DateTime'>
    readonly updatedBy: FieldRef<"StoreIncomeType", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * StoreIncomeType findUnique
   */
  export type StoreIncomeTypeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeType
     */
    select?: StoreIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeType
     */
    omit?: StoreIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeTypeInclude<ExtArgs> | null
    /**
     * Filter, which StoreIncomeType to fetch.
     */
    where: StoreIncomeTypeWhereUniqueInput
  }

  /**
   * StoreIncomeType findUniqueOrThrow
   */
  export type StoreIncomeTypeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeType
     */
    select?: StoreIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeType
     */
    omit?: StoreIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeTypeInclude<ExtArgs> | null
    /**
     * Filter, which StoreIncomeType to fetch.
     */
    where: StoreIncomeTypeWhereUniqueInput
  }

  /**
   * StoreIncomeType findFirst
   */
  export type StoreIncomeTypeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeType
     */
    select?: StoreIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeType
     */
    omit?: StoreIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeTypeInclude<ExtArgs> | null
    /**
     * Filter, which StoreIncomeType to fetch.
     */
    where?: StoreIncomeTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreIncomeTypes to fetch.
     */
    orderBy?: StoreIncomeTypeOrderByWithRelationInput | StoreIncomeTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StoreIncomeTypes.
     */
    cursor?: StoreIncomeTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreIncomeTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreIncomeTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StoreIncomeTypes.
     */
    distinct?: StoreIncomeTypeScalarFieldEnum | StoreIncomeTypeScalarFieldEnum[]
  }

  /**
   * StoreIncomeType findFirstOrThrow
   */
  export type StoreIncomeTypeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeType
     */
    select?: StoreIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeType
     */
    omit?: StoreIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeTypeInclude<ExtArgs> | null
    /**
     * Filter, which StoreIncomeType to fetch.
     */
    where?: StoreIncomeTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreIncomeTypes to fetch.
     */
    orderBy?: StoreIncomeTypeOrderByWithRelationInput | StoreIncomeTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StoreIncomeTypes.
     */
    cursor?: StoreIncomeTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreIncomeTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreIncomeTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StoreIncomeTypes.
     */
    distinct?: StoreIncomeTypeScalarFieldEnum | StoreIncomeTypeScalarFieldEnum[]
  }

  /**
   * StoreIncomeType findMany
   */
  export type StoreIncomeTypeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeType
     */
    select?: StoreIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeType
     */
    omit?: StoreIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeTypeInclude<ExtArgs> | null
    /**
     * Filter, which StoreIncomeTypes to fetch.
     */
    where?: StoreIncomeTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreIncomeTypes to fetch.
     */
    orderBy?: StoreIncomeTypeOrderByWithRelationInput | StoreIncomeTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StoreIncomeTypes.
     */
    cursor?: StoreIncomeTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreIncomeTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreIncomeTypes.
     */
    skip?: number
    distinct?: StoreIncomeTypeScalarFieldEnum | StoreIncomeTypeScalarFieldEnum[]
  }

  /**
   * StoreIncomeType create
   */
  export type StoreIncomeTypeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeType
     */
    select?: StoreIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeType
     */
    omit?: StoreIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeTypeInclude<ExtArgs> | null
    /**
     * The data needed to create a StoreIncomeType.
     */
    data: XOR<StoreIncomeTypeCreateInput, StoreIncomeTypeUncheckedCreateInput>
  }

  /**
   * StoreIncomeType createMany
   */
  export type StoreIncomeTypeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StoreIncomeTypes.
     */
    data: StoreIncomeTypeCreateManyInput | StoreIncomeTypeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StoreIncomeType createManyAndReturn
   */
  export type StoreIncomeTypeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeType
     */
    select?: StoreIncomeTypeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeType
     */
    omit?: StoreIncomeTypeOmit<ExtArgs> | null
    /**
     * The data used to create many StoreIncomeTypes.
     */
    data: StoreIncomeTypeCreateManyInput | StoreIncomeTypeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeTypeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * StoreIncomeType update
   */
  export type StoreIncomeTypeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeType
     */
    select?: StoreIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeType
     */
    omit?: StoreIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeTypeInclude<ExtArgs> | null
    /**
     * The data needed to update a StoreIncomeType.
     */
    data: XOR<StoreIncomeTypeUpdateInput, StoreIncomeTypeUncheckedUpdateInput>
    /**
     * Choose, which StoreIncomeType to update.
     */
    where: StoreIncomeTypeWhereUniqueInput
  }

  /**
   * StoreIncomeType updateMany
   */
  export type StoreIncomeTypeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StoreIncomeTypes.
     */
    data: XOR<StoreIncomeTypeUpdateManyMutationInput, StoreIncomeTypeUncheckedUpdateManyInput>
    /**
     * Filter which StoreIncomeTypes to update
     */
    where?: StoreIncomeTypeWhereInput
    /**
     * Limit how many StoreIncomeTypes to update.
     */
    limit?: number
  }

  /**
   * StoreIncomeType updateManyAndReturn
   */
  export type StoreIncomeTypeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeType
     */
    select?: StoreIncomeTypeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeType
     */
    omit?: StoreIncomeTypeOmit<ExtArgs> | null
    /**
     * The data used to update StoreIncomeTypes.
     */
    data: XOR<StoreIncomeTypeUpdateManyMutationInput, StoreIncomeTypeUncheckedUpdateManyInput>
    /**
     * Filter which StoreIncomeTypes to update
     */
    where?: StoreIncomeTypeWhereInput
    /**
     * Limit how many StoreIncomeTypes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeTypeIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * StoreIncomeType upsert
   */
  export type StoreIncomeTypeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeType
     */
    select?: StoreIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeType
     */
    omit?: StoreIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeTypeInclude<ExtArgs> | null
    /**
     * The filter to search for the StoreIncomeType to update in case it exists.
     */
    where: StoreIncomeTypeWhereUniqueInput
    /**
     * In case the StoreIncomeType found by the `where` argument doesn't exist, create a new StoreIncomeType with this data.
     */
    create: XOR<StoreIncomeTypeCreateInput, StoreIncomeTypeUncheckedCreateInput>
    /**
     * In case the StoreIncomeType was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StoreIncomeTypeUpdateInput, StoreIncomeTypeUncheckedUpdateInput>
  }

  /**
   * StoreIncomeType delete
   */
  export type StoreIncomeTypeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeType
     */
    select?: StoreIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeType
     */
    omit?: StoreIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeTypeInclude<ExtArgs> | null
    /**
     * Filter which StoreIncomeType to delete.
     */
    where: StoreIncomeTypeWhereUniqueInput
  }

  /**
   * StoreIncomeType deleteMany
   */
  export type StoreIncomeTypeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StoreIncomeTypes to delete
     */
    where?: StoreIncomeTypeWhereInput
    /**
     * Limit how many StoreIncomeTypes to delete.
     */
    limit?: number
  }

  /**
   * StoreIncomeType.storeIncomeTypeCreateByRel
   */
  export type StoreIncomeType$storeIncomeTypeCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * StoreIncomeType.storeIncomeTypeUpdateByRel
   */
  export type StoreIncomeType$storeIncomeTypeUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * StoreIncomeType.storeIncomeTypeIdRel
   */
  export type StoreIncomeType$storeIncomeTypeIdRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncome
     */
    select?: StoreIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncome
     */
    omit?: StoreIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeInclude<ExtArgs> | null
    where?: StoreIncomeWhereInput
    orderBy?: StoreIncomeOrderByWithRelationInput | StoreIncomeOrderByWithRelationInput[]
    cursor?: StoreIncomeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StoreIncomeScalarFieldEnum | StoreIncomeScalarFieldEnum[]
  }

  /**
   * StoreIncomeType.storeIncomeTypeHistoryIdRel
   */
  export type StoreIncomeType$storeIncomeTypeHistoryIdRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeHistory
     */
    select?: StoreIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeHistory
     */
    omit?: StoreIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeHistoryInclude<ExtArgs> | null
    where?: StoreIncomeHistoryWhereInput
    orderBy?: StoreIncomeHistoryOrderByWithRelationInput | StoreIncomeHistoryOrderByWithRelationInput[]
    cursor?: StoreIncomeHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StoreIncomeHistoryScalarFieldEnum | StoreIncomeHistoryScalarFieldEnum[]
  }

  /**
   * StoreIncomeType without action
   */
  export type StoreIncomeTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreIncomeType
     */
    select?: StoreIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreIncomeType
     */
    omit?: StoreIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncomeTypeInclude<ExtArgs> | null
  }


  /**
   * Model StoreSpending
   */

  export type AggregateStoreSpending = {
    _count: StoreSpendingCountAggregateOutputType | null
    _avg: StoreSpendingAvgAggregateOutputType | null
    _sum: StoreSpendingSumAggregateOutputType | null
    _min: StoreSpendingMinAggregateOutputType | null
    _max: StoreSpendingMaxAggregateOutputType | null
  }

  export type StoreSpendingAvgAggregateOutputType = {
    id: number | null
    spendingTypeId: number | null
    funds: number | null
    createBy: number | null
    updatedBy: number | null
  }

  export type StoreSpendingSumAggregateOutputType = {
    id: bigint | null
    spendingTypeId: bigint | null
    funds: bigint | null
    createBy: bigint | null
    updatedBy: bigint | null
  }

  export type StoreSpendingMinAggregateOutputType = {
    id: bigint | null
    spendingTypeId: bigint | null
    detail: string | null
    funds: bigint | null
    date: Date | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type StoreSpendingMaxAggregateOutputType = {
    id: bigint | null
    spendingTypeId: bigint | null
    detail: string | null
    funds: bigint | null
    date: Date | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type StoreSpendingCountAggregateOutputType = {
    id: number
    spendingTypeId: number
    detail: number
    funds: number
    date: number
    deleted: number
    createAt: number
    createBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type StoreSpendingAvgAggregateInputType = {
    id?: true
    spendingTypeId?: true
    funds?: true
    createBy?: true
    updatedBy?: true
  }

  export type StoreSpendingSumAggregateInputType = {
    id?: true
    spendingTypeId?: true
    funds?: true
    createBy?: true
    updatedBy?: true
  }

  export type StoreSpendingMinAggregateInputType = {
    id?: true
    spendingTypeId?: true
    detail?: true
    funds?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type StoreSpendingMaxAggregateInputType = {
    id?: true
    spendingTypeId?: true
    detail?: true
    funds?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type StoreSpendingCountAggregateInputType = {
    id?: true
    spendingTypeId?: true
    detail?: true
    funds?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type StoreSpendingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StoreSpending to aggregate.
     */
    where?: StoreSpendingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreSpendings to fetch.
     */
    orderBy?: StoreSpendingOrderByWithRelationInput | StoreSpendingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StoreSpendingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreSpendings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreSpendings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StoreSpendings
    **/
    _count?: true | StoreSpendingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StoreSpendingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StoreSpendingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StoreSpendingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StoreSpendingMaxAggregateInputType
  }

  export type GetStoreSpendingAggregateType<T extends StoreSpendingAggregateArgs> = {
        [P in keyof T & keyof AggregateStoreSpending]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStoreSpending[P]>
      : GetScalarType<T[P], AggregateStoreSpending[P]>
  }




  export type StoreSpendingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreSpendingWhereInput
    orderBy?: StoreSpendingOrderByWithAggregationInput | StoreSpendingOrderByWithAggregationInput[]
    by: StoreSpendingScalarFieldEnum[] | StoreSpendingScalarFieldEnum
    having?: StoreSpendingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StoreSpendingCountAggregateInputType | true
    _avg?: StoreSpendingAvgAggregateInputType
    _sum?: StoreSpendingSumAggregateInputType
    _min?: StoreSpendingMinAggregateInputType
    _max?: StoreSpendingMaxAggregateInputType
  }

  export type StoreSpendingGroupByOutputType = {
    id: bigint
    spendingTypeId: bigint
    detail: string | null
    funds: bigint
    date: Date
    deleted: boolean
    createAt: Date
    createBy: bigint | null
    updatedAt: Date
    updatedBy: bigint | null
    _count: StoreSpendingCountAggregateOutputType | null
    _avg: StoreSpendingAvgAggregateOutputType | null
    _sum: StoreSpendingSumAggregateOutputType | null
    _min: StoreSpendingMinAggregateOutputType | null
    _max: StoreSpendingMaxAggregateOutputType | null
  }

  type GetStoreSpendingGroupByPayload<T extends StoreSpendingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StoreSpendingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StoreSpendingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StoreSpendingGroupByOutputType[P]>
            : GetScalarType<T[P], StoreSpendingGroupByOutputType[P]>
        }
      >
    >


  export type StoreSpendingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    spendingTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    storeSpendingTypeIdRel?: boolean | StoreSpendingTypeDefaultArgs<ExtArgs>
    storeSpendingCreateByRel?: boolean | StoreSpending$storeSpendingCreateByRelArgs<ExtArgs>
    storeSpendingUpdateByRel?: boolean | StoreSpending$storeSpendingUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["storeSpending"]>

  export type StoreSpendingSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    spendingTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    storeSpendingTypeIdRel?: boolean | StoreSpendingTypeDefaultArgs<ExtArgs>
    storeSpendingCreateByRel?: boolean | StoreSpending$storeSpendingCreateByRelArgs<ExtArgs>
    storeSpendingUpdateByRel?: boolean | StoreSpending$storeSpendingUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["storeSpending"]>

  export type StoreSpendingSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    spendingTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    storeSpendingTypeIdRel?: boolean | StoreSpendingTypeDefaultArgs<ExtArgs>
    storeSpendingCreateByRel?: boolean | StoreSpending$storeSpendingCreateByRelArgs<ExtArgs>
    storeSpendingUpdateByRel?: boolean | StoreSpending$storeSpendingUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["storeSpending"]>

  export type StoreSpendingSelectScalar = {
    id?: boolean
    spendingTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type StoreSpendingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "spendingTypeId" | "detail" | "funds" | "date" | "deleted" | "createAt" | "createBy" | "updatedAt" | "updatedBy", ExtArgs["result"]["storeSpending"]>
  export type StoreSpendingInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    storeSpendingTypeIdRel?: boolean | StoreSpendingTypeDefaultArgs<ExtArgs>
    storeSpendingCreateByRel?: boolean | StoreSpending$storeSpendingCreateByRelArgs<ExtArgs>
    storeSpendingUpdateByRel?: boolean | StoreSpending$storeSpendingUpdateByRelArgs<ExtArgs>
  }
  export type StoreSpendingIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    storeSpendingTypeIdRel?: boolean | StoreSpendingTypeDefaultArgs<ExtArgs>
    storeSpendingCreateByRel?: boolean | StoreSpending$storeSpendingCreateByRelArgs<ExtArgs>
    storeSpendingUpdateByRel?: boolean | StoreSpending$storeSpendingUpdateByRelArgs<ExtArgs>
  }
  export type StoreSpendingIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    storeSpendingTypeIdRel?: boolean | StoreSpendingTypeDefaultArgs<ExtArgs>
    storeSpendingCreateByRel?: boolean | StoreSpending$storeSpendingCreateByRelArgs<ExtArgs>
    storeSpendingUpdateByRel?: boolean | StoreSpending$storeSpendingUpdateByRelArgs<ExtArgs>
  }

  export type $StoreSpendingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StoreSpending"
    objects: {
      storeSpendingTypeIdRel: Prisma.$StoreSpendingTypePayload<ExtArgs>
      storeSpendingCreateByRel: Prisma.$UserPayload<ExtArgs> | null
      storeSpendingUpdateByRel: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      spendingTypeId: bigint
      detail: string | null
      funds: bigint
      date: Date
      deleted: boolean
      createAt: Date
      createBy: bigint | null
      updatedAt: Date
      updatedBy: bigint | null
    }, ExtArgs["result"]["storeSpending"]>
    composites: {}
  }

  type StoreSpendingGetPayload<S extends boolean | null | undefined | StoreSpendingDefaultArgs> = $Result.GetResult<Prisma.$StoreSpendingPayload, S>

  type StoreSpendingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StoreSpendingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StoreSpendingCountAggregateInputType | true
    }

  export interface StoreSpendingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StoreSpending'], meta: { name: 'StoreSpending' } }
    /**
     * Find zero or one StoreSpending that matches the filter.
     * @param {StoreSpendingFindUniqueArgs} args - Arguments to find a StoreSpending
     * @example
     * // Get one StoreSpending
     * const storeSpending = await prisma.storeSpending.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StoreSpendingFindUniqueArgs>(args: SelectSubset<T, StoreSpendingFindUniqueArgs<ExtArgs>>): Prisma__StoreSpendingClient<$Result.GetResult<Prisma.$StoreSpendingPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one StoreSpending that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StoreSpendingFindUniqueOrThrowArgs} args - Arguments to find a StoreSpending
     * @example
     * // Get one StoreSpending
     * const storeSpending = await prisma.storeSpending.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StoreSpendingFindUniqueOrThrowArgs>(args: SelectSubset<T, StoreSpendingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StoreSpendingClient<$Result.GetResult<Prisma.$StoreSpendingPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first StoreSpending that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreSpendingFindFirstArgs} args - Arguments to find a StoreSpending
     * @example
     * // Get one StoreSpending
     * const storeSpending = await prisma.storeSpending.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StoreSpendingFindFirstArgs>(args?: SelectSubset<T, StoreSpendingFindFirstArgs<ExtArgs>>): Prisma__StoreSpendingClient<$Result.GetResult<Prisma.$StoreSpendingPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first StoreSpending that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreSpendingFindFirstOrThrowArgs} args - Arguments to find a StoreSpending
     * @example
     * // Get one StoreSpending
     * const storeSpending = await prisma.storeSpending.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StoreSpendingFindFirstOrThrowArgs>(args?: SelectSubset<T, StoreSpendingFindFirstOrThrowArgs<ExtArgs>>): Prisma__StoreSpendingClient<$Result.GetResult<Prisma.$StoreSpendingPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more StoreSpendings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreSpendingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StoreSpendings
     * const storeSpendings = await prisma.storeSpending.findMany()
     * 
     * // Get first 10 StoreSpendings
     * const storeSpendings = await prisma.storeSpending.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const storeSpendingWithIdOnly = await prisma.storeSpending.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StoreSpendingFindManyArgs>(args?: SelectSubset<T, StoreSpendingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreSpendingPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a StoreSpending.
     * @param {StoreSpendingCreateArgs} args - Arguments to create a StoreSpending.
     * @example
     * // Create one StoreSpending
     * const StoreSpending = await prisma.storeSpending.create({
     *   data: {
     *     // ... data to create a StoreSpending
     *   }
     * })
     * 
     */
    create<T extends StoreSpendingCreateArgs>(args: SelectSubset<T, StoreSpendingCreateArgs<ExtArgs>>): Prisma__StoreSpendingClient<$Result.GetResult<Prisma.$StoreSpendingPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many StoreSpendings.
     * @param {StoreSpendingCreateManyArgs} args - Arguments to create many StoreSpendings.
     * @example
     * // Create many StoreSpendings
     * const storeSpending = await prisma.storeSpending.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StoreSpendingCreateManyArgs>(args?: SelectSubset<T, StoreSpendingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many StoreSpendings and returns the data saved in the database.
     * @param {StoreSpendingCreateManyAndReturnArgs} args - Arguments to create many StoreSpendings.
     * @example
     * // Create many StoreSpendings
     * const storeSpending = await prisma.storeSpending.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many StoreSpendings and only return the `id`
     * const storeSpendingWithIdOnly = await prisma.storeSpending.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends StoreSpendingCreateManyAndReturnArgs>(args?: SelectSubset<T, StoreSpendingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreSpendingPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a StoreSpending.
     * @param {StoreSpendingDeleteArgs} args - Arguments to delete one StoreSpending.
     * @example
     * // Delete one StoreSpending
     * const StoreSpending = await prisma.storeSpending.delete({
     *   where: {
     *     // ... filter to delete one StoreSpending
     *   }
     * })
     * 
     */
    delete<T extends StoreSpendingDeleteArgs>(args: SelectSubset<T, StoreSpendingDeleteArgs<ExtArgs>>): Prisma__StoreSpendingClient<$Result.GetResult<Prisma.$StoreSpendingPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one StoreSpending.
     * @param {StoreSpendingUpdateArgs} args - Arguments to update one StoreSpending.
     * @example
     * // Update one StoreSpending
     * const storeSpending = await prisma.storeSpending.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StoreSpendingUpdateArgs>(args: SelectSubset<T, StoreSpendingUpdateArgs<ExtArgs>>): Prisma__StoreSpendingClient<$Result.GetResult<Prisma.$StoreSpendingPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more StoreSpendings.
     * @param {StoreSpendingDeleteManyArgs} args - Arguments to filter StoreSpendings to delete.
     * @example
     * // Delete a few StoreSpendings
     * const { count } = await prisma.storeSpending.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StoreSpendingDeleteManyArgs>(args?: SelectSubset<T, StoreSpendingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StoreSpendings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreSpendingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StoreSpendings
     * const storeSpending = await prisma.storeSpending.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StoreSpendingUpdateManyArgs>(args: SelectSubset<T, StoreSpendingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StoreSpendings and returns the data updated in the database.
     * @param {StoreSpendingUpdateManyAndReturnArgs} args - Arguments to update many StoreSpendings.
     * @example
     * // Update many StoreSpendings
     * const storeSpending = await prisma.storeSpending.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more StoreSpendings and only return the `id`
     * const storeSpendingWithIdOnly = await prisma.storeSpending.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends StoreSpendingUpdateManyAndReturnArgs>(args: SelectSubset<T, StoreSpendingUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreSpendingPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one StoreSpending.
     * @param {StoreSpendingUpsertArgs} args - Arguments to update or create a StoreSpending.
     * @example
     * // Update or create a StoreSpending
     * const storeSpending = await prisma.storeSpending.upsert({
     *   create: {
     *     // ... data to create a StoreSpending
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StoreSpending we want to update
     *   }
     * })
     */
    upsert<T extends StoreSpendingUpsertArgs>(args: SelectSubset<T, StoreSpendingUpsertArgs<ExtArgs>>): Prisma__StoreSpendingClient<$Result.GetResult<Prisma.$StoreSpendingPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of StoreSpendings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreSpendingCountArgs} args - Arguments to filter StoreSpendings to count.
     * @example
     * // Count the number of StoreSpendings
     * const count = await prisma.storeSpending.count({
     *   where: {
     *     // ... the filter for the StoreSpendings we want to count
     *   }
     * })
    **/
    count<T extends StoreSpendingCountArgs>(
      args?: Subset<T, StoreSpendingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StoreSpendingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StoreSpending.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreSpendingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StoreSpendingAggregateArgs>(args: Subset<T, StoreSpendingAggregateArgs>): Prisma.PrismaPromise<GetStoreSpendingAggregateType<T>>

    /**
     * Group by StoreSpending.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreSpendingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StoreSpendingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StoreSpendingGroupByArgs['orderBy'] }
        : { orderBy?: StoreSpendingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StoreSpendingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStoreSpendingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StoreSpending model
   */
  readonly fields: StoreSpendingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StoreSpending.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StoreSpendingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    storeSpendingTypeIdRel<T extends StoreSpendingTypeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, StoreSpendingTypeDefaultArgs<ExtArgs>>): Prisma__StoreSpendingTypeClient<$Result.GetResult<Prisma.$StoreSpendingTypePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    storeSpendingCreateByRel<T extends StoreSpending$storeSpendingCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, StoreSpending$storeSpendingCreateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    storeSpendingUpdateByRel<T extends StoreSpending$storeSpendingUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, StoreSpending$storeSpendingUpdateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StoreSpending model
   */ 
  interface StoreSpendingFieldRefs {
    readonly id: FieldRef<"StoreSpending", 'BigInt'>
    readonly spendingTypeId: FieldRef<"StoreSpending", 'BigInt'>
    readonly detail: FieldRef<"StoreSpending", 'String'>
    readonly funds: FieldRef<"StoreSpending", 'BigInt'>
    readonly date: FieldRef<"StoreSpending", 'DateTime'>
    readonly deleted: FieldRef<"StoreSpending", 'Boolean'>
    readonly createAt: FieldRef<"StoreSpending", 'DateTime'>
    readonly createBy: FieldRef<"StoreSpending", 'BigInt'>
    readonly updatedAt: FieldRef<"StoreSpending", 'DateTime'>
    readonly updatedBy: FieldRef<"StoreSpending", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * StoreSpending findUnique
   */
  export type StoreSpendingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpending
     */
    select?: StoreSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpending
     */
    omit?: StoreSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingInclude<ExtArgs> | null
    /**
     * Filter, which StoreSpending to fetch.
     */
    where: StoreSpendingWhereUniqueInput
  }

  /**
   * StoreSpending findUniqueOrThrow
   */
  export type StoreSpendingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpending
     */
    select?: StoreSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpending
     */
    omit?: StoreSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingInclude<ExtArgs> | null
    /**
     * Filter, which StoreSpending to fetch.
     */
    where: StoreSpendingWhereUniqueInput
  }

  /**
   * StoreSpending findFirst
   */
  export type StoreSpendingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpending
     */
    select?: StoreSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpending
     */
    omit?: StoreSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingInclude<ExtArgs> | null
    /**
     * Filter, which StoreSpending to fetch.
     */
    where?: StoreSpendingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreSpendings to fetch.
     */
    orderBy?: StoreSpendingOrderByWithRelationInput | StoreSpendingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StoreSpendings.
     */
    cursor?: StoreSpendingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreSpendings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreSpendings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StoreSpendings.
     */
    distinct?: StoreSpendingScalarFieldEnum | StoreSpendingScalarFieldEnum[]
  }

  /**
   * StoreSpending findFirstOrThrow
   */
  export type StoreSpendingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpending
     */
    select?: StoreSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpending
     */
    omit?: StoreSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingInclude<ExtArgs> | null
    /**
     * Filter, which StoreSpending to fetch.
     */
    where?: StoreSpendingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreSpendings to fetch.
     */
    orderBy?: StoreSpendingOrderByWithRelationInput | StoreSpendingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StoreSpendings.
     */
    cursor?: StoreSpendingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreSpendings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreSpendings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StoreSpendings.
     */
    distinct?: StoreSpendingScalarFieldEnum | StoreSpendingScalarFieldEnum[]
  }

  /**
   * StoreSpending findMany
   */
  export type StoreSpendingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpending
     */
    select?: StoreSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpending
     */
    omit?: StoreSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingInclude<ExtArgs> | null
    /**
     * Filter, which StoreSpendings to fetch.
     */
    where?: StoreSpendingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreSpendings to fetch.
     */
    orderBy?: StoreSpendingOrderByWithRelationInput | StoreSpendingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StoreSpendings.
     */
    cursor?: StoreSpendingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreSpendings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreSpendings.
     */
    skip?: number
    distinct?: StoreSpendingScalarFieldEnum | StoreSpendingScalarFieldEnum[]
  }

  /**
   * StoreSpending create
   */
  export type StoreSpendingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpending
     */
    select?: StoreSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpending
     */
    omit?: StoreSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingInclude<ExtArgs> | null
    /**
     * The data needed to create a StoreSpending.
     */
    data: XOR<StoreSpendingCreateInput, StoreSpendingUncheckedCreateInput>
  }

  /**
   * StoreSpending createMany
   */
  export type StoreSpendingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StoreSpendings.
     */
    data: StoreSpendingCreateManyInput | StoreSpendingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StoreSpending createManyAndReturn
   */
  export type StoreSpendingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpending
     */
    select?: StoreSpendingSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpending
     */
    omit?: StoreSpendingOmit<ExtArgs> | null
    /**
     * The data used to create many StoreSpendings.
     */
    data: StoreSpendingCreateManyInput | StoreSpendingCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * StoreSpending update
   */
  export type StoreSpendingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpending
     */
    select?: StoreSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpending
     */
    omit?: StoreSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingInclude<ExtArgs> | null
    /**
     * The data needed to update a StoreSpending.
     */
    data: XOR<StoreSpendingUpdateInput, StoreSpendingUncheckedUpdateInput>
    /**
     * Choose, which StoreSpending to update.
     */
    where: StoreSpendingWhereUniqueInput
  }

  /**
   * StoreSpending updateMany
   */
  export type StoreSpendingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StoreSpendings.
     */
    data: XOR<StoreSpendingUpdateManyMutationInput, StoreSpendingUncheckedUpdateManyInput>
    /**
     * Filter which StoreSpendings to update
     */
    where?: StoreSpendingWhereInput
    /**
     * Limit how many StoreSpendings to update.
     */
    limit?: number
  }

  /**
   * StoreSpending updateManyAndReturn
   */
  export type StoreSpendingUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpending
     */
    select?: StoreSpendingSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpending
     */
    omit?: StoreSpendingOmit<ExtArgs> | null
    /**
     * The data used to update StoreSpendings.
     */
    data: XOR<StoreSpendingUpdateManyMutationInput, StoreSpendingUncheckedUpdateManyInput>
    /**
     * Filter which StoreSpendings to update
     */
    where?: StoreSpendingWhereInput
    /**
     * Limit how many StoreSpendings to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * StoreSpending upsert
   */
  export type StoreSpendingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpending
     */
    select?: StoreSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpending
     */
    omit?: StoreSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingInclude<ExtArgs> | null
    /**
     * The filter to search for the StoreSpending to update in case it exists.
     */
    where: StoreSpendingWhereUniqueInput
    /**
     * In case the StoreSpending found by the `where` argument doesn't exist, create a new StoreSpending with this data.
     */
    create: XOR<StoreSpendingCreateInput, StoreSpendingUncheckedCreateInput>
    /**
     * In case the StoreSpending was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StoreSpendingUpdateInput, StoreSpendingUncheckedUpdateInput>
  }

  /**
   * StoreSpending delete
   */
  export type StoreSpendingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpending
     */
    select?: StoreSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpending
     */
    omit?: StoreSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingInclude<ExtArgs> | null
    /**
     * Filter which StoreSpending to delete.
     */
    where: StoreSpendingWhereUniqueInput
  }

  /**
   * StoreSpending deleteMany
   */
  export type StoreSpendingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StoreSpendings to delete
     */
    where?: StoreSpendingWhereInput
    /**
     * Limit how many StoreSpendings to delete.
     */
    limit?: number
  }

  /**
   * StoreSpending.storeSpendingCreateByRel
   */
  export type StoreSpending$storeSpendingCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * StoreSpending.storeSpendingUpdateByRel
   */
  export type StoreSpending$storeSpendingUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * StoreSpending without action
   */
  export type StoreSpendingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpending
     */
    select?: StoreSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpending
     */
    omit?: StoreSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingInclude<ExtArgs> | null
  }


  /**
   * Model StoreSpendingHistory
   */

  export type AggregateStoreSpendingHistory = {
    _count: StoreSpendingHistoryCountAggregateOutputType | null
    _avg: StoreSpendingHistoryAvgAggregateOutputType | null
    _sum: StoreSpendingHistorySumAggregateOutputType | null
    _min: StoreSpendingHistoryMinAggregateOutputType | null
    _max: StoreSpendingHistoryMaxAggregateOutputType | null
  }

  export type StoreSpendingHistoryAvgAggregateOutputType = {
    revId: number | null
    id: number | null
    spendingTypeId: number | null
    funds: number | null
    createBy: number | null
    updatedBy: number | null
  }

  export type StoreSpendingHistorySumAggregateOutputType = {
    revId: bigint | null
    id: bigint | null
    spendingTypeId: bigint | null
    funds: bigint | null
    createBy: bigint | null
    updatedBy: bigint | null
  }

  export type StoreSpendingHistoryMinAggregateOutputType = {
    revId: bigint | null
    id: bigint | null
    spendingTypeId: bigint | null
    detail: string | null
    funds: bigint | null
    date: Date | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type StoreSpendingHistoryMaxAggregateOutputType = {
    revId: bigint | null
    id: bigint | null
    spendingTypeId: bigint | null
    detail: string | null
    funds: bigint | null
    date: Date | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type StoreSpendingHistoryCountAggregateOutputType = {
    revId: number
    id: number
    spendingTypeId: number
    detail: number
    funds: number
    date: number
    deleted: number
    createAt: number
    createBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type StoreSpendingHistoryAvgAggregateInputType = {
    revId?: true
    id?: true
    spendingTypeId?: true
    funds?: true
    createBy?: true
    updatedBy?: true
  }

  export type StoreSpendingHistorySumAggregateInputType = {
    revId?: true
    id?: true
    spendingTypeId?: true
    funds?: true
    createBy?: true
    updatedBy?: true
  }

  export type StoreSpendingHistoryMinAggregateInputType = {
    revId?: true
    id?: true
    spendingTypeId?: true
    detail?: true
    funds?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type StoreSpendingHistoryMaxAggregateInputType = {
    revId?: true
    id?: true
    spendingTypeId?: true
    detail?: true
    funds?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type StoreSpendingHistoryCountAggregateInputType = {
    revId?: true
    id?: true
    spendingTypeId?: true
    detail?: true
    funds?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type StoreSpendingHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StoreSpendingHistory to aggregate.
     */
    where?: StoreSpendingHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreSpendingHistories to fetch.
     */
    orderBy?: StoreSpendingHistoryOrderByWithRelationInput | StoreSpendingHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StoreSpendingHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreSpendingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreSpendingHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StoreSpendingHistories
    **/
    _count?: true | StoreSpendingHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StoreSpendingHistoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StoreSpendingHistorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StoreSpendingHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StoreSpendingHistoryMaxAggregateInputType
  }

  export type GetStoreSpendingHistoryAggregateType<T extends StoreSpendingHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregateStoreSpendingHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStoreSpendingHistory[P]>
      : GetScalarType<T[P], AggregateStoreSpendingHistory[P]>
  }




  export type StoreSpendingHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreSpendingHistoryWhereInput
    orderBy?: StoreSpendingHistoryOrderByWithAggregationInput | StoreSpendingHistoryOrderByWithAggregationInput[]
    by: StoreSpendingHistoryScalarFieldEnum[] | StoreSpendingHistoryScalarFieldEnum
    having?: StoreSpendingHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StoreSpendingHistoryCountAggregateInputType | true
    _avg?: StoreSpendingHistoryAvgAggregateInputType
    _sum?: StoreSpendingHistorySumAggregateInputType
    _min?: StoreSpendingHistoryMinAggregateInputType
    _max?: StoreSpendingHistoryMaxAggregateInputType
  }

  export type StoreSpendingHistoryGroupByOutputType = {
    revId: bigint
    id: bigint
    spendingTypeId: bigint
    detail: string | null
    funds: bigint
    date: Date
    deleted: boolean
    createAt: Date
    createBy: bigint | null
    updatedAt: Date
    updatedBy: bigint | null
    _count: StoreSpendingHistoryCountAggregateOutputType | null
    _avg: StoreSpendingHistoryAvgAggregateOutputType | null
    _sum: StoreSpendingHistorySumAggregateOutputType | null
    _min: StoreSpendingHistoryMinAggregateOutputType | null
    _max: StoreSpendingHistoryMaxAggregateOutputType | null
  }

  type GetStoreSpendingHistoryGroupByPayload<T extends StoreSpendingHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StoreSpendingHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StoreSpendingHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StoreSpendingHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], StoreSpendingHistoryGroupByOutputType[P]>
        }
      >
    >


  export type StoreSpendingHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    revId?: boolean
    id?: boolean
    spendingTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    storeSpendingTypeHistoryIdRel?: boolean | StoreSpendingTypeDefaultArgs<ExtArgs>
    storeSpendingHistoryCreateByRel?: boolean | StoreSpendingHistory$storeSpendingHistoryCreateByRelArgs<ExtArgs>
    storeSpendingHistoryUpdateByRel?: boolean | StoreSpendingHistory$storeSpendingHistoryUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["storeSpendingHistory"]>

  export type StoreSpendingHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    revId?: boolean
    id?: boolean
    spendingTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    storeSpendingTypeHistoryIdRel?: boolean | StoreSpendingTypeDefaultArgs<ExtArgs>
    storeSpendingHistoryCreateByRel?: boolean | StoreSpendingHistory$storeSpendingHistoryCreateByRelArgs<ExtArgs>
    storeSpendingHistoryUpdateByRel?: boolean | StoreSpendingHistory$storeSpendingHistoryUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["storeSpendingHistory"]>

  export type StoreSpendingHistorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    revId?: boolean
    id?: boolean
    spendingTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    storeSpendingTypeHistoryIdRel?: boolean | StoreSpendingTypeDefaultArgs<ExtArgs>
    storeSpendingHistoryCreateByRel?: boolean | StoreSpendingHistory$storeSpendingHistoryCreateByRelArgs<ExtArgs>
    storeSpendingHistoryUpdateByRel?: boolean | StoreSpendingHistory$storeSpendingHistoryUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["storeSpendingHistory"]>

  export type StoreSpendingHistorySelectScalar = {
    revId?: boolean
    id?: boolean
    spendingTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type StoreSpendingHistoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"revId" | "id" | "spendingTypeId" | "detail" | "funds" | "date" | "deleted" | "createAt" | "createBy" | "updatedAt" | "updatedBy", ExtArgs["result"]["storeSpendingHistory"]>
  export type StoreSpendingHistoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    storeSpendingTypeHistoryIdRel?: boolean | StoreSpendingTypeDefaultArgs<ExtArgs>
    storeSpendingHistoryCreateByRel?: boolean | StoreSpendingHistory$storeSpendingHistoryCreateByRelArgs<ExtArgs>
    storeSpendingHistoryUpdateByRel?: boolean | StoreSpendingHistory$storeSpendingHistoryUpdateByRelArgs<ExtArgs>
  }
  export type StoreSpendingHistoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    storeSpendingTypeHistoryIdRel?: boolean | StoreSpendingTypeDefaultArgs<ExtArgs>
    storeSpendingHistoryCreateByRel?: boolean | StoreSpendingHistory$storeSpendingHistoryCreateByRelArgs<ExtArgs>
    storeSpendingHistoryUpdateByRel?: boolean | StoreSpendingHistory$storeSpendingHistoryUpdateByRelArgs<ExtArgs>
  }
  export type StoreSpendingHistoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    storeSpendingTypeHistoryIdRel?: boolean | StoreSpendingTypeDefaultArgs<ExtArgs>
    storeSpendingHistoryCreateByRel?: boolean | StoreSpendingHistory$storeSpendingHistoryCreateByRelArgs<ExtArgs>
    storeSpendingHistoryUpdateByRel?: boolean | StoreSpendingHistory$storeSpendingHistoryUpdateByRelArgs<ExtArgs>
  }

  export type $StoreSpendingHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StoreSpendingHistory"
    objects: {
      storeSpendingTypeHistoryIdRel: Prisma.$StoreSpendingTypePayload<ExtArgs>
      storeSpendingHistoryCreateByRel: Prisma.$UserPayload<ExtArgs> | null
      storeSpendingHistoryUpdateByRel: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      revId: bigint
      id: bigint
      spendingTypeId: bigint
      detail: string | null
      funds: bigint
      date: Date
      deleted: boolean
      createAt: Date
      createBy: bigint | null
      updatedAt: Date
      updatedBy: bigint | null
    }, ExtArgs["result"]["storeSpendingHistory"]>
    composites: {}
  }

  type StoreSpendingHistoryGetPayload<S extends boolean | null | undefined | StoreSpendingHistoryDefaultArgs> = $Result.GetResult<Prisma.$StoreSpendingHistoryPayload, S>

  type StoreSpendingHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StoreSpendingHistoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StoreSpendingHistoryCountAggregateInputType | true
    }

  export interface StoreSpendingHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StoreSpendingHistory'], meta: { name: 'StoreSpendingHistory' } }
    /**
     * Find zero or one StoreSpendingHistory that matches the filter.
     * @param {StoreSpendingHistoryFindUniqueArgs} args - Arguments to find a StoreSpendingHistory
     * @example
     * // Get one StoreSpendingHistory
     * const storeSpendingHistory = await prisma.storeSpendingHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StoreSpendingHistoryFindUniqueArgs>(args: SelectSubset<T, StoreSpendingHistoryFindUniqueArgs<ExtArgs>>): Prisma__StoreSpendingHistoryClient<$Result.GetResult<Prisma.$StoreSpendingHistoryPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one StoreSpendingHistory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StoreSpendingHistoryFindUniqueOrThrowArgs} args - Arguments to find a StoreSpendingHistory
     * @example
     * // Get one StoreSpendingHistory
     * const storeSpendingHistory = await prisma.storeSpendingHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StoreSpendingHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, StoreSpendingHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StoreSpendingHistoryClient<$Result.GetResult<Prisma.$StoreSpendingHistoryPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first StoreSpendingHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreSpendingHistoryFindFirstArgs} args - Arguments to find a StoreSpendingHistory
     * @example
     * // Get one StoreSpendingHistory
     * const storeSpendingHistory = await prisma.storeSpendingHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StoreSpendingHistoryFindFirstArgs>(args?: SelectSubset<T, StoreSpendingHistoryFindFirstArgs<ExtArgs>>): Prisma__StoreSpendingHistoryClient<$Result.GetResult<Prisma.$StoreSpendingHistoryPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first StoreSpendingHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreSpendingHistoryFindFirstOrThrowArgs} args - Arguments to find a StoreSpendingHistory
     * @example
     * // Get one StoreSpendingHistory
     * const storeSpendingHistory = await prisma.storeSpendingHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StoreSpendingHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, StoreSpendingHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__StoreSpendingHistoryClient<$Result.GetResult<Prisma.$StoreSpendingHistoryPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more StoreSpendingHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreSpendingHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StoreSpendingHistories
     * const storeSpendingHistories = await prisma.storeSpendingHistory.findMany()
     * 
     * // Get first 10 StoreSpendingHistories
     * const storeSpendingHistories = await prisma.storeSpendingHistory.findMany({ take: 10 })
     * 
     * // Only select the `revId`
     * const storeSpendingHistoryWithRevIdOnly = await prisma.storeSpendingHistory.findMany({ select: { revId: true } })
     * 
     */
    findMany<T extends StoreSpendingHistoryFindManyArgs>(args?: SelectSubset<T, StoreSpendingHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreSpendingHistoryPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a StoreSpendingHistory.
     * @param {StoreSpendingHistoryCreateArgs} args - Arguments to create a StoreSpendingHistory.
     * @example
     * // Create one StoreSpendingHistory
     * const StoreSpendingHistory = await prisma.storeSpendingHistory.create({
     *   data: {
     *     // ... data to create a StoreSpendingHistory
     *   }
     * })
     * 
     */
    create<T extends StoreSpendingHistoryCreateArgs>(args: SelectSubset<T, StoreSpendingHistoryCreateArgs<ExtArgs>>): Prisma__StoreSpendingHistoryClient<$Result.GetResult<Prisma.$StoreSpendingHistoryPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many StoreSpendingHistories.
     * @param {StoreSpendingHistoryCreateManyArgs} args - Arguments to create many StoreSpendingHistories.
     * @example
     * // Create many StoreSpendingHistories
     * const storeSpendingHistory = await prisma.storeSpendingHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StoreSpendingHistoryCreateManyArgs>(args?: SelectSubset<T, StoreSpendingHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many StoreSpendingHistories and returns the data saved in the database.
     * @param {StoreSpendingHistoryCreateManyAndReturnArgs} args - Arguments to create many StoreSpendingHistories.
     * @example
     * // Create many StoreSpendingHistories
     * const storeSpendingHistory = await prisma.storeSpendingHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many StoreSpendingHistories and only return the `revId`
     * const storeSpendingHistoryWithRevIdOnly = await prisma.storeSpendingHistory.createManyAndReturn({
     *   select: { revId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends StoreSpendingHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, StoreSpendingHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreSpendingHistoryPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a StoreSpendingHistory.
     * @param {StoreSpendingHistoryDeleteArgs} args - Arguments to delete one StoreSpendingHistory.
     * @example
     * // Delete one StoreSpendingHistory
     * const StoreSpendingHistory = await prisma.storeSpendingHistory.delete({
     *   where: {
     *     // ... filter to delete one StoreSpendingHistory
     *   }
     * })
     * 
     */
    delete<T extends StoreSpendingHistoryDeleteArgs>(args: SelectSubset<T, StoreSpendingHistoryDeleteArgs<ExtArgs>>): Prisma__StoreSpendingHistoryClient<$Result.GetResult<Prisma.$StoreSpendingHistoryPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one StoreSpendingHistory.
     * @param {StoreSpendingHistoryUpdateArgs} args - Arguments to update one StoreSpendingHistory.
     * @example
     * // Update one StoreSpendingHistory
     * const storeSpendingHistory = await prisma.storeSpendingHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StoreSpendingHistoryUpdateArgs>(args: SelectSubset<T, StoreSpendingHistoryUpdateArgs<ExtArgs>>): Prisma__StoreSpendingHistoryClient<$Result.GetResult<Prisma.$StoreSpendingHistoryPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more StoreSpendingHistories.
     * @param {StoreSpendingHistoryDeleteManyArgs} args - Arguments to filter StoreSpendingHistories to delete.
     * @example
     * // Delete a few StoreSpendingHistories
     * const { count } = await prisma.storeSpendingHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StoreSpendingHistoryDeleteManyArgs>(args?: SelectSubset<T, StoreSpendingHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StoreSpendingHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreSpendingHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StoreSpendingHistories
     * const storeSpendingHistory = await prisma.storeSpendingHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StoreSpendingHistoryUpdateManyArgs>(args: SelectSubset<T, StoreSpendingHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StoreSpendingHistories and returns the data updated in the database.
     * @param {StoreSpendingHistoryUpdateManyAndReturnArgs} args - Arguments to update many StoreSpendingHistories.
     * @example
     * // Update many StoreSpendingHistories
     * const storeSpendingHistory = await prisma.storeSpendingHistory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more StoreSpendingHistories and only return the `revId`
     * const storeSpendingHistoryWithRevIdOnly = await prisma.storeSpendingHistory.updateManyAndReturn({
     *   select: { revId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends StoreSpendingHistoryUpdateManyAndReturnArgs>(args: SelectSubset<T, StoreSpendingHistoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreSpendingHistoryPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one StoreSpendingHistory.
     * @param {StoreSpendingHistoryUpsertArgs} args - Arguments to update or create a StoreSpendingHistory.
     * @example
     * // Update or create a StoreSpendingHistory
     * const storeSpendingHistory = await prisma.storeSpendingHistory.upsert({
     *   create: {
     *     // ... data to create a StoreSpendingHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StoreSpendingHistory we want to update
     *   }
     * })
     */
    upsert<T extends StoreSpendingHistoryUpsertArgs>(args: SelectSubset<T, StoreSpendingHistoryUpsertArgs<ExtArgs>>): Prisma__StoreSpendingHistoryClient<$Result.GetResult<Prisma.$StoreSpendingHistoryPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of StoreSpendingHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreSpendingHistoryCountArgs} args - Arguments to filter StoreSpendingHistories to count.
     * @example
     * // Count the number of StoreSpendingHistories
     * const count = await prisma.storeSpendingHistory.count({
     *   where: {
     *     // ... the filter for the StoreSpendingHistories we want to count
     *   }
     * })
    **/
    count<T extends StoreSpendingHistoryCountArgs>(
      args?: Subset<T, StoreSpendingHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StoreSpendingHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StoreSpendingHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreSpendingHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StoreSpendingHistoryAggregateArgs>(args: Subset<T, StoreSpendingHistoryAggregateArgs>): Prisma.PrismaPromise<GetStoreSpendingHistoryAggregateType<T>>

    /**
     * Group by StoreSpendingHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreSpendingHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StoreSpendingHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StoreSpendingHistoryGroupByArgs['orderBy'] }
        : { orderBy?: StoreSpendingHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StoreSpendingHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStoreSpendingHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StoreSpendingHistory model
   */
  readonly fields: StoreSpendingHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StoreSpendingHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StoreSpendingHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    storeSpendingTypeHistoryIdRel<T extends StoreSpendingTypeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, StoreSpendingTypeDefaultArgs<ExtArgs>>): Prisma__StoreSpendingTypeClient<$Result.GetResult<Prisma.$StoreSpendingTypePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    storeSpendingHistoryCreateByRel<T extends StoreSpendingHistory$storeSpendingHistoryCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, StoreSpendingHistory$storeSpendingHistoryCreateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    storeSpendingHistoryUpdateByRel<T extends StoreSpendingHistory$storeSpendingHistoryUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, StoreSpendingHistory$storeSpendingHistoryUpdateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StoreSpendingHistory model
   */ 
  interface StoreSpendingHistoryFieldRefs {
    readonly revId: FieldRef<"StoreSpendingHistory", 'BigInt'>
    readonly id: FieldRef<"StoreSpendingHistory", 'BigInt'>
    readonly spendingTypeId: FieldRef<"StoreSpendingHistory", 'BigInt'>
    readonly detail: FieldRef<"StoreSpendingHistory", 'String'>
    readonly funds: FieldRef<"StoreSpendingHistory", 'BigInt'>
    readonly date: FieldRef<"StoreSpendingHistory", 'DateTime'>
    readonly deleted: FieldRef<"StoreSpendingHistory", 'Boolean'>
    readonly createAt: FieldRef<"StoreSpendingHistory", 'DateTime'>
    readonly createBy: FieldRef<"StoreSpendingHistory", 'BigInt'>
    readonly updatedAt: FieldRef<"StoreSpendingHistory", 'DateTime'>
    readonly updatedBy: FieldRef<"StoreSpendingHistory", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * StoreSpendingHistory findUnique
   */
  export type StoreSpendingHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingHistory
     */
    select?: StoreSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingHistory
     */
    omit?: StoreSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which StoreSpendingHistory to fetch.
     */
    where: StoreSpendingHistoryWhereUniqueInput
  }

  /**
   * StoreSpendingHistory findUniqueOrThrow
   */
  export type StoreSpendingHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingHistory
     */
    select?: StoreSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingHistory
     */
    omit?: StoreSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which StoreSpendingHistory to fetch.
     */
    where: StoreSpendingHistoryWhereUniqueInput
  }

  /**
   * StoreSpendingHistory findFirst
   */
  export type StoreSpendingHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingHistory
     */
    select?: StoreSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingHistory
     */
    omit?: StoreSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which StoreSpendingHistory to fetch.
     */
    where?: StoreSpendingHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreSpendingHistories to fetch.
     */
    orderBy?: StoreSpendingHistoryOrderByWithRelationInput | StoreSpendingHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StoreSpendingHistories.
     */
    cursor?: StoreSpendingHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreSpendingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreSpendingHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StoreSpendingHistories.
     */
    distinct?: StoreSpendingHistoryScalarFieldEnum | StoreSpendingHistoryScalarFieldEnum[]
  }

  /**
   * StoreSpendingHistory findFirstOrThrow
   */
  export type StoreSpendingHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingHistory
     */
    select?: StoreSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingHistory
     */
    omit?: StoreSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which StoreSpendingHistory to fetch.
     */
    where?: StoreSpendingHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreSpendingHistories to fetch.
     */
    orderBy?: StoreSpendingHistoryOrderByWithRelationInput | StoreSpendingHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StoreSpendingHistories.
     */
    cursor?: StoreSpendingHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreSpendingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreSpendingHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StoreSpendingHistories.
     */
    distinct?: StoreSpendingHistoryScalarFieldEnum | StoreSpendingHistoryScalarFieldEnum[]
  }

  /**
   * StoreSpendingHistory findMany
   */
  export type StoreSpendingHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingHistory
     */
    select?: StoreSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingHistory
     */
    omit?: StoreSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which StoreSpendingHistories to fetch.
     */
    where?: StoreSpendingHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreSpendingHistories to fetch.
     */
    orderBy?: StoreSpendingHistoryOrderByWithRelationInput | StoreSpendingHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StoreSpendingHistories.
     */
    cursor?: StoreSpendingHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreSpendingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreSpendingHistories.
     */
    skip?: number
    distinct?: StoreSpendingHistoryScalarFieldEnum | StoreSpendingHistoryScalarFieldEnum[]
  }

  /**
   * StoreSpendingHistory create
   */
  export type StoreSpendingHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingHistory
     */
    select?: StoreSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingHistory
     */
    omit?: StoreSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingHistoryInclude<ExtArgs> | null
    /**
     * The data needed to create a StoreSpendingHistory.
     */
    data: XOR<StoreSpendingHistoryCreateInput, StoreSpendingHistoryUncheckedCreateInput>
  }

  /**
   * StoreSpendingHistory createMany
   */
  export type StoreSpendingHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StoreSpendingHistories.
     */
    data: StoreSpendingHistoryCreateManyInput | StoreSpendingHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StoreSpendingHistory createManyAndReturn
   */
  export type StoreSpendingHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingHistory
     */
    select?: StoreSpendingHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingHistory
     */
    omit?: StoreSpendingHistoryOmit<ExtArgs> | null
    /**
     * The data used to create many StoreSpendingHistories.
     */
    data: StoreSpendingHistoryCreateManyInput | StoreSpendingHistoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingHistoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * StoreSpendingHistory update
   */
  export type StoreSpendingHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingHistory
     */
    select?: StoreSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingHistory
     */
    omit?: StoreSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingHistoryInclude<ExtArgs> | null
    /**
     * The data needed to update a StoreSpendingHistory.
     */
    data: XOR<StoreSpendingHistoryUpdateInput, StoreSpendingHistoryUncheckedUpdateInput>
    /**
     * Choose, which StoreSpendingHistory to update.
     */
    where: StoreSpendingHistoryWhereUniqueInput
  }

  /**
   * StoreSpendingHistory updateMany
   */
  export type StoreSpendingHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StoreSpendingHistories.
     */
    data: XOR<StoreSpendingHistoryUpdateManyMutationInput, StoreSpendingHistoryUncheckedUpdateManyInput>
    /**
     * Filter which StoreSpendingHistories to update
     */
    where?: StoreSpendingHistoryWhereInput
    /**
     * Limit how many StoreSpendingHistories to update.
     */
    limit?: number
  }

  /**
   * StoreSpendingHistory updateManyAndReturn
   */
  export type StoreSpendingHistoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingHistory
     */
    select?: StoreSpendingHistorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingHistory
     */
    omit?: StoreSpendingHistoryOmit<ExtArgs> | null
    /**
     * The data used to update StoreSpendingHistories.
     */
    data: XOR<StoreSpendingHistoryUpdateManyMutationInput, StoreSpendingHistoryUncheckedUpdateManyInput>
    /**
     * Filter which StoreSpendingHistories to update
     */
    where?: StoreSpendingHistoryWhereInput
    /**
     * Limit how many StoreSpendingHistories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingHistoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * StoreSpendingHistory upsert
   */
  export type StoreSpendingHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingHistory
     */
    select?: StoreSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingHistory
     */
    omit?: StoreSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingHistoryInclude<ExtArgs> | null
    /**
     * The filter to search for the StoreSpendingHistory to update in case it exists.
     */
    where: StoreSpendingHistoryWhereUniqueInput
    /**
     * In case the StoreSpendingHistory found by the `where` argument doesn't exist, create a new StoreSpendingHistory with this data.
     */
    create: XOR<StoreSpendingHistoryCreateInput, StoreSpendingHistoryUncheckedCreateInput>
    /**
     * In case the StoreSpendingHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StoreSpendingHistoryUpdateInput, StoreSpendingHistoryUncheckedUpdateInput>
  }

  /**
   * StoreSpendingHistory delete
   */
  export type StoreSpendingHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingHistory
     */
    select?: StoreSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingHistory
     */
    omit?: StoreSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingHistoryInclude<ExtArgs> | null
    /**
     * Filter which StoreSpendingHistory to delete.
     */
    where: StoreSpendingHistoryWhereUniqueInput
  }

  /**
   * StoreSpendingHistory deleteMany
   */
  export type StoreSpendingHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StoreSpendingHistories to delete
     */
    where?: StoreSpendingHistoryWhereInput
    /**
     * Limit how many StoreSpendingHistories to delete.
     */
    limit?: number
  }

  /**
   * StoreSpendingHistory.storeSpendingHistoryCreateByRel
   */
  export type StoreSpendingHistory$storeSpendingHistoryCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * StoreSpendingHistory.storeSpendingHistoryUpdateByRel
   */
  export type StoreSpendingHistory$storeSpendingHistoryUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * StoreSpendingHistory without action
   */
  export type StoreSpendingHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingHistory
     */
    select?: StoreSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingHistory
     */
    omit?: StoreSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingHistoryInclude<ExtArgs> | null
  }


  /**
   * Model StoreSpendingType
   */

  export type AggregateStoreSpendingType = {
    _count: StoreSpendingTypeCountAggregateOutputType | null
    _avg: StoreSpendingTypeAvgAggregateOutputType | null
    _sum: StoreSpendingTypeSumAggregateOutputType | null
    _min: StoreSpendingTypeMinAggregateOutputType | null
    _max: StoreSpendingTypeMaxAggregateOutputType | null
  }

  export type StoreSpendingTypeAvgAggregateOutputType = {
    id: number | null
    createBy: number | null
    updatedBy: number | null
  }

  export type StoreSpendingTypeSumAggregateOutputType = {
    id: bigint | null
    createBy: bigint | null
    updatedBy: bigint | null
  }

  export type StoreSpendingTypeMinAggregateOutputType = {
    id: bigint | null
    spendingTypeName: string | null
    code: string | null
    description: string | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type StoreSpendingTypeMaxAggregateOutputType = {
    id: bigint | null
    spendingTypeName: string | null
    code: string | null
    description: string | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type StoreSpendingTypeCountAggregateOutputType = {
    id: number
    spendingTypeName: number
    code: number
    description: number
    deleted: number
    createAt: number
    createBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type StoreSpendingTypeAvgAggregateInputType = {
    id?: true
    createBy?: true
    updatedBy?: true
  }

  export type StoreSpendingTypeSumAggregateInputType = {
    id?: true
    createBy?: true
    updatedBy?: true
  }

  export type StoreSpendingTypeMinAggregateInputType = {
    id?: true
    spendingTypeName?: true
    code?: true
    description?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type StoreSpendingTypeMaxAggregateInputType = {
    id?: true
    spendingTypeName?: true
    code?: true
    description?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type StoreSpendingTypeCountAggregateInputType = {
    id?: true
    spendingTypeName?: true
    code?: true
    description?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type StoreSpendingTypeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StoreSpendingType to aggregate.
     */
    where?: StoreSpendingTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreSpendingTypes to fetch.
     */
    orderBy?: StoreSpendingTypeOrderByWithRelationInput | StoreSpendingTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StoreSpendingTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreSpendingTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreSpendingTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StoreSpendingTypes
    **/
    _count?: true | StoreSpendingTypeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StoreSpendingTypeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StoreSpendingTypeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StoreSpendingTypeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StoreSpendingTypeMaxAggregateInputType
  }

  export type GetStoreSpendingTypeAggregateType<T extends StoreSpendingTypeAggregateArgs> = {
        [P in keyof T & keyof AggregateStoreSpendingType]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStoreSpendingType[P]>
      : GetScalarType<T[P], AggregateStoreSpendingType[P]>
  }




  export type StoreSpendingTypeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreSpendingTypeWhereInput
    orderBy?: StoreSpendingTypeOrderByWithAggregationInput | StoreSpendingTypeOrderByWithAggregationInput[]
    by: StoreSpendingTypeScalarFieldEnum[] | StoreSpendingTypeScalarFieldEnum
    having?: StoreSpendingTypeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StoreSpendingTypeCountAggregateInputType | true
    _avg?: StoreSpendingTypeAvgAggregateInputType
    _sum?: StoreSpendingTypeSumAggregateInputType
    _min?: StoreSpendingTypeMinAggregateInputType
    _max?: StoreSpendingTypeMaxAggregateInputType
  }

  export type StoreSpendingTypeGroupByOutputType = {
    id: bigint
    spendingTypeName: string
    code: string
    description: string
    deleted: boolean
    createAt: Date
    createBy: bigint | null
    updatedAt: Date
    updatedBy: bigint | null
    _count: StoreSpendingTypeCountAggregateOutputType | null
    _avg: StoreSpendingTypeAvgAggregateOutputType | null
    _sum: StoreSpendingTypeSumAggregateOutputType | null
    _min: StoreSpendingTypeMinAggregateOutputType | null
    _max: StoreSpendingTypeMaxAggregateOutputType | null
  }

  type GetStoreSpendingTypeGroupByPayload<T extends StoreSpendingTypeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StoreSpendingTypeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StoreSpendingTypeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StoreSpendingTypeGroupByOutputType[P]>
            : GetScalarType<T[P], StoreSpendingTypeGroupByOutputType[P]>
        }
      >
    >


  export type StoreSpendingTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    spendingTypeName?: boolean
    code?: boolean
    description?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    storeSpendingTypeCreateByRel?: boolean | StoreSpendingType$storeSpendingTypeCreateByRelArgs<ExtArgs>
    storeSpendingTypeUpdateByRel?: boolean | StoreSpendingType$storeSpendingTypeUpdateByRelArgs<ExtArgs>
    storeSpendingTypeIdRel?: boolean | StoreSpendingType$storeSpendingTypeIdRelArgs<ExtArgs>
    storeSpendingTypeHistoryIdRel?: boolean | StoreSpendingType$storeSpendingTypeHistoryIdRelArgs<ExtArgs>
    _count?: boolean | StoreSpendingTypeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["storeSpendingType"]>

  export type StoreSpendingTypeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    spendingTypeName?: boolean
    code?: boolean
    description?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    storeSpendingTypeCreateByRel?: boolean | StoreSpendingType$storeSpendingTypeCreateByRelArgs<ExtArgs>
    storeSpendingTypeUpdateByRel?: boolean | StoreSpendingType$storeSpendingTypeUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["storeSpendingType"]>

  export type StoreSpendingTypeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    spendingTypeName?: boolean
    code?: boolean
    description?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    storeSpendingTypeCreateByRel?: boolean | StoreSpendingType$storeSpendingTypeCreateByRelArgs<ExtArgs>
    storeSpendingTypeUpdateByRel?: boolean | StoreSpendingType$storeSpendingTypeUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["storeSpendingType"]>

  export type StoreSpendingTypeSelectScalar = {
    id?: boolean
    spendingTypeName?: boolean
    code?: boolean
    description?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type StoreSpendingTypeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "spendingTypeName" | "code" | "description" | "deleted" | "createAt" | "createBy" | "updatedAt" | "updatedBy", ExtArgs["result"]["storeSpendingType"]>
  export type StoreSpendingTypeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    storeSpendingTypeCreateByRel?: boolean | StoreSpendingType$storeSpendingTypeCreateByRelArgs<ExtArgs>
    storeSpendingTypeUpdateByRel?: boolean | StoreSpendingType$storeSpendingTypeUpdateByRelArgs<ExtArgs>
    storeSpendingTypeIdRel?: boolean | StoreSpendingType$storeSpendingTypeIdRelArgs<ExtArgs>
    storeSpendingTypeHistoryIdRel?: boolean | StoreSpendingType$storeSpendingTypeHistoryIdRelArgs<ExtArgs>
    _count?: boolean | StoreSpendingTypeCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type StoreSpendingTypeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    storeSpendingTypeCreateByRel?: boolean | StoreSpendingType$storeSpendingTypeCreateByRelArgs<ExtArgs>
    storeSpendingTypeUpdateByRel?: boolean | StoreSpendingType$storeSpendingTypeUpdateByRelArgs<ExtArgs>
  }
  export type StoreSpendingTypeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    storeSpendingTypeCreateByRel?: boolean | StoreSpendingType$storeSpendingTypeCreateByRelArgs<ExtArgs>
    storeSpendingTypeUpdateByRel?: boolean | StoreSpendingType$storeSpendingTypeUpdateByRelArgs<ExtArgs>
  }

  export type $StoreSpendingTypePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StoreSpendingType"
    objects: {
      storeSpendingTypeCreateByRel: Prisma.$UserPayload<ExtArgs> | null
      storeSpendingTypeUpdateByRel: Prisma.$UserPayload<ExtArgs> | null
      storeSpendingTypeIdRel: Prisma.$StoreSpendingPayload<ExtArgs>[]
      storeSpendingTypeHistoryIdRel: Prisma.$StoreSpendingHistoryPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      spendingTypeName: string
      code: string
      description: string
      deleted: boolean
      createAt: Date
      createBy: bigint | null
      updatedAt: Date
      updatedBy: bigint | null
    }, ExtArgs["result"]["storeSpendingType"]>
    composites: {}
  }

  type StoreSpendingTypeGetPayload<S extends boolean | null | undefined | StoreSpendingTypeDefaultArgs> = $Result.GetResult<Prisma.$StoreSpendingTypePayload, S>

  type StoreSpendingTypeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StoreSpendingTypeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StoreSpendingTypeCountAggregateInputType | true
    }

  export interface StoreSpendingTypeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StoreSpendingType'], meta: { name: 'StoreSpendingType' } }
    /**
     * Find zero or one StoreSpendingType that matches the filter.
     * @param {StoreSpendingTypeFindUniqueArgs} args - Arguments to find a StoreSpendingType
     * @example
     * // Get one StoreSpendingType
     * const storeSpendingType = await prisma.storeSpendingType.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StoreSpendingTypeFindUniqueArgs>(args: SelectSubset<T, StoreSpendingTypeFindUniqueArgs<ExtArgs>>): Prisma__StoreSpendingTypeClient<$Result.GetResult<Prisma.$StoreSpendingTypePayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one StoreSpendingType that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StoreSpendingTypeFindUniqueOrThrowArgs} args - Arguments to find a StoreSpendingType
     * @example
     * // Get one StoreSpendingType
     * const storeSpendingType = await prisma.storeSpendingType.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StoreSpendingTypeFindUniqueOrThrowArgs>(args: SelectSubset<T, StoreSpendingTypeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StoreSpendingTypeClient<$Result.GetResult<Prisma.$StoreSpendingTypePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first StoreSpendingType that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreSpendingTypeFindFirstArgs} args - Arguments to find a StoreSpendingType
     * @example
     * // Get one StoreSpendingType
     * const storeSpendingType = await prisma.storeSpendingType.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StoreSpendingTypeFindFirstArgs>(args?: SelectSubset<T, StoreSpendingTypeFindFirstArgs<ExtArgs>>): Prisma__StoreSpendingTypeClient<$Result.GetResult<Prisma.$StoreSpendingTypePayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first StoreSpendingType that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreSpendingTypeFindFirstOrThrowArgs} args - Arguments to find a StoreSpendingType
     * @example
     * // Get one StoreSpendingType
     * const storeSpendingType = await prisma.storeSpendingType.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StoreSpendingTypeFindFirstOrThrowArgs>(args?: SelectSubset<T, StoreSpendingTypeFindFirstOrThrowArgs<ExtArgs>>): Prisma__StoreSpendingTypeClient<$Result.GetResult<Prisma.$StoreSpendingTypePayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more StoreSpendingTypes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreSpendingTypeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StoreSpendingTypes
     * const storeSpendingTypes = await prisma.storeSpendingType.findMany()
     * 
     * // Get first 10 StoreSpendingTypes
     * const storeSpendingTypes = await prisma.storeSpendingType.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const storeSpendingTypeWithIdOnly = await prisma.storeSpendingType.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StoreSpendingTypeFindManyArgs>(args?: SelectSubset<T, StoreSpendingTypeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreSpendingTypePayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a StoreSpendingType.
     * @param {StoreSpendingTypeCreateArgs} args - Arguments to create a StoreSpendingType.
     * @example
     * // Create one StoreSpendingType
     * const StoreSpendingType = await prisma.storeSpendingType.create({
     *   data: {
     *     // ... data to create a StoreSpendingType
     *   }
     * })
     * 
     */
    create<T extends StoreSpendingTypeCreateArgs>(args: SelectSubset<T, StoreSpendingTypeCreateArgs<ExtArgs>>): Prisma__StoreSpendingTypeClient<$Result.GetResult<Prisma.$StoreSpendingTypePayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many StoreSpendingTypes.
     * @param {StoreSpendingTypeCreateManyArgs} args - Arguments to create many StoreSpendingTypes.
     * @example
     * // Create many StoreSpendingTypes
     * const storeSpendingType = await prisma.storeSpendingType.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StoreSpendingTypeCreateManyArgs>(args?: SelectSubset<T, StoreSpendingTypeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many StoreSpendingTypes and returns the data saved in the database.
     * @param {StoreSpendingTypeCreateManyAndReturnArgs} args - Arguments to create many StoreSpendingTypes.
     * @example
     * // Create many StoreSpendingTypes
     * const storeSpendingType = await prisma.storeSpendingType.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many StoreSpendingTypes and only return the `id`
     * const storeSpendingTypeWithIdOnly = await prisma.storeSpendingType.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends StoreSpendingTypeCreateManyAndReturnArgs>(args?: SelectSubset<T, StoreSpendingTypeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreSpendingTypePayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a StoreSpendingType.
     * @param {StoreSpendingTypeDeleteArgs} args - Arguments to delete one StoreSpendingType.
     * @example
     * // Delete one StoreSpendingType
     * const StoreSpendingType = await prisma.storeSpendingType.delete({
     *   where: {
     *     // ... filter to delete one StoreSpendingType
     *   }
     * })
     * 
     */
    delete<T extends StoreSpendingTypeDeleteArgs>(args: SelectSubset<T, StoreSpendingTypeDeleteArgs<ExtArgs>>): Prisma__StoreSpendingTypeClient<$Result.GetResult<Prisma.$StoreSpendingTypePayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one StoreSpendingType.
     * @param {StoreSpendingTypeUpdateArgs} args - Arguments to update one StoreSpendingType.
     * @example
     * // Update one StoreSpendingType
     * const storeSpendingType = await prisma.storeSpendingType.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StoreSpendingTypeUpdateArgs>(args: SelectSubset<T, StoreSpendingTypeUpdateArgs<ExtArgs>>): Prisma__StoreSpendingTypeClient<$Result.GetResult<Prisma.$StoreSpendingTypePayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more StoreSpendingTypes.
     * @param {StoreSpendingTypeDeleteManyArgs} args - Arguments to filter StoreSpendingTypes to delete.
     * @example
     * // Delete a few StoreSpendingTypes
     * const { count } = await prisma.storeSpendingType.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StoreSpendingTypeDeleteManyArgs>(args?: SelectSubset<T, StoreSpendingTypeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StoreSpendingTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreSpendingTypeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StoreSpendingTypes
     * const storeSpendingType = await prisma.storeSpendingType.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StoreSpendingTypeUpdateManyArgs>(args: SelectSubset<T, StoreSpendingTypeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StoreSpendingTypes and returns the data updated in the database.
     * @param {StoreSpendingTypeUpdateManyAndReturnArgs} args - Arguments to update many StoreSpendingTypes.
     * @example
     * // Update many StoreSpendingTypes
     * const storeSpendingType = await prisma.storeSpendingType.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more StoreSpendingTypes and only return the `id`
     * const storeSpendingTypeWithIdOnly = await prisma.storeSpendingType.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends StoreSpendingTypeUpdateManyAndReturnArgs>(args: SelectSubset<T, StoreSpendingTypeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreSpendingTypePayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one StoreSpendingType.
     * @param {StoreSpendingTypeUpsertArgs} args - Arguments to update or create a StoreSpendingType.
     * @example
     * // Update or create a StoreSpendingType
     * const storeSpendingType = await prisma.storeSpendingType.upsert({
     *   create: {
     *     // ... data to create a StoreSpendingType
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StoreSpendingType we want to update
     *   }
     * })
     */
    upsert<T extends StoreSpendingTypeUpsertArgs>(args: SelectSubset<T, StoreSpendingTypeUpsertArgs<ExtArgs>>): Prisma__StoreSpendingTypeClient<$Result.GetResult<Prisma.$StoreSpendingTypePayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of StoreSpendingTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreSpendingTypeCountArgs} args - Arguments to filter StoreSpendingTypes to count.
     * @example
     * // Count the number of StoreSpendingTypes
     * const count = await prisma.storeSpendingType.count({
     *   where: {
     *     // ... the filter for the StoreSpendingTypes we want to count
     *   }
     * })
    **/
    count<T extends StoreSpendingTypeCountArgs>(
      args?: Subset<T, StoreSpendingTypeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StoreSpendingTypeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StoreSpendingType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreSpendingTypeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StoreSpendingTypeAggregateArgs>(args: Subset<T, StoreSpendingTypeAggregateArgs>): Prisma.PrismaPromise<GetStoreSpendingTypeAggregateType<T>>

    /**
     * Group by StoreSpendingType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreSpendingTypeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StoreSpendingTypeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StoreSpendingTypeGroupByArgs['orderBy'] }
        : { orderBy?: StoreSpendingTypeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StoreSpendingTypeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStoreSpendingTypeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StoreSpendingType model
   */
  readonly fields: StoreSpendingTypeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StoreSpendingType.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StoreSpendingTypeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    storeSpendingTypeCreateByRel<T extends StoreSpendingType$storeSpendingTypeCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, StoreSpendingType$storeSpendingTypeCreateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    storeSpendingTypeUpdateByRel<T extends StoreSpendingType$storeSpendingTypeUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, StoreSpendingType$storeSpendingTypeUpdateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    storeSpendingTypeIdRel<T extends StoreSpendingType$storeSpendingTypeIdRelArgs<ExtArgs> = {}>(args?: Subset<T, StoreSpendingType$storeSpendingTypeIdRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreSpendingPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    storeSpendingTypeHistoryIdRel<T extends StoreSpendingType$storeSpendingTypeHistoryIdRelArgs<ExtArgs> = {}>(args?: Subset<T, StoreSpendingType$storeSpendingTypeHistoryIdRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreSpendingHistoryPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StoreSpendingType model
   */ 
  interface StoreSpendingTypeFieldRefs {
    readonly id: FieldRef<"StoreSpendingType", 'BigInt'>
    readonly spendingTypeName: FieldRef<"StoreSpendingType", 'String'>
    readonly code: FieldRef<"StoreSpendingType", 'String'>
    readonly description: FieldRef<"StoreSpendingType", 'String'>
    readonly deleted: FieldRef<"StoreSpendingType", 'Boolean'>
    readonly createAt: FieldRef<"StoreSpendingType", 'DateTime'>
    readonly createBy: FieldRef<"StoreSpendingType", 'BigInt'>
    readonly updatedAt: FieldRef<"StoreSpendingType", 'DateTime'>
    readonly updatedBy: FieldRef<"StoreSpendingType", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * StoreSpendingType findUnique
   */
  export type StoreSpendingTypeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingType
     */
    select?: StoreSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingType
     */
    omit?: StoreSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingTypeInclude<ExtArgs> | null
    /**
     * Filter, which StoreSpendingType to fetch.
     */
    where: StoreSpendingTypeWhereUniqueInput
  }

  /**
   * StoreSpendingType findUniqueOrThrow
   */
  export type StoreSpendingTypeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingType
     */
    select?: StoreSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingType
     */
    omit?: StoreSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingTypeInclude<ExtArgs> | null
    /**
     * Filter, which StoreSpendingType to fetch.
     */
    where: StoreSpendingTypeWhereUniqueInput
  }

  /**
   * StoreSpendingType findFirst
   */
  export type StoreSpendingTypeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingType
     */
    select?: StoreSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingType
     */
    omit?: StoreSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingTypeInclude<ExtArgs> | null
    /**
     * Filter, which StoreSpendingType to fetch.
     */
    where?: StoreSpendingTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreSpendingTypes to fetch.
     */
    orderBy?: StoreSpendingTypeOrderByWithRelationInput | StoreSpendingTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StoreSpendingTypes.
     */
    cursor?: StoreSpendingTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreSpendingTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreSpendingTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StoreSpendingTypes.
     */
    distinct?: StoreSpendingTypeScalarFieldEnum | StoreSpendingTypeScalarFieldEnum[]
  }

  /**
   * StoreSpendingType findFirstOrThrow
   */
  export type StoreSpendingTypeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingType
     */
    select?: StoreSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingType
     */
    omit?: StoreSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingTypeInclude<ExtArgs> | null
    /**
     * Filter, which StoreSpendingType to fetch.
     */
    where?: StoreSpendingTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreSpendingTypes to fetch.
     */
    orderBy?: StoreSpendingTypeOrderByWithRelationInput | StoreSpendingTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StoreSpendingTypes.
     */
    cursor?: StoreSpendingTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreSpendingTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreSpendingTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StoreSpendingTypes.
     */
    distinct?: StoreSpendingTypeScalarFieldEnum | StoreSpendingTypeScalarFieldEnum[]
  }

  /**
   * StoreSpendingType findMany
   */
  export type StoreSpendingTypeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingType
     */
    select?: StoreSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingType
     */
    omit?: StoreSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingTypeInclude<ExtArgs> | null
    /**
     * Filter, which StoreSpendingTypes to fetch.
     */
    where?: StoreSpendingTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreSpendingTypes to fetch.
     */
    orderBy?: StoreSpendingTypeOrderByWithRelationInput | StoreSpendingTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StoreSpendingTypes.
     */
    cursor?: StoreSpendingTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreSpendingTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreSpendingTypes.
     */
    skip?: number
    distinct?: StoreSpendingTypeScalarFieldEnum | StoreSpendingTypeScalarFieldEnum[]
  }

  /**
   * StoreSpendingType create
   */
  export type StoreSpendingTypeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingType
     */
    select?: StoreSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingType
     */
    omit?: StoreSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingTypeInclude<ExtArgs> | null
    /**
     * The data needed to create a StoreSpendingType.
     */
    data: XOR<StoreSpendingTypeCreateInput, StoreSpendingTypeUncheckedCreateInput>
  }

  /**
   * StoreSpendingType createMany
   */
  export type StoreSpendingTypeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StoreSpendingTypes.
     */
    data: StoreSpendingTypeCreateManyInput | StoreSpendingTypeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StoreSpendingType createManyAndReturn
   */
  export type StoreSpendingTypeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingType
     */
    select?: StoreSpendingTypeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingType
     */
    omit?: StoreSpendingTypeOmit<ExtArgs> | null
    /**
     * The data used to create many StoreSpendingTypes.
     */
    data: StoreSpendingTypeCreateManyInput | StoreSpendingTypeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingTypeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * StoreSpendingType update
   */
  export type StoreSpendingTypeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingType
     */
    select?: StoreSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingType
     */
    omit?: StoreSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingTypeInclude<ExtArgs> | null
    /**
     * The data needed to update a StoreSpendingType.
     */
    data: XOR<StoreSpendingTypeUpdateInput, StoreSpendingTypeUncheckedUpdateInput>
    /**
     * Choose, which StoreSpendingType to update.
     */
    where: StoreSpendingTypeWhereUniqueInput
  }

  /**
   * StoreSpendingType updateMany
   */
  export type StoreSpendingTypeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StoreSpendingTypes.
     */
    data: XOR<StoreSpendingTypeUpdateManyMutationInput, StoreSpendingTypeUncheckedUpdateManyInput>
    /**
     * Filter which StoreSpendingTypes to update
     */
    where?: StoreSpendingTypeWhereInput
    /**
     * Limit how many StoreSpendingTypes to update.
     */
    limit?: number
  }

  /**
   * StoreSpendingType updateManyAndReturn
   */
  export type StoreSpendingTypeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingType
     */
    select?: StoreSpendingTypeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingType
     */
    omit?: StoreSpendingTypeOmit<ExtArgs> | null
    /**
     * The data used to update StoreSpendingTypes.
     */
    data: XOR<StoreSpendingTypeUpdateManyMutationInput, StoreSpendingTypeUncheckedUpdateManyInput>
    /**
     * Filter which StoreSpendingTypes to update
     */
    where?: StoreSpendingTypeWhereInput
    /**
     * Limit how many StoreSpendingTypes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingTypeIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * StoreSpendingType upsert
   */
  export type StoreSpendingTypeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingType
     */
    select?: StoreSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingType
     */
    omit?: StoreSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingTypeInclude<ExtArgs> | null
    /**
     * The filter to search for the StoreSpendingType to update in case it exists.
     */
    where: StoreSpendingTypeWhereUniqueInput
    /**
     * In case the StoreSpendingType found by the `where` argument doesn't exist, create a new StoreSpendingType with this data.
     */
    create: XOR<StoreSpendingTypeCreateInput, StoreSpendingTypeUncheckedCreateInput>
    /**
     * In case the StoreSpendingType was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StoreSpendingTypeUpdateInput, StoreSpendingTypeUncheckedUpdateInput>
  }

  /**
   * StoreSpendingType delete
   */
  export type StoreSpendingTypeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingType
     */
    select?: StoreSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingType
     */
    omit?: StoreSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingTypeInclude<ExtArgs> | null
    /**
     * Filter which StoreSpendingType to delete.
     */
    where: StoreSpendingTypeWhereUniqueInput
  }

  /**
   * StoreSpendingType deleteMany
   */
  export type StoreSpendingTypeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StoreSpendingTypes to delete
     */
    where?: StoreSpendingTypeWhereInput
    /**
     * Limit how many StoreSpendingTypes to delete.
     */
    limit?: number
  }

  /**
   * StoreSpendingType.storeSpendingTypeCreateByRel
   */
  export type StoreSpendingType$storeSpendingTypeCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * StoreSpendingType.storeSpendingTypeUpdateByRel
   */
  export type StoreSpendingType$storeSpendingTypeUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * StoreSpendingType.storeSpendingTypeIdRel
   */
  export type StoreSpendingType$storeSpendingTypeIdRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpending
     */
    select?: StoreSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpending
     */
    omit?: StoreSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingInclude<ExtArgs> | null
    where?: StoreSpendingWhereInput
    orderBy?: StoreSpendingOrderByWithRelationInput | StoreSpendingOrderByWithRelationInput[]
    cursor?: StoreSpendingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StoreSpendingScalarFieldEnum | StoreSpendingScalarFieldEnum[]
  }

  /**
   * StoreSpendingType.storeSpendingTypeHistoryIdRel
   */
  export type StoreSpendingType$storeSpendingTypeHistoryIdRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingHistory
     */
    select?: StoreSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingHistory
     */
    omit?: StoreSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingHistoryInclude<ExtArgs> | null
    where?: StoreSpendingHistoryWhereInput
    orderBy?: StoreSpendingHistoryOrderByWithRelationInput | StoreSpendingHistoryOrderByWithRelationInput[]
    cursor?: StoreSpendingHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StoreSpendingHistoryScalarFieldEnum | StoreSpendingHistoryScalarFieldEnum[]
  }

  /**
   * StoreSpendingType without action
   */
  export type StoreSpendingTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreSpendingType
     */
    select?: StoreSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StoreSpendingType
     */
    omit?: StoreSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreSpendingTypeInclude<ExtArgs> | null
  }


  /**
   * Model FarmIncome
   */

  export type AggregateFarmIncome = {
    _count: FarmIncomeCountAggregateOutputType | null
    _avg: FarmIncomeAvgAggregateOutputType | null
    _sum: FarmIncomeSumAggregateOutputType | null
    _min: FarmIncomeMinAggregateOutputType | null
    _max: FarmIncomeMaxAggregateOutputType | null
  }

  export type FarmIncomeAvgAggregateOutputType = {
    id: number | null
    incomeTypeId: number | null
    amount: number | null
    price: number | null
    createBy: number | null
    updatedBy: number | null
  }

  export type FarmIncomeSumAggregateOutputType = {
    id: bigint | null
    incomeTypeId: bigint | null
    amount: bigint | null
    price: bigint | null
    createBy: bigint | null
    updatedBy: bigint | null
  }

  export type FarmIncomeMinAggregateOutputType = {
    id: bigint | null
    incomeTypeId: bigint | null
    detail: string | null
    amount: bigint | null
    price: bigint | null
    date: Date | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type FarmIncomeMaxAggregateOutputType = {
    id: bigint | null
    incomeTypeId: bigint | null
    detail: string | null
    amount: bigint | null
    price: bigint | null
    date: Date | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type FarmIncomeCountAggregateOutputType = {
    id: number
    incomeTypeId: number
    detail: number
    amount: number
    price: number
    date: number
    deleted: number
    createAt: number
    createBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type FarmIncomeAvgAggregateInputType = {
    id?: true
    incomeTypeId?: true
    amount?: true
    price?: true
    createBy?: true
    updatedBy?: true
  }

  export type FarmIncomeSumAggregateInputType = {
    id?: true
    incomeTypeId?: true
    amount?: true
    price?: true
    createBy?: true
    updatedBy?: true
  }

  export type FarmIncomeMinAggregateInputType = {
    id?: true
    incomeTypeId?: true
    detail?: true
    amount?: true
    price?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type FarmIncomeMaxAggregateInputType = {
    id?: true
    incomeTypeId?: true
    detail?: true
    amount?: true
    price?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type FarmIncomeCountAggregateInputType = {
    id?: true
    incomeTypeId?: true
    detail?: true
    amount?: true
    price?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type FarmIncomeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FarmIncome to aggregate.
     */
    where?: FarmIncomeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FarmIncomes to fetch.
     */
    orderBy?: FarmIncomeOrderByWithRelationInput | FarmIncomeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FarmIncomeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FarmIncomes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FarmIncomes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FarmIncomes
    **/
    _count?: true | FarmIncomeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FarmIncomeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FarmIncomeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FarmIncomeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FarmIncomeMaxAggregateInputType
  }

  export type GetFarmIncomeAggregateType<T extends FarmIncomeAggregateArgs> = {
        [P in keyof T & keyof AggregateFarmIncome]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFarmIncome[P]>
      : GetScalarType<T[P], AggregateFarmIncome[P]>
  }




  export type FarmIncomeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FarmIncomeWhereInput
    orderBy?: FarmIncomeOrderByWithAggregationInput | FarmIncomeOrderByWithAggregationInput[]
    by: FarmIncomeScalarFieldEnum[] | FarmIncomeScalarFieldEnum
    having?: FarmIncomeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FarmIncomeCountAggregateInputType | true
    _avg?: FarmIncomeAvgAggregateInputType
    _sum?: FarmIncomeSumAggregateInputType
    _min?: FarmIncomeMinAggregateInputType
    _max?: FarmIncomeMaxAggregateInputType
  }

  export type FarmIncomeGroupByOutputType = {
    id: bigint
    incomeTypeId: bigint
    detail: string | null
    amount: bigint
    price: bigint
    date: Date
    deleted: boolean
    createAt: Date
    createBy: bigint | null
    updatedAt: Date
    updatedBy: bigint | null
    _count: FarmIncomeCountAggregateOutputType | null
    _avg: FarmIncomeAvgAggregateOutputType | null
    _sum: FarmIncomeSumAggregateOutputType | null
    _min: FarmIncomeMinAggregateOutputType | null
    _max: FarmIncomeMaxAggregateOutputType | null
  }

  type GetFarmIncomeGroupByPayload<T extends FarmIncomeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FarmIncomeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FarmIncomeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FarmIncomeGroupByOutputType[P]>
            : GetScalarType<T[P], FarmIncomeGroupByOutputType[P]>
        }
      >
    >


  export type FarmIncomeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    incomeTypeId?: boolean
    detail?: boolean
    amount?: boolean
    price?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    farmIncomeTypeIdRel?: boolean | FarmIncomeTypeDefaultArgs<ExtArgs>
    farmIncomeCreateByRel?: boolean | FarmIncome$farmIncomeCreateByRelArgs<ExtArgs>
    farmIncomeUpdateByRel?: boolean | FarmIncome$farmIncomeUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["farmIncome"]>

  export type FarmIncomeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    incomeTypeId?: boolean
    detail?: boolean
    amount?: boolean
    price?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    farmIncomeTypeIdRel?: boolean | FarmIncomeTypeDefaultArgs<ExtArgs>
    farmIncomeCreateByRel?: boolean | FarmIncome$farmIncomeCreateByRelArgs<ExtArgs>
    farmIncomeUpdateByRel?: boolean | FarmIncome$farmIncomeUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["farmIncome"]>

  export type FarmIncomeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    incomeTypeId?: boolean
    detail?: boolean
    amount?: boolean
    price?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    farmIncomeTypeIdRel?: boolean | FarmIncomeTypeDefaultArgs<ExtArgs>
    farmIncomeCreateByRel?: boolean | FarmIncome$farmIncomeCreateByRelArgs<ExtArgs>
    farmIncomeUpdateByRel?: boolean | FarmIncome$farmIncomeUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["farmIncome"]>

  export type FarmIncomeSelectScalar = {
    id?: boolean
    incomeTypeId?: boolean
    detail?: boolean
    amount?: boolean
    price?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type FarmIncomeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "incomeTypeId" | "detail" | "amount" | "price" | "date" | "deleted" | "createAt" | "createBy" | "updatedAt" | "updatedBy", ExtArgs["result"]["farmIncome"]>
  export type FarmIncomeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmIncomeTypeIdRel?: boolean | FarmIncomeTypeDefaultArgs<ExtArgs>
    farmIncomeCreateByRel?: boolean | FarmIncome$farmIncomeCreateByRelArgs<ExtArgs>
    farmIncomeUpdateByRel?: boolean | FarmIncome$farmIncomeUpdateByRelArgs<ExtArgs>
  }
  export type FarmIncomeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmIncomeTypeIdRel?: boolean | FarmIncomeTypeDefaultArgs<ExtArgs>
    farmIncomeCreateByRel?: boolean | FarmIncome$farmIncomeCreateByRelArgs<ExtArgs>
    farmIncomeUpdateByRel?: boolean | FarmIncome$farmIncomeUpdateByRelArgs<ExtArgs>
  }
  export type FarmIncomeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmIncomeTypeIdRel?: boolean | FarmIncomeTypeDefaultArgs<ExtArgs>
    farmIncomeCreateByRel?: boolean | FarmIncome$farmIncomeCreateByRelArgs<ExtArgs>
    farmIncomeUpdateByRel?: boolean | FarmIncome$farmIncomeUpdateByRelArgs<ExtArgs>
  }

  export type $FarmIncomePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FarmIncome"
    objects: {
      farmIncomeTypeIdRel: Prisma.$FarmIncomeTypePayload<ExtArgs>
      farmIncomeCreateByRel: Prisma.$UserPayload<ExtArgs> | null
      farmIncomeUpdateByRel: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      incomeTypeId: bigint
      detail: string | null
      amount: bigint
      price: bigint
      date: Date
      deleted: boolean
      createAt: Date
      createBy: bigint | null
      updatedAt: Date
      updatedBy: bigint | null
    }, ExtArgs["result"]["farmIncome"]>
    composites: {}
  }

  type FarmIncomeGetPayload<S extends boolean | null | undefined | FarmIncomeDefaultArgs> = $Result.GetResult<Prisma.$FarmIncomePayload, S>

  type FarmIncomeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FarmIncomeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FarmIncomeCountAggregateInputType | true
    }

  export interface FarmIncomeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FarmIncome'], meta: { name: 'FarmIncome' } }
    /**
     * Find zero or one FarmIncome that matches the filter.
     * @param {FarmIncomeFindUniqueArgs} args - Arguments to find a FarmIncome
     * @example
     * // Get one FarmIncome
     * const farmIncome = await prisma.farmIncome.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FarmIncomeFindUniqueArgs>(args: SelectSubset<T, FarmIncomeFindUniqueArgs<ExtArgs>>): Prisma__FarmIncomeClient<$Result.GetResult<Prisma.$FarmIncomePayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one FarmIncome that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FarmIncomeFindUniqueOrThrowArgs} args - Arguments to find a FarmIncome
     * @example
     * // Get one FarmIncome
     * const farmIncome = await prisma.farmIncome.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FarmIncomeFindUniqueOrThrowArgs>(args: SelectSubset<T, FarmIncomeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FarmIncomeClient<$Result.GetResult<Prisma.$FarmIncomePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first FarmIncome that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmIncomeFindFirstArgs} args - Arguments to find a FarmIncome
     * @example
     * // Get one FarmIncome
     * const farmIncome = await prisma.farmIncome.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FarmIncomeFindFirstArgs>(args?: SelectSubset<T, FarmIncomeFindFirstArgs<ExtArgs>>): Prisma__FarmIncomeClient<$Result.GetResult<Prisma.$FarmIncomePayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first FarmIncome that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmIncomeFindFirstOrThrowArgs} args - Arguments to find a FarmIncome
     * @example
     * // Get one FarmIncome
     * const farmIncome = await prisma.farmIncome.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FarmIncomeFindFirstOrThrowArgs>(args?: SelectSubset<T, FarmIncomeFindFirstOrThrowArgs<ExtArgs>>): Prisma__FarmIncomeClient<$Result.GetResult<Prisma.$FarmIncomePayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more FarmIncomes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmIncomeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FarmIncomes
     * const farmIncomes = await prisma.farmIncome.findMany()
     * 
     * // Get first 10 FarmIncomes
     * const farmIncomes = await prisma.farmIncome.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const farmIncomeWithIdOnly = await prisma.farmIncome.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FarmIncomeFindManyArgs>(args?: SelectSubset<T, FarmIncomeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmIncomePayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a FarmIncome.
     * @param {FarmIncomeCreateArgs} args - Arguments to create a FarmIncome.
     * @example
     * // Create one FarmIncome
     * const FarmIncome = await prisma.farmIncome.create({
     *   data: {
     *     // ... data to create a FarmIncome
     *   }
     * })
     * 
     */
    create<T extends FarmIncomeCreateArgs>(args: SelectSubset<T, FarmIncomeCreateArgs<ExtArgs>>): Prisma__FarmIncomeClient<$Result.GetResult<Prisma.$FarmIncomePayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many FarmIncomes.
     * @param {FarmIncomeCreateManyArgs} args - Arguments to create many FarmIncomes.
     * @example
     * // Create many FarmIncomes
     * const farmIncome = await prisma.farmIncome.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FarmIncomeCreateManyArgs>(args?: SelectSubset<T, FarmIncomeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FarmIncomes and returns the data saved in the database.
     * @param {FarmIncomeCreateManyAndReturnArgs} args - Arguments to create many FarmIncomes.
     * @example
     * // Create many FarmIncomes
     * const farmIncome = await prisma.farmIncome.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FarmIncomes and only return the `id`
     * const farmIncomeWithIdOnly = await prisma.farmIncome.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FarmIncomeCreateManyAndReturnArgs>(args?: SelectSubset<T, FarmIncomeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmIncomePayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a FarmIncome.
     * @param {FarmIncomeDeleteArgs} args - Arguments to delete one FarmIncome.
     * @example
     * // Delete one FarmIncome
     * const FarmIncome = await prisma.farmIncome.delete({
     *   where: {
     *     // ... filter to delete one FarmIncome
     *   }
     * })
     * 
     */
    delete<T extends FarmIncomeDeleteArgs>(args: SelectSubset<T, FarmIncomeDeleteArgs<ExtArgs>>): Prisma__FarmIncomeClient<$Result.GetResult<Prisma.$FarmIncomePayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one FarmIncome.
     * @param {FarmIncomeUpdateArgs} args - Arguments to update one FarmIncome.
     * @example
     * // Update one FarmIncome
     * const farmIncome = await prisma.farmIncome.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FarmIncomeUpdateArgs>(args: SelectSubset<T, FarmIncomeUpdateArgs<ExtArgs>>): Prisma__FarmIncomeClient<$Result.GetResult<Prisma.$FarmIncomePayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more FarmIncomes.
     * @param {FarmIncomeDeleteManyArgs} args - Arguments to filter FarmIncomes to delete.
     * @example
     * // Delete a few FarmIncomes
     * const { count } = await prisma.farmIncome.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FarmIncomeDeleteManyArgs>(args?: SelectSubset<T, FarmIncomeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FarmIncomes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmIncomeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FarmIncomes
     * const farmIncome = await prisma.farmIncome.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FarmIncomeUpdateManyArgs>(args: SelectSubset<T, FarmIncomeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FarmIncomes and returns the data updated in the database.
     * @param {FarmIncomeUpdateManyAndReturnArgs} args - Arguments to update many FarmIncomes.
     * @example
     * // Update many FarmIncomes
     * const farmIncome = await prisma.farmIncome.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more FarmIncomes and only return the `id`
     * const farmIncomeWithIdOnly = await prisma.farmIncome.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FarmIncomeUpdateManyAndReturnArgs>(args: SelectSubset<T, FarmIncomeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmIncomePayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one FarmIncome.
     * @param {FarmIncomeUpsertArgs} args - Arguments to update or create a FarmIncome.
     * @example
     * // Update or create a FarmIncome
     * const farmIncome = await prisma.farmIncome.upsert({
     *   create: {
     *     // ... data to create a FarmIncome
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FarmIncome we want to update
     *   }
     * })
     */
    upsert<T extends FarmIncomeUpsertArgs>(args: SelectSubset<T, FarmIncomeUpsertArgs<ExtArgs>>): Prisma__FarmIncomeClient<$Result.GetResult<Prisma.$FarmIncomePayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of FarmIncomes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmIncomeCountArgs} args - Arguments to filter FarmIncomes to count.
     * @example
     * // Count the number of FarmIncomes
     * const count = await prisma.farmIncome.count({
     *   where: {
     *     // ... the filter for the FarmIncomes we want to count
     *   }
     * })
    **/
    count<T extends FarmIncomeCountArgs>(
      args?: Subset<T, FarmIncomeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FarmIncomeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FarmIncome.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmIncomeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FarmIncomeAggregateArgs>(args: Subset<T, FarmIncomeAggregateArgs>): Prisma.PrismaPromise<GetFarmIncomeAggregateType<T>>

    /**
     * Group by FarmIncome.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmIncomeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FarmIncomeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FarmIncomeGroupByArgs['orderBy'] }
        : { orderBy?: FarmIncomeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FarmIncomeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFarmIncomeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FarmIncome model
   */
  readonly fields: FarmIncomeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FarmIncome.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FarmIncomeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    farmIncomeTypeIdRel<T extends FarmIncomeTypeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, FarmIncomeTypeDefaultArgs<ExtArgs>>): Prisma__FarmIncomeTypeClient<$Result.GetResult<Prisma.$FarmIncomeTypePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    farmIncomeCreateByRel<T extends FarmIncome$farmIncomeCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, FarmIncome$farmIncomeCreateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    farmIncomeUpdateByRel<T extends FarmIncome$farmIncomeUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, FarmIncome$farmIncomeUpdateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FarmIncome model
   */ 
  interface FarmIncomeFieldRefs {
    readonly id: FieldRef<"FarmIncome", 'BigInt'>
    readonly incomeTypeId: FieldRef<"FarmIncome", 'BigInt'>
    readonly detail: FieldRef<"FarmIncome", 'String'>
    readonly amount: FieldRef<"FarmIncome", 'BigInt'>
    readonly price: FieldRef<"FarmIncome", 'BigInt'>
    readonly date: FieldRef<"FarmIncome", 'DateTime'>
    readonly deleted: FieldRef<"FarmIncome", 'Boolean'>
    readonly createAt: FieldRef<"FarmIncome", 'DateTime'>
    readonly createBy: FieldRef<"FarmIncome", 'BigInt'>
    readonly updatedAt: FieldRef<"FarmIncome", 'DateTime'>
    readonly updatedBy: FieldRef<"FarmIncome", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * FarmIncome findUnique
   */
  export type FarmIncomeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncome
     */
    select?: FarmIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncome
     */
    omit?: FarmIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeInclude<ExtArgs> | null
    /**
     * Filter, which FarmIncome to fetch.
     */
    where: FarmIncomeWhereUniqueInput
  }

  /**
   * FarmIncome findUniqueOrThrow
   */
  export type FarmIncomeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncome
     */
    select?: FarmIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncome
     */
    omit?: FarmIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeInclude<ExtArgs> | null
    /**
     * Filter, which FarmIncome to fetch.
     */
    where: FarmIncomeWhereUniqueInput
  }

  /**
   * FarmIncome findFirst
   */
  export type FarmIncomeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncome
     */
    select?: FarmIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncome
     */
    omit?: FarmIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeInclude<ExtArgs> | null
    /**
     * Filter, which FarmIncome to fetch.
     */
    where?: FarmIncomeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FarmIncomes to fetch.
     */
    orderBy?: FarmIncomeOrderByWithRelationInput | FarmIncomeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FarmIncomes.
     */
    cursor?: FarmIncomeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FarmIncomes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FarmIncomes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FarmIncomes.
     */
    distinct?: FarmIncomeScalarFieldEnum | FarmIncomeScalarFieldEnum[]
  }

  /**
   * FarmIncome findFirstOrThrow
   */
  export type FarmIncomeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncome
     */
    select?: FarmIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncome
     */
    omit?: FarmIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeInclude<ExtArgs> | null
    /**
     * Filter, which FarmIncome to fetch.
     */
    where?: FarmIncomeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FarmIncomes to fetch.
     */
    orderBy?: FarmIncomeOrderByWithRelationInput | FarmIncomeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FarmIncomes.
     */
    cursor?: FarmIncomeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FarmIncomes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FarmIncomes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FarmIncomes.
     */
    distinct?: FarmIncomeScalarFieldEnum | FarmIncomeScalarFieldEnum[]
  }

  /**
   * FarmIncome findMany
   */
  export type FarmIncomeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncome
     */
    select?: FarmIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncome
     */
    omit?: FarmIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeInclude<ExtArgs> | null
    /**
     * Filter, which FarmIncomes to fetch.
     */
    where?: FarmIncomeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FarmIncomes to fetch.
     */
    orderBy?: FarmIncomeOrderByWithRelationInput | FarmIncomeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FarmIncomes.
     */
    cursor?: FarmIncomeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FarmIncomes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FarmIncomes.
     */
    skip?: number
    distinct?: FarmIncomeScalarFieldEnum | FarmIncomeScalarFieldEnum[]
  }

  /**
   * FarmIncome create
   */
  export type FarmIncomeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncome
     */
    select?: FarmIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncome
     */
    omit?: FarmIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeInclude<ExtArgs> | null
    /**
     * The data needed to create a FarmIncome.
     */
    data: XOR<FarmIncomeCreateInput, FarmIncomeUncheckedCreateInput>
  }

  /**
   * FarmIncome createMany
   */
  export type FarmIncomeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FarmIncomes.
     */
    data: FarmIncomeCreateManyInput | FarmIncomeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FarmIncome createManyAndReturn
   */
  export type FarmIncomeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncome
     */
    select?: FarmIncomeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncome
     */
    omit?: FarmIncomeOmit<ExtArgs> | null
    /**
     * The data used to create many FarmIncomes.
     */
    data: FarmIncomeCreateManyInput | FarmIncomeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FarmIncome update
   */
  export type FarmIncomeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncome
     */
    select?: FarmIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncome
     */
    omit?: FarmIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeInclude<ExtArgs> | null
    /**
     * The data needed to update a FarmIncome.
     */
    data: XOR<FarmIncomeUpdateInput, FarmIncomeUncheckedUpdateInput>
    /**
     * Choose, which FarmIncome to update.
     */
    where: FarmIncomeWhereUniqueInput
  }

  /**
   * FarmIncome updateMany
   */
  export type FarmIncomeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FarmIncomes.
     */
    data: XOR<FarmIncomeUpdateManyMutationInput, FarmIncomeUncheckedUpdateManyInput>
    /**
     * Filter which FarmIncomes to update
     */
    where?: FarmIncomeWhereInput
    /**
     * Limit how many FarmIncomes to update.
     */
    limit?: number
  }

  /**
   * FarmIncome updateManyAndReturn
   */
  export type FarmIncomeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncome
     */
    select?: FarmIncomeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncome
     */
    omit?: FarmIncomeOmit<ExtArgs> | null
    /**
     * The data used to update FarmIncomes.
     */
    data: XOR<FarmIncomeUpdateManyMutationInput, FarmIncomeUncheckedUpdateManyInput>
    /**
     * Filter which FarmIncomes to update
     */
    where?: FarmIncomeWhereInput
    /**
     * Limit how many FarmIncomes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * FarmIncome upsert
   */
  export type FarmIncomeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncome
     */
    select?: FarmIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncome
     */
    omit?: FarmIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeInclude<ExtArgs> | null
    /**
     * The filter to search for the FarmIncome to update in case it exists.
     */
    where: FarmIncomeWhereUniqueInput
    /**
     * In case the FarmIncome found by the `where` argument doesn't exist, create a new FarmIncome with this data.
     */
    create: XOR<FarmIncomeCreateInput, FarmIncomeUncheckedCreateInput>
    /**
     * In case the FarmIncome was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FarmIncomeUpdateInput, FarmIncomeUncheckedUpdateInput>
  }

  /**
   * FarmIncome delete
   */
  export type FarmIncomeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncome
     */
    select?: FarmIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncome
     */
    omit?: FarmIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeInclude<ExtArgs> | null
    /**
     * Filter which FarmIncome to delete.
     */
    where: FarmIncomeWhereUniqueInput
  }

  /**
   * FarmIncome deleteMany
   */
  export type FarmIncomeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FarmIncomes to delete
     */
    where?: FarmIncomeWhereInput
    /**
     * Limit how many FarmIncomes to delete.
     */
    limit?: number
  }

  /**
   * FarmIncome.farmIncomeCreateByRel
   */
  export type FarmIncome$farmIncomeCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * FarmIncome.farmIncomeUpdateByRel
   */
  export type FarmIncome$farmIncomeUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * FarmIncome without action
   */
  export type FarmIncomeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncome
     */
    select?: FarmIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncome
     */
    omit?: FarmIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeInclude<ExtArgs> | null
  }


  /**
   * Model FarmIncomeHistory
   */

  export type AggregateFarmIncomeHistory = {
    _count: FarmIncomeHistoryCountAggregateOutputType | null
    _avg: FarmIncomeHistoryAvgAggregateOutputType | null
    _sum: FarmIncomeHistorySumAggregateOutputType | null
    _min: FarmIncomeHistoryMinAggregateOutputType | null
    _max: FarmIncomeHistoryMaxAggregateOutputType | null
  }

  export type FarmIncomeHistoryAvgAggregateOutputType = {
    revId: number | null
    id: number | null
    incomeTypeId: number | null
    amount: number | null
    price: number | null
    createBy: number | null
    updatedBy: number | null
  }

  export type FarmIncomeHistorySumAggregateOutputType = {
    revId: bigint | null
    id: bigint | null
    incomeTypeId: bigint | null
    amount: bigint | null
    price: bigint | null
    createBy: bigint | null
    updatedBy: bigint | null
  }

  export type FarmIncomeHistoryMinAggregateOutputType = {
    revId: bigint | null
    id: bigint | null
    incomeTypeId: bigint | null
    detail: string | null
    amount: bigint | null
    price: bigint | null
    date: Date | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type FarmIncomeHistoryMaxAggregateOutputType = {
    revId: bigint | null
    id: bigint | null
    incomeTypeId: bigint | null
    detail: string | null
    amount: bigint | null
    price: bigint | null
    date: Date | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type FarmIncomeHistoryCountAggregateOutputType = {
    revId: number
    id: number
    incomeTypeId: number
    detail: number
    amount: number
    price: number
    date: number
    deleted: number
    createAt: number
    createBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type FarmIncomeHistoryAvgAggregateInputType = {
    revId?: true
    id?: true
    incomeTypeId?: true
    amount?: true
    price?: true
    createBy?: true
    updatedBy?: true
  }

  export type FarmIncomeHistorySumAggregateInputType = {
    revId?: true
    id?: true
    incomeTypeId?: true
    amount?: true
    price?: true
    createBy?: true
    updatedBy?: true
  }

  export type FarmIncomeHistoryMinAggregateInputType = {
    revId?: true
    id?: true
    incomeTypeId?: true
    detail?: true
    amount?: true
    price?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type FarmIncomeHistoryMaxAggregateInputType = {
    revId?: true
    id?: true
    incomeTypeId?: true
    detail?: true
    amount?: true
    price?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type FarmIncomeHistoryCountAggregateInputType = {
    revId?: true
    id?: true
    incomeTypeId?: true
    detail?: true
    amount?: true
    price?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type FarmIncomeHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FarmIncomeHistory to aggregate.
     */
    where?: FarmIncomeHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FarmIncomeHistories to fetch.
     */
    orderBy?: FarmIncomeHistoryOrderByWithRelationInput | FarmIncomeHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FarmIncomeHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FarmIncomeHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FarmIncomeHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FarmIncomeHistories
    **/
    _count?: true | FarmIncomeHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FarmIncomeHistoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FarmIncomeHistorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FarmIncomeHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FarmIncomeHistoryMaxAggregateInputType
  }

  export type GetFarmIncomeHistoryAggregateType<T extends FarmIncomeHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregateFarmIncomeHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFarmIncomeHistory[P]>
      : GetScalarType<T[P], AggregateFarmIncomeHistory[P]>
  }




  export type FarmIncomeHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FarmIncomeHistoryWhereInput
    orderBy?: FarmIncomeHistoryOrderByWithAggregationInput | FarmIncomeHistoryOrderByWithAggregationInput[]
    by: FarmIncomeHistoryScalarFieldEnum[] | FarmIncomeHistoryScalarFieldEnum
    having?: FarmIncomeHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FarmIncomeHistoryCountAggregateInputType | true
    _avg?: FarmIncomeHistoryAvgAggregateInputType
    _sum?: FarmIncomeHistorySumAggregateInputType
    _min?: FarmIncomeHistoryMinAggregateInputType
    _max?: FarmIncomeHistoryMaxAggregateInputType
  }

  export type FarmIncomeHistoryGroupByOutputType = {
    revId: bigint
    id: bigint
    incomeTypeId: bigint
    detail: string | null
    amount: bigint
    price: bigint
    date: Date
    deleted: boolean
    createAt: Date
    createBy: bigint | null
    updatedAt: Date
    updatedBy: bigint | null
    _count: FarmIncomeHistoryCountAggregateOutputType | null
    _avg: FarmIncomeHistoryAvgAggregateOutputType | null
    _sum: FarmIncomeHistorySumAggregateOutputType | null
    _min: FarmIncomeHistoryMinAggregateOutputType | null
    _max: FarmIncomeHistoryMaxAggregateOutputType | null
  }

  type GetFarmIncomeHistoryGroupByPayload<T extends FarmIncomeHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FarmIncomeHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FarmIncomeHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FarmIncomeHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], FarmIncomeHistoryGroupByOutputType[P]>
        }
      >
    >


  export type FarmIncomeHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    revId?: boolean
    id?: boolean
    incomeTypeId?: boolean
    detail?: boolean
    amount?: boolean
    price?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    farmIncomeTypeHistoryIdRel?: boolean | FarmIncomeTypeDefaultArgs<ExtArgs>
    farmIncomeHistoryCreateByRel?: boolean | FarmIncomeHistory$farmIncomeHistoryCreateByRelArgs<ExtArgs>
    farmIncomeHistoryUpdateByRel?: boolean | FarmIncomeHistory$farmIncomeHistoryUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["farmIncomeHistory"]>

  export type FarmIncomeHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    revId?: boolean
    id?: boolean
    incomeTypeId?: boolean
    detail?: boolean
    amount?: boolean
    price?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    farmIncomeTypeHistoryIdRel?: boolean | FarmIncomeTypeDefaultArgs<ExtArgs>
    farmIncomeHistoryCreateByRel?: boolean | FarmIncomeHistory$farmIncomeHistoryCreateByRelArgs<ExtArgs>
    farmIncomeHistoryUpdateByRel?: boolean | FarmIncomeHistory$farmIncomeHistoryUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["farmIncomeHistory"]>

  export type FarmIncomeHistorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    revId?: boolean
    id?: boolean
    incomeTypeId?: boolean
    detail?: boolean
    amount?: boolean
    price?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    farmIncomeTypeHistoryIdRel?: boolean | FarmIncomeTypeDefaultArgs<ExtArgs>
    farmIncomeHistoryCreateByRel?: boolean | FarmIncomeHistory$farmIncomeHistoryCreateByRelArgs<ExtArgs>
    farmIncomeHistoryUpdateByRel?: boolean | FarmIncomeHistory$farmIncomeHistoryUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["farmIncomeHistory"]>

  export type FarmIncomeHistorySelectScalar = {
    revId?: boolean
    id?: boolean
    incomeTypeId?: boolean
    detail?: boolean
    amount?: boolean
    price?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type FarmIncomeHistoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"revId" | "id" | "incomeTypeId" | "detail" | "amount" | "price" | "date" | "deleted" | "createAt" | "createBy" | "updatedAt" | "updatedBy", ExtArgs["result"]["farmIncomeHistory"]>
  export type FarmIncomeHistoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmIncomeTypeHistoryIdRel?: boolean | FarmIncomeTypeDefaultArgs<ExtArgs>
    farmIncomeHistoryCreateByRel?: boolean | FarmIncomeHistory$farmIncomeHistoryCreateByRelArgs<ExtArgs>
    farmIncomeHistoryUpdateByRel?: boolean | FarmIncomeHistory$farmIncomeHistoryUpdateByRelArgs<ExtArgs>
  }
  export type FarmIncomeHistoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmIncomeTypeHistoryIdRel?: boolean | FarmIncomeTypeDefaultArgs<ExtArgs>
    farmIncomeHistoryCreateByRel?: boolean | FarmIncomeHistory$farmIncomeHistoryCreateByRelArgs<ExtArgs>
    farmIncomeHistoryUpdateByRel?: boolean | FarmIncomeHistory$farmIncomeHistoryUpdateByRelArgs<ExtArgs>
  }
  export type FarmIncomeHistoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmIncomeTypeHistoryIdRel?: boolean | FarmIncomeTypeDefaultArgs<ExtArgs>
    farmIncomeHistoryCreateByRel?: boolean | FarmIncomeHistory$farmIncomeHistoryCreateByRelArgs<ExtArgs>
    farmIncomeHistoryUpdateByRel?: boolean | FarmIncomeHistory$farmIncomeHistoryUpdateByRelArgs<ExtArgs>
  }

  export type $FarmIncomeHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FarmIncomeHistory"
    objects: {
      farmIncomeTypeHistoryIdRel: Prisma.$FarmIncomeTypePayload<ExtArgs>
      farmIncomeHistoryCreateByRel: Prisma.$UserPayload<ExtArgs> | null
      farmIncomeHistoryUpdateByRel: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      revId: bigint
      id: bigint
      incomeTypeId: bigint
      detail: string | null
      amount: bigint
      price: bigint
      date: Date
      deleted: boolean
      createAt: Date
      createBy: bigint | null
      updatedAt: Date
      updatedBy: bigint | null
    }, ExtArgs["result"]["farmIncomeHistory"]>
    composites: {}
  }

  type FarmIncomeHistoryGetPayload<S extends boolean | null | undefined | FarmIncomeHistoryDefaultArgs> = $Result.GetResult<Prisma.$FarmIncomeHistoryPayload, S>

  type FarmIncomeHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FarmIncomeHistoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FarmIncomeHistoryCountAggregateInputType | true
    }

  export interface FarmIncomeHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FarmIncomeHistory'], meta: { name: 'FarmIncomeHistory' } }
    /**
     * Find zero or one FarmIncomeHistory that matches the filter.
     * @param {FarmIncomeHistoryFindUniqueArgs} args - Arguments to find a FarmIncomeHistory
     * @example
     * // Get one FarmIncomeHistory
     * const farmIncomeHistory = await prisma.farmIncomeHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FarmIncomeHistoryFindUniqueArgs>(args: SelectSubset<T, FarmIncomeHistoryFindUniqueArgs<ExtArgs>>): Prisma__FarmIncomeHistoryClient<$Result.GetResult<Prisma.$FarmIncomeHistoryPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one FarmIncomeHistory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FarmIncomeHistoryFindUniqueOrThrowArgs} args - Arguments to find a FarmIncomeHistory
     * @example
     * // Get one FarmIncomeHistory
     * const farmIncomeHistory = await prisma.farmIncomeHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FarmIncomeHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, FarmIncomeHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FarmIncomeHistoryClient<$Result.GetResult<Prisma.$FarmIncomeHistoryPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first FarmIncomeHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmIncomeHistoryFindFirstArgs} args - Arguments to find a FarmIncomeHistory
     * @example
     * // Get one FarmIncomeHistory
     * const farmIncomeHistory = await prisma.farmIncomeHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FarmIncomeHistoryFindFirstArgs>(args?: SelectSubset<T, FarmIncomeHistoryFindFirstArgs<ExtArgs>>): Prisma__FarmIncomeHistoryClient<$Result.GetResult<Prisma.$FarmIncomeHistoryPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first FarmIncomeHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmIncomeHistoryFindFirstOrThrowArgs} args - Arguments to find a FarmIncomeHistory
     * @example
     * // Get one FarmIncomeHistory
     * const farmIncomeHistory = await prisma.farmIncomeHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FarmIncomeHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, FarmIncomeHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__FarmIncomeHistoryClient<$Result.GetResult<Prisma.$FarmIncomeHistoryPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more FarmIncomeHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmIncomeHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FarmIncomeHistories
     * const farmIncomeHistories = await prisma.farmIncomeHistory.findMany()
     * 
     * // Get first 10 FarmIncomeHistories
     * const farmIncomeHistories = await prisma.farmIncomeHistory.findMany({ take: 10 })
     * 
     * // Only select the `revId`
     * const farmIncomeHistoryWithRevIdOnly = await prisma.farmIncomeHistory.findMany({ select: { revId: true } })
     * 
     */
    findMany<T extends FarmIncomeHistoryFindManyArgs>(args?: SelectSubset<T, FarmIncomeHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmIncomeHistoryPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a FarmIncomeHistory.
     * @param {FarmIncomeHistoryCreateArgs} args - Arguments to create a FarmIncomeHistory.
     * @example
     * // Create one FarmIncomeHistory
     * const FarmIncomeHistory = await prisma.farmIncomeHistory.create({
     *   data: {
     *     // ... data to create a FarmIncomeHistory
     *   }
     * })
     * 
     */
    create<T extends FarmIncomeHistoryCreateArgs>(args: SelectSubset<T, FarmIncomeHistoryCreateArgs<ExtArgs>>): Prisma__FarmIncomeHistoryClient<$Result.GetResult<Prisma.$FarmIncomeHistoryPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many FarmIncomeHistories.
     * @param {FarmIncomeHistoryCreateManyArgs} args - Arguments to create many FarmIncomeHistories.
     * @example
     * // Create many FarmIncomeHistories
     * const farmIncomeHistory = await prisma.farmIncomeHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FarmIncomeHistoryCreateManyArgs>(args?: SelectSubset<T, FarmIncomeHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FarmIncomeHistories and returns the data saved in the database.
     * @param {FarmIncomeHistoryCreateManyAndReturnArgs} args - Arguments to create many FarmIncomeHistories.
     * @example
     * // Create many FarmIncomeHistories
     * const farmIncomeHistory = await prisma.farmIncomeHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FarmIncomeHistories and only return the `revId`
     * const farmIncomeHistoryWithRevIdOnly = await prisma.farmIncomeHistory.createManyAndReturn({
     *   select: { revId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FarmIncomeHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, FarmIncomeHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmIncomeHistoryPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a FarmIncomeHistory.
     * @param {FarmIncomeHistoryDeleteArgs} args - Arguments to delete one FarmIncomeHistory.
     * @example
     * // Delete one FarmIncomeHistory
     * const FarmIncomeHistory = await prisma.farmIncomeHistory.delete({
     *   where: {
     *     // ... filter to delete one FarmIncomeHistory
     *   }
     * })
     * 
     */
    delete<T extends FarmIncomeHistoryDeleteArgs>(args: SelectSubset<T, FarmIncomeHistoryDeleteArgs<ExtArgs>>): Prisma__FarmIncomeHistoryClient<$Result.GetResult<Prisma.$FarmIncomeHistoryPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one FarmIncomeHistory.
     * @param {FarmIncomeHistoryUpdateArgs} args - Arguments to update one FarmIncomeHistory.
     * @example
     * // Update one FarmIncomeHistory
     * const farmIncomeHistory = await prisma.farmIncomeHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FarmIncomeHistoryUpdateArgs>(args: SelectSubset<T, FarmIncomeHistoryUpdateArgs<ExtArgs>>): Prisma__FarmIncomeHistoryClient<$Result.GetResult<Prisma.$FarmIncomeHistoryPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more FarmIncomeHistories.
     * @param {FarmIncomeHistoryDeleteManyArgs} args - Arguments to filter FarmIncomeHistories to delete.
     * @example
     * // Delete a few FarmIncomeHistories
     * const { count } = await prisma.farmIncomeHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FarmIncomeHistoryDeleteManyArgs>(args?: SelectSubset<T, FarmIncomeHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FarmIncomeHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmIncomeHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FarmIncomeHistories
     * const farmIncomeHistory = await prisma.farmIncomeHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FarmIncomeHistoryUpdateManyArgs>(args: SelectSubset<T, FarmIncomeHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FarmIncomeHistories and returns the data updated in the database.
     * @param {FarmIncomeHistoryUpdateManyAndReturnArgs} args - Arguments to update many FarmIncomeHistories.
     * @example
     * // Update many FarmIncomeHistories
     * const farmIncomeHistory = await prisma.farmIncomeHistory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more FarmIncomeHistories and only return the `revId`
     * const farmIncomeHistoryWithRevIdOnly = await prisma.farmIncomeHistory.updateManyAndReturn({
     *   select: { revId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FarmIncomeHistoryUpdateManyAndReturnArgs>(args: SelectSubset<T, FarmIncomeHistoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmIncomeHistoryPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one FarmIncomeHistory.
     * @param {FarmIncomeHistoryUpsertArgs} args - Arguments to update or create a FarmIncomeHistory.
     * @example
     * // Update or create a FarmIncomeHistory
     * const farmIncomeHistory = await prisma.farmIncomeHistory.upsert({
     *   create: {
     *     // ... data to create a FarmIncomeHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FarmIncomeHistory we want to update
     *   }
     * })
     */
    upsert<T extends FarmIncomeHistoryUpsertArgs>(args: SelectSubset<T, FarmIncomeHistoryUpsertArgs<ExtArgs>>): Prisma__FarmIncomeHistoryClient<$Result.GetResult<Prisma.$FarmIncomeHistoryPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of FarmIncomeHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmIncomeHistoryCountArgs} args - Arguments to filter FarmIncomeHistories to count.
     * @example
     * // Count the number of FarmIncomeHistories
     * const count = await prisma.farmIncomeHistory.count({
     *   where: {
     *     // ... the filter for the FarmIncomeHistories we want to count
     *   }
     * })
    **/
    count<T extends FarmIncomeHistoryCountArgs>(
      args?: Subset<T, FarmIncomeHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FarmIncomeHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FarmIncomeHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmIncomeHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FarmIncomeHistoryAggregateArgs>(args: Subset<T, FarmIncomeHistoryAggregateArgs>): Prisma.PrismaPromise<GetFarmIncomeHistoryAggregateType<T>>

    /**
     * Group by FarmIncomeHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmIncomeHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FarmIncomeHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FarmIncomeHistoryGroupByArgs['orderBy'] }
        : { orderBy?: FarmIncomeHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FarmIncomeHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFarmIncomeHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FarmIncomeHistory model
   */
  readonly fields: FarmIncomeHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FarmIncomeHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FarmIncomeHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    farmIncomeTypeHistoryIdRel<T extends FarmIncomeTypeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, FarmIncomeTypeDefaultArgs<ExtArgs>>): Prisma__FarmIncomeTypeClient<$Result.GetResult<Prisma.$FarmIncomeTypePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    farmIncomeHistoryCreateByRel<T extends FarmIncomeHistory$farmIncomeHistoryCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, FarmIncomeHistory$farmIncomeHistoryCreateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    farmIncomeHistoryUpdateByRel<T extends FarmIncomeHistory$farmIncomeHistoryUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, FarmIncomeHistory$farmIncomeHistoryUpdateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FarmIncomeHistory model
   */ 
  interface FarmIncomeHistoryFieldRefs {
    readonly revId: FieldRef<"FarmIncomeHistory", 'BigInt'>
    readonly id: FieldRef<"FarmIncomeHistory", 'BigInt'>
    readonly incomeTypeId: FieldRef<"FarmIncomeHistory", 'BigInt'>
    readonly detail: FieldRef<"FarmIncomeHistory", 'String'>
    readonly amount: FieldRef<"FarmIncomeHistory", 'BigInt'>
    readonly price: FieldRef<"FarmIncomeHistory", 'BigInt'>
    readonly date: FieldRef<"FarmIncomeHistory", 'DateTime'>
    readonly deleted: FieldRef<"FarmIncomeHistory", 'Boolean'>
    readonly createAt: FieldRef<"FarmIncomeHistory", 'DateTime'>
    readonly createBy: FieldRef<"FarmIncomeHistory", 'BigInt'>
    readonly updatedAt: FieldRef<"FarmIncomeHistory", 'DateTime'>
    readonly updatedBy: FieldRef<"FarmIncomeHistory", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * FarmIncomeHistory findUnique
   */
  export type FarmIncomeHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeHistory
     */
    select?: FarmIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeHistory
     */
    omit?: FarmIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeHistoryInclude<ExtArgs> | null
    /**
     * Filter, which FarmIncomeHistory to fetch.
     */
    where: FarmIncomeHistoryWhereUniqueInput
  }

  /**
   * FarmIncomeHistory findUniqueOrThrow
   */
  export type FarmIncomeHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeHistory
     */
    select?: FarmIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeHistory
     */
    omit?: FarmIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeHistoryInclude<ExtArgs> | null
    /**
     * Filter, which FarmIncomeHistory to fetch.
     */
    where: FarmIncomeHistoryWhereUniqueInput
  }

  /**
   * FarmIncomeHistory findFirst
   */
  export type FarmIncomeHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeHistory
     */
    select?: FarmIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeHistory
     */
    omit?: FarmIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeHistoryInclude<ExtArgs> | null
    /**
     * Filter, which FarmIncomeHistory to fetch.
     */
    where?: FarmIncomeHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FarmIncomeHistories to fetch.
     */
    orderBy?: FarmIncomeHistoryOrderByWithRelationInput | FarmIncomeHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FarmIncomeHistories.
     */
    cursor?: FarmIncomeHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FarmIncomeHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FarmIncomeHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FarmIncomeHistories.
     */
    distinct?: FarmIncomeHistoryScalarFieldEnum | FarmIncomeHistoryScalarFieldEnum[]
  }

  /**
   * FarmIncomeHistory findFirstOrThrow
   */
  export type FarmIncomeHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeHistory
     */
    select?: FarmIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeHistory
     */
    omit?: FarmIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeHistoryInclude<ExtArgs> | null
    /**
     * Filter, which FarmIncomeHistory to fetch.
     */
    where?: FarmIncomeHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FarmIncomeHistories to fetch.
     */
    orderBy?: FarmIncomeHistoryOrderByWithRelationInput | FarmIncomeHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FarmIncomeHistories.
     */
    cursor?: FarmIncomeHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FarmIncomeHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FarmIncomeHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FarmIncomeHistories.
     */
    distinct?: FarmIncomeHistoryScalarFieldEnum | FarmIncomeHistoryScalarFieldEnum[]
  }

  /**
   * FarmIncomeHistory findMany
   */
  export type FarmIncomeHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeHistory
     */
    select?: FarmIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeHistory
     */
    omit?: FarmIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeHistoryInclude<ExtArgs> | null
    /**
     * Filter, which FarmIncomeHistories to fetch.
     */
    where?: FarmIncomeHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FarmIncomeHistories to fetch.
     */
    orderBy?: FarmIncomeHistoryOrderByWithRelationInput | FarmIncomeHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FarmIncomeHistories.
     */
    cursor?: FarmIncomeHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FarmIncomeHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FarmIncomeHistories.
     */
    skip?: number
    distinct?: FarmIncomeHistoryScalarFieldEnum | FarmIncomeHistoryScalarFieldEnum[]
  }

  /**
   * FarmIncomeHistory create
   */
  export type FarmIncomeHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeHistory
     */
    select?: FarmIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeHistory
     */
    omit?: FarmIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeHistoryInclude<ExtArgs> | null
    /**
     * The data needed to create a FarmIncomeHistory.
     */
    data: XOR<FarmIncomeHistoryCreateInput, FarmIncomeHistoryUncheckedCreateInput>
  }

  /**
   * FarmIncomeHistory createMany
   */
  export type FarmIncomeHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FarmIncomeHistories.
     */
    data: FarmIncomeHistoryCreateManyInput | FarmIncomeHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FarmIncomeHistory createManyAndReturn
   */
  export type FarmIncomeHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeHistory
     */
    select?: FarmIncomeHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeHistory
     */
    omit?: FarmIncomeHistoryOmit<ExtArgs> | null
    /**
     * The data used to create many FarmIncomeHistories.
     */
    data: FarmIncomeHistoryCreateManyInput | FarmIncomeHistoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeHistoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FarmIncomeHistory update
   */
  export type FarmIncomeHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeHistory
     */
    select?: FarmIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeHistory
     */
    omit?: FarmIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeHistoryInclude<ExtArgs> | null
    /**
     * The data needed to update a FarmIncomeHistory.
     */
    data: XOR<FarmIncomeHistoryUpdateInput, FarmIncomeHistoryUncheckedUpdateInput>
    /**
     * Choose, which FarmIncomeHistory to update.
     */
    where: FarmIncomeHistoryWhereUniqueInput
  }

  /**
   * FarmIncomeHistory updateMany
   */
  export type FarmIncomeHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FarmIncomeHistories.
     */
    data: XOR<FarmIncomeHistoryUpdateManyMutationInput, FarmIncomeHistoryUncheckedUpdateManyInput>
    /**
     * Filter which FarmIncomeHistories to update
     */
    where?: FarmIncomeHistoryWhereInput
    /**
     * Limit how many FarmIncomeHistories to update.
     */
    limit?: number
  }

  /**
   * FarmIncomeHistory updateManyAndReturn
   */
  export type FarmIncomeHistoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeHistory
     */
    select?: FarmIncomeHistorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeHistory
     */
    omit?: FarmIncomeHistoryOmit<ExtArgs> | null
    /**
     * The data used to update FarmIncomeHistories.
     */
    data: XOR<FarmIncomeHistoryUpdateManyMutationInput, FarmIncomeHistoryUncheckedUpdateManyInput>
    /**
     * Filter which FarmIncomeHistories to update
     */
    where?: FarmIncomeHistoryWhereInput
    /**
     * Limit how many FarmIncomeHistories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeHistoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * FarmIncomeHistory upsert
   */
  export type FarmIncomeHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeHistory
     */
    select?: FarmIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeHistory
     */
    omit?: FarmIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeHistoryInclude<ExtArgs> | null
    /**
     * The filter to search for the FarmIncomeHistory to update in case it exists.
     */
    where: FarmIncomeHistoryWhereUniqueInput
    /**
     * In case the FarmIncomeHistory found by the `where` argument doesn't exist, create a new FarmIncomeHistory with this data.
     */
    create: XOR<FarmIncomeHistoryCreateInput, FarmIncomeHistoryUncheckedCreateInput>
    /**
     * In case the FarmIncomeHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FarmIncomeHistoryUpdateInput, FarmIncomeHistoryUncheckedUpdateInput>
  }

  /**
   * FarmIncomeHistory delete
   */
  export type FarmIncomeHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeHistory
     */
    select?: FarmIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeHistory
     */
    omit?: FarmIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeHistoryInclude<ExtArgs> | null
    /**
     * Filter which FarmIncomeHistory to delete.
     */
    where: FarmIncomeHistoryWhereUniqueInput
  }

  /**
   * FarmIncomeHistory deleteMany
   */
  export type FarmIncomeHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FarmIncomeHistories to delete
     */
    where?: FarmIncomeHistoryWhereInput
    /**
     * Limit how many FarmIncomeHistories to delete.
     */
    limit?: number
  }

  /**
   * FarmIncomeHistory.farmIncomeHistoryCreateByRel
   */
  export type FarmIncomeHistory$farmIncomeHistoryCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * FarmIncomeHistory.farmIncomeHistoryUpdateByRel
   */
  export type FarmIncomeHistory$farmIncomeHistoryUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * FarmIncomeHistory without action
   */
  export type FarmIncomeHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeHistory
     */
    select?: FarmIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeHistory
     */
    omit?: FarmIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeHistoryInclude<ExtArgs> | null
  }


  /**
   * Model FarmIncomeType
   */

  export type AggregateFarmIncomeType = {
    _count: FarmIncomeTypeCountAggregateOutputType | null
    _avg: FarmIncomeTypeAvgAggregateOutputType | null
    _sum: FarmIncomeTypeSumAggregateOutputType | null
    _min: FarmIncomeTypeMinAggregateOutputType | null
    _max: FarmIncomeTypeMaxAggregateOutputType | null
  }

  export type FarmIncomeTypeAvgAggregateOutputType = {
    id: number | null
    createBy: number | null
    updatedBy: number | null
  }

  export type FarmIncomeTypeSumAggregateOutputType = {
    id: bigint | null
    createBy: bigint | null
    updatedBy: bigint | null
  }

  export type FarmIncomeTypeMinAggregateOutputType = {
    id: bigint | null
    incomeTypeName: string | null
    code: string | null
    description: string | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type FarmIncomeTypeMaxAggregateOutputType = {
    id: bigint | null
    incomeTypeName: string | null
    code: string | null
    description: string | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type FarmIncomeTypeCountAggregateOutputType = {
    id: number
    incomeTypeName: number
    code: number
    description: number
    deleted: number
    createAt: number
    createBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type FarmIncomeTypeAvgAggregateInputType = {
    id?: true
    createBy?: true
    updatedBy?: true
  }

  export type FarmIncomeTypeSumAggregateInputType = {
    id?: true
    createBy?: true
    updatedBy?: true
  }

  export type FarmIncomeTypeMinAggregateInputType = {
    id?: true
    incomeTypeName?: true
    code?: true
    description?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type FarmIncomeTypeMaxAggregateInputType = {
    id?: true
    incomeTypeName?: true
    code?: true
    description?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type FarmIncomeTypeCountAggregateInputType = {
    id?: true
    incomeTypeName?: true
    code?: true
    description?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type FarmIncomeTypeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FarmIncomeType to aggregate.
     */
    where?: FarmIncomeTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FarmIncomeTypes to fetch.
     */
    orderBy?: FarmIncomeTypeOrderByWithRelationInput | FarmIncomeTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FarmIncomeTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FarmIncomeTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FarmIncomeTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FarmIncomeTypes
    **/
    _count?: true | FarmIncomeTypeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FarmIncomeTypeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FarmIncomeTypeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FarmIncomeTypeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FarmIncomeTypeMaxAggregateInputType
  }

  export type GetFarmIncomeTypeAggregateType<T extends FarmIncomeTypeAggregateArgs> = {
        [P in keyof T & keyof AggregateFarmIncomeType]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFarmIncomeType[P]>
      : GetScalarType<T[P], AggregateFarmIncomeType[P]>
  }




  export type FarmIncomeTypeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FarmIncomeTypeWhereInput
    orderBy?: FarmIncomeTypeOrderByWithAggregationInput | FarmIncomeTypeOrderByWithAggregationInput[]
    by: FarmIncomeTypeScalarFieldEnum[] | FarmIncomeTypeScalarFieldEnum
    having?: FarmIncomeTypeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FarmIncomeTypeCountAggregateInputType | true
    _avg?: FarmIncomeTypeAvgAggregateInputType
    _sum?: FarmIncomeTypeSumAggregateInputType
    _min?: FarmIncomeTypeMinAggregateInputType
    _max?: FarmIncomeTypeMaxAggregateInputType
  }

  export type FarmIncomeTypeGroupByOutputType = {
    id: bigint
    incomeTypeName: string
    code: string
    description: string
    deleted: boolean
    createAt: Date
    createBy: bigint | null
    updatedAt: Date
    updatedBy: bigint | null
    _count: FarmIncomeTypeCountAggregateOutputType | null
    _avg: FarmIncomeTypeAvgAggregateOutputType | null
    _sum: FarmIncomeTypeSumAggregateOutputType | null
    _min: FarmIncomeTypeMinAggregateOutputType | null
    _max: FarmIncomeTypeMaxAggregateOutputType | null
  }

  type GetFarmIncomeTypeGroupByPayload<T extends FarmIncomeTypeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FarmIncomeTypeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FarmIncomeTypeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FarmIncomeTypeGroupByOutputType[P]>
            : GetScalarType<T[P], FarmIncomeTypeGroupByOutputType[P]>
        }
      >
    >


  export type FarmIncomeTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    incomeTypeName?: boolean
    code?: boolean
    description?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    farmIncomeTypeCreateByRel?: boolean | FarmIncomeType$farmIncomeTypeCreateByRelArgs<ExtArgs>
    farmIncomeTypeUpdateByRel?: boolean | FarmIncomeType$farmIncomeTypeUpdateByRelArgs<ExtArgs>
    farmIncomeTypeIdRel?: boolean | FarmIncomeType$farmIncomeTypeIdRelArgs<ExtArgs>
    farmIncomeTypeHistoryIdRel?: boolean | FarmIncomeType$farmIncomeTypeHistoryIdRelArgs<ExtArgs>
    _count?: boolean | FarmIncomeTypeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["farmIncomeType"]>

  export type FarmIncomeTypeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    incomeTypeName?: boolean
    code?: boolean
    description?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    farmIncomeTypeCreateByRel?: boolean | FarmIncomeType$farmIncomeTypeCreateByRelArgs<ExtArgs>
    farmIncomeTypeUpdateByRel?: boolean | FarmIncomeType$farmIncomeTypeUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["farmIncomeType"]>

  export type FarmIncomeTypeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    incomeTypeName?: boolean
    code?: boolean
    description?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    farmIncomeTypeCreateByRel?: boolean | FarmIncomeType$farmIncomeTypeCreateByRelArgs<ExtArgs>
    farmIncomeTypeUpdateByRel?: boolean | FarmIncomeType$farmIncomeTypeUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["farmIncomeType"]>

  export type FarmIncomeTypeSelectScalar = {
    id?: boolean
    incomeTypeName?: boolean
    code?: boolean
    description?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type FarmIncomeTypeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "incomeTypeName" | "code" | "description" | "deleted" | "createAt" | "createBy" | "updatedAt" | "updatedBy", ExtArgs["result"]["farmIncomeType"]>
  export type FarmIncomeTypeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmIncomeTypeCreateByRel?: boolean | FarmIncomeType$farmIncomeTypeCreateByRelArgs<ExtArgs>
    farmIncomeTypeUpdateByRel?: boolean | FarmIncomeType$farmIncomeTypeUpdateByRelArgs<ExtArgs>
    farmIncomeTypeIdRel?: boolean | FarmIncomeType$farmIncomeTypeIdRelArgs<ExtArgs>
    farmIncomeTypeHistoryIdRel?: boolean | FarmIncomeType$farmIncomeTypeHistoryIdRelArgs<ExtArgs>
    _count?: boolean | FarmIncomeTypeCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type FarmIncomeTypeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmIncomeTypeCreateByRel?: boolean | FarmIncomeType$farmIncomeTypeCreateByRelArgs<ExtArgs>
    farmIncomeTypeUpdateByRel?: boolean | FarmIncomeType$farmIncomeTypeUpdateByRelArgs<ExtArgs>
  }
  export type FarmIncomeTypeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmIncomeTypeCreateByRel?: boolean | FarmIncomeType$farmIncomeTypeCreateByRelArgs<ExtArgs>
    farmIncomeTypeUpdateByRel?: boolean | FarmIncomeType$farmIncomeTypeUpdateByRelArgs<ExtArgs>
  }

  export type $FarmIncomeTypePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FarmIncomeType"
    objects: {
      farmIncomeTypeCreateByRel: Prisma.$UserPayload<ExtArgs> | null
      farmIncomeTypeUpdateByRel: Prisma.$UserPayload<ExtArgs> | null
      farmIncomeTypeIdRel: Prisma.$FarmIncomePayload<ExtArgs>[]
      farmIncomeTypeHistoryIdRel: Prisma.$FarmIncomeHistoryPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      incomeTypeName: string
      code: string
      description: string
      deleted: boolean
      createAt: Date
      createBy: bigint | null
      updatedAt: Date
      updatedBy: bigint | null
    }, ExtArgs["result"]["farmIncomeType"]>
    composites: {}
  }

  type FarmIncomeTypeGetPayload<S extends boolean | null | undefined | FarmIncomeTypeDefaultArgs> = $Result.GetResult<Prisma.$FarmIncomeTypePayload, S>

  type FarmIncomeTypeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FarmIncomeTypeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FarmIncomeTypeCountAggregateInputType | true
    }

  export interface FarmIncomeTypeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FarmIncomeType'], meta: { name: 'FarmIncomeType' } }
    /**
     * Find zero or one FarmIncomeType that matches the filter.
     * @param {FarmIncomeTypeFindUniqueArgs} args - Arguments to find a FarmIncomeType
     * @example
     * // Get one FarmIncomeType
     * const farmIncomeType = await prisma.farmIncomeType.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FarmIncomeTypeFindUniqueArgs>(args: SelectSubset<T, FarmIncomeTypeFindUniqueArgs<ExtArgs>>): Prisma__FarmIncomeTypeClient<$Result.GetResult<Prisma.$FarmIncomeTypePayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one FarmIncomeType that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FarmIncomeTypeFindUniqueOrThrowArgs} args - Arguments to find a FarmIncomeType
     * @example
     * // Get one FarmIncomeType
     * const farmIncomeType = await prisma.farmIncomeType.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FarmIncomeTypeFindUniqueOrThrowArgs>(args: SelectSubset<T, FarmIncomeTypeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FarmIncomeTypeClient<$Result.GetResult<Prisma.$FarmIncomeTypePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first FarmIncomeType that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmIncomeTypeFindFirstArgs} args - Arguments to find a FarmIncomeType
     * @example
     * // Get one FarmIncomeType
     * const farmIncomeType = await prisma.farmIncomeType.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FarmIncomeTypeFindFirstArgs>(args?: SelectSubset<T, FarmIncomeTypeFindFirstArgs<ExtArgs>>): Prisma__FarmIncomeTypeClient<$Result.GetResult<Prisma.$FarmIncomeTypePayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first FarmIncomeType that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmIncomeTypeFindFirstOrThrowArgs} args - Arguments to find a FarmIncomeType
     * @example
     * // Get one FarmIncomeType
     * const farmIncomeType = await prisma.farmIncomeType.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FarmIncomeTypeFindFirstOrThrowArgs>(args?: SelectSubset<T, FarmIncomeTypeFindFirstOrThrowArgs<ExtArgs>>): Prisma__FarmIncomeTypeClient<$Result.GetResult<Prisma.$FarmIncomeTypePayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more FarmIncomeTypes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmIncomeTypeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FarmIncomeTypes
     * const farmIncomeTypes = await prisma.farmIncomeType.findMany()
     * 
     * // Get first 10 FarmIncomeTypes
     * const farmIncomeTypes = await prisma.farmIncomeType.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const farmIncomeTypeWithIdOnly = await prisma.farmIncomeType.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FarmIncomeTypeFindManyArgs>(args?: SelectSubset<T, FarmIncomeTypeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmIncomeTypePayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a FarmIncomeType.
     * @param {FarmIncomeTypeCreateArgs} args - Arguments to create a FarmIncomeType.
     * @example
     * // Create one FarmIncomeType
     * const FarmIncomeType = await prisma.farmIncomeType.create({
     *   data: {
     *     // ... data to create a FarmIncomeType
     *   }
     * })
     * 
     */
    create<T extends FarmIncomeTypeCreateArgs>(args: SelectSubset<T, FarmIncomeTypeCreateArgs<ExtArgs>>): Prisma__FarmIncomeTypeClient<$Result.GetResult<Prisma.$FarmIncomeTypePayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many FarmIncomeTypes.
     * @param {FarmIncomeTypeCreateManyArgs} args - Arguments to create many FarmIncomeTypes.
     * @example
     * // Create many FarmIncomeTypes
     * const farmIncomeType = await prisma.farmIncomeType.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FarmIncomeTypeCreateManyArgs>(args?: SelectSubset<T, FarmIncomeTypeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FarmIncomeTypes and returns the data saved in the database.
     * @param {FarmIncomeTypeCreateManyAndReturnArgs} args - Arguments to create many FarmIncomeTypes.
     * @example
     * // Create many FarmIncomeTypes
     * const farmIncomeType = await prisma.farmIncomeType.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FarmIncomeTypes and only return the `id`
     * const farmIncomeTypeWithIdOnly = await prisma.farmIncomeType.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FarmIncomeTypeCreateManyAndReturnArgs>(args?: SelectSubset<T, FarmIncomeTypeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmIncomeTypePayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a FarmIncomeType.
     * @param {FarmIncomeTypeDeleteArgs} args - Arguments to delete one FarmIncomeType.
     * @example
     * // Delete one FarmIncomeType
     * const FarmIncomeType = await prisma.farmIncomeType.delete({
     *   where: {
     *     // ... filter to delete one FarmIncomeType
     *   }
     * })
     * 
     */
    delete<T extends FarmIncomeTypeDeleteArgs>(args: SelectSubset<T, FarmIncomeTypeDeleteArgs<ExtArgs>>): Prisma__FarmIncomeTypeClient<$Result.GetResult<Prisma.$FarmIncomeTypePayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one FarmIncomeType.
     * @param {FarmIncomeTypeUpdateArgs} args - Arguments to update one FarmIncomeType.
     * @example
     * // Update one FarmIncomeType
     * const farmIncomeType = await prisma.farmIncomeType.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FarmIncomeTypeUpdateArgs>(args: SelectSubset<T, FarmIncomeTypeUpdateArgs<ExtArgs>>): Prisma__FarmIncomeTypeClient<$Result.GetResult<Prisma.$FarmIncomeTypePayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more FarmIncomeTypes.
     * @param {FarmIncomeTypeDeleteManyArgs} args - Arguments to filter FarmIncomeTypes to delete.
     * @example
     * // Delete a few FarmIncomeTypes
     * const { count } = await prisma.farmIncomeType.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FarmIncomeTypeDeleteManyArgs>(args?: SelectSubset<T, FarmIncomeTypeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FarmIncomeTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmIncomeTypeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FarmIncomeTypes
     * const farmIncomeType = await prisma.farmIncomeType.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FarmIncomeTypeUpdateManyArgs>(args: SelectSubset<T, FarmIncomeTypeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FarmIncomeTypes and returns the data updated in the database.
     * @param {FarmIncomeTypeUpdateManyAndReturnArgs} args - Arguments to update many FarmIncomeTypes.
     * @example
     * // Update many FarmIncomeTypes
     * const farmIncomeType = await prisma.farmIncomeType.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more FarmIncomeTypes and only return the `id`
     * const farmIncomeTypeWithIdOnly = await prisma.farmIncomeType.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FarmIncomeTypeUpdateManyAndReturnArgs>(args: SelectSubset<T, FarmIncomeTypeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmIncomeTypePayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one FarmIncomeType.
     * @param {FarmIncomeTypeUpsertArgs} args - Arguments to update or create a FarmIncomeType.
     * @example
     * // Update or create a FarmIncomeType
     * const farmIncomeType = await prisma.farmIncomeType.upsert({
     *   create: {
     *     // ... data to create a FarmIncomeType
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FarmIncomeType we want to update
     *   }
     * })
     */
    upsert<T extends FarmIncomeTypeUpsertArgs>(args: SelectSubset<T, FarmIncomeTypeUpsertArgs<ExtArgs>>): Prisma__FarmIncomeTypeClient<$Result.GetResult<Prisma.$FarmIncomeTypePayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of FarmIncomeTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmIncomeTypeCountArgs} args - Arguments to filter FarmIncomeTypes to count.
     * @example
     * // Count the number of FarmIncomeTypes
     * const count = await prisma.farmIncomeType.count({
     *   where: {
     *     // ... the filter for the FarmIncomeTypes we want to count
     *   }
     * })
    **/
    count<T extends FarmIncomeTypeCountArgs>(
      args?: Subset<T, FarmIncomeTypeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FarmIncomeTypeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FarmIncomeType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmIncomeTypeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FarmIncomeTypeAggregateArgs>(args: Subset<T, FarmIncomeTypeAggregateArgs>): Prisma.PrismaPromise<GetFarmIncomeTypeAggregateType<T>>

    /**
     * Group by FarmIncomeType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmIncomeTypeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FarmIncomeTypeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FarmIncomeTypeGroupByArgs['orderBy'] }
        : { orderBy?: FarmIncomeTypeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FarmIncomeTypeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFarmIncomeTypeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FarmIncomeType model
   */
  readonly fields: FarmIncomeTypeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FarmIncomeType.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FarmIncomeTypeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    farmIncomeTypeCreateByRel<T extends FarmIncomeType$farmIncomeTypeCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, FarmIncomeType$farmIncomeTypeCreateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    farmIncomeTypeUpdateByRel<T extends FarmIncomeType$farmIncomeTypeUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, FarmIncomeType$farmIncomeTypeUpdateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    farmIncomeTypeIdRel<T extends FarmIncomeType$farmIncomeTypeIdRelArgs<ExtArgs> = {}>(args?: Subset<T, FarmIncomeType$farmIncomeTypeIdRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmIncomePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    farmIncomeTypeHistoryIdRel<T extends FarmIncomeType$farmIncomeTypeHistoryIdRelArgs<ExtArgs> = {}>(args?: Subset<T, FarmIncomeType$farmIncomeTypeHistoryIdRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmIncomeHistoryPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FarmIncomeType model
   */ 
  interface FarmIncomeTypeFieldRefs {
    readonly id: FieldRef<"FarmIncomeType", 'BigInt'>
    readonly incomeTypeName: FieldRef<"FarmIncomeType", 'String'>
    readonly code: FieldRef<"FarmIncomeType", 'String'>
    readonly description: FieldRef<"FarmIncomeType", 'String'>
    readonly deleted: FieldRef<"FarmIncomeType", 'Boolean'>
    readonly createAt: FieldRef<"FarmIncomeType", 'DateTime'>
    readonly createBy: FieldRef<"FarmIncomeType", 'BigInt'>
    readonly updatedAt: FieldRef<"FarmIncomeType", 'DateTime'>
    readonly updatedBy: FieldRef<"FarmIncomeType", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * FarmIncomeType findUnique
   */
  export type FarmIncomeTypeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeType
     */
    select?: FarmIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeType
     */
    omit?: FarmIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeTypeInclude<ExtArgs> | null
    /**
     * Filter, which FarmIncomeType to fetch.
     */
    where: FarmIncomeTypeWhereUniqueInput
  }

  /**
   * FarmIncomeType findUniqueOrThrow
   */
  export type FarmIncomeTypeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeType
     */
    select?: FarmIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeType
     */
    omit?: FarmIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeTypeInclude<ExtArgs> | null
    /**
     * Filter, which FarmIncomeType to fetch.
     */
    where: FarmIncomeTypeWhereUniqueInput
  }

  /**
   * FarmIncomeType findFirst
   */
  export type FarmIncomeTypeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeType
     */
    select?: FarmIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeType
     */
    omit?: FarmIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeTypeInclude<ExtArgs> | null
    /**
     * Filter, which FarmIncomeType to fetch.
     */
    where?: FarmIncomeTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FarmIncomeTypes to fetch.
     */
    orderBy?: FarmIncomeTypeOrderByWithRelationInput | FarmIncomeTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FarmIncomeTypes.
     */
    cursor?: FarmIncomeTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FarmIncomeTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FarmIncomeTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FarmIncomeTypes.
     */
    distinct?: FarmIncomeTypeScalarFieldEnum | FarmIncomeTypeScalarFieldEnum[]
  }

  /**
   * FarmIncomeType findFirstOrThrow
   */
  export type FarmIncomeTypeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeType
     */
    select?: FarmIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeType
     */
    omit?: FarmIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeTypeInclude<ExtArgs> | null
    /**
     * Filter, which FarmIncomeType to fetch.
     */
    where?: FarmIncomeTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FarmIncomeTypes to fetch.
     */
    orderBy?: FarmIncomeTypeOrderByWithRelationInput | FarmIncomeTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FarmIncomeTypes.
     */
    cursor?: FarmIncomeTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FarmIncomeTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FarmIncomeTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FarmIncomeTypes.
     */
    distinct?: FarmIncomeTypeScalarFieldEnum | FarmIncomeTypeScalarFieldEnum[]
  }

  /**
   * FarmIncomeType findMany
   */
  export type FarmIncomeTypeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeType
     */
    select?: FarmIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeType
     */
    omit?: FarmIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeTypeInclude<ExtArgs> | null
    /**
     * Filter, which FarmIncomeTypes to fetch.
     */
    where?: FarmIncomeTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FarmIncomeTypes to fetch.
     */
    orderBy?: FarmIncomeTypeOrderByWithRelationInput | FarmIncomeTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FarmIncomeTypes.
     */
    cursor?: FarmIncomeTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FarmIncomeTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FarmIncomeTypes.
     */
    skip?: number
    distinct?: FarmIncomeTypeScalarFieldEnum | FarmIncomeTypeScalarFieldEnum[]
  }

  /**
   * FarmIncomeType create
   */
  export type FarmIncomeTypeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeType
     */
    select?: FarmIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeType
     */
    omit?: FarmIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeTypeInclude<ExtArgs> | null
    /**
     * The data needed to create a FarmIncomeType.
     */
    data: XOR<FarmIncomeTypeCreateInput, FarmIncomeTypeUncheckedCreateInput>
  }

  /**
   * FarmIncomeType createMany
   */
  export type FarmIncomeTypeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FarmIncomeTypes.
     */
    data: FarmIncomeTypeCreateManyInput | FarmIncomeTypeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FarmIncomeType createManyAndReturn
   */
  export type FarmIncomeTypeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeType
     */
    select?: FarmIncomeTypeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeType
     */
    omit?: FarmIncomeTypeOmit<ExtArgs> | null
    /**
     * The data used to create many FarmIncomeTypes.
     */
    data: FarmIncomeTypeCreateManyInput | FarmIncomeTypeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeTypeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FarmIncomeType update
   */
  export type FarmIncomeTypeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeType
     */
    select?: FarmIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeType
     */
    omit?: FarmIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeTypeInclude<ExtArgs> | null
    /**
     * The data needed to update a FarmIncomeType.
     */
    data: XOR<FarmIncomeTypeUpdateInput, FarmIncomeTypeUncheckedUpdateInput>
    /**
     * Choose, which FarmIncomeType to update.
     */
    where: FarmIncomeTypeWhereUniqueInput
  }

  /**
   * FarmIncomeType updateMany
   */
  export type FarmIncomeTypeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FarmIncomeTypes.
     */
    data: XOR<FarmIncomeTypeUpdateManyMutationInput, FarmIncomeTypeUncheckedUpdateManyInput>
    /**
     * Filter which FarmIncomeTypes to update
     */
    where?: FarmIncomeTypeWhereInput
    /**
     * Limit how many FarmIncomeTypes to update.
     */
    limit?: number
  }

  /**
   * FarmIncomeType updateManyAndReturn
   */
  export type FarmIncomeTypeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeType
     */
    select?: FarmIncomeTypeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeType
     */
    omit?: FarmIncomeTypeOmit<ExtArgs> | null
    /**
     * The data used to update FarmIncomeTypes.
     */
    data: XOR<FarmIncomeTypeUpdateManyMutationInput, FarmIncomeTypeUncheckedUpdateManyInput>
    /**
     * Filter which FarmIncomeTypes to update
     */
    where?: FarmIncomeTypeWhereInput
    /**
     * Limit how many FarmIncomeTypes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeTypeIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * FarmIncomeType upsert
   */
  export type FarmIncomeTypeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeType
     */
    select?: FarmIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeType
     */
    omit?: FarmIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeTypeInclude<ExtArgs> | null
    /**
     * The filter to search for the FarmIncomeType to update in case it exists.
     */
    where: FarmIncomeTypeWhereUniqueInput
    /**
     * In case the FarmIncomeType found by the `where` argument doesn't exist, create a new FarmIncomeType with this data.
     */
    create: XOR<FarmIncomeTypeCreateInput, FarmIncomeTypeUncheckedCreateInput>
    /**
     * In case the FarmIncomeType was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FarmIncomeTypeUpdateInput, FarmIncomeTypeUncheckedUpdateInput>
  }

  /**
   * FarmIncomeType delete
   */
  export type FarmIncomeTypeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeType
     */
    select?: FarmIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeType
     */
    omit?: FarmIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeTypeInclude<ExtArgs> | null
    /**
     * Filter which FarmIncomeType to delete.
     */
    where: FarmIncomeTypeWhereUniqueInput
  }

  /**
   * FarmIncomeType deleteMany
   */
  export type FarmIncomeTypeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FarmIncomeTypes to delete
     */
    where?: FarmIncomeTypeWhereInput
    /**
     * Limit how many FarmIncomeTypes to delete.
     */
    limit?: number
  }

  /**
   * FarmIncomeType.farmIncomeTypeCreateByRel
   */
  export type FarmIncomeType$farmIncomeTypeCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * FarmIncomeType.farmIncomeTypeUpdateByRel
   */
  export type FarmIncomeType$farmIncomeTypeUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * FarmIncomeType.farmIncomeTypeIdRel
   */
  export type FarmIncomeType$farmIncomeTypeIdRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncome
     */
    select?: FarmIncomeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncome
     */
    omit?: FarmIncomeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeInclude<ExtArgs> | null
    where?: FarmIncomeWhereInput
    orderBy?: FarmIncomeOrderByWithRelationInput | FarmIncomeOrderByWithRelationInput[]
    cursor?: FarmIncomeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FarmIncomeScalarFieldEnum | FarmIncomeScalarFieldEnum[]
  }

  /**
   * FarmIncomeType.farmIncomeTypeHistoryIdRel
   */
  export type FarmIncomeType$farmIncomeTypeHistoryIdRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeHistory
     */
    select?: FarmIncomeHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeHistory
     */
    omit?: FarmIncomeHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeHistoryInclude<ExtArgs> | null
    where?: FarmIncomeHistoryWhereInput
    orderBy?: FarmIncomeHistoryOrderByWithRelationInput | FarmIncomeHistoryOrderByWithRelationInput[]
    cursor?: FarmIncomeHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FarmIncomeHistoryScalarFieldEnum | FarmIncomeHistoryScalarFieldEnum[]
  }

  /**
   * FarmIncomeType without action
   */
  export type FarmIncomeTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmIncomeType
     */
    select?: FarmIncomeTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmIncomeType
     */
    omit?: FarmIncomeTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmIncomeTypeInclude<ExtArgs> | null
  }


  /**
   * Model FarmSpending
   */

  export type AggregateFarmSpending = {
    _count: FarmSpendingCountAggregateOutputType | null
    _avg: FarmSpendingAvgAggregateOutputType | null
    _sum: FarmSpendingSumAggregateOutputType | null
    _min: FarmSpendingMinAggregateOutputType | null
    _max: FarmSpendingMaxAggregateOutputType | null
  }

  export type FarmSpendingAvgAggregateOutputType = {
    id: number | null
    spendingTypeId: number | null
    funds: number | null
    createBy: number | null
    updatedBy: number | null
  }

  export type FarmSpendingSumAggregateOutputType = {
    id: bigint | null
    spendingTypeId: bigint | null
    funds: bigint | null
    createBy: bigint | null
    updatedBy: bigint | null
  }

  export type FarmSpendingMinAggregateOutputType = {
    id: bigint | null
    spendingTypeId: bigint | null
    detail: string | null
    funds: bigint | null
    date: Date | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type FarmSpendingMaxAggregateOutputType = {
    id: bigint | null
    spendingTypeId: bigint | null
    detail: string | null
    funds: bigint | null
    date: Date | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type FarmSpendingCountAggregateOutputType = {
    id: number
    spendingTypeId: number
    detail: number
    funds: number
    date: number
    deleted: number
    createAt: number
    createBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type FarmSpendingAvgAggregateInputType = {
    id?: true
    spendingTypeId?: true
    funds?: true
    createBy?: true
    updatedBy?: true
  }

  export type FarmSpendingSumAggregateInputType = {
    id?: true
    spendingTypeId?: true
    funds?: true
    createBy?: true
    updatedBy?: true
  }

  export type FarmSpendingMinAggregateInputType = {
    id?: true
    spendingTypeId?: true
    detail?: true
    funds?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type FarmSpendingMaxAggregateInputType = {
    id?: true
    spendingTypeId?: true
    detail?: true
    funds?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type FarmSpendingCountAggregateInputType = {
    id?: true
    spendingTypeId?: true
    detail?: true
    funds?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type FarmSpendingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FarmSpending to aggregate.
     */
    where?: FarmSpendingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FarmSpendings to fetch.
     */
    orderBy?: FarmSpendingOrderByWithRelationInput | FarmSpendingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FarmSpendingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FarmSpendings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FarmSpendings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FarmSpendings
    **/
    _count?: true | FarmSpendingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FarmSpendingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FarmSpendingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FarmSpendingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FarmSpendingMaxAggregateInputType
  }

  export type GetFarmSpendingAggregateType<T extends FarmSpendingAggregateArgs> = {
        [P in keyof T & keyof AggregateFarmSpending]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFarmSpending[P]>
      : GetScalarType<T[P], AggregateFarmSpending[P]>
  }




  export type FarmSpendingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FarmSpendingWhereInput
    orderBy?: FarmSpendingOrderByWithAggregationInput | FarmSpendingOrderByWithAggregationInput[]
    by: FarmSpendingScalarFieldEnum[] | FarmSpendingScalarFieldEnum
    having?: FarmSpendingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FarmSpendingCountAggregateInputType | true
    _avg?: FarmSpendingAvgAggregateInputType
    _sum?: FarmSpendingSumAggregateInputType
    _min?: FarmSpendingMinAggregateInputType
    _max?: FarmSpendingMaxAggregateInputType
  }

  export type FarmSpendingGroupByOutputType = {
    id: bigint
    spendingTypeId: bigint
    detail: string | null
    funds: bigint
    date: Date
    deleted: boolean
    createAt: Date
    createBy: bigint | null
    updatedAt: Date
    updatedBy: bigint | null
    _count: FarmSpendingCountAggregateOutputType | null
    _avg: FarmSpendingAvgAggregateOutputType | null
    _sum: FarmSpendingSumAggregateOutputType | null
    _min: FarmSpendingMinAggregateOutputType | null
    _max: FarmSpendingMaxAggregateOutputType | null
  }

  type GetFarmSpendingGroupByPayload<T extends FarmSpendingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FarmSpendingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FarmSpendingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FarmSpendingGroupByOutputType[P]>
            : GetScalarType<T[P], FarmSpendingGroupByOutputType[P]>
        }
      >
    >


  export type FarmSpendingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    spendingTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    farmSpendingTypeIdRel?: boolean | FarmSpendingTypeDefaultArgs<ExtArgs>
    farmSpendingCreateByRel?: boolean | FarmSpending$farmSpendingCreateByRelArgs<ExtArgs>
    farmSpendingUpdateByRel?: boolean | FarmSpending$farmSpendingUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["farmSpending"]>

  export type FarmSpendingSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    spendingTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    farmSpendingTypeIdRel?: boolean | FarmSpendingTypeDefaultArgs<ExtArgs>
    farmSpendingCreateByRel?: boolean | FarmSpending$farmSpendingCreateByRelArgs<ExtArgs>
    farmSpendingUpdateByRel?: boolean | FarmSpending$farmSpendingUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["farmSpending"]>

  export type FarmSpendingSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    spendingTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    farmSpendingTypeIdRel?: boolean | FarmSpendingTypeDefaultArgs<ExtArgs>
    farmSpendingCreateByRel?: boolean | FarmSpending$farmSpendingCreateByRelArgs<ExtArgs>
    farmSpendingUpdateByRel?: boolean | FarmSpending$farmSpendingUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["farmSpending"]>

  export type FarmSpendingSelectScalar = {
    id?: boolean
    spendingTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type FarmSpendingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "spendingTypeId" | "detail" | "funds" | "date" | "deleted" | "createAt" | "createBy" | "updatedAt" | "updatedBy", ExtArgs["result"]["farmSpending"]>
  export type FarmSpendingInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmSpendingTypeIdRel?: boolean | FarmSpendingTypeDefaultArgs<ExtArgs>
    farmSpendingCreateByRel?: boolean | FarmSpending$farmSpendingCreateByRelArgs<ExtArgs>
    farmSpendingUpdateByRel?: boolean | FarmSpending$farmSpendingUpdateByRelArgs<ExtArgs>
  }
  export type FarmSpendingIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmSpendingTypeIdRel?: boolean | FarmSpendingTypeDefaultArgs<ExtArgs>
    farmSpendingCreateByRel?: boolean | FarmSpending$farmSpendingCreateByRelArgs<ExtArgs>
    farmSpendingUpdateByRel?: boolean | FarmSpending$farmSpendingUpdateByRelArgs<ExtArgs>
  }
  export type FarmSpendingIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmSpendingTypeIdRel?: boolean | FarmSpendingTypeDefaultArgs<ExtArgs>
    farmSpendingCreateByRel?: boolean | FarmSpending$farmSpendingCreateByRelArgs<ExtArgs>
    farmSpendingUpdateByRel?: boolean | FarmSpending$farmSpendingUpdateByRelArgs<ExtArgs>
  }

  export type $FarmSpendingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FarmSpending"
    objects: {
      farmSpendingTypeIdRel: Prisma.$FarmSpendingTypePayload<ExtArgs>
      farmSpendingCreateByRel: Prisma.$UserPayload<ExtArgs> | null
      farmSpendingUpdateByRel: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      spendingTypeId: bigint
      detail: string | null
      funds: bigint
      date: Date
      deleted: boolean
      createAt: Date
      createBy: bigint | null
      updatedAt: Date
      updatedBy: bigint | null
    }, ExtArgs["result"]["farmSpending"]>
    composites: {}
  }

  type FarmSpendingGetPayload<S extends boolean | null | undefined | FarmSpendingDefaultArgs> = $Result.GetResult<Prisma.$FarmSpendingPayload, S>

  type FarmSpendingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FarmSpendingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FarmSpendingCountAggregateInputType | true
    }

  export interface FarmSpendingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FarmSpending'], meta: { name: 'FarmSpending' } }
    /**
     * Find zero or one FarmSpending that matches the filter.
     * @param {FarmSpendingFindUniqueArgs} args - Arguments to find a FarmSpending
     * @example
     * // Get one FarmSpending
     * const farmSpending = await prisma.farmSpending.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FarmSpendingFindUniqueArgs>(args: SelectSubset<T, FarmSpendingFindUniqueArgs<ExtArgs>>): Prisma__FarmSpendingClient<$Result.GetResult<Prisma.$FarmSpendingPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one FarmSpending that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FarmSpendingFindUniqueOrThrowArgs} args - Arguments to find a FarmSpending
     * @example
     * // Get one FarmSpending
     * const farmSpending = await prisma.farmSpending.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FarmSpendingFindUniqueOrThrowArgs>(args: SelectSubset<T, FarmSpendingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FarmSpendingClient<$Result.GetResult<Prisma.$FarmSpendingPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first FarmSpending that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmSpendingFindFirstArgs} args - Arguments to find a FarmSpending
     * @example
     * // Get one FarmSpending
     * const farmSpending = await prisma.farmSpending.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FarmSpendingFindFirstArgs>(args?: SelectSubset<T, FarmSpendingFindFirstArgs<ExtArgs>>): Prisma__FarmSpendingClient<$Result.GetResult<Prisma.$FarmSpendingPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first FarmSpending that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmSpendingFindFirstOrThrowArgs} args - Arguments to find a FarmSpending
     * @example
     * // Get one FarmSpending
     * const farmSpending = await prisma.farmSpending.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FarmSpendingFindFirstOrThrowArgs>(args?: SelectSubset<T, FarmSpendingFindFirstOrThrowArgs<ExtArgs>>): Prisma__FarmSpendingClient<$Result.GetResult<Prisma.$FarmSpendingPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more FarmSpendings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmSpendingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FarmSpendings
     * const farmSpendings = await prisma.farmSpending.findMany()
     * 
     * // Get first 10 FarmSpendings
     * const farmSpendings = await prisma.farmSpending.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const farmSpendingWithIdOnly = await prisma.farmSpending.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FarmSpendingFindManyArgs>(args?: SelectSubset<T, FarmSpendingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmSpendingPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a FarmSpending.
     * @param {FarmSpendingCreateArgs} args - Arguments to create a FarmSpending.
     * @example
     * // Create one FarmSpending
     * const FarmSpending = await prisma.farmSpending.create({
     *   data: {
     *     // ... data to create a FarmSpending
     *   }
     * })
     * 
     */
    create<T extends FarmSpendingCreateArgs>(args: SelectSubset<T, FarmSpendingCreateArgs<ExtArgs>>): Prisma__FarmSpendingClient<$Result.GetResult<Prisma.$FarmSpendingPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many FarmSpendings.
     * @param {FarmSpendingCreateManyArgs} args - Arguments to create many FarmSpendings.
     * @example
     * // Create many FarmSpendings
     * const farmSpending = await prisma.farmSpending.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FarmSpendingCreateManyArgs>(args?: SelectSubset<T, FarmSpendingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FarmSpendings and returns the data saved in the database.
     * @param {FarmSpendingCreateManyAndReturnArgs} args - Arguments to create many FarmSpendings.
     * @example
     * // Create many FarmSpendings
     * const farmSpending = await prisma.farmSpending.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FarmSpendings and only return the `id`
     * const farmSpendingWithIdOnly = await prisma.farmSpending.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FarmSpendingCreateManyAndReturnArgs>(args?: SelectSubset<T, FarmSpendingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmSpendingPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a FarmSpending.
     * @param {FarmSpendingDeleteArgs} args - Arguments to delete one FarmSpending.
     * @example
     * // Delete one FarmSpending
     * const FarmSpending = await prisma.farmSpending.delete({
     *   where: {
     *     // ... filter to delete one FarmSpending
     *   }
     * })
     * 
     */
    delete<T extends FarmSpendingDeleteArgs>(args: SelectSubset<T, FarmSpendingDeleteArgs<ExtArgs>>): Prisma__FarmSpendingClient<$Result.GetResult<Prisma.$FarmSpendingPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one FarmSpending.
     * @param {FarmSpendingUpdateArgs} args - Arguments to update one FarmSpending.
     * @example
     * // Update one FarmSpending
     * const farmSpending = await prisma.farmSpending.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FarmSpendingUpdateArgs>(args: SelectSubset<T, FarmSpendingUpdateArgs<ExtArgs>>): Prisma__FarmSpendingClient<$Result.GetResult<Prisma.$FarmSpendingPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more FarmSpendings.
     * @param {FarmSpendingDeleteManyArgs} args - Arguments to filter FarmSpendings to delete.
     * @example
     * // Delete a few FarmSpendings
     * const { count } = await prisma.farmSpending.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FarmSpendingDeleteManyArgs>(args?: SelectSubset<T, FarmSpendingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FarmSpendings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmSpendingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FarmSpendings
     * const farmSpending = await prisma.farmSpending.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FarmSpendingUpdateManyArgs>(args: SelectSubset<T, FarmSpendingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FarmSpendings and returns the data updated in the database.
     * @param {FarmSpendingUpdateManyAndReturnArgs} args - Arguments to update many FarmSpendings.
     * @example
     * // Update many FarmSpendings
     * const farmSpending = await prisma.farmSpending.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more FarmSpendings and only return the `id`
     * const farmSpendingWithIdOnly = await prisma.farmSpending.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FarmSpendingUpdateManyAndReturnArgs>(args: SelectSubset<T, FarmSpendingUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmSpendingPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one FarmSpending.
     * @param {FarmSpendingUpsertArgs} args - Arguments to update or create a FarmSpending.
     * @example
     * // Update or create a FarmSpending
     * const farmSpending = await prisma.farmSpending.upsert({
     *   create: {
     *     // ... data to create a FarmSpending
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FarmSpending we want to update
     *   }
     * })
     */
    upsert<T extends FarmSpendingUpsertArgs>(args: SelectSubset<T, FarmSpendingUpsertArgs<ExtArgs>>): Prisma__FarmSpendingClient<$Result.GetResult<Prisma.$FarmSpendingPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of FarmSpendings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmSpendingCountArgs} args - Arguments to filter FarmSpendings to count.
     * @example
     * // Count the number of FarmSpendings
     * const count = await prisma.farmSpending.count({
     *   where: {
     *     // ... the filter for the FarmSpendings we want to count
     *   }
     * })
    **/
    count<T extends FarmSpendingCountArgs>(
      args?: Subset<T, FarmSpendingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FarmSpendingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FarmSpending.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmSpendingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FarmSpendingAggregateArgs>(args: Subset<T, FarmSpendingAggregateArgs>): Prisma.PrismaPromise<GetFarmSpendingAggregateType<T>>

    /**
     * Group by FarmSpending.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmSpendingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FarmSpendingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FarmSpendingGroupByArgs['orderBy'] }
        : { orderBy?: FarmSpendingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FarmSpendingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFarmSpendingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FarmSpending model
   */
  readonly fields: FarmSpendingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FarmSpending.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FarmSpendingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    farmSpendingTypeIdRel<T extends FarmSpendingTypeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, FarmSpendingTypeDefaultArgs<ExtArgs>>): Prisma__FarmSpendingTypeClient<$Result.GetResult<Prisma.$FarmSpendingTypePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    farmSpendingCreateByRel<T extends FarmSpending$farmSpendingCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, FarmSpending$farmSpendingCreateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    farmSpendingUpdateByRel<T extends FarmSpending$farmSpendingUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, FarmSpending$farmSpendingUpdateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FarmSpending model
   */ 
  interface FarmSpendingFieldRefs {
    readonly id: FieldRef<"FarmSpending", 'BigInt'>
    readonly spendingTypeId: FieldRef<"FarmSpending", 'BigInt'>
    readonly detail: FieldRef<"FarmSpending", 'String'>
    readonly funds: FieldRef<"FarmSpending", 'BigInt'>
    readonly date: FieldRef<"FarmSpending", 'DateTime'>
    readonly deleted: FieldRef<"FarmSpending", 'Boolean'>
    readonly createAt: FieldRef<"FarmSpending", 'DateTime'>
    readonly createBy: FieldRef<"FarmSpending", 'BigInt'>
    readonly updatedAt: FieldRef<"FarmSpending", 'DateTime'>
    readonly updatedBy: FieldRef<"FarmSpending", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * FarmSpending findUnique
   */
  export type FarmSpendingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpending
     */
    select?: FarmSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpending
     */
    omit?: FarmSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingInclude<ExtArgs> | null
    /**
     * Filter, which FarmSpending to fetch.
     */
    where: FarmSpendingWhereUniqueInput
  }

  /**
   * FarmSpending findUniqueOrThrow
   */
  export type FarmSpendingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpending
     */
    select?: FarmSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpending
     */
    omit?: FarmSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingInclude<ExtArgs> | null
    /**
     * Filter, which FarmSpending to fetch.
     */
    where: FarmSpendingWhereUniqueInput
  }

  /**
   * FarmSpending findFirst
   */
  export type FarmSpendingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpending
     */
    select?: FarmSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpending
     */
    omit?: FarmSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingInclude<ExtArgs> | null
    /**
     * Filter, which FarmSpending to fetch.
     */
    where?: FarmSpendingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FarmSpendings to fetch.
     */
    orderBy?: FarmSpendingOrderByWithRelationInput | FarmSpendingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FarmSpendings.
     */
    cursor?: FarmSpendingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FarmSpendings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FarmSpendings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FarmSpendings.
     */
    distinct?: FarmSpendingScalarFieldEnum | FarmSpendingScalarFieldEnum[]
  }

  /**
   * FarmSpending findFirstOrThrow
   */
  export type FarmSpendingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpending
     */
    select?: FarmSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpending
     */
    omit?: FarmSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingInclude<ExtArgs> | null
    /**
     * Filter, which FarmSpending to fetch.
     */
    where?: FarmSpendingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FarmSpendings to fetch.
     */
    orderBy?: FarmSpendingOrderByWithRelationInput | FarmSpendingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FarmSpendings.
     */
    cursor?: FarmSpendingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FarmSpendings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FarmSpendings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FarmSpendings.
     */
    distinct?: FarmSpendingScalarFieldEnum | FarmSpendingScalarFieldEnum[]
  }

  /**
   * FarmSpending findMany
   */
  export type FarmSpendingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpending
     */
    select?: FarmSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpending
     */
    omit?: FarmSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingInclude<ExtArgs> | null
    /**
     * Filter, which FarmSpendings to fetch.
     */
    where?: FarmSpendingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FarmSpendings to fetch.
     */
    orderBy?: FarmSpendingOrderByWithRelationInput | FarmSpendingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FarmSpendings.
     */
    cursor?: FarmSpendingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FarmSpendings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FarmSpendings.
     */
    skip?: number
    distinct?: FarmSpendingScalarFieldEnum | FarmSpendingScalarFieldEnum[]
  }

  /**
   * FarmSpending create
   */
  export type FarmSpendingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpending
     */
    select?: FarmSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpending
     */
    omit?: FarmSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingInclude<ExtArgs> | null
    /**
     * The data needed to create a FarmSpending.
     */
    data: XOR<FarmSpendingCreateInput, FarmSpendingUncheckedCreateInput>
  }

  /**
   * FarmSpending createMany
   */
  export type FarmSpendingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FarmSpendings.
     */
    data: FarmSpendingCreateManyInput | FarmSpendingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FarmSpending createManyAndReturn
   */
  export type FarmSpendingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpending
     */
    select?: FarmSpendingSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpending
     */
    omit?: FarmSpendingOmit<ExtArgs> | null
    /**
     * The data used to create many FarmSpendings.
     */
    data: FarmSpendingCreateManyInput | FarmSpendingCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FarmSpending update
   */
  export type FarmSpendingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpending
     */
    select?: FarmSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpending
     */
    omit?: FarmSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingInclude<ExtArgs> | null
    /**
     * The data needed to update a FarmSpending.
     */
    data: XOR<FarmSpendingUpdateInput, FarmSpendingUncheckedUpdateInput>
    /**
     * Choose, which FarmSpending to update.
     */
    where: FarmSpendingWhereUniqueInput
  }

  /**
   * FarmSpending updateMany
   */
  export type FarmSpendingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FarmSpendings.
     */
    data: XOR<FarmSpendingUpdateManyMutationInput, FarmSpendingUncheckedUpdateManyInput>
    /**
     * Filter which FarmSpendings to update
     */
    where?: FarmSpendingWhereInput
    /**
     * Limit how many FarmSpendings to update.
     */
    limit?: number
  }

  /**
   * FarmSpending updateManyAndReturn
   */
  export type FarmSpendingUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpending
     */
    select?: FarmSpendingSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpending
     */
    omit?: FarmSpendingOmit<ExtArgs> | null
    /**
     * The data used to update FarmSpendings.
     */
    data: XOR<FarmSpendingUpdateManyMutationInput, FarmSpendingUncheckedUpdateManyInput>
    /**
     * Filter which FarmSpendings to update
     */
    where?: FarmSpendingWhereInput
    /**
     * Limit how many FarmSpendings to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * FarmSpending upsert
   */
  export type FarmSpendingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpending
     */
    select?: FarmSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpending
     */
    omit?: FarmSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingInclude<ExtArgs> | null
    /**
     * The filter to search for the FarmSpending to update in case it exists.
     */
    where: FarmSpendingWhereUniqueInput
    /**
     * In case the FarmSpending found by the `where` argument doesn't exist, create a new FarmSpending with this data.
     */
    create: XOR<FarmSpendingCreateInput, FarmSpendingUncheckedCreateInput>
    /**
     * In case the FarmSpending was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FarmSpendingUpdateInput, FarmSpendingUncheckedUpdateInput>
  }

  /**
   * FarmSpending delete
   */
  export type FarmSpendingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpending
     */
    select?: FarmSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpending
     */
    omit?: FarmSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingInclude<ExtArgs> | null
    /**
     * Filter which FarmSpending to delete.
     */
    where: FarmSpendingWhereUniqueInput
  }

  /**
   * FarmSpending deleteMany
   */
  export type FarmSpendingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FarmSpendings to delete
     */
    where?: FarmSpendingWhereInput
    /**
     * Limit how many FarmSpendings to delete.
     */
    limit?: number
  }

  /**
   * FarmSpending.farmSpendingCreateByRel
   */
  export type FarmSpending$farmSpendingCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * FarmSpending.farmSpendingUpdateByRel
   */
  export type FarmSpending$farmSpendingUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * FarmSpending without action
   */
  export type FarmSpendingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpending
     */
    select?: FarmSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpending
     */
    omit?: FarmSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingInclude<ExtArgs> | null
  }


  /**
   * Model FarmSpendingHistory
   */

  export type AggregateFarmSpendingHistory = {
    _count: FarmSpendingHistoryCountAggregateOutputType | null
    _avg: FarmSpendingHistoryAvgAggregateOutputType | null
    _sum: FarmSpendingHistorySumAggregateOutputType | null
    _min: FarmSpendingHistoryMinAggregateOutputType | null
    _max: FarmSpendingHistoryMaxAggregateOutputType | null
  }

  export type FarmSpendingHistoryAvgAggregateOutputType = {
    revId: number | null
    id: number | null
    spendingTypeId: number | null
    funds: number | null
    createBy: number | null
    updatedBy: number | null
  }

  export type FarmSpendingHistorySumAggregateOutputType = {
    revId: bigint | null
    id: bigint | null
    spendingTypeId: bigint | null
    funds: bigint | null
    createBy: bigint | null
    updatedBy: bigint | null
  }

  export type FarmSpendingHistoryMinAggregateOutputType = {
    revId: bigint | null
    id: bigint | null
    spendingTypeId: bigint | null
    detail: string | null
    funds: bigint | null
    date: Date | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type FarmSpendingHistoryMaxAggregateOutputType = {
    revId: bigint | null
    id: bigint | null
    spendingTypeId: bigint | null
    detail: string | null
    funds: bigint | null
    date: Date | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type FarmSpendingHistoryCountAggregateOutputType = {
    revId: number
    id: number
    spendingTypeId: number
    detail: number
    funds: number
    date: number
    deleted: number
    createAt: number
    createBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type FarmSpendingHistoryAvgAggregateInputType = {
    revId?: true
    id?: true
    spendingTypeId?: true
    funds?: true
    createBy?: true
    updatedBy?: true
  }

  export type FarmSpendingHistorySumAggregateInputType = {
    revId?: true
    id?: true
    spendingTypeId?: true
    funds?: true
    createBy?: true
    updatedBy?: true
  }

  export type FarmSpendingHistoryMinAggregateInputType = {
    revId?: true
    id?: true
    spendingTypeId?: true
    detail?: true
    funds?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type FarmSpendingHistoryMaxAggregateInputType = {
    revId?: true
    id?: true
    spendingTypeId?: true
    detail?: true
    funds?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type FarmSpendingHistoryCountAggregateInputType = {
    revId?: true
    id?: true
    spendingTypeId?: true
    detail?: true
    funds?: true
    date?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type FarmSpendingHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FarmSpendingHistory to aggregate.
     */
    where?: FarmSpendingHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FarmSpendingHistories to fetch.
     */
    orderBy?: FarmSpendingHistoryOrderByWithRelationInput | FarmSpendingHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FarmSpendingHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FarmSpendingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FarmSpendingHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FarmSpendingHistories
    **/
    _count?: true | FarmSpendingHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FarmSpendingHistoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FarmSpendingHistorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FarmSpendingHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FarmSpendingHistoryMaxAggregateInputType
  }

  export type GetFarmSpendingHistoryAggregateType<T extends FarmSpendingHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregateFarmSpendingHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFarmSpendingHistory[P]>
      : GetScalarType<T[P], AggregateFarmSpendingHistory[P]>
  }




  export type FarmSpendingHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FarmSpendingHistoryWhereInput
    orderBy?: FarmSpendingHistoryOrderByWithAggregationInput | FarmSpendingHistoryOrderByWithAggregationInput[]
    by: FarmSpendingHistoryScalarFieldEnum[] | FarmSpendingHistoryScalarFieldEnum
    having?: FarmSpendingHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FarmSpendingHistoryCountAggregateInputType | true
    _avg?: FarmSpendingHistoryAvgAggregateInputType
    _sum?: FarmSpendingHistorySumAggregateInputType
    _min?: FarmSpendingHistoryMinAggregateInputType
    _max?: FarmSpendingHistoryMaxAggregateInputType
  }

  export type FarmSpendingHistoryGroupByOutputType = {
    revId: bigint
    id: bigint
    spendingTypeId: bigint
    detail: string | null
    funds: bigint
    date: Date
    deleted: boolean
    createAt: Date
    createBy: bigint | null
    updatedAt: Date
    updatedBy: bigint | null
    _count: FarmSpendingHistoryCountAggregateOutputType | null
    _avg: FarmSpendingHistoryAvgAggregateOutputType | null
    _sum: FarmSpendingHistorySumAggregateOutputType | null
    _min: FarmSpendingHistoryMinAggregateOutputType | null
    _max: FarmSpendingHistoryMaxAggregateOutputType | null
  }

  type GetFarmSpendingHistoryGroupByPayload<T extends FarmSpendingHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FarmSpendingHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FarmSpendingHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FarmSpendingHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], FarmSpendingHistoryGroupByOutputType[P]>
        }
      >
    >


  export type FarmSpendingHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    revId?: boolean
    id?: boolean
    spendingTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    farmSpendingTypeHistoryIdRel?: boolean | FarmSpendingTypeDefaultArgs<ExtArgs>
    farmSpendingHistoryCreateByRel?: boolean | FarmSpendingHistory$farmSpendingHistoryCreateByRelArgs<ExtArgs>
    farmSpendingHistoryUpdateByRel?: boolean | FarmSpendingHistory$farmSpendingHistoryUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["farmSpendingHistory"]>

  export type FarmSpendingHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    revId?: boolean
    id?: boolean
    spendingTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    farmSpendingTypeHistoryIdRel?: boolean | FarmSpendingTypeDefaultArgs<ExtArgs>
    farmSpendingHistoryCreateByRel?: boolean | FarmSpendingHistory$farmSpendingHistoryCreateByRelArgs<ExtArgs>
    farmSpendingHistoryUpdateByRel?: boolean | FarmSpendingHistory$farmSpendingHistoryUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["farmSpendingHistory"]>

  export type FarmSpendingHistorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    revId?: boolean
    id?: boolean
    spendingTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    farmSpendingTypeHistoryIdRel?: boolean | FarmSpendingTypeDefaultArgs<ExtArgs>
    farmSpendingHistoryCreateByRel?: boolean | FarmSpendingHistory$farmSpendingHistoryCreateByRelArgs<ExtArgs>
    farmSpendingHistoryUpdateByRel?: boolean | FarmSpendingHistory$farmSpendingHistoryUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["farmSpendingHistory"]>

  export type FarmSpendingHistorySelectScalar = {
    revId?: boolean
    id?: boolean
    spendingTypeId?: boolean
    detail?: boolean
    funds?: boolean
    date?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type FarmSpendingHistoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"revId" | "id" | "spendingTypeId" | "detail" | "funds" | "date" | "deleted" | "createAt" | "createBy" | "updatedAt" | "updatedBy", ExtArgs["result"]["farmSpendingHistory"]>
  export type FarmSpendingHistoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmSpendingTypeHistoryIdRel?: boolean | FarmSpendingTypeDefaultArgs<ExtArgs>
    farmSpendingHistoryCreateByRel?: boolean | FarmSpendingHistory$farmSpendingHistoryCreateByRelArgs<ExtArgs>
    farmSpendingHistoryUpdateByRel?: boolean | FarmSpendingHistory$farmSpendingHistoryUpdateByRelArgs<ExtArgs>
  }
  export type FarmSpendingHistoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmSpendingTypeHistoryIdRel?: boolean | FarmSpendingTypeDefaultArgs<ExtArgs>
    farmSpendingHistoryCreateByRel?: boolean | FarmSpendingHistory$farmSpendingHistoryCreateByRelArgs<ExtArgs>
    farmSpendingHistoryUpdateByRel?: boolean | FarmSpendingHistory$farmSpendingHistoryUpdateByRelArgs<ExtArgs>
  }
  export type FarmSpendingHistoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmSpendingTypeHistoryIdRel?: boolean | FarmSpendingTypeDefaultArgs<ExtArgs>
    farmSpendingHistoryCreateByRel?: boolean | FarmSpendingHistory$farmSpendingHistoryCreateByRelArgs<ExtArgs>
    farmSpendingHistoryUpdateByRel?: boolean | FarmSpendingHistory$farmSpendingHistoryUpdateByRelArgs<ExtArgs>
  }

  export type $FarmSpendingHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FarmSpendingHistory"
    objects: {
      farmSpendingTypeHistoryIdRel: Prisma.$FarmSpendingTypePayload<ExtArgs>
      farmSpendingHistoryCreateByRel: Prisma.$UserPayload<ExtArgs> | null
      farmSpendingHistoryUpdateByRel: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      revId: bigint
      id: bigint
      spendingTypeId: bigint
      detail: string | null
      funds: bigint
      date: Date
      deleted: boolean
      createAt: Date
      createBy: bigint | null
      updatedAt: Date
      updatedBy: bigint | null
    }, ExtArgs["result"]["farmSpendingHistory"]>
    composites: {}
  }

  type FarmSpendingHistoryGetPayload<S extends boolean | null | undefined | FarmSpendingHistoryDefaultArgs> = $Result.GetResult<Prisma.$FarmSpendingHistoryPayload, S>

  type FarmSpendingHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FarmSpendingHistoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FarmSpendingHistoryCountAggregateInputType | true
    }

  export interface FarmSpendingHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FarmSpendingHistory'], meta: { name: 'FarmSpendingHistory' } }
    /**
     * Find zero or one FarmSpendingHistory that matches the filter.
     * @param {FarmSpendingHistoryFindUniqueArgs} args - Arguments to find a FarmSpendingHistory
     * @example
     * // Get one FarmSpendingHistory
     * const farmSpendingHistory = await prisma.farmSpendingHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FarmSpendingHistoryFindUniqueArgs>(args: SelectSubset<T, FarmSpendingHistoryFindUniqueArgs<ExtArgs>>): Prisma__FarmSpendingHistoryClient<$Result.GetResult<Prisma.$FarmSpendingHistoryPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one FarmSpendingHistory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FarmSpendingHistoryFindUniqueOrThrowArgs} args - Arguments to find a FarmSpendingHistory
     * @example
     * // Get one FarmSpendingHistory
     * const farmSpendingHistory = await prisma.farmSpendingHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FarmSpendingHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, FarmSpendingHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FarmSpendingHistoryClient<$Result.GetResult<Prisma.$FarmSpendingHistoryPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first FarmSpendingHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmSpendingHistoryFindFirstArgs} args - Arguments to find a FarmSpendingHistory
     * @example
     * // Get one FarmSpendingHistory
     * const farmSpendingHistory = await prisma.farmSpendingHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FarmSpendingHistoryFindFirstArgs>(args?: SelectSubset<T, FarmSpendingHistoryFindFirstArgs<ExtArgs>>): Prisma__FarmSpendingHistoryClient<$Result.GetResult<Prisma.$FarmSpendingHistoryPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first FarmSpendingHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmSpendingHistoryFindFirstOrThrowArgs} args - Arguments to find a FarmSpendingHistory
     * @example
     * // Get one FarmSpendingHistory
     * const farmSpendingHistory = await prisma.farmSpendingHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FarmSpendingHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, FarmSpendingHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__FarmSpendingHistoryClient<$Result.GetResult<Prisma.$FarmSpendingHistoryPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more FarmSpendingHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmSpendingHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FarmSpendingHistories
     * const farmSpendingHistories = await prisma.farmSpendingHistory.findMany()
     * 
     * // Get first 10 FarmSpendingHistories
     * const farmSpendingHistories = await prisma.farmSpendingHistory.findMany({ take: 10 })
     * 
     * // Only select the `revId`
     * const farmSpendingHistoryWithRevIdOnly = await prisma.farmSpendingHistory.findMany({ select: { revId: true } })
     * 
     */
    findMany<T extends FarmSpendingHistoryFindManyArgs>(args?: SelectSubset<T, FarmSpendingHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmSpendingHistoryPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a FarmSpendingHistory.
     * @param {FarmSpendingHistoryCreateArgs} args - Arguments to create a FarmSpendingHistory.
     * @example
     * // Create one FarmSpendingHistory
     * const FarmSpendingHistory = await prisma.farmSpendingHistory.create({
     *   data: {
     *     // ... data to create a FarmSpendingHistory
     *   }
     * })
     * 
     */
    create<T extends FarmSpendingHistoryCreateArgs>(args: SelectSubset<T, FarmSpendingHistoryCreateArgs<ExtArgs>>): Prisma__FarmSpendingHistoryClient<$Result.GetResult<Prisma.$FarmSpendingHistoryPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many FarmSpendingHistories.
     * @param {FarmSpendingHistoryCreateManyArgs} args - Arguments to create many FarmSpendingHistories.
     * @example
     * // Create many FarmSpendingHistories
     * const farmSpendingHistory = await prisma.farmSpendingHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FarmSpendingHistoryCreateManyArgs>(args?: SelectSubset<T, FarmSpendingHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FarmSpendingHistories and returns the data saved in the database.
     * @param {FarmSpendingHistoryCreateManyAndReturnArgs} args - Arguments to create many FarmSpendingHistories.
     * @example
     * // Create many FarmSpendingHistories
     * const farmSpendingHistory = await prisma.farmSpendingHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FarmSpendingHistories and only return the `revId`
     * const farmSpendingHistoryWithRevIdOnly = await prisma.farmSpendingHistory.createManyAndReturn({
     *   select: { revId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FarmSpendingHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, FarmSpendingHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmSpendingHistoryPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a FarmSpendingHistory.
     * @param {FarmSpendingHistoryDeleteArgs} args - Arguments to delete one FarmSpendingHistory.
     * @example
     * // Delete one FarmSpendingHistory
     * const FarmSpendingHistory = await prisma.farmSpendingHistory.delete({
     *   where: {
     *     // ... filter to delete one FarmSpendingHistory
     *   }
     * })
     * 
     */
    delete<T extends FarmSpendingHistoryDeleteArgs>(args: SelectSubset<T, FarmSpendingHistoryDeleteArgs<ExtArgs>>): Prisma__FarmSpendingHistoryClient<$Result.GetResult<Prisma.$FarmSpendingHistoryPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one FarmSpendingHistory.
     * @param {FarmSpendingHistoryUpdateArgs} args - Arguments to update one FarmSpendingHistory.
     * @example
     * // Update one FarmSpendingHistory
     * const farmSpendingHistory = await prisma.farmSpendingHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FarmSpendingHistoryUpdateArgs>(args: SelectSubset<T, FarmSpendingHistoryUpdateArgs<ExtArgs>>): Prisma__FarmSpendingHistoryClient<$Result.GetResult<Prisma.$FarmSpendingHistoryPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more FarmSpendingHistories.
     * @param {FarmSpendingHistoryDeleteManyArgs} args - Arguments to filter FarmSpendingHistories to delete.
     * @example
     * // Delete a few FarmSpendingHistories
     * const { count } = await prisma.farmSpendingHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FarmSpendingHistoryDeleteManyArgs>(args?: SelectSubset<T, FarmSpendingHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FarmSpendingHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmSpendingHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FarmSpendingHistories
     * const farmSpendingHistory = await prisma.farmSpendingHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FarmSpendingHistoryUpdateManyArgs>(args: SelectSubset<T, FarmSpendingHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FarmSpendingHistories and returns the data updated in the database.
     * @param {FarmSpendingHistoryUpdateManyAndReturnArgs} args - Arguments to update many FarmSpendingHistories.
     * @example
     * // Update many FarmSpendingHistories
     * const farmSpendingHistory = await prisma.farmSpendingHistory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more FarmSpendingHistories and only return the `revId`
     * const farmSpendingHistoryWithRevIdOnly = await prisma.farmSpendingHistory.updateManyAndReturn({
     *   select: { revId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FarmSpendingHistoryUpdateManyAndReturnArgs>(args: SelectSubset<T, FarmSpendingHistoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmSpendingHistoryPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one FarmSpendingHistory.
     * @param {FarmSpendingHistoryUpsertArgs} args - Arguments to update or create a FarmSpendingHistory.
     * @example
     * // Update or create a FarmSpendingHistory
     * const farmSpendingHistory = await prisma.farmSpendingHistory.upsert({
     *   create: {
     *     // ... data to create a FarmSpendingHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FarmSpendingHistory we want to update
     *   }
     * })
     */
    upsert<T extends FarmSpendingHistoryUpsertArgs>(args: SelectSubset<T, FarmSpendingHistoryUpsertArgs<ExtArgs>>): Prisma__FarmSpendingHistoryClient<$Result.GetResult<Prisma.$FarmSpendingHistoryPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of FarmSpendingHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmSpendingHistoryCountArgs} args - Arguments to filter FarmSpendingHistories to count.
     * @example
     * // Count the number of FarmSpendingHistories
     * const count = await prisma.farmSpendingHistory.count({
     *   where: {
     *     // ... the filter for the FarmSpendingHistories we want to count
     *   }
     * })
    **/
    count<T extends FarmSpendingHistoryCountArgs>(
      args?: Subset<T, FarmSpendingHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FarmSpendingHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FarmSpendingHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmSpendingHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FarmSpendingHistoryAggregateArgs>(args: Subset<T, FarmSpendingHistoryAggregateArgs>): Prisma.PrismaPromise<GetFarmSpendingHistoryAggregateType<T>>

    /**
     * Group by FarmSpendingHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmSpendingHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FarmSpendingHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FarmSpendingHistoryGroupByArgs['orderBy'] }
        : { orderBy?: FarmSpendingHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FarmSpendingHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFarmSpendingHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FarmSpendingHistory model
   */
  readonly fields: FarmSpendingHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FarmSpendingHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FarmSpendingHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    farmSpendingTypeHistoryIdRel<T extends FarmSpendingTypeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, FarmSpendingTypeDefaultArgs<ExtArgs>>): Prisma__FarmSpendingTypeClient<$Result.GetResult<Prisma.$FarmSpendingTypePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    farmSpendingHistoryCreateByRel<T extends FarmSpendingHistory$farmSpendingHistoryCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, FarmSpendingHistory$farmSpendingHistoryCreateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    farmSpendingHistoryUpdateByRel<T extends FarmSpendingHistory$farmSpendingHistoryUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, FarmSpendingHistory$farmSpendingHistoryUpdateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FarmSpendingHistory model
   */ 
  interface FarmSpendingHistoryFieldRefs {
    readonly revId: FieldRef<"FarmSpendingHistory", 'BigInt'>
    readonly id: FieldRef<"FarmSpendingHistory", 'BigInt'>
    readonly spendingTypeId: FieldRef<"FarmSpendingHistory", 'BigInt'>
    readonly detail: FieldRef<"FarmSpendingHistory", 'String'>
    readonly funds: FieldRef<"FarmSpendingHistory", 'BigInt'>
    readonly date: FieldRef<"FarmSpendingHistory", 'DateTime'>
    readonly deleted: FieldRef<"FarmSpendingHistory", 'Boolean'>
    readonly createAt: FieldRef<"FarmSpendingHistory", 'DateTime'>
    readonly createBy: FieldRef<"FarmSpendingHistory", 'BigInt'>
    readonly updatedAt: FieldRef<"FarmSpendingHistory", 'DateTime'>
    readonly updatedBy: FieldRef<"FarmSpendingHistory", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * FarmSpendingHistory findUnique
   */
  export type FarmSpendingHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingHistory
     */
    select?: FarmSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingHistory
     */
    omit?: FarmSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which FarmSpendingHistory to fetch.
     */
    where: FarmSpendingHistoryWhereUniqueInput
  }

  /**
   * FarmSpendingHistory findUniqueOrThrow
   */
  export type FarmSpendingHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingHistory
     */
    select?: FarmSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingHistory
     */
    omit?: FarmSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which FarmSpendingHistory to fetch.
     */
    where: FarmSpendingHistoryWhereUniqueInput
  }

  /**
   * FarmSpendingHistory findFirst
   */
  export type FarmSpendingHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingHistory
     */
    select?: FarmSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingHistory
     */
    omit?: FarmSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which FarmSpendingHistory to fetch.
     */
    where?: FarmSpendingHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FarmSpendingHistories to fetch.
     */
    orderBy?: FarmSpendingHistoryOrderByWithRelationInput | FarmSpendingHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FarmSpendingHistories.
     */
    cursor?: FarmSpendingHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FarmSpendingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FarmSpendingHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FarmSpendingHistories.
     */
    distinct?: FarmSpendingHistoryScalarFieldEnum | FarmSpendingHistoryScalarFieldEnum[]
  }

  /**
   * FarmSpendingHistory findFirstOrThrow
   */
  export type FarmSpendingHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingHistory
     */
    select?: FarmSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingHistory
     */
    omit?: FarmSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which FarmSpendingHistory to fetch.
     */
    where?: FarmSpendingHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FarmSpendingHistories to fetch.
     */
    orderBy?: FarmSpendingHistoryOrderByWithRelationInput | FarmSpendingHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FarmSpendingHistories.
     */
    cursor?: FarmSpendingHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FarmSpendingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FarmSpendingHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FarmSpendingHistories.
     */
    distinct?: FarmSpendingHistoryScalarFieldEnum | FarmSpendingHistoryScalarFieldEnum[]
  }

  /**
   * FarmSpendingHistory findMany
   */
  export type FarmSpendingHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingHistory
     */
    select?: FarmSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingHistory
     */
    omit?: FarmSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which FarmSpendingHistories to fetch.
     */
    where?: FarmSpendingHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FarmSpendingHistories to fetch.
     */
    orderBy?: FarmSpendingHistoryOrderByWithRelationInput | FarmSpendingHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FarmSpendingHistories.
     */
    cursor?: FarmSpendingHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FarmSpendingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FarmSpendingHistories.
     */
    skip?: number
    distinct?: FarmSpendingHistoryScalarFieldEnum | FarmSpendingHistoryScalarFieldEnum[]
  }

  /**
   * FarmSpendingHistory create
   */
  export type FarmSpendingHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingHistory
     */
    select?: FarmSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingHistory
     */
    omit?: FarmSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingHistoryInclude<ExtArgs> | null
    /**
     * The data needed to create a FarmSpendingHistory.
     */
    data: XOR<FarmSpendingHistoryCreateInput, FarmSpendingHistoryUncheckedCreateInput>
  }

  /**
   * FarmSpendingHistory createMany
   */
  export type FarmSpendingHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FarmSpendingHistories.
     */
    data: FarmSpendingHistoryCreateManyInput | FarmSpendingHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FarmSpendingHistory createManyAndReturn
   */
  export type FarmSpendingHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingHistory
     */
    select?: FarmSpendingHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingHistory
     */
    omit?: FarmSpendingHistoryOmit<ExtArgs> | null
    /**
     * The data used to create many FarmSpendingHistories.
     */
    data: FarmSpendingHistoryCreateManyInput | FarmSpendingHistoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingHistoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FarmSpendingHistory update
   */
  export type FarmSpendingHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingHistory
     */
    select?: FarmSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingHistory
     */
    omit?: FarmSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingHistoryInclude<ExtArgs> | null
    /**
     * The data needed to update a FarmSpendingHistory.
     */
    data: XOR<FarmSpendingHistoryUpdateInput, FarmSpendingHistoryUncheckedUpdateInput>
    /**
     * Choose, which FarmSpendingHistory to update.
     */
    where: FarmSpendingHistoryWhereUniqueInput
  }

  /**
   * FarmSpendingHistory updateMany
   */
  export type FarmSpendingHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FarmSpendingHistories.
     */
    data: XOR<FarmSpendingHistoryUpdateManyMutationInput, FarmSpendingHistoryUncheckedUpdateManyInput>
    /**
     * Filter which FarmSpendingHistories to update
     */
    where?: FarmSpendingHistoryWhereInput
    /**
     * Limit how many FarmSpendingHistories to update.
     */
    limit?: number
  }

  /**
   * FarmSpendingHistory updateManyAndReturn
   */
  export type FarmSpendingHistoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingHistory
     */
    select?: FarmSpendingHistorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingHistory
     */
    omit?: FarmSpendingHistoryOmit<ExtArgs> | null
    /**
     * The data used to update FarmSpendingHistories.
     */
    data: XOR<FarmSpendingHistoryUpdateManyMutationInput, FarmSpendingHistoryUncheckedUpdateManyInput>
    /**
     * Filter which FarmSpendingHistories to update
     */
    where?: FarmSpendingHistoryWhereInput
    /**
     * Limit how many FarmSpendingHistories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingHistoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * FarmSpendingHistory upsert
   */
  export type FarmSpendingHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingHistory
     */
    select?: FarmSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingHistory
     */
    omit?: FarmSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingHistoryInclude<ExtArgs> | null
    /**
     * The filter to search for the FarmSpendingHistory to update in case it exists.
     */
    where: FarmSpendingHistoryWhereUniqueInput
    /**
     * In case the FarmSpendingHistory found by the `where` argument doesn't exist, create a new FarmSpendingHistory with this data.
     */
    create: XOR<FarmSpendingHistoryCreateInput, FarmSpendingHistoryUncheckedCreateInput>
    /**
     * In case the FarmSpendingHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FarmSpendingHistoryUpdateInput, FarmSpendingHistoryUncheckedUpdateInput>
  }

  /**
   * FarmSpendingHistory delete
   */
  export type FarmSpendingHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingHistory
     */
    select?: FarmSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingHistory
     */
    omit?: FarmSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingHistoryInclude<ExtArgs> | null
    /**
     * Filter which FarmSpendingHistory to delete.
     */
    where: FarmSpendingHistoryWhereUniqueInput
  }

  /**
   * FarmSpendingHistory deleteMany
   */
  export type FarmSpendingHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FarmSpendingHistories to delete
     */
    where?: FarmSpendingHistoryWhereInput
    /**
     * Limit how many FarmSpendingHistories to delete.
     */
    limit?: number
  }

  /**
   * FarmSpendingHistory.farmSpendingHistoryCreateByRel
   */
  export type FarmSpendingHistory$farmSpendingHistoryCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * FarmSpendingHistory.farmSpendingHistoryUpdateByRel
   */
  export type FarmSpendingHistory$farmSpendingHistoryUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * FarmSpendingHistory without action
   */
  export type FarmSpendingHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingHistory
     */
    select?: FarmSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingHistory
     */
    omit?: FarmSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingHistoryInclude<ExtArgs> | null
  }


  /**
   * Model FarmSpendingType
   */

  export type AggregateFarmSpendingType = {
    _count: FarmSpendingTypeCountAggregateOutputType | null
    _avg: FarmSpendingTypeAvgAggregateOutputType | null
    _sum: FarmSpendingTypeSumAggregateOutputType | null
    _min: FarmSpendingTypeMinAggregateOutputType | null
    _max: FarmSpendingTypeMaxAggregateOutputType | null
  }

  export type FarmSpendingTypeAvgAggregateOutputType = {
    id: number | null
    createBy: number | null
    updatedBy: number | null
  }

  export type FarmSpendingTypeSumAggregateOutputType = {
    id: bigint | null
    createBy: bigint | null
    updatedBy: bigint | null
  }

  export type FarmSpendingTypeMinAggregateOutputType = {
    id: bigint | null
    spendingTypeName: string | null
    code: string | null
    description: string | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type FarmSpendingTypeMaxAggregateOutputType = {
    id: bigint | null
    spendingTypeName: string | null
    code: string | null
    description: string | null
    deleted: boolean | null
    createAt: Date | null
    createBy: bigint | null
    updatedAt: Date | null
    updatedBy: bigint | null
  }

  export type FarmSpendingTypeCountAggregateOutputType = {
    id: number
    spendingTypeName: number
    code: number
    description: number
    deleted: number
    createAt: number
    createBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type FarmSpendingTypeAvgAggregateInputType = {
    id?: true
    createBy?: true
    updatedBy?: true
  }

  export type FarmSpendingTypeSumAggregateInputType = {
    id?: true
    createBy?: true
    updatedBy?: true
  }

  export type FarmSpendingTypeMinAggregateInputType = {
    id?: true
    spendingTypeName?: true
    code?: true
    description?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type FarmSpendingTypeMaxAggregateInputType = {
    id?: true
    spendingTypeName?: true
    code?: true
    description?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type FarmSpendingTypeCountAggregateInputType = {
    id?: true
    spendingTypeName?: true
    code?: true
    description?: true
    deleted?: true
    createAt?: true
    createBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type FarmSpendingTypeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FarmSpendingType to aggregate.
     */
    where?: FarmSpendingTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FarmSpendingTypes to fetch.
     */
    orderBy?: FarmSpendingTypeOrderByWithRelationInput | FarmSpendingTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FarmSpendingTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FarmSpendingTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FarmSpendingTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FarmSpendingTypes
    **/
    _count?: true | FarmSpendingTypeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FarmSpendingTypeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FarmSpendingTypeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FarmSpendingTypeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FarmSpendingTypeMaxAggregateInputType
  }

  export type GetFarmSpendingTypeAggregateType<T extends FarmSpendingTypeAggregateArgs> = {
        [P in keyof T & keyof AggregateFarmSpendingType]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFarmSpendingType[P]>
      : GetScalarType<T[P], AggregateFarmSpendingType[P]>
  }




  export type FarmSpendingTypeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FarmSpendingTypeWhereInput
    orderBy?: FarmSpendingTypeOrderByWithAggregationInput | FarmSpendingTypeOrderByWithAggregationInput[]
    by: FarmSpendingTypeScalarFieldEnum[] | FarmSpendingTypeScalarFieldEnum
    having?: FarmSpendingTypeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FarmSpendingTypeCountAggregateInputType | true
    _avg?: FarmSpendingTypeAvgAggregateInputType
    _sum?: FarmSpendingTypeSumAggregateInputType
    _min?: FarmSpendingTypeMinAggregateInputType
    _max?: FarmSpendingTypeMaxAggregateInputType
  }

  export type FarmSpendingTypeGroupByOutputType = {
    id: bigint
    spendingTypeName: string
    code: string
    description: string
    deleted: boolean
    createAt: Date
    createBy: bigint | null
    updatedAt: Date
    updatedBy: bigint | null
    _count: FarmSpendingTypeCountAggregateOutputType | null
    _avg: FarmSpendingTypeAvgAggregateOutputType | null
    _sum: FarmSpendingTypeSumAggregateOutputType | null
    _min: FarmSpendingTypeMinAggregateOutputType | null
    _max: FarmSpendingTypeMaxAggregateOutputType | null
  }

  type GetFarmSpendingTypeGroupByPayload<T extends FarmSpendingTypeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FarmSpendingTypeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FarmSpendingTypeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FarmSpendingTypeGroupByOutputType[P]>
            : GetScalarType<T[P], FarmSpendingTypeGroupByOutputType[P]>
        }
      >
    >


  export type FarmSpendingTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    spendingTypeName?: boolean
    code?: boolean
    description?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    farmSpendingTypeCreateByRel?: boolean | FarmSpendingType$farmSpendingTypeCreateByRelArgs<ExtArgs>
    farmSpendingTypeUpdateByRel?: boolean | FarmSpendingType$farmSpendingTypeUpdateByRelArgs<ExtArgs>
    farmSpendingTypeIdRel?: boolean | FarmSpendingType$farmSpendingTypeIdRelArgs<ExtArgs>
    farmSpendingTypeHistoryIdRel?: boolean | FarmSpendingType$farmSpendingTypeHistoryIdRelArgs<ExtArgs>
    _count?: boolean | FarmSpendingTypeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["farmSpendingType"]>

  export type FarmSpendingTypeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    spendingTypeName?: boolean
    code?: boolean
    description?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    farmSpendingTypeCreateByRel?: boolean | FarmSpendingType$farmSpendingTypeCreateByRelArgs<ExtArgs>
    farmSpendingTypeUpdateByRel?: boolean | FarmSpendingType$farmSpendingTypeUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["farmSpendingType"]>

  export type FarmSpendingTypeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    spendingTypeName?: boolean
    code?: boolean
    description?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    farmSpendingTypeCreateByRel?: boolean | FarmSpendingType$farmSpendingTypeCreateByRelArgs<ExtArgs>
    farmSpendingTypeUpdateByRel?: boolean | FarmSpendingType$farmSpendingTypeUpdateByRelArgs<ExtArgs>
  }, ExtArgs["result"]["farmSpendingType"]>

  export type FarmSpendingTypeSelectScalar = {
    id?: boolean
    spendingTypeName?: boolean
    code?: boolean
    description?: boolean
    deleted?: boolean
    createAt?: boolean
    createBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type FarmSpendingTypeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "spendingTypeName" | "code" | "description" | "deleted" | "createAt" | "createBy" | "updatedAt" | "updatedBy", ExtArgs["result"]["farmSpendingType"]>
  export type FarmSpendingTypeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmSpendingTypeCreateByRel?: boolean | FarmSpendingType$farmSpendingTypeCreateByRelArgs<ExtArgs>
    farmSpendingTypeUpdateByRel?: boolean | FarmSpendingType$farmSpendingTypeUpdateByRelArgs<ExtArgs>
    farmSpendingTypeIdRel?: boolean | FarmSpendingType$farmSpendingTypeIdRelArgs<ExtArgs>
    farmSpendingTypeHistoryIdRel?: boolean | FarmSpendingType$farmSpendingTypeHistoryIdRelArgs<ExtArgs>
    _count?: boolean | FarmSpendingTypeCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type FarmSpendingTypeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmSpendingTypeCreateByRel?: boolean | FarmSpendingType$farmSpendingTypeCreateByRelArgs<ExtArgs>
    farmSpendingTypeUpdateByRel?: boolean | FarmSpendingType$farmSpendingTypeUpdateByRelArgs<ExtArgs>
  }
  export type FarmSpendingTypeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmSpendingTypeCreateByRel?: boolean | FarmSpendingType$farmSpendingTypeCreateByRelArgs<ExtArgs>
    farmSpendingTypeUpdateByRel?: boolean | FarmSpendingType$farmSpendingTypeUpdateByRelArgs<ExtArgs>
  }

  export type $FarmSpendingTypePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FarmSpendingType"
    objects: {
      farmSpendingTypeCreateByRel: Prisma.$UserPayload<ExtArgs> | null
      farmSpendingTypeUpdateByRel: Prisma.$UserPayload<ExtArgs> | null
      farmSpendingTypeIdRel: Prisma.$FarmSpendingPayload<ExtArgs>[]
      farmSpendingTypeHistoryIdRel: Prisma.$FarmSpendingHistoryPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      spendingTypeName: string
      code: string
      description: string
      deleted: boolean
      createAt: Date
      createBy: bigint | null
      updatedAt: Date
      updatedBy: bigint | null
    }, ExtArgs["result"]["farmSpendingType"]>
    composites: {}
  }

  type FarmSpendingTypeGetPayload<S extends boolean | null | undefined | FarmSpendingTypeDefaultArgs> = $Result.GetResult<Prisma.$FarmSpendingTypePayload, S>

  type FarmSpendingTypeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FarmSpendingTypeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FarmSpendingTypeCountAggregateInputType | true
    }

  export interface FarmSpendingTypeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FarmSpendingType'], meta: { name: 'FarmSpendingType' } }
    /**
     * Find zero or one FarmSpendingType that matches the filter.
     * @param {FarmSpendingTypeFindUniqueArgs} args - Arguments to find a FarmSpendingType
     * @example
     * // Get one FarmSpendingType
     * const farmSpendingType = await prisma.farmSpendingType.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FarmSpendingTypeFindUniqueArgs>(args: SelectSubset<T, FarmSpendingTypeFindUniqueArgs<ExtArgs>>): Prisma__FarmSpendingTypeClient<$Result.GetResult<Prisma.$FarmSpendingTypePayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one FarmSpendingType that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FarmSpendingTypeFindUniqueOrThrowArgs} args - Arguments to find a FarmSpendingType
     * @example
     * // Get one FarmSpendingType
     * const farmSpendingType = await prisma.farmSpendingType.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FarmSpendingTypeFindUniqueOrThrowArgs>(args: SelectSubset<T, FarmSpendingTypeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FarmSpendingTypeClient<$Result.GetResult<Prisma.$FarmSpendingTypePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first FarmSpendingType that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmSpendingTypeFindFirstArgs} args - Arguments to find a FarmSpendingType
     * @example
     * // Get one FarmSpendingType
     * const farmSpendingType = await prisma.farmSpendingType.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FarmSpendingTypeFindFirstArgs>(args?: SelectSubset<T, FarmSpendingTypeFindFirstArgs<ExtArgs>>): Prisma__FarmSpendingTypeClient<$Result.GetResult<Prisma.$FarmSpendingTypePayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first FarmSpendingType that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmSpendingTypeFindFirstOrThrowArgs} args - Arguments to find a FarmSpendingType
     * @example
     * // Get one FarmSpendingType
     * const farmSpendingType = await prisma.farmSpendingType.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FarmSpendingTypeFindFirstOrThrowArgs>(args?: SelectSubset<T, FarmSpendingTypeFindFirstOrThrowArgs<ExtArgs>>): Prisma__FarmSpendingTypeClient<$Result.GetResult<Prisma.$FarmSpendingTypePayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more FarmSpendingTypes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmSpendingTypeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FarmSpendingTypes
     * const farmSpendingTypes = await prisma.farmSpendingType.findMany()
     * 
     * // Get first 10 FarmSpendingTypes
     * const farmSpendingTypes = await prisma.farmSpendingType.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const farmSpendingTypeWithIdOnly = await prisma.farmSpendingType.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FarmSpendingTypeFindManyArgs>(args?: SelectSubset<T, FarmSpendingTypeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmSpendingTypePayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a FarmSpendingType.
     * @param {FarmSpendingTypeCreateArgs} args - Arguments to create a FarmSpendingType.
     * @example
     * // Create one FarmSpendingType
     * const FarmSpendingType = await prisma.farmSpendingType.create({
     *   data: {
     *     // ... data to create a FarmSpendingType
     *   }
     * })
     * 
     */
    create<T extends FarmSpendingTypeCreateArgs>(args: SelectSubset<T, FarmSpendingTypeCreateArgs<ExtArgs>>): Prisma__FarmSpendingTypeClient<$Result.GetResult<Prisma.$FarmSpendingTypePayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many FarmSpendingTypes.
     * @param {FarmSpendingTypeCreateManyArgs} args - Arguments to create many FarmSpendingTypes.
     * @example
     * // Create many FarmSpendingTypes
     * const farmSpendingType = await prisma.farmSpendingType.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FarmSpendingTypeCreateManyArgs>(args?: SelectSubset<T, FarmSpendingTypeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FarmSpendingTypes and returns the data saved in the database.
     * @param {FarmSpendingTypeCreateManyAndReturnArgs} args - Arguments to create many FarmSpendingTypes.
     * @example
     * // Create many FarmSpendingTypes
     * const farmSpendingType = await prisma.farmSpendingType.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FarmSpendingTypes and only return the `id`
     * const farmSpendingTypeWithIdOnly = await prisma.farmSpendingType.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FarmSpendingTypeCreateManyAndReturnArgs>(args?: SelectSubset<T, FarmSpendingTypeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmSpendingTypePayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a FarmSpendingType.
     * @param {FarmSpendingTypeDeleteArgs} args - Arguments to delete one FarmSpendingType.
     * @example
     * // Delete one FarmSpendingType
     * const FarmSpendingType = await prisma.farmSpendingType.delete({
     *   where: {
     *     // ... filter to delete one FarmSpendingType
     *   }
     * })
     * 
     */
    delete<T extends FarmSpendingTypeDeleteArgs>(args: SelectSubset<T, FarmSpendingTypeDeleteArgs<ExtArgs>>): Prisma__FarmSpendingTypeClient<$Result.GetResult<Prisma.$FarmSpendingTypePayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one FarmSpendingType.
     * @param {FarmSpendingTypeUpdateArgs} args - Arguments to update one FarmSpendingType.
     * @example
     * // Update one FarmSpendingType
     * const farmSpendingType = await prisma.farmSpendingType.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FarmSpendingTypeUpdateArgs>(args: SelectSubset<T, FarmSpendingTypeUpdateArgs<ExtArgs>>): Prisma__FarmSpendingTypeClient<$Result.GetResult<Prisma.$FarmSpendingTypePayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more FarmSpendingTypes.
     * @param {FarmSpendingTypeDeleteManyArgs} args - Arguments to filter FarmSpendingTypes to delete.
     * @example
     * // Delete a few FarmSpendingTypes
     * const { count } = await prisma.farmSpendingType.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FarmSpendingTypeDeleteManyArgs>(args?: SelectSubset<T, FarmSpendingTypeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FarmSpendingTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmSpendingTypeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FarmSpendingTypes
     * const farmSpendingType = await prisma.farmSpendingType.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FarmSpendingTypeUpdateManyArgs>(args: SelectSubset<T, FarmSpendingTypeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FarmSpendingTypes and returns the data updated in the database.
     * @param {FarmSpendingTypeUpdateManyAndReturnArgs} args - Arguments to update many FarmSpendingTypes.
     * @example
     * // Update many FarmSpendingTypes
     * const farmSpendingType = await prisma.farmSpendingType.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more FarmSpendingTypes and only return the `id`
     * const farmSpendingTypeWithIdOnly = await prisma.farmSpendingType.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FarmSpendingTypeUpdateManyAndReturnArgs>(args: SelectSubset<T, FarmSpendingTypeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmSpendingTypePayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one FarmSpendingType.
     * @param {FarmSpendingTypeUpsertArgs} args - Arguments to update or create a FarmSpendingType.
     * @example
     * // Update or create a FarmSpendingType
     * const farmSpendingType = await prisma.farmSpendingType.upsert({
     *   create: {
     *     // ... data to create a FarmSpendingType
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FarmSpendingType we want to update
     *   }
     * })
     */
    upsert<T extends FarmSpendingTypeUpsertArgs>(args: SelectSubset<T, FarmSpendingTypeUpsertArgs<ExtArgs>>): Prisma__FarmSpendingTypeClient<$Result.GetResult<Prisma.$FarmSpendingTypePayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of FarmSpendingTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmSpendingTypeCountArgs} args - Arguments to filter FarmSpendingTypes to count.
     * @example
     * // Count the number of FarmSpendingTypes
     * const count = await prisma.farmSpendingType.count({
     *   where: {
     *     // ... the filter for the FarmSpendingTypes we want to count
     *   }
     * })
    **/
    count<T extends FarmSpendingTypeCountArgs>(
      args?: Subset<T, FarmSpendingTypeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FarmSpendingTypeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FarmSpendingType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmSpendingTypeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FarmSpendingTypeAggregateArgs>(args: Subset<T, FarmSpendingTypeAggregateArgs>): Prisma.PrismaPromise<GetFarmSpendingTypeAggregateType<T>>

    /**
     * Group by FarmSpendingType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmSpendingTypeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FarmSpendingTypeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FarmSpendingTypeGroupByArgs['orderBy'] }
        : { orderBy?: FarmSpendingTypeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FarmSpendingTypeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFarmSpendingTypeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FarmSpendingType model
   */
  readonly fields: FarmSpendingTypeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FarmSpendingType.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FarmSpendingTypeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    farmSpendingTypeCreateByRel<T extends FarmSpendingType$farmSpendingTypeCreateByRelArgs<ExtArgs> = {}>(args?: Subset<T, FarmSpendingType$farmSpendingTypeCreateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    farmSpendingTypeUpdateByRel<T extends FarmSpendingType$farmSpendingTypeUpdateByRelArgs<ExtArgs> = {}>(args?: Subset<T, FarmSpendingType$farmSpendingTypeUpdateByRelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    farmSpendingTypeIdRel<T extends FarmSpendingType$farmSpendingTypeIdRelArgs<ExtArgs> = {}>(args?: Subset<T, FarmSpendingType$farmSpendingTypeIdRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmSpendingPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    farmSpendingTypeHistoryIdRel<T extends FarmSpendingType$farmSpendingTypeHistoryIdRelArgs<ExtArgs> = {}>(args?: Subset<T, FarmSpendingType$farmSpendingTypeHistoryIdRelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FarmSpendingHistoryPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FarmSpendingType model
   */ 
  interface FarmSpendingTypeFieldRefs {
    readonly id: FieldRef<"FarmSpendingType", 'BigInt'>
    readonly spendingTypeName: FieldRef<"FarmSpendingType", 'String'>
    readonly code: FieldRef<"FarmSpendingType", 'String'>
    readonly description: FieldRef<"FarmSpendingType", 'String'>
    readonly deleted: FieldRef<"FarmSpendingType", 'Boolean'>
    readonly createAt: FieldRef<"FarmSpendingType", 'DateTime'>
    readonly createBy: FieldRef<"FarmSpendingType", 'BigInt'>
    readonly updatedAt: FieldRef<"FarmSpendingType", 'DateTime'>
    readonly updatedBy: FieldRef<"FarmSpendingType", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * FarmSpendingType findUnique
   */
  export type FarmSpendingTypeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingType
     */
    select?: FarmSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingType
     */
    omit?: FarmSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingTypeInclude<ExtArgs> | null
    /**
     * Filter, which FarmSpendingType to fetch.
     */
    where: FarmSpendingTypeWhereUniqueInput
  }

  /**
   * FarmSpendingType findUniqueOrThrow
   */
  export type FarmSpendingTypeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingType
     */
    select?: FarmSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingType
     */
    omit?: FarmSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingTypeInclude<ExtArgs> | null
    /**
     * Filter, which FarmSpendingType to fetch.
     */
    where: FarmSpendingTypeWhereUniqueInput
  }

  /**
   * FarmSpendingType findFirst
   */
  export type FarmSpendingTypeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingType
     */
    select?: FarmSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingType
     */
    omit?: FarmSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingTypeInclude<ExtArgs> | null
    /**
     * Filter, which FarmSpendingType to fetch.
     */
    where?: FarmSpendingTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FarmSpendingTypes to fetch.
     */
    orderBy?: FarmSpendingTypeOrderByWithRelationInput | FarmSpendingTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FarmSpendingTypes.
     */
    cursor?: FarmSpendingTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FarmSpendingTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FarmSpendingTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FarmSpendingTypes.
     */
    distinct?: FarmSpendingTypeScalarFieldEnum | FarmSpendingTypeScalarFieldEnum[]
  }

  /**
   * FarmSpendingType findFirstOrThrow
   */
  export type FarmSpendingTypeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingType
     */
    select?: FarmSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingType
     */
    omit?: FarmSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingTypeInclude<ExtArgs> | null
    /**
     * Filter, which FarmSpendingType to fetch.
     */
    where?: FarmSpendingTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FarmSpendingTypes to fetch.
     */
    orderBy?: FarmSpendingTypeOrderByWithRelationInput | FarmSpendingTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FarmSpendingTypes.
     */
    cursor?: FarmSpendingTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FarmSpendingTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FarmSpendingTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FarmSpendingTypes.
     */
    distinct?: FarmSpendingTypeScalarFieldEnum | FarmSpendingTypeScalarFieldEnum[]
  }

  /**
   * FarmSpendingType findMany
   */
  export type FarmSpendingTypeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingType
     */
    select?: FarmSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingType
     */
    omit?: FarmSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingTypeInclude<ExtArgs> | null
    /**
     * Filter, which FarmSpendingTypes to fetch.
     */
    where?: FarmSpendingTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FarmSpendingTypes to fetch.
     */
    orderBy?: FarmSpendingTypeOrderByWithRelationInput | FarmSpendingTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FarmSpendingTypes.
     */
    cursor?: FarmSpendingTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FarmSpendingTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FarmSpendingTypes.
     */
    skip?: number
    distinct?: FarmSpendingTypeScalarFieldEnum | FarmSpendingTypeScalarFieldEnum[]
  }

  /**
   * FarmSpendingType create
   */
  export type FarmSpendingTypeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingType
     */
    select?: FarmSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingType
     */
    omit?: FarmSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingTypeInclude<ExtArgs> | null
    /**
     * The data needed to create a FarmSpendingType.
     */
    data: XOR<FarmSpendingTypeCreateInput, FarmSpendingTypeUncheckedCreateInput>
  }

  /**
   * FarmSpendingType createMany
   */
  export type FarmSpendingTypeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FarmSpendingTypes.
     */
    data: FarmSpendingTypeCreateManyInput | FarmSpendingTypeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FarmSpendingType createManyAndReturn
   */
  export type FarmSpendingTypeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingType
     */
    select?: FarmSpendingTypeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingType
     */
    omit?: FarmSpendingTypeOmit<ExtArgs> | null
    /**
     * The data used to create many FarmSpendingTypes.
     */
    data: FarmSpendingTypeCreateManyInput | FarmSpendingTypeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingTypeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FarmSpendingType update
   */
  export type FarmSpendingTypeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingType
     */
    select?: FarmSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingType
     */
    omit?: FarmSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingTypeInclude<ExtArgs> | null
    /**
     * The data needed to update a FarmSpendingType.
     */
    data: XOR<FarmSpendingTypeUpdateInput, FarmSpendingTypeUncheckedUpdateInput>
    /**
     * Choose, which FarmSpendingType to update.
     */
    where: FarmSpendingTypeWhereUniqueInput
  }

  /**
   * FarmSpendingType updateMany
   */
  export type FarmSpendingTypeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FarmSpendingTypes.
     */
    data: XOR<FarmSpendingTypeUpdateManyMutationInput, FarmSpendingTypeUncheckedUpdateManyInput>
    /**
     * Filter which FarmSpendingTypes to update
     */
    where?: FarmSpendingTypeWhereInput
    /**
     * Limit how many FarmSpendingTypes to update.
     */
    limit?: number
  }

  /**
   * FarmSpendingType updateManyAndReturn
   */
  export type FarmSpendingTypeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingType
     */
    select?: FarmSpendingTypeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingType
     */
    omit?: FarmSpendingTypeOmit<ExtArgs> | null
    /**
     * The data used to update FarmSpendingTypes.
     */
    data: XOR<FarmSpendingTypeUpdateManyMutationInput, FarmSpendingTypeUncheckedUpdateManyInput>
    /**
     * Filter which FarmSpendingTypes to update
     */
    where?: FarmSpendingTypeWhereInput
    /**
     * Limit how many FarmSpendingTypes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingTypeIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * FarmSpendingType upsert
   */
  export type FarmSpendingTypeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingType
     */
    select?: FarmSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingType
     */
    omit?: FarmSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingTypeInclude<ExtArgs> | null
    /**
     * The filter to search for the FarmSpendingType to update in case it exists.
     */
    where: FarmSpendingTypeWhereUniqueInput
    /**
     * In case the FarmSpendingType found by the `where` argument doesn't exist, create a new FarmSpendingType with this data.
     */
    create: XOR<FarmSpendingTypeCreateInput, FarmSpendingTypeUncheckedCreateInput>
    /**
     * In case the FarmSpendingType was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FarmSpendingTypeUpdateInput, FarmSpendingTypeUncheckedUpdateInput>
  }

  /**
   * FarmSpendingType delete
   */
  export type FarmSpendingTypeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingType
     */
    select?: FarmSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingType
     */
    omit?: FarmSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingTypeInclude<ExtArgs> | null
    /**
     * Filter which FarmSpendingType to delete.
     */
    where: FarmSpendingTypeWhereUniqueInput
  }

  /**
   * FarmSpendingType deleteMany
   */
  export type FarmSpendingTypeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FarmSpendingTypes to delete
     */
    where?: FarmSpendingTypeWhereInput
    /**
     * Limit how many FarmSpendingTypes to delete.
     */
    limit?: number
  }

  /**
   * FarmSpendingType.farmSpendingTypeCreateByRel
   */
  export type FarmSpendingType$farmSpendingTypeCreateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * FarmSpendingType.farmSpendingTypeUpdateByRel
   */
  export type FarmSpendingType$farmSpendingTypeUpdateByRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * FarmSpendingType.farmSpendingTypeIdRel
   */
  export type FarmSpendingType$farmSpendingTypeIdRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpending
     */
    select?: FarmSpendingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpending
     */
    omit?: FarmSpendingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingInclude<ExtArgs> | null
    where?: FarmSpendingWhereInput
    orderBy?: FarmSpendingOrderByWithRelationInput | FarmSpendingOrderByWithRelationInput[]
    cursor?: FarmSpendingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FarmSpendingScalarFieldEnum | FarmSpendingScalarFieldEnum[]
  }

  /**
   * FarmSpendingType.farmSpendingTypeHistoryIdRel
   */
  export type FarmSpendingType$farmSpendingTypeHistoryIdRelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingHistory
     */
    select?: FarmSpendingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingHistory
     */
    omit?: FarmSpendingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingHistoryInclude<ExtArgs> | null
    where?: FarmSpendingHistoryWhereInput
    orderBy?: FarmSpendingHistoryOrderByWithRelationInput | FarmSpendingHistoryOrderByWithRelationInput[]
    cursor?: FarmSpendingHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FarmSpendingHistoryScalarFieldEnum | FarmSpendingHistoryScalarFieldEnum[]
  }

  /**
   * FarmSpendingType without action
   */
  export type FarmSpendingTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmSpendingType
     */
    select?: FarmSpendingTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FarmSpendingType
     */
    omit?: FarmSpendingTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FarmSpendingTypeInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    userName: 'userName',
    fullName: 'fullName',
    email: 'email',
    password: 'password',
    phoneNumber: 'phoneNumber',
    address: 'address',
    role: 'role',
    deleted: 'deleted',
    createAt: 'createAt',
    createBy: 'createBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const UserHistoryScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deleted: 'deleted',
    oldData: 'oldData',
    newData: 'newData'
  };

  export type UserHistoryScalarFieldEnum = (typeof UserHistoryScalarFieldEnum)[keyof typeof UserHistoryScalarFieldEnum]


  export const ChurchIncomeScalarFieldEnum: {
    id: 'id',
    incomeTypeId: 'incomeTypeId',
    detail: 'detail',
    funds: 'funds',
    date: 'date',
    deleted: 'deleted',
    createAt: 'createAt',
    createBy: 'createBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type ChurchIncomeScalarFieldEnum = (typeof ChurchIncomeScalarFieldEnum)[keyof typeof ChurchIncomeScalarFieldEnum]


  export const ChurchIncomeHistoryScalarFieldEnum: {
    revId: 'revId',
    id: 'id',
    incomeTypeId: 'incomeTypeId',
    detail: 'detail',
    funds: 'funds',
    date: 'date',
    deleted: 'deleted',
    createAt: 'createAt',
    createBy: 'createBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type ChurchIncomeHistoryScalarFieldEnum = (typeof ChurchIncomeHistoryScalarFieldEnum)[keyof typeof ChurchIncomeHistoryScalarFieldEnum]


  export const ChurchIncomeTypeScalarFieldEnum: {
    id: 'id',
    incomeTypeName: 'incomeTypeName',
    code: 'code',
    description: 'description',
    deleted: 'deleted',
    createAt: 'createAt',
    createBy: 'createBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type ChurchIncomeTypeScalarFieldEnum = (typeof ChurchIncomeTypeScalarFieldEnum)[keyof typeof ChurchIncomeTypeScalarFieldEnum]


  export const ChurchSpendingScalarFieldEnum: {
    id: 'id',
    spendingTypeId: 'spendingTypeId',
    detail: 'detail',
    funds: 'funds',
    date: 'date',
    bill: 'bill',
    billNumber: 'billNumber',
    deleted: 'deleted',
    createAt: 'createAt',
    createBy: 'createBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type ChurchSpendingScalarFieldEnum = (typeof ChurchSpendingScalarFieldEnum)[keyof typeof ChurchSpendingScalarFieldEnum]


  export const ChurchSpendingHistoryScalarFieldEnum: {
    revId: 'revId',
    id: 'id',
    spendingTypeId: 'spendingTypeId',
    detail: 'detail',
    funds: 'funds',
    date: 'date',
    bill: 'bill',
    billNumber: 'billNumber',
    deleted: 'deleted',
    createAt: 'createAt',
    createBy: 'createBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type ChurchSpendingHistoryScalarFieldEnum = (typeof ChurchSpendingHistoryScalarFieldEnum)[keyof typeof ChurchSpendingHistoryScalarFieldEnum]


  export const ChurchSpendingTypeScalarFieldEnum: {
    id: 'id',
    spendingTypeName: 'spendingTypeName',
    code: 'code',
    description: 'description',
    createAt: 'createAt',
    createBy: 'createBy',
    deleted: 'deleted',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type ChurchSpendingTypeScalarFieldEnum = (typeof ChurchSpendingTypeScalarFieldEnum)[keyof typeof ChurchSpendingTypeScalarFieldEnum]


  export const StoreIncomeScalarFieldEnum: {
    id: 'id',
    incomeTypeId: 'incomeTypeId',
    detail: 'detail',
    funds: 'funds',
    date: 'date',
    deleted: 'deleted',
    createAt: 'createAt',
    createBy: 'createBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type StoreIncomeScalarFieldEnum = (typeof StoreIncomeScalarFieldEnum)[keyof typeof StoreIncomeScalarFieldEnum]


  export const StoreIncomeHistoryScalarFieldEnum: {
    revId: 'revId',
    id: 'id',
    incomeTypeId: 'incomeTypeId',
    detail: 'detail',
    funds: 'funds',
    date: 'date',
    deleted: 'deleted',
    createAt: 'createAt',
    createBy: 'createBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type StoreIncomeHistoryScalarFieldEnum = (typeof StoreIncomeHistoryScalarFieldEnum)[keyof typeof StoreIncomeHistoryScalarFieldEnum]


  export const StoreIncomeTypeScalarFieldEnum: {
    id: 'id',
    incomeTypeName: 'incomeTypeName',
    code: 'code',
    description: 'description',
    deleted: 'deleted',
    createAt: 'createAt',
    createBy: 'createBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type StoreIncomeTypeScalarFieldEnum = (typeof StoreIncomeTypeScalarFieldEnum)[keyof typeof StoreIncomeTypeScalarFieldEnum]


  export const StoreSpendingScalarFieldEnum: {
    id: 'id',
    spendingTypeId: 'spendingTypeId',
    detail: 'detail',
    funds: 'funds',
    date: 'date',
    deleted: 'deleted',
    createAt: 'createAt',
    createBy: 'createBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type StoreSpendingScalarFieldEnum = (typeof StoreSpendingScalarFieldEnum)[keyof typeof StoreSpendingScalarFieldEnum]


  export const StoreSpendingHistoryScalarFieldEnum: {
    revId: 'revId',
    id: 'id',
    spendingTypeId: 'spendingTypeId',
    detail: 'detail',
    funds: 'funds',
    date: 'date',
    deleted: 'deleted',
    createAt: 'createAt',
    createBy: 'createBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type StoreSpendingHistoryScalarFieldEnum = (typeof StoreSpendingHistoryScalarFieldEnum)[keyof typeof StoreSpendingHistoryScalarFieldEnum]


  export const StoreSpendingTypeScalarFieldEnum: {
    id: 'id',
    spendingTypeName: 'spendingTypeName',
    code: 'code',
    description: 'description',
    deleted: 'deleted',
    createAt: 'createAt',
    createBy: 'createBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type StoreSpendingTypeScalarFieldEnum = (typeof StoreSpendingTypeScalarFieldEnum)[keyof typeof StoreSpendingTypeScalarFieldEnum]


  export const FarmIncomeScalarFieldEnum: {
    id: 'id',
    incomeTypeId: 'incomeTypeId',
    detail: 'detail',
    amount: 'amount',
    price: 'price',
    date: 'date',
    deleted: 'deleted',
    createAt: 'createAt',
    createBy: 'createBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type FarmIncomeScalarFieldEnum = (typeof FarmIncomeScalarFieldEnum)[keyof typeof FarmIncomeScalarFieldEnum]


  export const FarmIncomeHistoryScalarFieldEnum: {
    revId: 'revId',
    id: 'id',
    incomeTypeId: 'incomeTypeId',
    detail: 'detail',
    amount: 'amount',
    price: 'price',
    date: 'date',
    deleted: 'deleted',
    createAt: 'createAt',
    createBy: 'createBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type FarmIncomeHistoryScalarFieldEnum = (typeof FarmIncomeHistoryScalarFieldEnum)[keyof typeof FarmIncomeHistoryScalarFieldEnum]


  export const FarmIncomeTypeScalarFieldEnum: {
    id: 'id',
    incomeTypeName: 'incomeTypeName',
    code: 'code',
    description: 'description',
    deleted: 'deleted',
    createAt: 'createAt',
    createBy: 'createBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type FarmIncomeTypeScalarFieldEnum = (typeof FarmIncomeTypeScalarFieldEnum)[keyof typeof FarmIncomeTypeScalarFieldEnum]


  export const FarmSpendingScalarFieldEnum: {
    id: 'id',
    spendingTypeId: 'spendingTypeId',
    detail: 'detail',
    funds: 'funds',
    date: 'date',
    deleted: 'deleted',
    createAt: 'createAt',
    createBy: 'createBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type FarmSpendingScalarFieldEnum = (typeof FarmSpendingScalarFieldEnum)[keyof typeof FarmSpendingScalarFieldEnum]


  export const FarmSpendingHistoryScalarFieldEnum: {
    revId: 'revId',
    id: 'id',
    spendingTypeId: 'spendingTypeId',
    detail: 'detail',
    funds: 'funds',
    date: 'date',
    deleted: 'deleted',
    createAt: 'createAt',
    createBy: 'createBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type FarmSpendingHistoryScalarFieldEnum = (typeof FarmSpendingHistoryScalarFieldEnum)[keyof typeof FarmSpendingHistoryScalarFieldEnum]


  export const FarmSpendingTypeScalarFieldEnum: {
    id: 'id',
    spendingTypeName: 'spendingTypeName',
    code: 'code',
    description: 'description',
    deleted: 'deleted',
    createAt: 'createAt',
    createBy: 'createBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type FarmSpendingTypeScalarFieldEnum = (typeof FarmSpendingTypeScalarFieldEnum)[keyof typeof FarmSpendingTypeScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'BigInt[]'
   */
  export type ListBigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Role'
   */
  export type EnumRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Role'>
    


  /**
   * Reference to a field of type 'Role[]'
   */
  export type ListEnumRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Role[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: BigIntFilter<"User"> | bigint | number
    userName?: StringFilter<"User"> | string
    fullName?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    phoneNumber?: StringFilter<"User"> | string
    address?: StringFilter<"User"> | string
    role?: EnumRoleFilter<"User"> | $Enums.Role
    deleted?: BoolFilter<"User"> | boolean
    createAt?: DateTimeFilter<"User"> | Date | string
    createBy?: BigIntNullableFilter<"User"> | bigint | number | null
    updatedAt?: DateTimeFilter<"User"> | Date | string
    updatedBy?: BigIntNullableFilter<"User"> | bigint | number | null
    createdByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    selfCreatedByRel?: UserListRelationFilter
    updatedByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    selfUpdatedByRel?: UserListRelationFilter
    churchIncomeCreateByRel?: ChurchIncomeListRelationFilter
    churchIncomeUpdateByRel?: ChurchIncomeListRelationFilter
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeListRelationFilter
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeListRelationFilter
    churchSpendingCreateByRel?: ChurchSpendingListRelationFilter
    churchSpendingUpdateByRel?: ChurchSpendingListRelationFilter
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeListRelationFilter
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeListRelationFilter
    storeIncomeCreateByRel?: StoreIncomeListRelationFilter
    storeIncomeUpdateByRel?: StoreIncomeListRelationFilter
    storeIncomeTypeCreateByRel?: StoreIncomeTypeListRelationFilter
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeListRelationFilter
    storeSpendingCreateByRel?: StoreSpendingListRelationFilter
    storeSpendingUpdateByRel?: StoreSpendingListRelationFilter
    storeSpendingTypeCreateByRel?: StoreSpendingTypeListRelationFilter
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeListRelationFilter
    farmIncomeCreateByRel?: FarmIncomeListRelationFilter
    farmIncomeUpdateByRel?: FarmIncomeListRelationFilter
    farmIncomeTypeCreateByRel?: FarmIncomeTypeListRelationFilter
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeListRelationFilter
    farmSpendingCreateByRel?: FarmSpendingListRelationFilter
    farmSpendingUpdateByRel?: FarmSpendingListRelationFilter
    farmSpendingTypeCreateByRel?: FarmSpendingTypeListRelationFilter
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeListRelationFilter
    userHistoryCreatedByRel?: UserHistoryListRelationFilter
    userHistoryUpdatedByRel?: UserHistoryListRelationFilter
    userHistoryIdRel?: UserHistoryListRelationFilter
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryListRelationFilter
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryListRelationFilter
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryListRelationFilter
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryListRelationFilter
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryListRelationFilter
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryListRelationFilter
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryListRelationFilter
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryListRelationFilter
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryListRelationFilter
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryListRelationFilter
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryListRelationFilter
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    userName?: SortOrder
    fullName?: SortOrder
    email?: SortOrder
    password?: SortOrder
    phoneNumber?: SortOrder
    address?: SortOrder
    role?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    createdByRel?: UserOrderByWithRelationInput
    selfCreatedByRel?: UserOrderByRelationAggregateInput
    updatedByRel?: UserOrderByWithRelationInput
    selfUpdatedByRel?: UserOrderByRelationAggregateInput
    churchIncomeCreateByRel?: ChurchIncomeOrderByRelationAggregateInput
    churchIncomeUpdateByRel?: ChurchIncomeOrderByRelationAggregateInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeOrderByRelationAggregateInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeOrderByRelationAggregateInput
    churchSpendingCreateByRel?: ChurchSpendingOrderByRelationAggregateInput
    churchSpendingUpdateByRel?: ChurchSpendingOrderByRelationAggregateInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeOrderByRelationAggregateInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeOrderByRelationAggregateInput
    storeIncomeCreateByRel?: StoreIncomeOrderByRelationAggregateInput
    storeIncomeUpdateByRel?: StoreIncomeOrderByRelationAggregateInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeOrderByRelationAggregateInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeOrderByRelationAggregateInput
    storeSpendingCreateByRel?: StoreSpendingOrderByRelationAggregateInput
    storeSpendingUpdateByRel?: StoreSpendingOrderByRelationAggregateInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeOrderByRelationAggregateInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeOrderByRelationAggregateInput
    farmIncomeCreateByRel?: FarmIncomeOrderByRelationAggregateInput
    farmIncomeUpdateByRel?: FarmIncomeOrderByRelationAggregateInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeOrderByRelationAggregateInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeOrderByRelationAggregateInput
    farmSpendingCreateByRel?: FarmSpendingOrderByRelationAggregateInput
    farmSpendingUpdateByRel?: FarmSpendingOrderByRelationAggregateInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeOrderByRelationAggregateInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeOrderByRelationAggregateInput
    userHistoryCreatedByRel?: UserHistoryOrderByRelationAggregateInput
    userHistoryUpdatedByRel?: UserHistoryOrderByRelationAggregateInput
    userHistoryIdRel?: UserHistoryOrderByRelationAggregateInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryOrderByRelationAggregateInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryOrderByRelationAggregateInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryOrderByRelationAggregateInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryOrderByRelationAggregateInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryOrderByRelationAggregateInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryOrderByRelationAggregateInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryOrderByRelationAggregateInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryOrderByRelationAggregateInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryOrderByRelationAggregateInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryOrderByRelationAggregateInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryOrderByRelationAggregateInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    userName?: StringFilter<"User"> | string
    fullName?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    phoneNumber?: StringFilter<"User"> | string
    address?: StringFilter<"User"> | string
    role?: EnumRoleFilter<"User"> | $Enums.Role
    deleted?: BoolFilter<"User"> | boolean
    createAt?: DateTimeFilter<"User"> | Date | string
    createBy?: BigIntNullableFilter<"User"> | bigint | number | null
    updatedAt?: DateTimeFilter<"User"> | Date | string
    updatedBy?: BigIntNullableFilter<"User"> | bigint | number | null
    createdByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    selfCreatedByRel?: UserListRelationFilter
    updatedByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    selfUpdatedByRel?: UserListRelationFilter
    churchIncomeCreateByRel?: ChurchIncomeListRelationFilter
    churchIncomeUpdateByRel?: ChurchIncomeListRelationFilter
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeListRelationFilter
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeListRelationFilter
    churchSpendingCreateByRel?: ChurchSpendingListRelationFilter
    churchSpendingUpdateByRel?: ChurchSpendingListRelationFilter
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeListRelationFilter
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeListRelationFilter
    storeIncomeCreateByRel?: StoreIncomeListRelationFilter
    storeIncomeUpdateByRel?: StoreIncomeListRelationFilter
    storeIncomeTypeCreateByRel?: StoreIncomeTypeListRelationFilter
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeListRelationFilter
    storeSpendingCreateByRel?: StoreSpendingListRelationFilter
    storeSpendingUpdateByRel?: StoreSpendingListRelationFilter
    storeSpendingTypeCreateByRel?: StoreSpendingTypeListRelationFilter
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeListRelationFilter
    farmIncomeCreateByRel?: FarmIncomeListRelationFilter
    farmIncomeUpdateByRel?: FarmIncomeListRelationFilter
    farmIncomeTypeCreateByRel?: FarmIncomeTypeListRelationFilter
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeListRelationFilter
    farmSpendingCreateByRel?: FarmSpendingListRelationFilter
    farmSpendingUpdateByRel?: FarmSpendingListRelationFilter
    farmSpendingTypeCreateByRel?: FarmSpendingTypeListRelationFilter
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeListRelationFilter
    userHistoryCreatedByRel?: UserHistoryListRelationFilter
    userHistoryUpdatedByRel?: UserHistoryListRelationFilter
    userHistoryIdRel?: UserHistoryListRelationFilter
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryListRelationFilter
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryListRelationFilter
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryListRelationFilter
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryListRelationFilter
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryListRelationFilter
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryListRelationFilter
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryListRelationFilter
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryListRelationFilter
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryListRelationFilter
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryListRelationFilter
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryListRelationFilter
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    userName?: SortOrder
    fullName?: SortOrder
    email?: SortOrder
    password?: SortOrder
    phoneNumber?: SortOrder
    address?: SortOrder
    role?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"User"> | bigint | number
    userName?: StringWithAggregatesFilter<"User"> | string
    fullName?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    phoneNumber?: StringWithAggregatesFilter<"User"> | string
    address?: StringWithAggregatesFilter<"User"> | string
    role?: EnumRoleWithAggregatesFilter<"User"> | $Enums.Role
    deleted?: BoolWithAggregatesFilter<"User"> | boolean
    createAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    createBy?: BigIntNullableWithAggregatesFilter<"User"> | bigint | number | null
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedBy?: BigIntNullableWithAggregatesFilter<"User"> | bigint | number | null
  }

  export type UserHistoryWhereInput = {
    AND?: UserHistoryWhereInput | UserHistoryWhereInput[]
    OR?: UserHistoryWhereInput[]
    NOT?: UserHistoryWhereInput | UserHistoryWhereInput[]
    id?: BigIntFilter<"UserHistory"> | bigint | number
    userId?: BigIntFilter<"UserHistory"> | bigint | number
    createdAt?: DateTimeFilter<"UserHistory"> | Date | string
    createdBy?: BigIntNullableFilter<"UserHistory"> | bigint | number | null
    updatedAt?: DateTimeFilter<"UserHistory"> | Date | string
    updatedBy?: BigIntNullableFilter<"UserHistory"> | bigint | number | null
    deleted?: BoolFilter<"UserHistory"> | boolean
    oldData?: JsonFilter<"UserHistory">
    newData?: JsonFilter<"UserHistory">
    userHistoryCreatedByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    userHistoryUpdatedByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    userHistoryIdRel?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type UserHistoryOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deleted?: SortOrder
    oldData?: SortOrder
    newData?: SortOrder
    userHistoryCreatedByRel?: UserOrderByWithRelationInput
    userHistoryUpdatedByRel?: UserOrderByWithRelationInput
    userHistoryIdRel?: UserOrderByWithRelationInput
  }

  export type UserHistoryWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: UserHistoryWhereInput | UserHistoryWhereInput[]
    OR?: UserHistoryWhereInput[]
    NOT?: UserHistoryWhereInput | UserHistoryWhereInput[]
    userId?: BigIntFilter<"UserHistory"> | bigint | number
    createdAt?: DateTimeFilter<"UserHistory"> | Date | string
    createdBy?: BigIntNullableFilter<"UserHistory"> | bigint | number | null
    updatedAt?: DateTimeFilter<"UserHistory"> | Date | string
    updatedBy?: BigIntNullableFilter<"UserHistory"> | bigint | number | null
    deleted?: BoolFilter<"UserHistory"> | boolean
    oldData?: JsonFilter<"UserHistory">
    newData?: JsonFilter<"UserHistory">
    userHistoryCreatedByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    userHistoryUpdatedByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    userHistoryIdRel?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type UserHistoryOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deleted?: SortOrder
    oldData?: SortOrder
    newData?: SortOrder
    _count?: UserHistoryCountOrderByAggregateInput
    _avg?: UserHistoryAvgOrderByAggregateInput
    _max?: UserHistoryMaxOrderByAggregateInput
    _min?: UserHistoryMinOrderByAggregateInput
    _sum?: UserHistorySumOrderByAggregateInput
  }

  export type UserHistoryScalarWhereWithAggregatesInput = {
    AND?: UserHistoryScalarWhereWithAggregatesInput | UserHistoryScalarWhereWithAggregatesInput[]
    OR?: UserHistoryScalarWhereWithAggregatesInput[]
    NOT?: UserHistoryScalarWhereWithAggregatesInput | UserHistoryScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"UserHistory"> | bigint | number
    userId?: BigIntWithAggregatesFilter<"UserHistory"> | bigint | number
    createdAt?: DateTimeWithAggregatesFilter<"UserHistory"> | Date | string
    createdBy?: BigIntNullableWithAggregatesFilter<"UserHistory"> | bigint | number | null
    updatedAt?: DateTimeWithAggregatesFilter<"UserHistory"> | Date | string
    updatedBy?: BigIntNullableWithAggregatesFilter<"UserHistory"> | bigint | number | null
    deleted?: BoolWithAggregatesFilter<"UserHistory"> | boolean
    oldData?: JsonWithAggregatesFilter<"UserHistory">
    newData?: JsonWithAggregatesFilter<"UserHistory">
  }

  export type ChurchIncomeWhereInput = {
    AND?: ChurchIncomeWhereInput | ChurchIncomeWhereInput[]
    OR?: ChurchIncomeWhereInput[]
    NOT?: ChurchIncomeWhereInput | ChurchIncomeWhereInput[]
    id?: BigIntFilter<"ChurchIncome"> | bigint | number
    incomeTypeId?: BigIntFilter<"ChurchIncome"> | bigint | number
    detail?: StringNullableFilter<"ChurchIncome"> | string | null
    funds?: BigIntFilter<"ChurchIncome"> | bigint | number
    date?: DateTimeFilter<"ChurchIncome"> | Date | string
    deleted?: BoolFilter<"ChurchIncome"> | boolean
    createAt?: DateTimeFilter<"ChurchIncome"> | Date | string
    createBy?: BigIntNullableFilter<"ChurchIncome"> | bigint | number | null
    updatedAt?: DateTimeFilter<"ChurchIncome"> | Date | string
    updatedBy?: BigIntNullableFilter<"ChurchIncome"> | bigint | number | null
    churchIncomeTypeIdRel?: XOR<ChurchIncomeTypeScalarRelationFilter, ChurchIncomeTypeWhereInput>
    churchIncomeCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    churchIncomeUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type ChurchIncomeOrderByWithRelationInput = {
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrderInput | SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    churchIncomeTypeIdRel?: ChurchIncomeTypeOrderByWithRelationInput
    churchIncomeCreateByRel?: UserOrderByWithRelationInput
    churchIncomeUpdateByRel?: UserOrderByWithRelationInput
  }

  export type ChurchIncomeWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: ChurchIncomeWhereInput | ChurchIncomeWhereInput[]
    OR?: ChurchIncomeWhereInput[]
    NOT?: ChurchIncomeWhereInput | ChurchIncomeWhereInput[]
    incomeTypeId?: BigIntFilter<"ChurchIncome"> | bigint | number
    detail?: StringNullableFilter<"ChurchIncome"> | string | null
    funds?: BigIntFilter<"ChurchIncome"> | bigint | number
    date?: DateTimeFilter<"ChurchIncome"> | Date | string
    deleted?: BoolFilter<"ChurchIncome"> | boolean
    createAt?: DateTimeFilter<"ChurchIncome"> | Date | string
    createBy?: BigIntNullableFilter<"ChurchIncome"> | bigint | number | null
    updatedAt?: DateTimeFilter<"ChurchIncome"> | Date | string
    updatedBy?: BigIntNullableFilter<"ChurchIncome"> | bigint | number | null
    churchIncomeTypeIdRel?: XOR<ChurchIncomeTypeScalarRelationFilter, ChurchIncomeTypeWhereInput>
    churchIncomeCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    churchIncomeUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type ChurchIncomeOrderByWithAggregationInput = {
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrderInput | SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: ChurchIncomeCountOrderByAggregateInput
    _avg?: ChurchIncomeAvgOrderByAggregateInput
    _max?: ChurchIncomeMaxOrderByAggregateInput
    _min?: ChurchIncomeMinOrderByAggregateInput
    _sum?: ChurchIncomeSumOrderByAggregateInput
  }

  export type ChurchIncomeScalarWhereWithAggregatesInput = {
    AND?: ChurchIncomeScalarWhereWithAggregatesInput | ChurchIncomeScalarWhereWithAggregatesInput[]
    OR?: ChurchIncomeScalarWhereWithAggregatesInput[]
    NOT?: ChurchIncomeScalarWhereWithAggregatesInput | ChurchIncomeScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"ChurchIncome"> | bigint | number
    incomeTypeId?: BigIntWithAggregatesFilter<"ChurchIncome"> | bigint | number
    detail?: StringNullableWithAggregatesFilter<"ChurchIncome"> | string | null
    funds?: BigIntWithAggregatesFilter<"ChurchIncome"> | bigint | number
    date?: DateTimeWithAggregatesFilter<"ChurchIncome"> | Date | string
    deleted?: BoolWithAggregatesFilter<"ChurchIncome"> | boolean
    createAt?: DateTimeWithAggregatesFilter<"ChurchIncome"> | Date | string
    createBy?: BigIntNullableWithAggregatesFilter<"ChurchIncome"> | bigint | number | null
    updatedAt?: DateTimeWithAggregatesFilter<"ChurchIncome"> | Date | string
    updatedBy?: BigIntNullableWithAggregatesFilter<"ChurchIncome"> | bigint | number | null
  }

  export type ChurchIncomeHistoryWhereInput = {
    AND?: ChurchIncomeHistoryWhereInput | ChurchIncomeHistoryWhereInput[]
    OR?: ChurchIncomeHistoryWhereInput[]
    NOT?: ChurchIncomeHistoryWhereInput | ChurchIncomeHistoryWhereInput[]
    revId?: BigIntFilter<"ChurchIncomeHistory"> | bigint | number
    id?: BigIntFilter<"ChurchIncomeHistory"> | bigint | number
    incomeTypeId?: BigIntFilter<"ChurchIncomeHistory"> | bigint | number
    detail?: StringNullableFilter<"ChurchIncomeHistory"> | string | null
    funds?: BigIntFilter<"ChurchIncomeHistory"> | bigint | number
    date?: DateTimeFilter<"ChurchIncomeHistory"> | Date | string
    deleted?: BoolFilter<"ChurchIncomeHistory"> | boolean
    createAt?: DateTimeFilter<"ChurchIncomeHistory"> | Date | string
    createBy?: BigIntNullableFilter<"ChurchIncomeHistory"> | bigint | number | null
    updatedAt?: DateTimeFilter<"ChurchIncomeHistory"> | Date | string
    updatedBy?: BigIntNullableFilter<"ChurchIncomeHistory"> | bigint | number | null
    churchIncomeTypeHistoryIdRel?: XOR<ChurchIncomeTypeScalarRelationFilter, ChurchIncomeTypeWhereInput>
    churchIncomeHistoryCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    churchIncomeHistoryUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type ChurchIncomeHistoryOrderByWithRelationInput = {
    revId?: SortOrder
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrderInput | SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    churchIncomeTypeHistoryIdRel?: ChurchIncomeTypeOrderByWithRelationInput
    churchIncomeHistoryCreateByRel?: UserOrderByWithRelationInput
    churchIncomeHistoryUpdateByRel?: UserOrderByWithRelationInput
  }

  export type ChurchIncomeHistoryWhereUniqueInput = Prisma.AtLeast<{
    revId?: bigint | number
    AND?: ChurchIncomeHistoryWhereInput | ChurchIncomeHistoryWhereInput[]
    OR?: ChurchIncomeHistoryWhereInput[]
    NOT?: ChurchIncomeHistoryWhereInput | ChurchIncomeHistoryWhereInput[]
    id?: BigIntFilter<"ChurchIncomeHistory"> | bigint | number
    incomeTypeId?: BigIntFilter<"ChurchIncomeHistory"> | bigint | number
    detail?: StringNullableFilter<"ChurchIncomeHistory"> | string | null
    funds?: BigIntFilter<"ChurchIncomeHistory"> | bigint | number
    date?: DateTimeFilter<"ChurchIncomeHistory"> | Date | string
    deleted?: BoolFilter<"ChurchIncomeHistory"> | boolean
    createAt?: DateTimeFilter<"ChurchIncomeHistory"> | Date | string
    createBy?: BigIntNullableFilter<"ChurchIncomeHistory"> | bigint | number | null
    updatedAt?: DateTimeFilter<"ChurchIncomeHistory"> | Date | string
    updatedBy?: BigIntNullableFilter<"ChurchIncomeHistory"> | bigint | number | null
    churchIncomeTypeHistoryIdRel?: XOR<ChurchIncomeTypeScalarRelationFilter, ChurchIncomeTypeWhereInput>
    churchIncomeHistoryCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    churchIncomeHistoryUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "revId">

  export type ChurchIncomeHistoryOrderByWithAggregationInput = {
    revId?: SortOrder
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrderInput | SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: ChurchIncomeHistoryCountOrderByAggregateInput
    _avg?: ChurchIncomeHistoryAvgOrderByAggregateInput
    _max?: ChurchIncomeHistoryMaxOrderByAggregateInput
    _min?: ChurchIncomeHistoryMinOrderByAggregateInput
    _sum?: ChurchIncomeHistorySumOrderByAggregateInput
  }

  export type ChurchIncomeHistoryScalarWhereWithAggregatesInput = {
    AND?: ChurchIncomeHistoryScalarWhereWithAggregatesInput | ChurchIncomeHistoryScalarWhereWithAggregatesInput[]
    OR?: ChurchIncomeHistoryScalarWhereWithAggregatesInput[]
    NOT?: ChurchIncomeHistoryScalarWhereWithAggregatesInput | ChurchIncomeHistoryScalarWhereWithAggregatesInput[]
    revId?: BigIntWithAggregatesFilter<"ChurchIncomeHistory"> | bigint | number
    id?: BigIntWithAggregatesFilter<"ChurchIncomeHistory"> | bigint | number
    incomeTypeId?: BigIntWithAggregatesFilter<"ChurchIncomeHistory"> | bigint | number
    detail?: StringNullableWithAggregatesFilter<"ChurchIncomeHistory"> | string | null
    funds?: BigIntWithAggregatesFilter<"ChurchIncomeHistory"> | bigint | number
    date?: DateTimeWithAggregatesFilter<"ChurchIncomeHistory"> | Date | string
    deleted?: BoolWithAggregatesFilter<"ChurchIncomeHistory"> | boolean
    createAt?: DateTimeWithAggregatesFilter<"ChurchIncomeHistory"> | Date | string
    createBy?: BigIntNullableWithAggregatesFilter<"ChurchIncomeHistory"> | bigint | number | null
    updatedAt?: DateTimeWithAggregatesFilter<"ChurchIncomeHistory"> | Date | string
    updatedBy?: BigIntNullableWithAggregatesFilter<"ChurchIncomeHistory"> | bigint | number | null
  }

  export type ChurchIncomeTypeWhereInput = {
    AND?: ChurchIncomeTypeWhereInput | ChurchIncomeTypeWhereInput[]
    OR?: ChurchIncomeTypeWhereInput[]
    NOT?: ChurchIncomeTypeWhereInput | ChurchIncomeTypeWhereInput[]
    id?: BigIntFilter<"ChurchIncomeType"> | bigint | number
    incomeTypeName?: StringFilter<"ChurchIncomeType"> | string
    code?: StringFilter<"ChurchIncomeType"> | string
    description?: StringFilter<"ChurchIncomeType"> | string
    deleted?: BoolFilter<"ChurchIncomeType"> | boolean
    createAt?: DateTimeFilter<"ChurchIncomeType"> | Date | string
    createBy?: BigIntNullableFilter<"ChurchIncomeType"> | bigint | number | null
    updatedAt?: DateTimeFilter<"ChurchIncomeType"> | Date | string
    updatedBy?: BigIntNullableFilter<"ChurchIncomeType"> | bigint | number | null
    churchIncomeTypeCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    churchIncomeTypeUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    churchIncomeTypeIdRel?: ChurchIncomeListRelationFilter
    churchIncomeTypeHistoryIdRel?: ChurchIncomeHistoryListRelationFilter
  }

  export type ChurchIncomeTypeOrderByWithRelationInput = {
    id?: SortOrder
    incomeTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    churchIncomeTypeCreateByRel?: UserOrderByWithRelationInput
    churchIncomeTypeUpdateByRel?: UserOrderByWithRelationInput
    churchIncomeTypeIdRel?: ChurchIncomeOrderByRelationAggregateInput
    churchIncomeTypeHistoryIdRel?: ChurchIncomeHistoryOrderByRelationAggregateInput
  }

  export type ChurchIncomeTypeWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: ChurchIncomeTypeWhereInput | ChurchIncomeTypeWhereInput[]
    OR?: ChurchIncomeTypeWhereInput[]
    NOT?: ChurchIncomeTypeWhereInput | ChurchIncomeTypeWhereInput[]
    incomeTypeName?: StringFilter<"ChurchIncomeType"> | string
    code?: StringFilter<"ChurchIncomeType"> | string
    description?: StringFilter<"ChurchIncomeType"> | string
    deleted?: BoolFilter<"ChurchIncomeType"> | boolean
    createAt?: DateTimeFilter<"ChurchIncomeType"> | Date | string
    createBy?: BigIntNullableFilter<"ChurchIncomeType"> | bigint | number | null
    updatedAt?: DateTimeFilter<"ChurchIncomeType"> | Date | string
    updatedBy?: BigIntNullableFilter<"ChurchIncomeType"> | bigint | number | null
    churchIncomeTypeCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    churchIncomeTypeUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    churchIncomeTypeIdRel?: ChurchIncomeListRelationFilter
    churchIncomeTypeHistoryIdRel?: ChurchIncomeHistoryListRelationFilter
  }, "id">

  export type ChurchIncomeTypeOrderByWithAggregationInput = {
    id?: SortOrder
    incomeTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: ChurchIncomeTypeCountOrderByAggregateInput
    _avg?: ChurchIncomeTypeAvgOrderByAggregateInput
    _max?: ChurchIncomeTypeMaxOrderByAggregateInput
    _min?: ChurchIncomeTypeMinOrderByAggregateInput
    _sum?: ChurchIncomeTypeSumOrderByAggregateInput
  }

  export type ChurchIncomeTypeScalarWhereWithAggregatesInput = {
    AND?: ChurchIncomeTypeScalarWhereWithAggregatesInput | ChurchIncomeTypeScalarWhereWithAggregatesInput[]
    OR?: ChurchIncomeTypeScalarWhereWithAggregatesInput[]
    NOT?: ChurchIncomeTypeScalarWhereWithAggregatesInput | ChurchIncomeTypeScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"ChurchIncomeType"> | bigint | number
    incomeTypeName?: StringWithAggregatesFilter<"ChurchIncomeType"> | string
    code?: StringWithAggregatesFilter<"ChurchIncomeType"> | string
    description?: StringWithAggregatesFilter<"ChurchIncomeType"> | string
    deleted?: BoolWithAggregatesFilter<"ChurchIncomeType"> | boolean
    createAt?: DateTimeWithAggregatesFilter<"ChurchIncomeType"> | Date | string
    createBy?: BigIntNullableWithAggregatesFilter<"ChurchIncomeType"> | bigint | number | null
    updatedAt?: DateTimeWithAggregatesFilter<"ChurchIncomeType"> | Date | string
    updatedBy?: BigIntNullableWithAggregatesFilter<"ChurchIncomeType"> | bigint | number | null
  }

  export type ChurchSpendingWhereInput = {
    AND?: ChurchSpendingWhereInput | ChurchSpendingWhereInput[]
    OR?: ChurchSpendingWhereInput[]
    NOT?: ChurchSpendingWhereInput | ChurchSpendingWhereInput[]
    id?: BigIntFilter<"ChurchSpending"> | bigint | number
    spendingTypeId?: BigIntFilter<"ChurchSpending"> | bigint | number
    detail?: StringNullableFilter<"ChurchSpending"> | string | null
    funds?: BigIntFilter<"ChurchSpending"> | bigint | number
    date?: DateTimeFilter<"ChurchSpending"> | Date | string
    bill?: StringNullableFilter<"ChurchSpending"> | string | null
    billNumber?: StringNullableFilter<"ChurchSpending"> | string | null
    deleted?: BoolFilter<"ChurchSpending"> | boolean
    createAt?: DateTimeFilter<"ChurchSpending"> | Date | string
    createBy?: BigIntNullableFilter<"ChurchSpending"> | bigint | number | null
    updatedAt?: DateTimeFilter<"ChurchSpending"> | Date | string
    updatedBy?: BigIntNullableFilter<"ChurchSpending"> | bigint | number | null
    churchSpendingTypeIdRel?: XOR<ChurchSpendingTypeScalarRelationFilter, ChurchSpendingTypeWhereInput>
    churchSpendingCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    churchSpendingUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type ChurchSpendingOrderByWithRelationInput = {
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrderInput | SortOrder
    funds?: SortOrder
    date?: SortOrder
    bill?: SortOrderInput | SortOrder
    billNumber?: SortOrderInput | SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    churchSpendingTypeIdRel?: ChurchSpendingTypeOrderByWithRelationInput
    churchSpendingCreateByRel?: UserOrderByWithRelationInput
    churchSpendingUpdateByRel?: UserOrderByWithRelationInput
  }

  export type ChurchSpendingWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: ChurchSpendingWhereInput | ChurchSpendingWhereInput[]
    OR?: ChurchSpendingWhereInput[]
    NOT?: ChurchSpendingWhereInput | ChurchSpendingWhereInput[]
    spendingTypeId?: BigIntFilter<"ChurchSpending"> | bigint | number
    detail?: StringNullableFilter<"ChurchSpending"> | string | null
    funds?: BigIntFilter<"ChurchSpending"> | bigint | number
    date?: DateTimeFilter<"ChurchSpending"> | Date | string
    bill?: StringNullableFilter<"ChurchSpending"> | string | null
    billNumber?: StringNullableFilter<"ChurchSpending"> | string | null
    deleted?: BoolFilter<"ChurchSpending"> | boolean
    createAt?: DateTimeFilter<"ChurchSpending"> | Date | string
    createBy?: BigIntNullableFilter<"ChurchSpending"> | bigint | number | null
    updatedAt?: DateTimeFilter<"ChurchSpending"> | Date | string
    updatedBy?: BigIntNullableFilter<"ChurchSpending"> | bigint | number | null
    churchSpendingTypeIdRel?: XOR<ChurchSpendingTypeScalarRelationFilter, ChurchSpendingTypeWhereInput>
    churchSpendingCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    churchSpendingUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type ChurchSpendingOrderByWithAggregationInput = {
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrderInput | SortOrder
    funds?: SortOrder
    date?: SortOrder
    bill?: SortOrderInput | SortOrder
    billNumber?: SortOrderInput | SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: ChurchSpendingCountOrderByAggregateInput
    _avg?: ChurchSpendingAvgOrderByAggregateInput
    _max?: ChurchSpendingMaxOrderByAggregateInput
    _min?: ChurchSpendingMinOrderByAggregateInput
    _sum?: ChurchSpendingSumOrderByAggregateInput
  }

  export type ChurchSpendingScalarWhereWithAggregatesInput = {
    AND?: ChurchSpendingScalarWhereWithAggregatesInput | ChurchSpendingScalarWhereWithAggregatesInput[]
    OR?: ChurchSpendingScalarWhereWithAggregatesInput[]
    NOT?: ChurchSpendingScalarWhereWithAggregatesInput | ChurchSpendingScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"ChurchSpending"> | bigint | number
    spendingTypeId?: BigIntWithAggregatesFilter<"ChurchSpending"> | bigint | number
    detail?: StringNullableWithAggregatesFilter<"ChurchSpending"> | string | null
    funds?: BigIntWithAggregatesFilter<"ChurchSpending"> | bigint | number
    date?: DateTimeWithAggregatesFilter<"ChurchSpending"> | Date | string
    bill?: StringNullableWithAggregatesFilter<"ChurchSpending"> | string | null
    billNumber?: StringNullableWithAggregatesFilter<"ChurchSpending"> | string | null
    deleted?: BoolWithAggregatesFilter<"ChurchSpending"> | boolean
    createAt?: DateTimeWithAggregatesFilter<"ChurchSpending"> | Date | string
    createBy?: BigIntNullableWithAggregatesFilter<"ChurchSpending"> | bigint | number | null
    updatedAt?: DateTimeWithAggregatesFilter<"ChurchSpending"> | Date | string
    updatedBy?: BigIntNullableWithAggregatesFilter<"ChurchSpending"> | bigint | number | null
  }

  export type ChurchSpendingHistoryWhereInput = {
    AND?: ChurchSpendingHistoryWhereInput | ChurchSpendingHistoryWhereInput[]
    OR?: ChurchSpendingHistoryWhereInput[]
    NOT?: ChurchSpendingHistoryWhereInput | ChurchSpendingHistoryWhereInput[]
    revId?: BigIntFilter<"ChurchSpendingHistory"> | bigint | number
    id?: BigIntFilter<"ChurchSpendingHistory"> | bigint | number
    spendingTypeId?: BigIntFilter<"ChurchSpendingHistory"> | bigint | number
    detail?: StringNullableFilter<"ChurchSpendingHistory"> | string | null
    funds?: BigIntFilter<"ChurchSpendingHistory"> | bigint | number
    date?: DateTimeFilter<"ChurchSpendingHistory"> | Date | string
    bill?: StringFilter<"ChurchSpendingHistory"> | string
    billNumber?: StringFilter<"ChurchSpendingHistory"> | string
    deleted?: BoolFilter<"ChurchSpendingHistory"> | boolean
    createAt?: DateTimeFilter<"ChurchSpendingHistory"> | Date | string
    createBy?: BigIntNullableFilter<"ChurchSpendingHistory"> | bigint | number | null
    updatedAt?: DateTimeFilter<"ChurchSpendingHistory"> | Date | string
    updatedBy?: BigIntNullableFilter<"ChurchSpendingHistory"> | bigint | number | null
    churchSpendingTypeHistoryIdRel?: XOR<ChurchSpendingTypeScalarRelationFilter, ChurchSpendingTypeWhereInput>
    churchSpendingHistoryCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    churchSpendingHistoryUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type ChurchSpendingHistoryOrderByWithRelationInput = {
    revId?: SortOrder
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrderInput | SortOrder
    funds?: SortOrder
    date?: SortOrder
    bill?: SortOrder
    billNumber?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    churchSpendingTypeHistoryIdRel?: ChurchSpendingTypeOrderByWithRelationInput
    churchSpendingHistoryCreateByRel?: UserOrderByWithRelationInput
    churchSpendingHistoryUpdateByRel?: UserOrderByWithRelationInput
  }

  export type ChurchSpendingHistoryWhereUniqueInput = Prisma.AtLeast<{
    revId?: bigint | number
    AND?: ChurchSpendingHistoryWhereInput | ChurchSpendingHistoryWhereInput[]
    OR?: ChurchSpendingHistoryWhereInput[]
    NOT?: ChurchSpendingHistoryWhereInput | ChurchSpendingHistoryWhereInput[]
    id?: BigIntFilter<"ChurchSpendingHistory"> | bigint | number
    spendingTypeId?: BigIntFilter<"ChurchSpendingHistory"> | bigint | number
    detail?: StringNullableFilter<"ChurchSpendingHistory"> | string | null
    funds?: BigIntFilter<"ChurchSpendingHistory"> | bigint | number
    date?: DateTimeFilter<"ChurchSpendingHistory"> | Date | string
    bill?: StringFilter<"ChurchSpendingHistory"> | string
    billNumber?: StringFilter<"ChurchSpendingHistory"> | string
    deleted?: BoolFilter<"ChurchSpendingHistory"> | boolean
    createAt?: DateTimeFilter<"ChurchSpendingHistory"> | Date | string
    createBy?: BigIntNullableFilter<"ChurchSpendingHistory"> | bigint | number | null
    updatedAt?: DateTimeFilter<"ChurchSpendingHistory"> | Date | string
    updatedBy?: BigIntNullableFilter<"ChurchSpendingHistory"> | bigint | number | null
    churchSpendingTypeHistoryIdRel?: XOR<ChurchSpendingTypeScalarRelationFilter, ChurchSpendingTypeWhereInput>
    churchSpendingHistoryCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    churchSpendingHistoryUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "revId">

  export type ChurchSpendingHistoryOrderByWithAggregationInput = {
    revId?: SortOrder
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrderInput | SortOrder
    funds?: SortOrder
    date?: SortOrder
    bill?: SortOrder
    billNumber?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: ChurchSpendingHistoryCountOrderByAggregateInput
    _avg?: ChurchSpendingHistoryAvgOrderByAggregateInput
    _max?: ChurchSpendingHistoryMaxOrderByAggregateInput
    _min?: ChurchSpendingHistoryMinOrderByAggregateInput
    _sum?: ChurchSpendingHistorySumOrderByAggregateInput
  }

  export type ChurchSpendingHistoryScalarWhereWithAggregatesInput = {
    AND?: ChurchSpendingHistoryScalarWhereWithAggregatesInput | ChurchSpendingHistoryScalarWhereWithAggregatesInput[]
    OR?: ChurchSpendingHistoryScalarWhereWithAggregatesInput[]
    NOT?: ChurchSpendingHistoryScalarWhereWithAggregatesInput | ChurchSpendingHistoryScalarWhereWithAggregatesInput[]
    revId?: BigIntWithAggregatesFilter<"ChurchSpendingHistory"> | bigint | number
    id?: BigIntWithAggregatesFilter<"ChurchSpendingHistory"> | bigint | number
    spendingTypeId?: BigIntWithAggregatesFilter<"ChurchSpendingHistory"> | bigint | number
    detail?: StringNullableWithAggregatesFilter<"ChurchSpendingHistory"> | string | null
    funds?: BigIntWithAggregatesFilter<"ChurchSpendingHistory"> | bigint | number
    date?: DateTimeWithAggregatesFilter<"ChurchSpendingHistory"> | Date | string
    bill?: StringWithAggregatesFilter<"ChurchSpendingHistory"> | string
    billNumber?: StringWithAggregatesFilter<"ChurchSpendingHistory"> | string
    deleted?: BoolWithAggregatesFilter<"ChurchSpendingHistory"> | boolean
    createAt?: DateTimeWithAggregatesFilter<"ChurchSpendingHistory"> | Date | string
    createBy?: BigIntNullableWithAggregatesFilter<"ChurchSpendingHistory"> | bigint | number | null
    updatedAt?: DateTimeWithAggregatesFilter<"ChurchSpendingHistory"> | Date | string
    updatedBy?: BigIntNullableWithAggregatesFilter<"ChurchSpendingHistory"> | bigint | number | null
  }

  export type ChurchSpendingTypeWhereInput = {
    AND?: ChurchSpendingTypeWhereInput | ChurchSpendingTypeWhereInput[]
    OR?: ChurchSpendingTypeWhereInput[]
    NOT?: ChurchSpendingTypeWhereInput | ChurchSpendingTypeWhereInput[]
    id?: BigIntFilter<"ChurchSpendingType"> | bigint | number
    spendingTypeName?: StringFilter<"ChurchSpendingType"> | string
    code?: StringFilter<"ChurchSpendingType"> | string
    description?: StringFilter<"ChurchSpendingType"> | string
    createAt?: DateTimeFilter<"ChurchSpendingType"> | Date | string
    createBy?: BigIntNullableFilter<"ChurchSpendingType"> | bigint | number | null
    deleted?: BoolFilter<"ChurchSpendingType"> | boolean
    updatedAt?: DateTimeFilter<"ChurchSpendingType"> | Date | string
    updatedBy?: BigIntNullableFilter<"ChurchSpendingType"> | bigint | number | null
    churchSpendingTypeCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    churchSpendingTypeUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    churchSpendingTypeIdRel?: ChurchSpendingListRelationFilter
    churchSpendingTypeHistoryIdRel?: ChurchSpendingHistoryListRelationFilter
  }

  export type ChurchSpendingTypeOrderByWithRelationInput = {
    id?: SortOrder
    spendingTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    deleted?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    churchSpendingTypeCreateByRel?: UserOrderByWithRelationInput
    churchSpendingTypeUpdateByRel?: UserOrderByWithRelationInput
    churchSpendingTypeIdRel?: ChurchSpendingOrderByRelationAggregateInput
    churchSpendingTypeHistoryIdRel?: ChurchSpendingHistoryOrderByRelationAggregateInput
  }

  export type ChurchSpendingTypeWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: ChurchSpendingTypeWhereInput | ChurchSpendingTypeWhereInput[]
    OR?: ChurchSpendingTypeWhereInput[]
    NOT?: ChurchSpendingTypeWhereInput | ChurchSpendingTypeWhereInput[]
    spendingTypeName?: StringFilter<"ChurchSpendingType"> | string
    code?: StringFilter<"ChurchSpendingType"> | string
    description?: StringFilter<"ChurchSpendingType"> | string
    createAt?: DateTimeFilter<"ChurchSpendingType"> | Date | string
    createBy?: BigIntNullableFilter<"ChurchSpendingType"> | bigint | number | null
    deleted?: BoolFilter<"ChurchSpendingType"> | boolean
    updatedAt?: DateTimeFilter<"ChurchSpendingType"> | Date | string
    updatedBy?: BigIntNullableFilter<"ChurchSpendingType"> | bigint | number | null
    churchSpendingTypeCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    churchSpendingTypeUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    churchSpendingTypeIdRel?: ChurchSpendingListRelationFilter
    churchSpendingTypeHistoryIdRel?: ChurchSpendingHistoryListRelationFilter
  }, "id">

  export type ChurchSpendingTypeOrderByWithAggregationInput = {
    id?: SortOrder
    spendingTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    deleted?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: ChurchSpendingTypeCountOrderByAggregateInput
    _avg?: ChurchSpendingTypeAvgOrderByAggregateInput
    _max?: ChurchSpendingTypeMaxOrderByAggregateInput
    _min?: ChurchSpendingTypeMinOrderByAggregateInput
    _sum?: ChurchSpendingTypeSumOrderByAggregateInput
  }

  export type ChurchSpendingTypeScalarWhereWithAggregatesInput = {
    AND?: ChurchSpendingTypeScalarWhereWithAggregatesInput | ChurchSpendingTypeScalarWhereWithAggregatesInput[]
    OR?: ChurchSpendingTypeScalarWhereWithAggregatesInput[]
    NOT?: ChurchSpendingTypeScalarWhereWithAggregatesInput | ChurchSpendingTypeScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"ChurchSpendingType"> | bigint | number
    spendingTypeName?: StringWithAggregatesFilter<"ChurchSpendingType"> | string
    code?: StringWithAggregatesFilter<"ChurchSpendingType"> | string
    description?: StringWithAggregatesFilter<"ChurchSpendingType"> | string
    createAt?: DateTimeWithAggregatesFilter<"ChurchSpendingType"> | Date | string
    createBy?: BigIntNullableWithAggregatesFilter<"ChurchSpendingType"> | bigint | number | null
    deleted?: BoolWithAggregatesFilter<"ChurchSpendingType"> | boolean
    updatedAt?: DateTimeWithAggregatesFilter<"ChurchSpendingType"> | Date | string
    updatedBy?: BigIntNullableWithAggregatesFilter<"ChurchSpendingType"> | bigint | number | null
  }

  export type StoreIncomeWhereInput = {
    AND?: StoreIncomeWhereInput | StoreIncomeWhereInput[]
    OR?: StoreIncomeWhereInput[]
    NOT?: StoreIncomeWhereInput | StoreIncomeWhereInput[]
    id?: BigIntFilter<"StoreIncome"> | bigint | number
    incomeTypeId?: BigIntFilter<"StoreIncome"> | bigint | number
    detail?: StringNullableFilter<"StoreIncome"> | string | null
    funds?: BigIntFilter<"StoreIncome"> | bigint | number
    date?: DateTimeFilter<"StoreIncome"> | Date | string
    deleted?: BoolFilter<"StoreIncome"> | boolean
    createAt?: DateTimeFilter<"StoreIncome"> | Date | string
    createBy?: BigIntNullableFilter<"StoreIncome"> | bigint | number | null
    updatedAt?: DateTimeFilter<"StoreIncome"> | Date | string
    updatedBy?: BigIntNullableFilter<"StoreIncome"> | bigint | number | null
    storeIncomeTypeIdRel?: XOR<StoreIncomeTypeScalarRelationFilter, StoreIncomeTypeWhereInput>
    storeIncomeCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    storeIncomeUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type StoreIncomeOrderByWithRelationInput = {
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrderInput | SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    storeIncomeTypeIdRel?: StoreIncomeTypeOrderByWithRelationInput
    storeIncomeCreateByRel?: UserOrderByWithRelationInput
    storeIncomeUpdateByRel?: UserOrderByWithRelationInput
  }

  export type StoreIncomeWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: StoreIncomeWhereInput | StoreIncomeWhereInput[]
    OR?: StoreIncomeWhereInput[]
    NOT?: StoreIncomeWhereInput | StoreIncomeWhereInput[]
    incomeTypeId?: BigIntFilter<"StoreIncome"> | bigint | number
    detail?: StringNullableFilter<"StoreIncome"> | string | null
    funds?: BigIntFilter<"StoreIncome"> | bigint | number
    date?: DateTimeFilter<"StoreIncome"> | Date | string
    deleted?: BoolFilter<"StoreIncome"> | boolean
    createAt?: DateTimeFilter<"StoreIncome"> | Date | string
    createBy?: BigIntNullableFilter<"StoreIncome"> | bigint | number | null
    updatedAt?: DateTimeFilter<"StoreIncome"> | Date | string
    updatedBy?: BigIntNullableFilter<"StoreIncome"> | bigint | number | null
    storeIncomeTypeIdRel?: XOR<StoreIncomeTypeScalarRelationFilter, StoreIncomeTypeWhereInput>
    storeIncomeCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    storeIncomeUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type StoreIncomeOrderByWithAggregationInput = {
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrderInput | SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: StoreIncomeCountOrderByAggregateInput
    _avg?: StoreIncomeAvgOrderByAggregateInput
    _max?: StoreIncomeMaxOrderByAggregateInput
    _min?: StoreIncomeMinOrderByAggregateInput
    _sum?: StoreIncomeSumOrderByAggregateInput
  }

  export type StoreIncomeScalarWhereWithAggregatesInput = {
    AND?: StoreIncomeScalarWhereWithAggregatesInput | StoreIncomeScalarWhereWithAggregatesInput[]
    OR?: StoreIncomeScalarWhereWithAggregatesInput[]
    NOT?: StoreIncomeScalarWhereWithAggregatesInput | StoreIncomeScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"StoreIncome"> | bigint | number
    incomeTypeId?: BigIntWithAggregatesFilter<"StoreIncome"> | bigint | number
    detail?: StringNullableWithAggregatesFilter<"StoreIncome"> | string | null
    funds?: BigIntWithAggregatesFilter<"StoreIncome"> | bigint | number
    date?: DateTimeWithAggregatesFilter<"StoreIncome"> | Date | string
    deleted?: BoolWithAggregatesFilter<"StoreIncome"> | boolean
    createAt?: DateTimeWithAggregatesFilter<"StoreIncome"> | Date | string
    createBy?: BigIntNullableWithAggregatesFilter<"StoreIncome"> | bigint | number | null
    updatedAt?: DateTimeWithAggregatesFilter<"StoreIncome"> | Date | string
    updatedBy?: BigIntNullableWithAggregatesFilter<"StoreIncome"> | bigint | number | null
  }

  export type StoreIncomeHistoryWhereInput = {
    AND?: StoreIncomeHistoryWhereInput | StoreIncomeHistoryWhereInput[]
    OR?: StoreIncomeHistoryWhereInput[]
    NOT?: StoreIncomeHistoryWhereInput | StoreIncomeHistoryWhereInput[]
    revId?: BigIntFilter<"StoreIncomeHistory"> | bigint | number
    id?: BigIntFilter<"StoreIncomeHistory"> | bigint | number
    incomeTypeId?: BigIntFilter<"StoreIncomeHistory"> | bigint | number
    detail?: StringNullableFilter<"StoreIncomeHistory"> | string | null
    funds?: BigIntFilter<"StoreIncomeHistory"> | bigint | number
    date?: DateTimeFilter<"StoreIncomeHistory"> | Date | string
    deleted?: BoolFilter<"StoreIncomeHistory"> | boolean
    createAt?: DateTimeFilter<"StoreIncomeHistory"> | Date | string
    createBy?: BigIntNullableFilter<"StoreIncomeHistory"> | bigint | number | null
    updatedAt?: DateTimeFilter<"StoreIncomeHistory"> | Date | string
    updatedBy?: BigIntNullableFilter<"StoreIncomeHistory"> | bigint | number | null
    storeIncomeTypeHistoryIdRel?: XOR<StoreIncomeTypeScalarRelationFilter, StoreIncomeTypeWhereInput>
    storeIncomeHistoryCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    storeIncomeHistoryUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type StoreIncomeHistoryOrderByWithRelationInput = {
    revId?: SortOrder
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrderInput | SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    storeIncomeTypeHistoryIdRel?: StoreIncomeTypeOrderByWithRelationInput
    storeIncomeHistoryCreateByRel?: UserOrderByWithRelationInput
    storeIncomeHistoryUpdateByRel?: UserOrderByWithRelationInput
  }

  export type StoreIncomeHistoryWhereUniqueInput = Prisma.AtLeast<{
    revId?: bigint | number
    AND?: StoreIncomeHistoryWhereInput | StoreIncomeHistoryWhereInput[]
    OR?: StoreIncomeHistoryWhereInput[]
    NOT?: StoreIncomeHistoryWhereInput | StoreIncomeHistoryWhereInput[]
    id?: BigIntFilter<"StoreIncomeHistory"> | bigint | number
    incomeTypeId?: BigIntFilter<"StoreIncomeHistory"> | bigint | number
    detail?: StringNullableFilter<"StoreIncomeHistory"> | string | null
    funds?: BigIntFilter<"StoreIncomeHistory"> | bigint | number
    date?: DateTimeFilter<"StoreIncomeHistory"> | Date | string
    deleted?: BoolFilter<"StoreIncomeHistory"> | boolean
    createAt?: DateTimeFilter<"StoreIncomeHistory"> | Date | string
    createBy?: BigIntNullableFilter<"StoreIncomeHistory"> | bigint | number | null
    updatedAt?: DateTimeFilter<"StoreIncomeHistory"> | Date | string
    updatedBy?: BigIntNullableFilter<"StoreIncomeHistory"> | bigint | number | null
    storeIncomeTypeHistoryIdRel?: XOR<StoreIncomeTypeScalarRelationFilter, StoreIncomeTypeWhereInput>
    storeIncomeHistoryCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    storeIncomeHistoryUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "revId">

  export type StoreIncomeHistoryOrderByWithAggregationInput = {
    revId?: SortOrder
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrderInput | SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: StoreIncomeHistoryCountOrderByAggregateInput
    _avg?: StoreIncomeHistoryAvgOrderByAggregateInput
    _max?: StoreIncomeHistoryMaxOrderByAggregateInput
    _min?: StoreIncomeHistoryMinOrderByAggregateInput
    _sum?: StoreIncomeHistorySumOrderByAggregateInput
  }

  export type StoreIncomeHistoryScalarWhereWithAggregatesInput = {
    AND?: StoreIncomeHistoryScalarWhereWithAggregatesInput | StoreIncomeHistoryScalarWhereWithAggregatesInput[]
    OR?: StoreIncomeHistoryScalarWhereWithAggregatesInput[]
    NOT?: StoreIncomeHistoryScalarWhereWithAggregatesInput | StoreIncomeHistoryScalarWhereWithAggregatesInput[]
    revId?: BigIntWithAggregatesFilter<"StoreIncomeHistory"> | bigint | number
    id?: BigIntWithAggregatesFilter<"StoreIncomeHistory"> | bigint | number
    incomeTypeId?: BigIntWithAggregatesFilter<"StoreIncomeHistory"> | bigint | number
    detail?: StringNullableWithAggregatesFilter<"StoreIncomeHistory"> | string | null
    funds?: BigIntWithAggregatesFilter<"StoreIncomeHistory"> | bigint | number
    date?: DateTimeWithAggregatesFilter<"StoreIncomeHistory"> | Date | string
    deleted?: BoolWithAggregatesFilter<"StoreIncomeHistory"> | boolean
    createAt?: DateTimeWithAggregatesFilter<"StoreIncomeHistory"> | Date | string
    createBy?: BigIntNullableWithAggregatesFilter<"StoreIncomeHistory"> | bigint | number | null
    updatedAt?: DateTimeWithAggregatesFilter<"StoreIncomeHistory"> | Date | string
    updatedBy?: BigIntNullableWithAggregatesFilter<"StoreIncomeHistory"> | bigint | number | null
  }

  export type StoreIncomeTypeWhereInput = {
    AND?: StoreIncomeTypeWhereInput | StoreIncomeTypeWhereInput[]
    OR?: StoreIncomeTypeWhereInput[]
    NOT?: StoreIncomeTypeWhereInput | StoreIncomeTypeWhereInput[]
    id?: BigIntFilter<"StoreIncomeType"> | bigint | number
    incomeTypeName?: StringFilter<"StoreIncomeType"> | string
    code?: StringFilter<"StoreIncomeType"> | string
    description?: StringFilter<"StoreIncomeType"> | string
    deleted?: BoolFilter<"StoreIncomeType"> | boolean
    createAt?: DateTimeFilter<"StoreIncomeType"> | Date | string
    createBy?: BigIntNullableFilter<"StoreIncomeType"> | bigint | number | null
    updatedAt?: DateTimeFilter<"StoreIncomeType"> | Date | string
    updatedBy?: BigIntNullableFilter<"StoreIncomeType"> | bigint | number | null
    storeIncomeTypeCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    storeIncomeTypeUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    storeIncomeTypeIdRel?: StoreIncomeListRelationFilter
    storeIncomeTypeHistoryIdRel?: StoreIncomeHistoryListRelationFilter
  }

  export type StoreIncomeTypeOrderByWithRelationInput = {
    id?: SortOrder
    incomeTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    storeIncomeTypeCreateByRel?: UserOrderByWithRelationInput
    storeIncomeTypeUpdateByRel?: UserOrderByWithRelationInput
    storeIncomeTypeIdRel?: StoreIncomeOrderByRelationAggregateInput
    storeIncomeTypeHistoryIdRel?: StoreIncomeHistoryOrderByRelationAggregateInput
  }

  export type StoreIncomeTypeWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: StoreIncomeTypeWhereInput | StoreIncomeTypeWhereInput[]
    OR?: StoreIncomeTypeWhereInput[]
    NOT?: StoreIncomeTypeWhereInput | StoreIncomeTypeWhereInput[]
    incomeTypeName?: StringFilter<"StoreIncomeType"> | string
    code?: StringFilter<"StoreIncomeType"> | string
    description?: StringFilter<"StoreIncomeType"> | string
    deleted?: BoolFilter<"StoreIncomeType"> | boolean
    createAt?: DateTimeFilter<"StoreIncomeType"> | Date | string
    createBy?: BigIntNullableFilter<"StoreIncomeType"> | bigint | number | null
    updatedAt?: DateTimeFilter<"StoreIncomeType"> | Date | string
    updatedBy?: BigIntNullableFilter<"StoreIncomeType"> | bigint | number | null
    storeIncomeTypeCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    storeIncomeTypeUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    storeIncomeTypeIdRel?: StoreIncomeListRelationFilter
    storeIncomeTypeHistoryIdRel?: StoreIncomeHistoryListRelationFilter
  }, "id">

  export type StoreIncomeTypeOrderByWithAggregationInput = {
    id?: SortOrder
    incomeTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: StoreIncomeTypeCountOrderByAggregateInput
    _avg?: StoreIncomeTypeAvgOrderByAggregateInput
    _max?: StoreIncomeTypeMaxOrderByAggregateInput
    _min?: StoreIncomeTypeMinOrderByAggregateInput
    _sum?: StoreIncomeTypeSumOrderByAggregateInput
  }

  export type StoreIncomeTypeScalarWhereWithAggregatesInput = {
    AND?: StoreIncomeTypeScalarWhereWithAggregatesInput | StoreIncomeTypeScalarWhereWithAggregatesInput[]
    OR?: StoreIncomeTypeScalarWhereWithAggregatesInput[]
    NOT?: StoreIncomeTypeScalarWhereWithAggregatesInput | StoreIncomeTypeScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"StoreIncomeType"> | bigint | number
    incomeTypeName?: StringWithAggregatesFilter<"StoreIncomeType"> | string
    code?: StringWithAggregatesFilter<"StoreIncomeType"> | string
    description?: StringWithAggregatesFilter<"StoreIncomeType"> | string
    deleted?: BoolWithAggregatesFilter<"StoreIncomeType"> | boolean
    createAt?: DateTimeWithAggregatesFilter<"StoreIncomeType"> | Date | string
    createBy?: BigIntNullableWithAggregatesFilter<"StoreIncomeType"> | bigint | number | null
    updatedAt?: DateTimeWithAggregatesFilter<"StoreIncomeType"> | Date | string
    updatedBy?: BigIntNullableWithAggregatesFilter<"StoreIncomeType"> | bigint | number | null
  }

  export type StoreSpendingWhereInput = {
    AND?: StoreSpendingWhereInput | StoreSpendingWhereInput[]
    OR?: StoreSpendingWhereInput[]
    NOT?: StoreSpendingWhereInput | StoreSpendingWhereInput[]
    id?: BigIntFilter<"StoreSpending"> | bigint | number
    spendingTypeId?: BigIntFilter<"StoreSpending"> | bigint | number
    detail?: StringNullableFilter<"StoreSpending"> | string | null
    funds?: BigIntFilter<"StoreSpending"> | bigint | number
    date?: DateTimeFilter<"StoreSpending"> | Date | string
    deleted?: BoolFilter<"StoreSpending"> | boolean
    createAt?: DateTimeFilter<"StoreSpending"> | Date | string
    createBy?: BigIntNullableFilter<"StoreSpending"> | bigint | number | null
    updatedAt?: DateTimeFilter<"StoreSpending"> | Date | string
    updatedBy?: BigIntNullableFilter<"StoreSpending"> | bigint | number | null
    storeSpendingTypeIdRel?: XOR<StoreSpendingTypeScalarRelationFilter, StoreSpendingTypeWhereInput>
    storeSpendingCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    storeSpendingUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type StoreSpendingOrderByWithRelationInput = {
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrderInput | SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    storeSpendingTypeIdRel?: StoreSpendingTypeOrderByWithRelationInput
    storeSpendingCreateByRel?: UserOrderByWithRelationInput
    storeSpendingUpdateByRel?: UserOrderByWithRelationInput
  }

  export type StoreSpendingWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: StoreSpendingWhereInput | StoreSpendingWhereInput[]
    OR?: StoreSpendingWhereInput[]
    NOT?: StoreSpendingWhereInput | StoreSpendingWhereInput[]
    spendingTypeId?: BigIntFilter<"StoreSpending"> | bigint | number
    detail?: StringNullableFilter<"StoreSpending"> | string | null
    funds?: BigIntFilter<"StoreSpending"> | bigint | number
    date?: DateTimeFilter<"StoreSpending"> | Date | string
    deleted?: BoolFilter<"StoreSpending"> | boolean
    createAt?: DateTimeFilter<"StoreSpending"> | Date | string
    createBy?: BigIntNullableFilter<"StoreSpending"> | bigint | number | null
    updatedAt?: DateTimeFilter<"StoreSpending"> | Date | string
    updatedBy?: BigIntNullableFilter<"StoreSpending"> | bigint | number | null
    storeSpendingTypeIdRel?: XOR<StoreSpendingTypeScalarRelationFilter, StoreSpendingTypeWhereInput>
    storeSpendingCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    storeSpendingUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type StoreSpendingOrderByWithAggregationInput = {
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrderInput | SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: StoreSpendingCountOrderByAggregateInput
    _avg?: StoreSpendingAvgOrderByAggregateInput
    _max?: StoreSpendingMaxOrderByAggregateInput
    _min?: StoreSpendingMinOrderByAggregateInput
    _sum?: StoreSpendingSumOrderByAggregateInput
  }

  export type StoreSpendingScalarWhereWithAggregatesInput = {
    AND?: StoreSpendingScalarWhereWithAggregatesInput | StoreSpendingScalarWhereWithAggregatesInput[]
    OR?: StoreSpendingScalarWhereWithAggregatesInput[]
    NOT?: StoreSpendingScalarWhereWithAggregatesInput | StoreSpendingScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"StoreSpending"> | bigint | number
    spendingTypeId?: BigIntWithAggregatesFilter<"StoreSpending"> | bigint | number
    detail?: StringNullableWithAggregatesFilter<"StoreSpending"> | string | null
    funds?: BigIntWithAggregatesFilter<"StoreSpending"> | bigint | number
    date?: DateTimeWithAggregatesFilter<"StoreSpending"> | Date | string
    deleted?: BoolWithAggregatesFilter<"StoreSpending"> | boolean
    createAt?: DateTimeWithAggregatesFilter<"StoreSpending"> | Date | string
    createBy?: BigIntNullableWithAggregatesFilter<"StoreSpending"> | bigint | number | null
    updatedAt?: DateTimeWithAggregatesFilter<"StoreSpending"> | Date | string
    updatedBy?: BigIntNullableWithAggregatesFilter<"StoreSpending"> | bigint | number | null
  }

  export type StoreSpendingHistoryWhereInput = {
    AND?: StoreSpendingHistoryWhereInput | StoreSpendingHistoryWhereInput[]
    OR?: StoreSpendingHistoryWhereInput[]
    NOT?: StoreSpendingHistoryWhereInput | StoreSpendingHistoryWhereInput[]
    revId?: BigIntFilter<"StoreSpendingHistory"> | bigint | number
    id?: BigIntFilter<"StoreSpendingHistory"> | bigint | number
    spendingTypeId?: BigIntFilter<"StoreSpendingHistory"> | bigint | number
    detail?: StringNullableFilter<"StoreSpendingHistory"> | string | null
    funds?: BigIntFilter<"StoreSpendingHistory"> | bigint | number
    date?: DateTimeFilter<"StoreSpendingHistory"> | Date | string
    deleted?: BoolFilter<"StoreSpendingHistory"> | boolean
    createAt?: DateTimeFilter<"StoreSpendingHistory"> | Date | string
    createBy?: BigIntNullableFilter<"StoreSpendingHistory"> | bigint | number | null
    updatedAt?: DateTimeFilter<"StoreSpendingHistory"> | Date | string
    updatedBy?: BigIntNullableFilter<"StoreSpendingHistory"> | bigint | number | null
    storeSpendingTypeHistoryIdRel?: XOR<StoreSpendingTypeScalarRelationFilter, StoreSpendingTypeWhereInput>
    storeSpendingHistoryCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    storeSpendingHistoryUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type StoreSpendingHistoryOrderByWithRelationInput = {
    revId?: SortOrder
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrderInput | SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    storeSpendingTypeHistoryIdRel?: StoreSpendingTypeOrderByWithRelationInput
    storeSpendingHistoryCreateByRel?: UserOrderByWithRelationInput
    storeSpendingHistoryUpdateByRel?: UserOrderByWithRelationInput
  }

  export type StoreSpendingHistoryWhereUniqueInput = Prisma.AtLeast<{
    revId?: bigint | number
    AND?: StoreSpendingHistoryWhereInput | StoreSpendingHistoryWhereInput[]
    OR?: StoreSpendingHistoryWhereInput[]
    NOT?: StoreSpendingHistoryWhereInput | StoreSpendingHistoryWhereInput[]
    id?: BigIntFilter<"StoreSpendingHistory"> | bigint | number
    spendingTypeId?: BigIntFilter<"StoreSpendingHistory"> | bigint | number
    detail?: StringNullableFilter<"StoreSpendingHistory"> | string | null
    funds?: BigIntFilter<"StoreSpendingHistory"> | bigint | number
    date?: DateTimeFilter<"StoreSpendingHistory"> | Date | string
    deleted?: BoolFilter<"StoreSpendingHistory"> | boolean
    createAt?: DateTimeFilter<"StoreSpendingHistory"> | Date | string
    createBy?: BigIntNullableFilter<"StoreSpendingHistory"> | bigint | number | null
    updatedAt?: DateTimeFilter<"StoreSpendingHistory"> | Date | string
    updatedBy?: BigIntNullableFilter<"StoreSpendingHistory"> | bigint | number | null
    storeSpendingTypeHistoryIdRel?: XOR<StoreSpendingTypeScalarRelationFilter, StoreSpendingTypeWhereInput>
    storeSpendingHistoryCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    storeSpendingHistoryUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "revId">

  export type StoreSpendingHistoryOrderByWithAggregationInput = {
    revId?: SortOrder
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrderInput | SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: StoreSpendingHistoryCountOrderByAggregateInput
    _avg?: StoreSpendingHistoryAvgOrderByAggregateInput
    _max?: StoreSpendingHistoryMaxOrderByAggregateInput
    _min?: StoreSpendingHistoryMinOrderByAggregateInput
    _sum?: StoreSpendingHistorySumOrderByAggregateInput
  }

  export type StoreSpendingHistoryScalarWhereWithAggregatesInput = {
    AND?: StoreSpendingHistoryScalarWhereWithAggregatesInput | StoreSpendingHistoryScalarWhereWithAggregatesInput[]
    OR?: StoreSpendingHistoryScalarWhereWithAggregatesInput[]
    NOT?: StoreSpendingHistoryScalarWhereWithAggregatesInput | StoreSpendingHistoryScalarWhereWithAggregatesInput[]
    revId?: BigIntWithAggregatesFilter<"StoreSpendingHistory"> | bigint | number
    id?: BigIntWithAggregatesFilter<"StoreSpendingHistory"> | bigint | number
    spendingTypeId?: BigIntWithAggregatesFilter<"StoreSpendingHistory"> | bigint | number
    detail?: StringNullableWithAggregatesFilter<"StoreSpendingHistory"> | string | null
    funds?: BigIntWithAggregatesFilter<"StoreSpendingHistory"> | bigint | number
    date?: DateTimeWithAggregatesFilter<"StoreSpendingHistory"> | Date | string
    deleted?: BoolWithAggregatesFilter<"StoreSpendingHistory"> | boolean
    createAt?: DateTimeWithAggregatesFilter<"StoreSpendingHistory"> | Date | string
    createBy?: BigIntNullableWithAggregatesFilter<"StoreSpendingHistory"> | bigint | number | null
    updatedAt?: DateTimeWithAggregatesFilter<"StoreSpendingHistory"> | Date | string
    updatedBy?: BigIntNullableWithAggregatesFilter<"StoreSpendingHistory"> | bigint | number | null
  }

  export type StoreSpendingTypeWhereInput = {
    AND?: StoreSpendingTypeWhereInput | StoreSpendingTypeWhereInput[]
    OR?: StoreSpendingTypeWhereInput[]
    NOT?: StoreSpendingTypeWhereInput | StoreSpendingTypeWhereInput[]
    id?: BigIntFilter<"StoreSpendingType"> | bigint | number
    spendingTypeName?: StringFilter<"StoreSpendingType"> | string
    code?: StringFilter<"StoreSpendingType"> | string
    description?: StringFilter<"StoreSpendingType"> | string
    deleted?: BoolFilter<"StoreSpendingType"> | boolean
    createAt?: DateTimeFilter<"StoreSpendingType"> | Date | string
    createBy?: BigIntNullableFilter<"StoreSpendingType"> | bigint | number | null
    updatedAt?: DateTimeFilter<"StoreSpendingType"> | Date | string
    updatedBy?: BigIntNullableFilter<"StoreSpendingType"> | bigint | number | null
    storeSpendingTypeCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    storeSpendingTypeUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    storeSpendingTypeIdRel?: StoreSpendingListRelationFilter
    storeSpendingTypeHistoryIdRel?: StoreSpendingHistoryListRelationFilter
  }

  export type StoreSpendingTypeOrderByWithRelationInput = {
    id?: SortOrder
    spendingTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    storeSpendingTypeCreateByRel?: UserOrderByWithRelationInput
    storeSpendingTypeUpdateByRel?: UserOrderByWithRelationInput
    storeSpendingTypeIdRel?: StoreSpendingOrderByRelationAggregateInput
    storeSpendingTypeHistoryIdRel?: StoreSpendingHistoryOrderByRelationAggregateInput
  }

  export type StoreSpendingTypeWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: StoreSpendingTypeWhereInput | StoreSpendingTypeWhereInput[]
    OR?: StoreSpendingTypeWhereInput[]
    NOT?: StoreSpendingTypeWhereInput | StoreSpendingTypeWhereInput[]
    spendingTypeName?: StringFilter<"StoreSpendingType"> | string
    code?: StringFilter<"StoreSpendingType"> | string
    description?: StringFilter<"StoreSpendingType"> | string
    deleted?: BoolFilter<"StoreSpendingType"> | boolean
    createAt?: DateTimeFilter<"StoreSpendingType"> | Date | string
    createBy?: BigIntNullableFilter<"StoreSpendingType"> | bigint | number | null
    updatedAt?: DateTimeFilter<"StoreSpendingType"> | Date | string
    updatedBy?: BigIntNullableFilter<"StoreSpendingType"> | bigint | number | null
    storeSpendingTypeCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    storeSpendingTypeUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    storeSpendingTypeIdRel?: StoreSpendingListRelationFilter
    storeSpendingTypeHistoryIdRel?: StoreSpendingHistoryListRelationFilter
  }, "id">

  export type StoreSpendingTypeOrderByWithAggregationInput = {
    id?: SortOrder
    spendingTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: StoreSpendingTypeCountOrderByAggregateInput
    _avg?: StoreSpendingTypeAvgOrderByAggregateInput
    _max?: StoreSpendingTypeMaxOrderByAggregateInput
    _min?: StoreSpendingTypeMinOrderByAggregateInput
    _sum?: StoreSpendingTypeSumOrderByAggregateInput
  }

  export type StoreSpendingTypeScalarWhereWithAggregatesInput = {
    AND?: StoreSpendingTypeScalarWhereWithAggregatesInput | StoreSpendingTypeScalarWhereWithAggregatesInput[]
    OR?: StoreSpendingTypeScalarWhereWithAggregatesInput[]
    NOT?: StoreSpendingTypeScalarWhereWithAggregatesInput | StoreSpendingTypeScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"StoreSpendingType"> | bigint | number
    spendingTypeName?: StringWithAggregatesFilter<"StoreSpendingType"> | string
    code?: StringWithAggregatesFilter<"StoreSpendingType"> | string
    description?: StringWithAggregatesFilter<"StoreSpendingType"> | string
    deleted?: BoolWithAggregatesFilter<"StoreSpendingType"> | boolean
    createAt?: DateTimeWithAggregatesFilter<"StoreSpendingType"> | Date | string
    createBy?: BigIntNullableWithAggregatesFilter<"StoreSpendingType"> | bigint | number | null
    updatedAt?: DateTimeWithAggregatesFilter<"StoreSpendingType"> | Date | string
    updatedBy?: BigIntNullableWithAggregatesFilter<"StoreSpendingType"> | bigint | number | null
  }

  export type FarmIncomeWhereInput = {
    AND?: FarmIncomeWhereInput | FarmIncomeWhereInput[]
    OR?: FarmIncomeWhereInput[]
    NOT?: FarmIncomeWhereInput | FarmIncomeWhereInput[]
    id?: BigIntFilter<"FarmIncome"> | bigint | number
    incomeTypeId?: BigIntFilter<"FarmIncome"> | bigint | number
    detail?: StringNullableFilter<"FarmIncome"> | string | null
    amount?: BigIntFilter<"FarmIncome"> | bigint | number
    price?: BigIntFilter<"FarmIncome"> | bigint | number
    date?: DateTimeFilter<"FarmIncome"> | Date | string
    deleted?: BoolFilter<"FarmIncome"> | boolean
    createAt?: DateTimeFilter<"FarmIncome"> | Date | string
    createBy?: BigIntNullableFilter<"FarmIncome"> | bigint | number | null
    updatedAt?: DateTimeFilter<"FarmIncome"> | Date | string
    updatedBy?: BigIntNullableFilter<"FarmIncome"> | bigint | number | null
    farmIncomeTypeIdRel?: XOR<FarmIncomeTypeScalarRelationFilter, FarmIncomeTypeWhereInput>
    farmIncomeCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    farmIncomeUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type FarmIncomeOrderByWithRelationInput = {
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrderInput | SortOrder
    amount?: SortOrder
    price?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    farmIncomeTypeIdRel?: FarmIncomeTypeOrderByWithRelationInput
    farmIncomeCreateByRel?: UserOrderByWithRelationInput
    farmIncomeUpdateByRel?: UserOrderByWithRelationInput
  }

  export type FarmIncomeWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: FarmIncomeWhereInput | FarmIncomeWhereInput[]
    OR?: FarmIncomeWhereInput[]
    NOT?: FarmIncomeWhereInput | FarmIncomeWhereInput[]
    incomeTypeId?: BigIntFilter<"FarmIncome"> | bigint | number
    detail?: StringNullableFilter<"FarmIncome"> | string | null
    amount?: BigIntFilter<"FarmIncome"> | bigint | number
    price?: BigIntFilter<"FarmIncome"> | bigint | number
    date?: DateTimeFilter<"FarmIncome"> | Date | string
    deleted?: BoolFilter<"FarmIncome"> | boolean
    createAt?: DateTimeFilter<"FarmIncome"> | Date | string
    createBy?: BigIntNullableFilter<"FarmIncome"> | bigint | number | null
    updatedAt?: DateTimeFilter<"FarmIncome"> | Date | string
    updatedBy?: BigIntNullableFilter<"FarmIncome"> | bigint | number | null
    farmIncomeTypeIdRel?: XOR<FarmIncomeTypeScalarRelationFilter, FarmIncomeTypeWhereInput>
    farmIncomeCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    farmIncomeUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type FarmIncomeOrderByWithAggregationInput = {
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrderInput | SortOrder
    amount?: SortOrder
    price?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: FarmIncomeCountOrderByAggregateInput
    _avg?: FarmIncomeAvgOrderByAggregateInput
    _max?: FarmIncomeMaxOrderByAggregateInput
    _min?: FarmIncomeMinOrderByAggregateInput
    _sum?: FarmIncomeSumOrderByAggregateInput
  }

  export type FarmIncomeScalarWhereWithAggregatesInput = {
    AND?: FarmIncomeScalarWhereWithAggregatesInput | FarmIncomeScalarWhereWithAggregatesInput[]
    OR?: FarmIncomeScalarWhereWithAggregatesInput[]
    NOT?: FarmIncomeScalarWhereWithAggregatesInput | FarmIncomeScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"FarmIncome"> | bigint | number
    incomeTypeId?: BigIntWithAggregatesFilter<"FarmIncome"> | bigint | number
    detail?: StringNullableWithAggregatesFilter<"FarmIncome"> | string | null
    amount?: BigIntWithAggregatesFilter<"FarmIncome"> | bigint | number
    price?: BigIntWithAggregatesFilter<"FarmIncome"> | bigint | number
    date?: DateTimeWithAggregatesFilter<"FarmIncome"> | Date | string
    deleted?: BoolWithAggregatesFilter<"FarmIncome"> | boolean
    createAt?: DateTimeWithAggregatesFilter<"FarmIncome"> | Date | string
    createBy?: BigIntNullableWithAggregatesFilter<"FarmIncome"> | bigint | number | null
    updatedAt?: DateTimeWithAggregatesFilter<"FarmIncome"> | Date | string
    updatedBy?: BigIntNullableWithAggregatesFilter<"FarmIncome"> | bigint | number | null
  }

  export type FarmIncomeHistoryWhereInput = {
    AND?: FarmIncomeHistoryWhereInput | FarmIncomeHistoryWhereInput[]
    OR?: FarmIncomeHistoryWhereInput[]
    NOT?: FarmIncomeHistoryWhereInput | FarmIncomeHistoryWhereInput[]
    revId?: BigIntFilter<"FarmIncomeHistory"> | bigint | number
    id?: BigIntFilter<"FarmIncomeHistory"> | bigint | number
    incomeTypeId?: BigIntFilter<"FarmIncomeHistory"> | bigint | number
    detail?: StringNullableFilter<"FarmIncomeHistory"> | string | null
    amount?: BigIntFilter<"FarmIncomeHistory"> | bigint | number
    price?: BigIntFilter<"FarmIncomeHistory"> | bigint | number
    date?: DateTimeFilter<"FarmIncomeHistory"> | Date | string
    deleted?: BoolFilter<"FarmIncomeHistory"> | boolean
    createAt?: DateTimeFilter<"FarmIncomeHistory"> | Date | string
    createBy?: BigIntNullableFilter<"FarmIncomeHistory"> | bigint | number | null
    updatedAt?: DateTimeFilter<"FarmIncomeHistory"> | Date | string
    updatedBy?: BigIntNullableFilter<"FarmIncomeHistory"> | bigint | number | null
    farmIncomeTypeHistoryIdRel?: XOR<FarmIncomeTypeScalarRelationFilter, FarmIncomeTypeWhereInput>
    farmIncomeHistoryCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    farmIncomeHistoryUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type FarmIncomeHistoryOrderByWithRelationInput = {
    revId?: SortOrder
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrderInput | SortOrder
    amount?: SortOrder
    price?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    farmIncomeTypeHistoryIdRel?: FarmIncomeTypeOrderByWithRelationInput
    farmIncomeHistoryCreateByRel?: UserOrderByWithRelationInput
    farmIncomeHistoryUpdateByRel?: UserOrderByWithRelationInput
  }

  export type FarmIncomeHistoryWhereUniqueInput = Prisma.AtLeast<{
    revId?: bigint | number
    AND?: FarmIncomeHistoryWhereInput | FarmIncomeHistoryWhereInput[]
    OR?: FarmIncomeHistoryWhereInput[]
    NOT?: FarmIncomeHistoryWhereInput | FarmIncomeHistoryWhereInput[]
    id?: BigIntFilter<"FarmIncomeHistory"> | bigint | number
    incomeTypeId?: BigIntFilter<"FarmIncomeHistory"> | bigint | number
    detail?: StringNullableFilter<"FarmIncomeHistory"> | string | null
    amount?: BigIntFilter<"FarmIncomeHistory"> | bigint | number
    price?: BigIntFilter<"FarmIncomeHistory"> | bigint | number
    date?: DateTimeFilter<"FarmIncomeHistory"> | Date | string
    deleted?: BoolFilter<"FarmIncomeHistory"> | boolean
    createAt?: DateTimeFilter<"FarmIncomeHistory"> | Date | string
    createBy?: BigIntNullableFilter<"FarmIncomeHistory"> | bigint | number | null
    updatedAt?: DateTimeFilter<"FarmIncomeHistory"> | Date | string
    updatedBy?: BigIntNullableFilter<"FarmIncomeHistory"> | bigint | number | null
    farmIncomeTypeHistoryIdRel?: XOR<FarmIncomeTypeScalarRelationFilter, FarmIncomeTypeWhereInput>
    farmIncomeHistoryCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    farmIncomeHistoryUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "revId">

  export type FarmIncomeHistoryOrderByWithAggregationInput = {
    revId?: SortOrder
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrderInput | SortOrder
    amount?: SortOrder
    price?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: FarmIncomeHistoryCountOrderByAggregateInput
    _avg?: FarmIncomeHistoryAvgOrderByAggregateInput
    _max?: FarmIncomeHistoryMaxOrderByAggregateInput
    _min?: FarmIncomeHistoryMinOrderByAggregateInput
    _sum?: FarmIncomeHistorySumOrderByAggregateInput
  }

  export type FarmIncomeHistoryScalarWhereWithAggregatesInput = {
    AND?: FarmIncomeHistoryScalarWhereWithAggregatesInput | FarmIncomeHistoryScalarWhereWithAggregatesInput[]
    OR?: FarmIncomeHistoryScalarWhereWithAggregatesInput[]
    NOT?: FarmIncomeHistoryScalarWhereWithAggregatesInput | FarmIncomeHistoryScalarWhereWithAggregatesInput[]
    revId?: BigIntWithAggregatesFilter<"FarmIncomeHistory"> | bigint | number
    id?: BigIntWithAggregatesFilter<"FarmIncomeHistory"> | bigint | number
    incomeTypeId?: BigIntWithAggregatesFilter<"FarmIncomeHistory"> | bigint | number
    detail?: StringNullableWithAggregatesFilter<"FarmIncomeHistory"> | string | null
    amount?: BigIntWithAggregatesFilter<"FarmIncomeHistory"> | bigint | number
    price?: BigIntWithAggregatesFilter<"FarmIncomeHistory"> | bigint | number
    date?: DateTimeWithAggregatesFilter<"FarmIncomeHistory"> | Date | string
    deleted?: BoolWithAggregatesFilter<"FarmIncomeHistory"> | boolean
    createAt?: DateTimeWithAggregatesFilter<"FarmIncomeHistory"> | Date | string
    createBy?: BigIntNullableWithAggregatesFilter<"FarmIncomeHistory"> | bigint | number | null
    updatedAt?: DateTimeWithAggregatesFilter<"FarmIncomeHistory"> | Date | string
    updatedBy?: BigIntNullableWithAggregatesFilter<"FarmIncomeHistory"> | bigint | number | null
  }

  export type FarmIncomeTypeWhereInput = {
    AND?: FarmIncomeTypeWhereInput | FarmIncomeTypeWhereInput[]
    OR?: FarmIncomeTypeWhereInput[]
    NOT?: FarmIncomeTypeWhereInput | FarmIncomeTypeWhereInput[]
    id?: BigIntFilter<"FarmIncomeType"> | bigint | number
    incomeTypeName?: StringFilter<"FarmIncomeType"> | string
    code?: StringFilter<"FarmIncomeType"> | string
    description?: StringFilter<"FarmIncomeType"> | string
    deleted?: BoolFilter<"FarmIncomeType"> | boolean
    createAt?: DateTimeFilter<"FarmIncomeType"> | Date | string
    createBy?: BigIntNullableFilter<"FarmIncomeType"> | bigint | number | null
    updatedAt?: DateTimeFilter<"FarmIncomeType"> | Date | string
    updatedBy?: BigIntNullableFilter<"FarmIncomeType"> | bigint | number | null
    farmIncomeTypeCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    farmIncomeTypeUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    farmIncomeTypeIdRel?: FarmIncomeListRelationFilter
    farmIncomeTypeHistoryIdRel?: FarmIncomeHistoryListRelationFilter
  }

  export type FarmIncomeTypeOrderByWithRelationInput = {
    id?: SortOrder
    incomeTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    farmIncomeTypeCreateByRel?: UserOrderByWithRelationInput
    farmIncomeTypeUpdateByRel?: UserOrderByWithRelationInput
    farmIncomeTypeIdRel?: FarmIncomeOrderByRelationAggregateInput
    farmIncomeTypeHistoryIdRel?: FarmIncomeHistoryOrderByRelationAggregateInput
  }

  export type FarmIncomeTypeWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: FarmIncomeTypeWhereInput | FarmIncomeTypeWhereInput[]
    OR?: FarmIncomeTypeWhereInput[]
    NOT?: FarmIncomeTypeWhereInput | FarmIncomeTypeWhereInput[]
    incomeTypeName?: StringFilter<"FarmIncomeType"> | string
    code?: StringFilter<"FarmIncomeType"> | string
    description?: StringFilter<"FarmIncomeType"> | string
    deleted?: BoolFilter<"FarmIncomeType"> | boolean
    createAt?: DateTimeFilter<"FarmIncomeType"> | Date | string
    createBy?: BigIntNullableFilter<"FarmIncomeType"> | bigint | number | null
    updatedAt?: DateTimeFilter<"FarmIncomeType"> | Date | string
    updatedBy?: BigIntNullableFilter<"FarmIncomeType"> | bigint | number | null
    farmIncomeTypeCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    farmIncomeTypeUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    farmIncomeTypeIdRel?: FarmIncomeListRelationFilter
    farmIncomeTypeHistoryIdRel?: FarmIncomeHistoryListRelationFilter
  }, "id">

  export type FarmIncomeTypeOrderByWithAggregationInput = {
    id?: SortOrder
    incomeTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: FarmIncomeTypeCountOrderByAggregateInput
    _avg?: FarmIncomeTypeAvgOrderByAggregateInput
    _max?: FarmIncomeTypeMaxOrderByAggregateInput
    _min?: FarmIncomeTypeMinOrderByAggregateInput
    _sum?: FarmIncomeTypeSumOrderByAggregateInput
  }

  export type FarmIncomeTypeScalarWhereWithAggregatesInput = {
    AND?: FarmIncomeTypeScalarWhereWithAggregatesInput | FarmIncomeTypeScalarWhereWithAggregatesInput[]
    OR?: FarmIncomeTypeScalarWhereWithAggregatesInput[]
    NOT?: FarmIncomeTypeScalarWhereWithAggregatesInput | FarmIncomeTypeScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"FarmIncomeType"> | bigint | number
    incomeTypeName?: StringWithAggregatesFilter<"FarmIncomeType"> | string
    code?: StringWithAggregatesFilter<"FarmIncomeType"> | string
    description?: StringWithAggregatesFilter<"FarmIncomeType"> | string
    deleted?: BoolWithAggregatesFilter<"FarmIncomeType"> | boolean
    createAt?: DateTimeWithAggregatesFilter<"FarmIncomeType"> | Date | string
    createBy?: BigIntNullableWithAggregatesFilter<"FarmIncomeType"> | bigint | number | null
    updatedAt?: DateTimeWithAggregatesFilter<"FarmIncomeType"> | Date | string
    updatedBy?: BigIntNullableWithAggregatesFilter<"FarmIncomeType"> | bigint | number | null
  }

  export type FarmSpendingWhereInput = {
    AND?: FarmSpendingWhereInput | FarmSpendingWhereInput[]
    OR?: FarmSpendingWhereInput[]
    NOT?: FarmSpendingWhereInput | FarmSpendingWhereInput[]
    id?: BigIntFilter<"FarmSpending"> | bigint | number
    spendingTypeId?: BigIntFilter<"FarmSpending"> | bigint | number
    detail?: StringNullableFilter<"FarmSpending"> | string | null
    funds?: BigIntFilter<"FarmSpending"> | bigint | number
    date?: DateTimeFilter<"FarmSpending"> | Date | string
    deleted?: BoolFilter<"FarmSpending"> | boolean
    createAt?: DateTimeFilter<"FarmSpending"> | Date | string
    createBy?: BigIntNullableFilter<"FarmSpending"> | bigint | number | null
    updatedAt?: DateTimeFilter<"FarmSpending"> | Date | string
    updatedBy?: BigIntNullableFilter<"FarmSpending"> | bigint | number | null
    farmSpendingTypeIdRel?: XOR<FarmSpendingTypeScalarRelationFilter, FarmSpendingTypeWhereInput>
    farmSpendingCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    farmSpendingUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type FarmSpendingOrderByWithRelationInput = {
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrderInput | SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    farmSpendingTypeIdRel?: FarmSpendingTypeOrderByWithRelationInput
    farmSpendingCreateByRel?: UserOrderByWithRelationInput
    farmSpendingUpdateByRel?: UserOrderByWithRelationInput
  }

  export type FarmSpendingWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: FarmSpendingWhereInput | FarmSpendingWhereInput[]
    OR?: FarmSpendingWhereInput[]
    NOT?: FarmSpendingWhereInput | FarmSpendingWhereInput[]
    spendingTypeId?: BigIntFilter<"FarmSpending"> | bigint | number
    detail?: StringNullableFilter<"FarmSpending"> | string | null
    funds?: BigIntFilter<"FarmSpending"> | bigint | number
    date?: DateTimeFilter<"FarmSpending"> | Date | string
    deleted?: BoolFilter<"FarmSpending"> | boolean
    createAt?: DateTimeFilter<"FarmSpending"> | Date | string
    createBy?: BigIntNullableFilter<"FarmSpending"> | bigint | number | null
    updatedAt?: DateTimeFilter<"FarmSpending"> | Date | string
    updatedBy?: BigIntNullableFilter<"FarmSpending"> | bigint | number | null
    farmSpendingTypeIdRel?: XOR<FarmSpendingTypeScalarRelationFilter, FarmSpendingTypeWhereInput>
    farmSpendingCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    farmSpendingUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type FarmSpendingOrderByWithAggregationInput = {
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrderInput | SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: FarmSpendingCountOrderByAggregateInput
    _avg?: FarmSpendingAvgOrderByAggregateInput
    _max?: FarmSpendingMaxOrderByAggregateInput
    _min?: FarmSpendingMinOrderByAggregateInput
    _sum?: FarmSpendingSumOrderByAggregateInput
  }

  export type FarmSpendingScalarWhereWithAggregatesInput = {
    AND?: FarmSpendingScalarWhereWithAggregatesInput | FarmSpendingScalarWhereWithAggregatesInput[]
    OR?: FarmSpendingScalarWhereWithAggregatesInput[]
    NOT?: FarmSpendingScalarWhereWithAggregatesInput | FarmSpendingScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"FarmSpending"> | bigint | number
    spendingTypeId?: BigIntWithAggregatesFilter<"FarmSpending"> | bigint | number
    detail?: StringNullableWithAggregatesFilter<"FarmSpending"> | string | null
    funds?: BigIntWithAggregatesFilter<"FarmSpending"> | bigint | number
    date?: DateTimeWithAggregatesFilter<"FarmSpending"> | Date | string
    deleted?: BoolWithAggregatesFilter<"FarmSpending"> | boolean
    createAt?: DateTimeWithAggregatesFilter<"FarmSpending"> | Date | string
    createBy?: BigIntNullableWithAggregatesFilter<"FarmSpending"> | bigint | number | null
    updatedAt?: DateTimeWithAggregatesFilter<"FarmSpending"> | Date | string
    updatedBy?: BigIntNullableWithAggregatesFilter<"FarmSpending"> | bigint | number | null
  }

  export type FarmSpendingHistoryWhereInput = {
    AND?: FarmSpendingHistoryWhereInput | FarmSpendingHistoryWhereInput[]
    OR?: FarmSpendingHistoryWhereInput[]
    NOT?: FarmSpendingHistoryWhereInput | FarmSpendingHistoryWhereInput[]
    revId?: BigIntFilter<"FarmSpendingHistory"> | bigint | number
    id?: BigIntFilter<"FarmSpendingHistory"> | bigint | number
    spendingTypeId?: BigIntFilter<"FarmSpendingHistory"> | bigint | number
    detail?: StringNullableFilter<"FarmSpendingHistory"> | string | null
    funds?: BigIntFilter<"FarmSpendingHistory"> | bigint | number
    date?: DateTimeFilter<"FarmSpendingHistory"> | Date | string
    deleted?: BoolFilter<"FarmSpendingHistory"> | boolean
    createAt?: DateTimeFilter<"FarmSpendingHistory"> | Date | string
    createBy?: BigIntNullableFilter<"FarmSpendingHistory"> | bigint | number | null
    updatedAt?: DateTimeFilter<"FarmSpendingHistory"> | Date | string
    updatedBy?: BigIntNullableFilter<"FarmSpendingHistory"> | bigint | number | null
    farmSpendingTypeHistoryIdRel?: XOR<FarmSpendingTypeScalarRelationFilter, FarmSpendingTypeWhereInput>
    farmSpendingHistoryCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    farmSpendingHistoryUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type FarmSpendingHistoryOrderByWithRelationInput = {
    revId?: SortOrder
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrderInput | SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    farmSpendingTypeHistoryIdRel?: FarmSpendingTypeOrderByWithRelationInput
    farmSpendingHistoryCreateByRel?: UserOrderByWithRelationInput
    farmSpendingHistoryUpdateByRel?: UserOrderByWithRelationInput
  }

  export type FarmSpendingHistoryWhereUniqueInput = Prisma.AtLeast<{
    revId?: bigint | number
    AND?: FarmSpendingHistoryWhereInput | FarmSpendingHistoryWhereInput[]
    OR?: FarmSpendingHistoryWhereInput[]
    NOT?: FarmSpendingHistoryWhereInput | FarmSpendingHistoryWhereInput[]
    id?: BigIntFilter<"FarmSpendingHistory"> | bigint | number
    spendingTypeId?: BigIntFilter<"FarmSpendingHistory"> | bigint | number
    detail?: StringNullableFilter<"FarmSpendingHistory"> | string | null
    funds?: BigIntFilter<"FarmSpendingHistory"> | bigint | number
    date?: DateTimeFilter<"FarmSpendingHistory"> | Date | string
    deleted?: BoolFilter<"FarmSpendingHistory"> | boolean
    createAt?: DateTimeFilter<"FarmSpendingHistory"> | Date | string
    createBy?: BigIntNullableFilter<"FarmSpendingHistory"> | bigint | number | null
    updatedAt?: DateTimeFilter<"FarmSpendingHistory"> | Date | string
    updatedBy?: BigIntNullableFilter<"FarmSpendingHistory"> | bigint | number | null
    farmSpendingTypeHistoryIdRel?: XOR<FarmSpendingTypeScalarRelationFilter, FarmSpendingTypeWhereInput>
    farmSpendingHistoryCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    farmSpendingHistoryUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "revId">

  export type FarmSpendingHistoryOrderByWithAggregationInput = {
    revId?: SortOrder
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrderInput | SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: FarmSpendingHistoryCountOrderByAggregateInput
    _avg?: FarmSpendingHistoryAvgOrderByAggregateInput
    _max?: FarmSpendingHistoryMaxOrderByAggregateInput
    _min?: FarmSpendingHistoryMinOrderByAggregateInput
    _sum?: FarmSpendingHistorySumOrderByAggregateInput
  }

  export type FarmSpendingHistoryScalarWhereWithAggregatesInput = {
    AND?: FarmSpendingHistoryScalarWhereWithAggregatesInput | FarmSpendingHistoryScalarWhereWithAggregatesInput[]
    OR?: FarmSpendingHistoryScalarWhereWithAggregatesInput[]
    NOT?: FarmSpendingHistoryScalarWhereWithAggregatesInput | FarmSpendingHistoryScalarWhereWithAggregatesInput[]
    revId?: BigIntWithAggregatesFilter<"FarmSpendingHistory"> | bigint | number
    id?: BigIntWithAggregatesFilter<"FarmSpendingHistory"> | bigint | number
    spendingTypeId?: BigIntWithAggregatesFilter<"FarmSpendingHistory"> | bigint | number
    detail?: StringNullableWithAggregatesFilter<"FarmSpendingHistory"> | string | null
    funds?: BigIntWithAggregatesFilter<"FarmSpendingHistory"> | bigint | number
    date?: DateTimeWithAggregatesFilter<"FarmSpendingHistory"> | Date | string
    deleted?: BoolWithAggregatesFilter<"FarmSpendingHistory"> | boolean
    createAt?: DateTimeWithAggregatesFilter<"FarmSpendingHistory"> | Date | string
    createBy?: BigIntNullableWithAggregatesFilter<"FarmSpendingHistory"> | bigint | number | null
    updatedAt?: DateTimeWithAggregatesFilter<"FarmSpendingHistory"> | Date | string
    updatedBy?: BigIntNullableWithAggregatesFilter<"FarmSpendingHistory"> | bigint | number | null
  }

  export type FarmSpendingTypeWhereInput = {
    AND?: FarmSpendingTypeWhereInput | FarmSpendingTypeWhereInput[]
    OR?: FarmSpendingTypeWhereInput[]
    NOT?: FarmSpendingTypeWhereInput | FarmSpendingTypeWhereInput[]
    id?: BigIntFilter<"FarmSpendingType"> | bigint | number
    spendingTypeName?: StringFilter<"FarmSpendingType"> | string
    code?: StringFilter<"FarmSpendingType"> | string
    description?: StringFilter<"FarmSpendingType"> | string
    deleted?: BoolFilter<"FarmSpendingType"> | boolean
    createAt?: DateTimeFilter<"FarmSpendingType"> | Date | string
    createBy?: BigIntNullableFilter<"FarmSpendingType"> | bigint | number | null
    updatedAt?: DateTimeFilter<"FarmSpendingType"> | Date | string
    updatedBy?: BigIntNullableFilter<"FarmSpendingType"> | bigint | number | null
    farmSpendingTypeCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    farmSpendingTypeUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    farmSpendingTypeIdRel?: FarmSpendingListRelationFilter
    farmSpendingTypeHistoryIdRel?: FarmSpendingHistoryListRelationFilter
  }

  export type FarmSpendingTypeOrderByWithRelationInput = {
    id?: SortOrder
    spendingTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    farmSpendingTypeCreateByRel?: UserOrderByWithRelationInput
    farmSpendingTypeUpdateByRel?: UserOrderByWithRelationInput
    farmSpendingTypeIdRel?: FarmSpendingOrderByRelationAggregateInput
    farmSpendingTypeHistoryIdRel?: FarmSpendingHistoryOrderByRelationAggregateInput
  }

  export type FarmSpendingTypeWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: FarmSpendingTypeWhereInput | FarmSpendingTypeWhereInput[]
    OR?: FarmSpendingTypeWhereInput[]
    NOT?: FarmSpendingTypeWhereInput | FarmSpendingTypeWhereInput[]
    spendingTypeName?: StringFilter<"FarmSpendingType"> | string
    code?: StringFilter<"FarmSpendingType"> | string
    description?: StringFilter<"FarmSpendingType"> | string
    deleted?: BoolFilter<"FarmSpendingType"> | boolean
    createAt?: DateTimeFilter<"FarmSpendingType"> | Date | string
    createBy?: BigIntNullableFilter<"FarmSpendingType"> | bigint | number | null
    updatedAt?: DateTimeFilter<"FarmSpendingType"> | Date | string
    updatedBy?: BigIntNullableFilter<"FarmSpendingType"> | bigint | number | null
    farmSpendingTypeCreateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    farmSpendingTypeUpdateByRel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    farmSpendingTypeIdRel?: FarmSpendingListRelationFilter
    farmSpendingTypeHistoryIdRel?: FarmSpendingHistoryListRelationFilter
  }, "id">

  export type FarmSpendingTypeOrderByWithAggregationInput = {
    id?: SortOrder
    spendingTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: FarmSpendingTypeCountOrderByAggregateInput
    _avg?: FarmSpendingTypeAvgOrderByAggregateInput
    _max?: FarmSpendingTypeMaxOrderByAggregateInput
    _min?: FarmSpendingTypeMinOrderByAggregateInput
    _sum?: FarmSpendingTypeSumOrderByAggregateInput
  }

  export type FarmSpendingTypeScalarWhereWithAggregatesInput = {
    AND?: FarmSpendingTypeScalarWhereWithAggregatesInput | FarmSpendingTypeScalarWhereWithAggregatesInput[]
    OR?: FarmSpendingTypeScalarWhereWithAggregatesInput[]
    NOT?: FarmSpendingTypeScalarWhereWithAggregatesInput | FarmSpendingTypeScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"FarmSpendingType"> | bigint | number
    spendingTypeName?: StringWithAggregatesFilter<"FarmSpendingType"> | string
    code?: StringWithAggregatesFilter<"FarmSpendingType"> | string
    description?: StringWithAggregatesFilter<"FarmSpendingType"> | string
    deleted?: BoolWithAggregatesFilter<"FarmSpendingType"> | boolean
    createAt?: DateTimeWithAggregatesFilter<"FarmSpendingType"> | Date | string
    createBy?: BigIntNullableWithAggregatesFilter<"FarmSpendingType"> | bigint | number | null
    updatedAt?: DateTimeWithAggregatesFilter<"FarmSpendingType"> | Date | string
    updatedBy?: BigIntNullableWithAggregatesFilter<"FarmSpendingType"> | bigint | number | null
  }

  export type UserCreateInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserCreateManyInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type UserUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type UserHistoryCreateInput = {
    id?: bigint | number
    createdAt?: Date | string
    updatedAt?: Date | string
    deleted?: boolean
    oldData: JsonNullValueInput | InputJsonValue
    newData: JsonNullValueInput | InputJsonValue
    userHistoryCreatedByRel?: UserCreateNestedOneWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserCreateNestedOneWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel: UserCreateNestedOneWithoutUserHistoryIdRelInput
  }

  export type UserHistoryUncheckedCreateInput = {
    id?: bigint | number
    userId: bigint | number
    createdAt?: Date | string
    createdBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    deleted?: boolean
    oldData: JsonNullValueInput | InputJsonValue
    newData: JsonNullValueInput | InputJsonValue
  }

  export type UserHistoryUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    oldData?: JsonNullValueInput | InputJsonValue
    newData?: JsonNullValueInput | InputJsonValue
    userHistoryCreatedByRel?: UserUpdateOneWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserUpdateOneWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserUpdateOneRequiredWithoutUserHistoryIdRelNestedInput
  }

  export type UserHistoryUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userId?: BigIntFieldUpdateOperationsInput | bigint | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    oldData?: JsonNullValueInput | InputJsonValue
    newData?: JsonNullValueInput | InputJsonValue
  }

  export type UserHistoryCreateManyInput = {
    id?: bigint | number
    userId: bigint | number
    createdAt?: Date | string
    createdBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    deleted?: boolean
    oldData: JsonNullValueInput | InputJsonValue
    newData: JsonNullValueInput | InputJsonValue
  }

  export type UserHistoryUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    oldData?: JsonNullValueInput | InputJsonValue
    newData?: JsonNullValueInput | InputJsonValue
  }

  export type UserHistoryUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userId?: BigIntFieldUpdateOperationsInput | bigint | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    oldData?: JsonNullValueInput | InputJsonValue
    newData?: JsonNullValueInput | InputJsonValue
  }

  export type ChurchIncomeCreateInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    churchIncomeTypeIdRel: ChurchIncomeTypeCreateNestedOneWithoutChurchIncomeTypeIdRelInput
    churchIncomeCreateByRel?: UserCreateNestedOneWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: UserCreateNestedOneWithoutChurchIncomeUpdateByRelInput
  }

  export type ChurchIncomeUncheckedCreateInput = {
    id?: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchIncomeUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchIncomeTypeIdRel?: ChurchIncomeTypeUpdateOneRequiredWithoutChurchIncomeTypeIdRelNestedInput
    churchIncomeCreateByRel?: UserUpdateOneWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: UserUpdateOneWithoutChurchIncomeUpdateByRelNestedInput
  }

  export type ChurchIncomeUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type ChurchIncomeCreateManyInput = {
    id?: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchIncomeUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChurchIncomeUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type ChurchIncomeHistoryCreateInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    churchIncomeTypeHistoryIdRel: ChurchIncomeTypeCreateNestedOneWithoutChurchIncomeTypeHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: UserCreateNestedOneWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: UserCreateNestedOneWithoutChurchIncomeHistoryUpdateByRelInput
  }

  export type ChurchIncomeHistoryUncheckedCreateInput = {
    revId?: bigint | number
    id: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchIncomeHistoryUpdateInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchIncomeTypeHistoryIdRel?: ChurchIncomeTypeUpdateOneRequiredWithoutChurchIncomeTypeHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: UserUpdateOneWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: UserUpdateOneWithoutChurchIncomeHistoryUpdateByRelNestedInput
  }

  export type ChurchIncomeHistoryUncheckedUpdateInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type ChurchIncomeHistoryCreateManyInput = {
    revId?: bigint | number
    id: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchIncomeHistoryUpdateManyMutationInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChurchIncomeHistoryUncheckedUpdateManyInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type ChurchIncomeTypeCreateInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    churchIncomeTypeCreateByRel?: UserCreateNestedOneWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: UserCreateNestedOneWithoutChurchIncomeTypeUpdateByRelInput
    churchIncomeTypeIdRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeTypeIdRelInput
    churchIncomeTypeHistoryIdRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeTypeHistoryIdRelInput
  }

  export type ChurchIncomeTypeUncheckedCreateInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    churchIncomeTypeIdRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeTypeIdRelInput
    churchIncomeTypeHistoryIdRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeTypeHistoryIdRelInput
  }

  export type ChurchIncomeTypeUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchIncomeTypeCreateByRel?: UserUpdateOneWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: UserUpdateOneWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchIncomeTypeIdRel?: ChurchIncomeUpdateManyWithoutChurchIncomeTypeIdRelNestedInput
    churchIncomeTypeHistoryIdRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeTypeHistoryIdRelNestedInput
  }

  export type ChurchIncomeTypeUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    churchIncomeTypeIdRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeTypeIdRelNestedInput
    churchIncomeTypeHistoryIdRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeTypeHistoryIdRelNestedInput
  }

  export type ChurchIncomeTypeCreateManyInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchIncomeTypeUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChurchIncomeTypeUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type ChurchSpendingCreateInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    bill?: string | null
    billNumber?: string | null
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    churchSpendingTypeIdRel: ChurchSpendingTypeCreateNestedOneWithoutChurchSpendingTypeIdRelInput
    churchSpendingCreateByRel?: UserCreateNestedOneWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: UserCreateNestedOneWithoutChurchSpendingUpdateByRelInput
  }

  export type ChurchSpendingUncheckedCreateInput = {
    id?: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    bill?: string | null
    billNumber?: string | null
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchSpendingUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    bill?: NullableStringFieldUpdateOperationsInput | string | null
    billNumber?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchSpendingTypeIdRel?: ChurchSpendingTypeUpdateOneRequiredWithoutChurchSpendingTypeIdRelNestedInput
    churchSpendingCreateByRel?: UserUpdateOneWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: UserUpdateOneWithoutChurchSpendingUpdateByRelNestedInput
  }

  export type ChurchSpendingUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    bill?: NullableStringFieldUpdateOperationsInput | string | null
    billNumber?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type ChurchSpendingCreateManyInput = {
    id?: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    bill?: string | null
    billNumber?: string | null
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchSpendingUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    bill?: NullableStringFieldUpdateOperationsInput | string | null
    billNumber?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChurchSpendingUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    bill?: NullableStringFieldUpdateOperationsInput | string | null
    billNumber?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type ChurchSpendingHistoryCreateInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    bill: string
    billNumber: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    churchSpendingTypeHistoryIdRel: ChurchSpendingTypeCreateNestedOneWithoutChurchSpendingTypeHistoryIdRelInput
    churchSpendingHistoryCreateByRel?: UserCreateNestedOneWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: UserCreateNestedOneWithoutChurchSpendingHistoryUpdateByRelInput
  }

  export type ChurchSpendingHistoryUncheckedCreateInput = {
    revId?: bigint | number
    id: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    bill: string
    billNumber: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchSpendingHistoryUpdateInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    bill?: StringFieldUpdateOperationsInput | string
    billNumber?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchSpendingTypeHistoryIdRel?: ChurchSpendingTypeUpdateOneRequiredWithoutChurchSpendingTypeHistoryIdRelNestedInput
    churchSpendingHistoryCreateByRel?: UserUpdateOneWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: UserUpdateOneWithoutChurchSpendingHistoryUpdateByRelNestedInput
  }

  export type ChurchSpendingHistoryUncheckedUpdateInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    bill?: StringFieldUpdateOperationsInput | string
    billNumber?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type ChurchSpendingHistoryCreateManyInput = {
    revId?: bigint | number
    id: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    bill: string
    billNumber: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchSpendingHistoryUpdateManyMutationInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    bill?: StringFieldUpdateOperationsInput | string
    billNumber?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChurchSpendingHistoryUncheckedUpdateManyInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    bill?: StringFieldUpdateOperationsInput | string
    billNumber?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type ChurchSpendingTypeCreateInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    createAt?: Date | string
    deleted?: boolean
    updatedAt?: Date | string
    churchSpendingTypeCreateByRel?: UserCreateNestedOneWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: UserCreateNestedOneWithoutChurchSpendingTypeUpdateByRelInput
    churchSpendingTypeIdRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingTypeIdRelInput
    churchSpendingTypeHistoryIdRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingTypeHistoryIdRelInput
  }

  export type ChurchSpendingTypeUncheckedCreateInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    createAt?: Date | string
    createBy?: bigint | number | null
    deleted?: boolean
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    churchSpendingTypeIdRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingTypeIdRelInput
    churchSpendingTypeHistoryIdRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingTypeHistoryIdRelInput
  }

  export type ChurchSpendingTypeUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchSpendingTypeCreateByRel?: UserUpdateOneWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: UserUpdateOneWithoutChurchSpendingTypeUpdateByRelNestedInput
    churchSpendingTypeIdRel?: ChurchSpendingUpdateManyWithoutChurchSpendingTypeIdRelNestedInput
    churchSpendingTypeHistoryIdRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingTypeHistoryIdRelNestedInput
  }

  export type ChurchSpendingTypeUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    churchSpendingTypeIdRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingTypeIdRelNestedInput
    churchSpendingTypeHistoryIdRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingTypeHistoryIdRelNestedInput
  }

  export type ChurchSpendingTypeCreateManyInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    createAt?: Date | string
    createBy?: bigint | number | null
    deleted?: boolean
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchSpendingTypeUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChurchSpendingTypeUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreIncomeCreateInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    storeIncomeTypeIdRel: StoreIncomeTypeCreateNestedOneWithoutStoreIncomeTypeIdRelInput
    storeIncomeCreateByRel?: UserCreateNestedOneWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: UserCreateNestedOneWithoutStoreIncomeUpdateByRelInput
  }

  export type StoreIncomeUncheckedCreateInput = {
    id?: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreIncomeUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeIncomeTypeIdRel?: StoreIncomeTypeUpdateOneRequiredWithoutStoreIncomeTypeIdRelNestedInput
    storeIncomeCreateByRel?: UserUpdateOneWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: UserUpdateOneWithoutStoreIncomeUpdateByRelNestedInput
  }

  export type StoreIncomeUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreIncomeCreateManyInput = {
    id?: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreIncomeUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StoreIncomeUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreIncomeHistoryCreateInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    storeIncomeTypeHistoryIdRel: StoreIncomeTypeCreateNestedOneWithoutStoreIncomeTypeHistoryIdRelInput
    storeIncomeHistoryCreateByRel?: UserCreateNestedOneWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: UserCreateNestedOneWithoutStoreIncomeHistoryUpdateByRelInput
  }

  export type StoreIncomeHistoryUncheckedCreateInput = {
    revId?: bigint | number
    id: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreIncomeHistoryUpdateInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeIncomeTypeHistoryIdRel?: StoreIncomeTypeUpdateOneRequiredWithoutStoreIncomeTypeHistoryIdRelNestedInput
    storeIncomeHistoryCreateByRel?: UserUpdateOneWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: UserUpdateOneWithoutStoreIncomeHistoryUpdateByRelNestedInput
  }

  export type StoreIncomeHistoryUncheckedUpdateInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreIncomeHistoryCreateManyInput = {
    revId?: bigint | number
    id: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreIncomeHistoryUpdateManyMutationInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StoreIncomeHistoryUncheckedUpdateManyInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreIncomeTypeCreateInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    storeIncomeTypeCreateByRel?: UserCreateNestedOneWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: UserCreateNestedOneWithoutStoreIncomeTypeUpdateByRelInput
    storeIncomeTypeIdRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeTypeIdRelInput
    storeIncomeTypeHistoryIdRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeTypeHistoryIdRelInput
  }

  export type StoreIncomeTypeUncheckedCreateInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    storeIncomeTypeIdRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeTypeIdRelInput
    storeIncomeTypeHistoryIdRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeTypeHistoryIdRelInput
  }

  export type StoreIncomeTypeUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeIncomeTypeCreateByRel?: UserUpdateOneWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: UserUpdateOneWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeIncomeTypeIdRel?: StoreIncomeUpdateManyWithoutStoreIncomeTypeIdRelNestedInput
    storeIncomeTypeHistoryIdRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeTypeHistoryIdRelNestedInput
  }

  export type StoreIncomeTypeUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    storeIncomeTypeIdRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeTypeIdRelNestedInput
    storeIncomeTypeHistoryIdRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeTypeHistoryIdRelNestedInput
  }

  export type StoreIncomeTypeCreateManyInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreIncomeTypeUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StoreIncomeTypeUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreSpendingCreateInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    storeSpendingTypeIdRel: StoreSpendingTypeCreateNestedOneWithoutStoreSpendingTypeIdRelInput
    storeSpendingCreateByRel?: UserCreateNestedOneWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: UserCreateNestedOneWithoutStoreSpendingUpdateByRelInput
  }

  export type StoreSpendingUncheckedCreateInput = {
    id?: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreSpendingUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeSpendingTypeIdRel?: StoreSpendingTypeUpdateOneRequiredWithoutStoreSpendingTypeIdRelNestedInput
    storeSpendingCreateByRel?: UserUpdateOneWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: UserUpdateOneWithoutStoreSpendingUpdateByRelNestedInput
  }

  export type StoreSpendingUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreSpendingCreateManyInput = {
    id?: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreSpendingUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StoreSpendingUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreSpendingHistoryCreateInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    storeSpendingTypeHistoryIdRel: StoreSpendingTypeCreateNestedOneWithoutStoreSpendingTypeHistoryIdRelInput
    storeSpendingHistoryCreateByRel?: UserCreateNestedOneWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: UserCreateNestedOneWithoutStoreSpendingHistoryUpdateByRelInput
  }

  export type StoreSpendingHistoryUncheckedCreateInput = {
    revId?: bigint | number
    id: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreSpendingHistoryUpdateInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeSpendingTypeHistoryIdRel?: StoreSpendingTypeUpdateOneRequiredWithoutStoreSpendingTypeHistoryIdRelNestedInput
    storeSpendingHistoryCreateByRel?: UserUpdateOneWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: UserUpdateOneWithoutStoreSpendingHistoryUpdateByRelNestedInput
  }

  export type StoreSpendingHistoryUncheckedUpdateInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreSpendingHistoryCreateManyInput = {
    revId?: bigint | number
    id: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreSpendingHistoryUpdateManyMutationInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StoreSpendingHistoryUncheckedUpdateManyInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreSpendingTypeCreateInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    storeSpendingTypeCreateByRel?: UserCreateNestedOneWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: UserCreateNestedOneWithoutStoreSpendingTypeUpdateByRelInput
    storeSpendingTypeIdRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingTypeIdRelInput
    storeSpendingTypeHistoryIdRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingTypeHistoryIdRelInput
  }

  export type StoreSpendingTypeUncheckedCreateInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    storeSpendingTypeIdRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingTypeIdRelInput
    storeSpendingTypeHistoryIdRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingTypeHistoryIdRelInput
  }

  export type StoreSpendingTypeUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeSpendingTypeCreateByRel?: UserUpdateOneWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: UserUpdateOneWithoutStoreSpendingTypeUpdateByRelNestedInput
    storeSpendingTypeIdRel?: StoreSpendingUpdateManyWithoutStoreSpendingTypeIdRelNestedInput
    storeSpendingTypeHistoryIdRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingTypeHistoryIdRelNestedInput
  }

  export type StoreSpendingTypeUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    storeSpendingTypeIdRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingTypeIdRelNestedInput
    storeSpendingTypeHistoryIdRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingTypeHistoryIdRelNestedInput
  }

  export type StoreSpendingTypeCreateManyInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreSpendingTypeUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StoreSpendingTypeUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmIncomeCreateInput = {
    id?: bigint | number
    detail?: string | null
    amount?: bigint | number
    price: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    farmIncomeTypeIdRel: FarmIncomeTypeCreateNestedOneWithoutFarmIncomeTypeIdRelInput
    farmIncomeCreateByRel?: UserCreateNestedOneWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: UserCreateNestedOneWithoutFarmIncomeUpdateByRelInput
  }

  export type FarmIncomeUncheckedCreateInput = {
    id?: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    amount?: bigint | number
    price: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmIncomeUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmIncomeTypeIdRel?: FarmIncomeTypeUpdateOneRequiredWithoutFarmIncomeTypeIdRelNestedInput
    farmIncomeCreateByRel?: UserUpdateOneWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: UserUpdateOneWithoutFarmIncomeUpdateByRelNestedInput
  }

  export type FarmIncomeUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmIncomeCreateManyInput = {
    id?: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    amount?: bigint | number
    price: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmIncomeUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FarmIncomeUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmIncomeHistoryCreateInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    amount?: bigint | number
    price: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    farmIncomeTypeHistoryIdRel: FarmIncomeTypeCreateNestedOneWithoutFarmIncomeTypeHistoryIdRelInput
    farmIncomeHistoryCreateByRel?: UserCreateNestedOneWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: UserCreateNestedOneWithoutFarmIncomeHistoryUpdateByRelInput
  }

  export type FarmIncomeHistoryUncheckedCreateInput = {
    revId?: bigint | number
    id: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    amount?: bigint | number
    price: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmIncomeHistoryUpdateInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmIncomeTypeHistoryIdRel?: FarmIncomeTypeUpdateOneRequiredWithoutFarmIncomeTypeHistoryIdRelNestedInput
    farmIncomeHistoryCreateByRel?: UserUpdateOneWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: UserUpdateOneWithoutFarmIncomeHistoryUpdateByRelNestedInput
  }

  export type FarmIncomeHistoryUncheckedUpdateInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmIncomeHistoryCreateManyInput = {
    revId?: bigint | number
    id: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    amount?: bigint | number
    price: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmIncomeHistoryUpdateManyMutationInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FarmIncomeHistoryUncheckedUpdateManyInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmIncomeTypeCreateInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    farmIncomeTypeCreateByRel?: UserCreateNestedOneWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: UserCreateNestedOneWithoutFarmIncomeTypeUpdateByRelInput
    farmIncomeTypeIdRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeTypeIdRelInput
    farmIncomeTypeHistoryIdRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeTypeHistoryIdRelInput
  }

  export type FarmIncomeTypeUncheckedCreateInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    farmIncomeTypeIdRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeTypeIdRelInput
    farmIncomeTypeHistoryIdRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeTypeHistoryIdRelInput
  }

  export type FarmIncomeTypeUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmIncomeTypeCreateByRel?: UserUpdateOneWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: UserUpdateOneWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmIncomeTypeIdRel?: FarmIncomeUpdateManyWithoutFarmIncomeTypeIdRelNestedInput
    farmIncomeTypeHistoryIdRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeTypeHistoryIdRelNestedInput
  }

  export type FarmIncomeTypeUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    farmIncomeTypeIdRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeTypeIdRelNestedInput
    farmIncomeTypeHistoryIdRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeTypeHistoryIdRelNestedInput
  }

  export type FarmIncomeTypeCreateManyInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmIncomeTypeUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FarmIncomeTypeUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmSpendingCreateInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    farmSpendingTypeIdRel: FarmSpendingTypeCreateNestedOneWithoutFarmSpendingTypeIdRelInput
    farmSpendingCreateByRel?: UserCreateNestedOneWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: UserCreateNestedOneWithoutFarmSpendingUpdateByRelInput
  }

  export type FarmSpendingUncheckedCreateInput = {
    id?: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmSpendingUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmSpendingTypeIdRel?: FarmSpendingTypeUpdateOneRequiredWithoutFarmSpendingTypeIdRelNestedInput
    farmSpendingCreateByRel?: UserUpdateOneWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: UserUpdateOneWithoutFarmSpendingUpdateByRelNestedInput
  }

  export type FarmSpendingUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmSpendingCreateManyInput = {
    id?: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmSpendingUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FarmSpendingUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmSpendingHistoryCreateInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    farmSpendingTypeHistoryIdRel: FarmSpendingTypeCreateNestedOneWithoutFarmSpendingTypeHistoryIdRelInput
    farmSpendingHistoryCreateByRel?: UserCreateNestedOneWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: UserCreateNestedOneWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type FarmSpendingHistoryUncheckedCreateInput = {
    revId?: bigint | number
    id: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmSpendingHistoryUpdateInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmSpendingTypeHistoryIdRel?: FarmSpendingTypeUpdateOneRequiredWithoutFarmSpendingTypeHistoryIdRelNestedInput
    farmSpendingHistoryCreateByRel?: UserUpdateOneWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: UserUpdateOneWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type FarmSpendingHistoryUncheckedUpdateInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmSpendingHistoryCreateManyInput = {
    revId?: bigint | number
    id: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmSpendingHistoryUpdateManyMutationInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FarmSpendingHistoryUncheckedUpdateManyInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmSpendingTypeCreateInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    farmSpendingTypeCreateByRel?: UserCreateNestedOneWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: UserCreateNestedOneWithoutFarmSpendingTypeUpdateByRelInput
    farmSpendingTypeIdRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingTypeIdRelInput
    farmSpendingTypeHistoryIdRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingTypeHistoryIdRelInput
  }

  export type FarmSpendingTypeUncheckedCreateInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    farmSpendingTypeIdRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingTypeIdRelInput
    farmSpendingTypeHistoryIdRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingTypeHistoryIdRelInput
  }

  export type FarmSpendingTypeUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmSpendingTypeCreateByRel?: UserUpdateOneWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: UserUpdateOneWithoutFarmSpendingTypeUpdateByRelNestedInput
    farmSpendingTypeIdRel?: FarmSpendingUpdateManyWithoutFarmSpendingTypeIdRelNestedInput
    farmSpendingTypeHistoryIdRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingTypeHistoryIdRelNestedInput
  }

  export type FarmSpendingTypeUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    farmSpendingTypeIdRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingTypeIdRelNestedInput
    farmSpendingTypeHistoryIdRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingTypeHistoryIdRelNestedInput
  }

  export type FarmSpendingTypeCreateManyInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmSpendingTypeUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FarmSpendingTypeUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type BigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type EnumRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleFilter<$PrismaModel> | $Enums.Role
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type BigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type ChurchIncomeListRelationFilter = {
    every?: ChurchIncomeWhereInput
    some?: ChurchIncomeWhereInput
    none?: ChurchIncomeWhereInput
  }

  export type ChurchIncomeTypeListRelationFilter = {
    every?: ChurchIncomeTypeWhereInput
    some?: ChurchIncomeTypeWhereInput
    none?: ChurchIncomeTypeWhereInput
  }

  export type ChurchSpendingListRelationFilter = {
    every?: ChurchSpendingWhereInput
    some?: ChurchSpendingWhereInput
    none?: ChurchSpendingWhereInput
  }

  export type ChurchSpendingTypeListRelationFilter = {
    every?: ChurchSpendingTypeWhereInput
    some?: ChurchSpendingTypeWhereInput
    none?: ChurchSpendingTypeWhereInput
  }

  export type StoreIncomeListRelationFilter = {
    every?: StoreIncomeWhereInput
    some?: StoreIncomeWhereInput
    none?: StoreIncomeWhereInput
  }

  export type StoreIncomeTypeListRelationFilter = {
    every?: StoreIncomeTypeWhereInput
    some?: StoreIncomeTypeWhereInput
    none?: StoreIncomeTypeWhereInput
  }

  export type StoreSpendingListRelationFilter = {
    every?: StoreSpendingWhereInput
    some?: StoreSpendingWhereInput
    none?: StoreSpendingWhereInput
  }

  export type StoreSpendingTypeListRelationFilter = {
    every?: StoreSpendingTypeWhereInput
    some?: StoreSpendingTypeWhereInput
    none?: StoreSpendingTypeWhereInput
  }

  export type FarmIncomeListRelationFilter = {
    every?: FarmIncomeWhereInput
    some?: FarmIncomeWhereInput
    none?: FarmIncomeWhereInput
  }

  export type FarmIncomeTypeListRelationFilter = {
    every?: FarmIncomeTypeWhereInput
    some?: FarmIncomeTypeWhereInput
    none?: FarmIncomeTypeWhereInput
  }

  export type FarmSpendingListRelationFilter = {
    every?: FarmSpendingWhereInput
    some?: FarmSpendingWhereInput
    none?: FarmSpendingWhereInput
  }

  export type FarmSpendingTypeListRelationFilter = {
    every?: FarmSpendingTypeWhereInput
    some?: FarmSpendingTypeWhereInput
    none?: FarmSpendingTypeWhereInput
  }

  export type UserHistoryListRelationFilter = {
    every?: UserHistoryWhereInput
    some?: UserHistoryWhereInput
    none?: UserHistoryWhereInput
  }

  export type ChurchIncomeHistoryListRelationFilter = {
    every?: ChurchIncomeHistoryWhereInput
    some?: ChurchIncomeHistoryWhereInput
    none?: ChurchIncomeHistoryWhereInput
  }

  export type ChurchSpendingHistoryListRelationFilter = {
    every?: ChurchSpendingHistoryWhereInput
    some?: ChurchSpendingHistoryWhereInput
    none?: ChurchSpendingHistoryWhereInput
  }

  export type StoreIncomeHistoryListRelationFilter = {
    every?: StoreIncomeHistoryWhereInput
    some?: StoreIncomeHistoryWhereInput
    none?: StoreIncomeHistoryWhereInput
  }

  export type StoreSpendingHistoryListRelationFilter = {
    every?: StoreSpendingHistoryWhereInput
    some?: StoreSpendingHistoryWhereInput
    none?: StoreSpendingHistoryWhereInput
  }

  export type FarmIncomeHistoryListRelationFilter = {
    every?: FarmIncomeHistoryWhereInput
    some?: FarmIncomeHistoryWhereInput
    none?: FarmIncomeHistoryWhereInput
  }

  export type FarmSpendingHistoryListRelationFilter = {
    every?: FarmSpendingHistoryWhereInput
    some?: FarmSpendingHistoryWhereInput
    none?: FarmSpendingHistoryWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ChurchIncomeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ChurchIncomeTypeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ChurchSpendingOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ChurchSpendingTypeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StoreIncomeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StoreIncomeTypeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StoreSpendingOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StoreSpendingTypeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FarmIncomeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FarmIncomeTypeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FarmSpendingOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FarmSpendingTypeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserHistoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ChurchIncomeHistoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ChurchSpendingHistoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StoreIncomeHistoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StoreSpendingHistoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FarmIncomeHistoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FarmSpendingHistoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    userName?: SortOrder
    fullName?: SortOrder
    email?: SortOrder
    password?: SortOrder
    phoneNumber?: SortOrder
    address?: SortOrder
    role?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    id?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    userName?: SortOrder
    fullName?: SortOrder
    email?: SortOrder
    password?: SortOrder
    phoneNumber?: SortOrder
    address?: SortOrder
    role?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    userName?: SortOrder
    fullName?: SortOrder
    email?: SortOrder
    password?: SortOrder
    phoneNumber?: SortOrder
    address?: SortOrder
    role?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    id?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type EnumRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleFilter<$PrismaModel>
    _max?: NestedEnumRoleFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type BigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }
  export type JsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type UserHistoryCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deleted?: SortOrder
    oldData?: SortOrder
    newData?: SortOrder
  }

  export type UserHistoryAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type UserHistoryMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deleted?: SortOrder
  }

  export type UserHistoryMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deleted?: SortOrder
  }

  export type UserHistorySumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type ChurchIncomeTypeScalarRelationFilter = {
    is?: ChurchIncomeTypeWhereInput
    isNot?: ChurchIncomeTypeWhereInput
  }

  export type ChurchIncomeCountOrderByAggregateInput = {
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchIncomeAvgOrderByAggregateInput = {
    id?: SortOrder
    incomeTypeId?: SortOrder
    funds?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchIncomeMaxOrderByAggregateInput = {
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchIncomeMinOrderByAggregateInput = {
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchIncomeSumOrderByAggregateInput = {
    id?: SortOrder
    incomeTypeId?: SortOrder
    funds?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type ChurchIncomeHistoryCountOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchIncomeHistoryAvgOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    incomeTypeId?: SortOrder
    funds?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchIncomeHistoryMaxOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchIncomeHistoryMinOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchIncomeHistorySumOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    incomeTypeId?: SortOrder
    funds?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchIncomeTypeCountOrderByAggregateInput = {
    id?: SortOrder
    incomeTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchIncomeTypeAvgOrderByAggregateInput = {
    id?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchIncomeTypeMaxOrderByAggregateInput = {
    id?: SortOrder
    incomeTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchIncomeTypeMinOrderByAggregateInput = {
    id?: SortOrder
    incomeTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchIncomeTypeSumOrderByAggregateInput = {
    id?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchSpendingTypeScalarRelationFilter = {
    is?: ChurchSpendingTypeWhereInput
    isNot?: ChurchSpendingTypeWhereInput
  }

  export type ChurchSpendingCountOrderByAggregateInput = {
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    bill?: SortOrder
    billNumber?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchSpendingAvgOrderByAggregateInput = {
    id?: SortOrder
    spendingTypeId?: SortOrder
    funds?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchSpendingMaxOrderByAggregateInput = {
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    bill?: SortOrder
    billNumber?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchSpendingMinOrderByAggregateInput = {
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    bill?: SortOrder
    billNumber?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchSpendingSumOrderByAggregateInput = {
    id?: SortOrder
    spendingTypeId?: SortOrder
    funds?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchSpendingHistoryCountOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    bill?: SortOrder
    billNumber?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchSpendingHistoryAvgOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    spendingTypeId?: SortOrder
    funds?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchSpendingHistoryMaxOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    bill?: SortOrder
    billNumber?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchSpendingHistoryMinOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    bill?: SortOrder
    billNumber?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchSpendingHistorySumOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    spendingTypeId?: SortOrder
    funds?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchSpendingTypeCountOrderByAggregateInput = {
    id?: SortOrder
    spendingTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    deleted?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchSpendingTypeAvgOrderByAggregateInput = {
    id?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchSpendingTypeMaxOrderByAggregateInput = {
    id?: SortOrder
    spendingTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    deleted?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchSpendingTypeMinOrderByAggregateInput = {
    id?: SortOrder
    spendingTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    deleted?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ChurchSpendingTypeSumOrderByAggregateInput = {
    id?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreIncomeTypeScalarRelationFilter = {
    is?: StoreIncomeTypeWhereInput
    isNot?: StoreIncomeTypeWhereInput
  }

  export type StoreIncomeCountOrderByAggregateInput = {
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreIncomeAvgOrderByAggregateInput = {
    id?: SortOrder
    incomeTypeId?: SortOrder
    funds?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreIncomeMaxOrderByAggregateInput = {
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreIncomeMinOrderByAggregateInput = {
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreIncomeSumOrderByAggregateInput = {
    id?: SortOrder
    incomeTypeId?: SortOrder
    funds?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreIncomeHistoryCountOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreIncomeHistoryAvgOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    incomeTypeId?: SortOrder
    funds?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreIncomeHistoryMaxOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreIncomeHistoryMinOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreIncomeHistorySumOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    incomeTypeId?: SortOrder
    funds?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreIncomeTypeCountOrderByAggregateInput = {
    id?: SortOrder
    incomeTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreIncomeTypeAvgOrderByAggregateInput = {
    id?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreIncomeTypeMaxOrderByAggregateInput = {
    id?: SortOrder
    incomeTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreIncomeTypeMinOrderByAggregateInput = {
    id?: SortOrder
    incomeTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreIncomeTypeSumOrderByAggregateInput = {
    id?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreSpendingTypeScalarRelationFilter = {
    is?: StoreSpendingTypeWhereInput
    isNot?: StoreSpendingTypeWhereInput
  }

  export type StoreSpendingCountOrderByAggregateInput = {
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreSpendingAvgOrderByAggregateInput = {
    id?: SortOrder
    spendingTypeId?: SortOrder
    funds?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreSpendingMaxOrderByAggregateInput = {
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreSpendingMinOrderByAggregateInput = {
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreSpendingSumOrderByAggregateInput = {
    id?: SortOrder
    spendingTypeId?: SortOrder
    funds?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreSpendingHistoryCountOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreSpendingHistoryAvgOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    spendingTypeId?: SortOrder
    funds?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreSpendingHistoryMaxOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreSpendingHistoryMinOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreSpendingHistorySumOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    spendingTypeId?: SortOrder
    funds?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreSpendingTypeCountOrderByAggregateInput = {
    id?: SortOrder
    spendingTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreSpendingTypeAvgOrderByAggregateInput = {
    id?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreSpendingTypeMaxOrderByAggregateInput = {
    id?: SortOrder
    spendingTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreSpendingTypeMinOrderByAggregateInput = {
    id?: SortOrder
    spendingTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreSpendingTypeSumOrderByAggregateInput = {
    id?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmIncomeTypeScalarRelationFilter = {
    is?: FarmIncomeTypeWhereInput
    isNot?: FarmIncomeTypeWhereInput
  }

  export type FarmIncomeCountOrderByAggregateInput = {
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrder
    amount?: SortOrder
    price?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmIncomeAvgOrderByAggregateInput = {
    id?: SortOrder
    incomeTypeId?: SortOrder
    amount?: SortOrder
    price?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmIncomeMaxOrderByAggregateInput = {
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrder
    amount?: SortOrder
    price?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmIncomeMinOrderByAggregateInput = {
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrder
    amount?: SortOrder
    price?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmIncomeSumOrderByAggregateInput = {
    id?: SortOrder
    incomeTypeId?: SortOrder
    amount?: SortOrder
    price?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmIncomeHistoryCountOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrder
    amount?: SortOrder
    price?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmIncomeHistoryAvgOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    incomeTypeId?: SortOrder
    amount?: SortOrder
    price?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmIncomeHistoryMaxOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrder
    amount?: SortOrder
    price?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmIncomeHistoryMinOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    incomeTypeId?: SortOrder
    detail?: SortOrder
    amount?: SortOrder
    price?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmIncomeHistorySumOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    incomeTypeId?: SortOrder
    amount?: SortOrder
    price?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmIncomeTypeCountOrderByAggregateInput = {
    id?: SortOrder
    incomeTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmIncomeTypeAvgOrderByAggregateInput = {
    id?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmIncomeTypeMaxOrderByAggregateInput = {
    id?: SortOrder
    incomeTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmIncomeTypeMinOrderByAggregateInput = {
    id?: SortOrder
    incomeTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmIncomeTypeSumOrderByAggregateInput = {
    id?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmSpendingTypeScalarRelationFilter = {
    is?: FarmSpendingTypeWhereInput
    isNot?: FarmSpendingTypeWhereInput
  }

  export type FarmSpendingCountOrderByAggregateInput = {
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmSpendingAvgOrderByAggregateInput = {
    id?: SortOrder
    spendingTypeId?: SortOrder
    funds?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmSpendingMaxOrderByAggregateInput = {
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmSpendingMinOrderByAggregateInput = {
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmSpendingSumOrderByAggregateInput = {
    id?: SortOrder
    spendingTypeId?: SortOrder
    funds?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmSpendingHistoryCountOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmSpendingHistoryAvgOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    spendingTypeId?: SortOrder
    funds?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmSpendingHistoryMaxOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmSpendingHistoryMinOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    spendingTypeId?: SortOrder
    detail?: SortOrder
    funds?: SortOrder
    date?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmSpendingHistorySumOrderByAggregateInput = {
    revId?: SortOrder
    id?: SortOrder
    spendingTypeId?: SortOrder
    funds?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmSpendingTypeCountOrderByAggregateInput = {
    id?: SortOrder
    spendingTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmSpendingTypeAvgOrderByAggregateInput = {
    id?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmSpendingTypeMaxOrderByAggregateInput = {
    id?: SortOrder
    spendingTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmSpendingTypeMinOrderByAggregateInput = {
    id?: SortOrder
    spendingTypeName?: SortOrder
    code?: SortOrder
    description?: SortOrder
    deleted?: SortOrder
    createAt?: SortOrder
    createBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type FarmSpendingTypeSumOrderByAggregateInput = {
    id?: SortOrder
    createBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type UserCreateNestedOneWithoutSelfCreatedByRelInput = {
    create?: XOR<UserCreateWithoutSelfCreatedByRelInput, UserUncheckedCreateWithoutSelfCreatedByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutSelfCreatedByRelInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutCreatedByRelInput = {
    create?: XOR<UserCreateWithoutCreatedByRelInput, UserUncheckedCreateWithoutCreatedByRelInput> | UserCreateWithoutCreatedByRelInput[] | UserUncheckedCreateWithoutCreatedByRelInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCreatedByRelInput | UserCreateOrConnectWithoutCreatedByRelInput[]
    createMany?: UserCreateManyCreatedByRelInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutSelfUpdatedByRelInput = {
    create?: XOR<UserCreateWithoutSelfUpdatedByRelInput, UserUncheckedCreateWithoutSelfUpdatedByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutSelfUpdatedByRelInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutUpdatedByRelInput = {
    create?: XOR<UserCreateWithoutUpdatedByRelInput, UserUncheckedCreateWithoutUpdatedByRelInput> | UserCreateWithoutUpdatedByRelInput[] | UserUncheckedCreateWithoutUpdatedByRelInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedByRelInput | UserCreateOrConnectWithoutUpdatedByRelInput[]
    createMany?: UserCreateManyUpdatedByRelInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput = {
    create?: XOR<ChurchIncomeCreateWithoutChurchIncomeCreateByRelInput, ChurchIncomeUncheckedCreateWithoutChurchIncomeCreateByRelInput> | ChurchIncomeCreateWithoutChurchIncomeCreateByRelInput[] | ChurchIncomeUncheckedCreateWithoutChurchIncomeCreateByRelInput[]
    connectOrCreate?: ChurchIncomeCreateOrConnectWithoutChurchIncomeCreateByRelInput | ChurchIncomeCreateOrConnectWithoutChurchIncomeCreateByRelInput[]
    createMany?: ChurchIncomeCreateManyChurchIncomeCreateByRelInputEnvelope
    connect?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
  }

  export type ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput = {
    create?: XOR<ChurchIncomeCreateWithoutChurchIncomeUpdateByRelInput, ChurchIncomeUncheckedCreateWithoutChurchIncomeUpdateByRelInput> | ChurchIncomeCreateWithoutChurchIncomeUpdateByRelInput[] | ChurchIncomeUncheckedCreateWithoutChurchIncomeUpdateByRelInput[]
    connectOrCreate?: ChurchIncomeCreateOrConnectWithoutChurchIncomeUpdateByRelInput | ChurchIncomeCreateOrConnectWithoutChurchIncomeUpdateByRelInput[]
    createMany?: ChurchIncomeCreateManyChurchIncomeUpdateByRelInputEnvelope
    connect?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
  }

  export type ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput = {
    create?: XOR<ChurchIncomeTypeCreateWithoutChurchIncomeTypeCreateByRelInput, ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeCreateByRelInput> | ChurchIncomeTypeCreateWithoutChurchIncomeTypeCreateByRelInput[] | ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeCreateByRelInput[]
    connectOrCreate?: ChurchIncomeTypeCreateOrConnectWithoutChurchIncomeTypeCreateByRelInput | ChurchIncomeTypeCreateOrConnectWithoutChurchIncomeTypeCreateByRelInput[]
    createMany?: ChurchIncomeTypeCreateManyChurchIncomeTypeCreateByRelInputEnvelope
    connect?: ChurchIncomeTypeWhereUniqueInput | ChurchIncomeTypeWhereUniqueInput[]
  }

  export type ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput = {
    create?: XOR<ChurchIncomeTypeCreateWithoutChurchIncomeTypeUpdateByRelInput, ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeUpdateByRelInput> | ChurchIncomeTypeCreateWithoutChurchIncomeTypeUpdateByRelInput[] | ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeUpdateByRelInput[]
    connectOrCreate?: ChurchIncomeTypeCreateOrConnectWithoutChurchIncomeTypeUpdateByRelInput | ChurchIncomeTypeCreateOrConnectWithoutChurchIncomeTypeUpdateByRelInput[]
    createMany?: ChurchIncomeTypeCreateManyChurchIncomeTypeUpdateByRelInputEnvelope
    connect?: ChurchIncomeTypeWhereUniqueInput | ChurchIncomeTypeWhereUniqueInput[]
  }

  export type ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput = {
    create?: XOR<ChurchSpendingCreateWithoutChurchSpendingCreateByRelInput, ChurchSpendingUncheckedCreateWithoutChurchSpendingCreateByRelInput> | ChurchSpendingCreateWithoutChurchSpendingCreateByRelInput[] | ChurchSpendingUncheckedCreateWithoutChurchSpendingCreateByRelInput[]
    connectOrCreate?: ChurchSpendingCreateOrConnectWithoutChurchSpendingCreateByRelInput | ChurchSpendingCreateOrConnectWithoutChurchSpendingCreateByRelInput[]
    createMany?: ChurchSpendingCreateManyChurchSpendingCreateByRelInputEnvelope
    connect?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
  }

  export type ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput = {
    create?: XOR<ChurchSpendingCreateWithoutChurchSpendingUpdateByRelInput, ChurchSpendingUncheckedCreateWithoutChurchSpendingUpdateByRelInput> | ChurchSpendingCreateWithoutChurchSpendingUpdateByRelInput[] | ChurchSpendingUncheckedCreateWithoutChurchSpendingUpdateByRelInput[]
    connectOrCreate?: ChurchSpendingCreateOrConnectWithoutChurchSpendingUpdateByRelInput | ChurchSpendingCreateOrConnectWithoutChurchSpendingUpdateByRelInput[]
    createMany?: ChurchSpendingCreateManyChurchSpendingUpdateByRelInputEnvelope
    connect?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
  }

  export type ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput = {
    create?: XOR<ChurchSpendingTypeCreateWithoutChurchSpendingTypeCreateByRelInput, ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeCreateByRelInput> | ChurchSpendingTypeCreateWithoutChurchSpendingTypeCreateByRelInput[] | ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeCreateByRelInput[]
    connectOrCreate?: ChurchSpendingTypeCreateOrConnectWithoutChurchSpendingTypeCreateByRelInput | ChurchSpendingTypeCreateOrConnectWithoutChurchSpendingTypeCreateByRelInput[]
    createMany?: ChurchSpendingTypeCreateManyChurchSpendingTypeCreateByRelInputEnvelope
    connect?: ChurchSpendingTypeWhereUniqueInput | ChurchSpendingTypeWhereUniqueInput[]
  }

  export type ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput = {
    create?: XOR<ChurchSpendingTypeCreateWithoutChurchSpendingTypeUpdateByRelInput, ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeUpdateByRelInput> | ChurchSpendingTypeCreateWithoutChurchSpendingTypeUpdateByRelInput[] | ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeUpdateByRelInput[]
    connectOrCreate?: ChurchSpendingTypeCreateOrConnectWithoutChurchSpendingTypeUpdateByRelInput | ChurchSpendingTypeCreateOrConnectWithoutChurchSpendingTypeUpdateByRelInput[]
    createMany?: ChurchSpendingTypeCreateManyChurchSpendingTypeUpdateByRelInputEnvelope
    connect?: ChurchSpendingTypeWhereUniqueInput | ChurchSpendingTypeWhereUniqueInput[]
  }

  export type StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput = {
    create?: XOR<StoreIncomeCreateWithoutStoreIncomeCreateByRelInput, StoreIncomeUncheckedCreateWithoutStoreIncomeCreateByRelInput> | StoreIncomeCreateWithoutStoreIncomeCreateByRelInput[] | StoreIncomeUncheckedCreateWithoutStoreIncomeCreateByRelInput[]
    connectOrCreate?: StoreIncomeCreateOrConnectWithoutStoreIncomeCreateByRelInput | StoreIncomeCreateOrConnectWithoutStoreIncomeCreateByRelInput[]
    createMany?: StoreIncomeCreateManyStoreIncomeCreateByRelInputEnvelope
    connect?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
  }

  export type StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput = {
    create?: XOR<StoreIncomeCreateWithoutStoreIncomeUpdateByRelInput, StoreIncomeUncheckedCreateWithoutStoreIncomeUpdateByRelInput> | StoreIncomeCreateWithoutStoreIncomeUpdateByRelInput[] | StoreIncomeUncheckedCreateWithoutStoreIncomeUpdateByRelInput[]
    connectOrCreate?: StoreIncomeCreateOrConnectWithoutStoreIncomeUpdateByRelInput | StoreIncomeCreateOrConnectWithoutStoreIncomeUpdateByRelInput[]
    createMany?: StoreIncomeCreateManyStoreIncomeUpdateByRelInputEnvelope
    connect?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
  }

  export type StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput = {
    create?: XOR<StoreIncomeTypeCreateWithoutStoreIncomeTypeCreateByRelInput, StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeCreateByRelInput> | StoreIncomeTypeCreateWithoutStoreIncomeTypeCreateByRelInput[] | StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeCreateByRelInput[]
    connectOrCreate?: StoreIncomeTypeCreateOrConnectWithoutStoreIncomeTypeCreateByRelInput | StoreIncomeTypeCreateOrConnectWithoutStoreIncomeTypeCreateByRelInput[]
    createMany?: StoreIncomeTypeCreateManyStoreIncomeTypeCreateByRelInputEnvelope
    connect?: StoreIncomeTypeWhereUniqueInput | StoreIncomeTypeWhereUniqueInput[]
  }

  export type StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput = {
    create?: XOR<StoreIncomeTypeCreateWithoutStoreIncomeTypeUpdateByRelInput, StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeUpdateByRelInput> | StoreIncomeTypeCreateWithoutStoreIncomeTypeUpdateByRelInput[] | StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeUpdateByRelInput[]
    connectOrCreate?: StoreIncomeTypeCreateOrConnectWithoutStoreIncomeTypeUpdateByRelInput | StoreIncomeTypeCreateOrConnectWithoutStoreIncomeTypeUpdateByRelInput[]
    createMany?: StoreIncomeTypeCreateManyStoreIncomeTypeUpdateByRelInputEnvelope
    connect?: StoreIncomeTypeWhereUniqueInput | StoreIncomeTypeWhereUniqueInput[]
  }

  export type StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput = {
    create?: XOR<StoreSpendingCreateWithoutStoreSpendingCreateByRelInput, StoreSpendingUncheckedCreateWithoutStoreSpendingCreateByRelInput> | StoreSpendingCreateWithoutStoreSpendingCreateByRelInput[] | StoreSpendingUncheckedCreateWithoutStoreSpendingCreateByRelInput[]
    connectOrCreate?: StoreSpendingCreateOrConnectWithoutStoreSpendingCreateByRelInput | StoreSpendingCreateOrConnectWithoutStoreSpendingCreateByRelInput[]
    createMany?: StoreSpendingCreateManyStoreSpendingCreateByRelInputEnvelope
    connect?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
  }

  export type StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput = {
    create?: XOR<StoreSpendingCreateWithoutStoreSpendingUpdateByRelInput, StoreSpendingUncheckedCreateWithoutStoreSpendingUpdateByRelInput> | StoreSpendingCreateWithoutStoreSpendingUpdateByRelInput[] | StoreSpendingUncheckedCreateWithoutStoreSpendingUpdateByRelInput[]
    connectOrCreate?: StoreSpendingCreateOrConnectWithoutStoreSpendingUpdateByRelInput | StoreSpendingCreateOrConnectWithoutStoreSpendingUpdateByRelInput[]
    createMany?: StoreSpendingCreateManyStoreSpendingUpdateByRelInputEnvelope
    connect?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
  }

  export type StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput = {
    create?: XOR<StoreSpendingTypeCreateWithoutStoreSpendingTypeCreateByRelInput, StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeCreateByRelInput> | StoreSpendingTypeCreateWithoutStoreSpendingTypeCreateByRelInput[] | StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeCreateByRelInput[]
    connectOrCreate?: StoreSpendingTypeCreateOrConnectWithoutStoreSpendingTypeCreateByRelInput | StoreSpendingTypeCreateOrConnectWithoutStoreSpendingTypeCreateByRelInput[]
    createMany?: StoreSpendingTypeCreateManyStoreSpendingTypeCreateByRelInputEnvelope
    connect?: StoreSpendingTypeWhereUniqueInput | StoreSpendingTypeWhereUniqueInput[]
  }

  export type StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput = {
    create?: XOR<StoreSpendingTypeCreateWithoutStoreSpendingTypeUpdateByRelInput, StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeUpdateByRelInput> | StoreSpendingTypeCreateWithoutStoreSpendingTypeUpdateByRelInput[] | StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeUpdateByRelInput[]
    connectOrCreate?: StoreSpendingTypeCreateOrConnectWithoutStoreSpendingTypeUpdateByRelInput | StoreSpendingTypeCreateOrConnectWithoutStoreSpendingTypeUpdateByRelInput[]
    createMany?: StoreSpendingTypeCreateManyStoreSpendingTypeUpdateByRelInputEnvelope
    connect?: StoreSpendingTypeWhereUniqueInput | StoreSpendingTypeWhereUniqueInput[]
  }

  export type FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput = {
    create?: XOR<FarmIncomeCreateWithoutFarmIncomeCreateByRelInput, FarmIncomeUncheckedCreateWithoutFarmIncomeCreateByRelInput> | FarmIncomeCreateWithoutFarmIncomeCreateByRelInput[] | FarmIncomeUncheckedCreateWithoutFarmIncomeCreateByRelInput[]
    connectOrCreate?: FarmIncomeCreateOrConnectWithoutFarmIncomeCreateByRelInput | FarmIncomeCreateOrConnectWithoutFarmIncomeCreateByRelInput[]
    createMany?: FarmIncomeCreateManyFarmIncomeCreateByRelInputEnvelope
    connect?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
  }

  export type FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput = {
    create?: XOR<FarmIncomeCreateWithoutFarmIncomeUpdateByRelInput, FarmIncomeUncheckedCreateWithoutFarmIncomeUpdateByRelInput> | FarmIncomeCreateWithoutFarmIncomeUpdateByRelInput[] | FarmIncomeUncheckedCreateWithoutFarmIncomeUpdateByRelInput[]
    connectOrCreate?: FarmIncomeCreateOrConnectWithoutFarmIncomeUpdateByRelInput | FarmIncomeCreateOrConnectWithoutFarmIncomeUpdateByRelInput[]
    createMany?: FarmIncomeCreateManyFarmIncomeUpdateByRelInputEnvelope
    connect?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
  }

  export type FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput = {
    create?: XOR<FarmIncomeTypeCreateWithoutFarmIncomeTypeCreateByRelInput, FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeCreateByRelInput> | FarmIncomeTypeCreateWithoutFarmIncomeTypeCreateByRelInput[] | FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeCreateByRelInput[]
    connectOrCreate?: FarmIncomeTypeCreateOrConnectWithoutFarmIncomeTypeCreateByRelInput | FarmIncomeTypeCreateOrConnectWithoutFarmIncomeTypeCreateByRelInput[]
    createMany?: FarmIncomeTypeCreateManyFarmIncomeTypeCreateByRelInputEnvelope
    connect?: FarmIncomeTypeWhereUniqueInput | FarmIncomeTypeWhereUniqueInput[]
  }

  export type FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput = {
    create?: XOR<FarmIncomeTypeCreateWithoutFarmIncomeTypeUpdateByRelInput, FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeUpdateByRelInput> | FarmIncomeTypeCreateWithoutFarmIncomeTypeUpdateByRelInput[] | FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeUpdateByRelInput[]
    connectOrCreate?: FarmIncomeTypeCreateOrConnectWithoutFarmIncomeTypeUpdateByRelInput | FarmIncomeTypeCreateOrConnectWithoutFarmIncomeTypeUpdateByRelInput[]
    createMany?: FarmIncomeTypeCreateManyFarmIncomeTypeUpdateByRelInputEnvelope
    connect?: FarmIncomeTypeWhereUniqueInput | FarmIncomeTypeWhereUniqueInput[]
  }

  export type FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput = {
    create?: XOR<FarmSpendingCreateWithoutFarmSpendingCreateByRelInput, FarmSpendingUncheckedCreateWithoutFarmSpendingCreateByRelInput> | FarmSpendingCreateWithoutFarmSpendingCreateByRelInput[] | FarmSpendingUncheckedCreateWithoutFarmSpendingCreateByRelInput[]
    connectOrCreate?: FarmSpendingCreateOrConnectWithoutFarmSpendingCreateByRelInput | FarmSpendingCreateOrConnectWithoutFarmSpendingCreateByRelInput[]
    createMany?: FarmSpendingCreateManyFarmSpendingCreateByRelInputEnvelope
    connect?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
  }

  export type FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput = {
    create?: XOR<FarmSpendingCreateWithoutFarmSpendingUpdateByRelInput, FarmSpendingUncheckedCreateWithoutFarmSpendingUpdateByRelInput> | FarmSpendingCreateWithoutFarmSpendingUpdateByRelInput[] | FarmSpendingUncheckedCreateWithoutFarmSpendingUpdateByRelInput[]
    connectOrCreate?: FarmSpendingCreateOrConnectWithoutFarmSpendingUpdateByRelInput | FarmSpendingCreateOrConnectWithoutFarmSpendingUpdateByRelInput[]
    createMany?: FarmSpendingCreateManyFarmSpendingUpdateByRelInputEnvelope
    connect?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
  }

  export type FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput = {
    create?: XOR<FarmSpendingTypeCreateWithoutFarmSpendingTypeCreateByRelInput, FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeCreateByRelInput> | FarmSpendingTypeCreateWithoutFarmSpendingTypeCreateByRelInput[] | FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeCreateByRelInput[]
    connectOrCreate?: FarmSpendingTypeCreateOrConnectWithoutFarmSpendingTypeCreateByRelInput | FarmSpendingTypeCreateOrConnectWithoutFarmSpendingTypeCreateByRelInput[]
    createMany?: FarmSpendingTypeCreateManyFarmSpendingTypeCreateByRelInputEnvelope
    connect?: FarmSpendingTypeWhereUniqueInput | FarmSpendingTypeWhereUniqueInput[]
  }

  export type FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput = {
    create?: XOR<FarmSpendingTypeCreateWithoutFarmSpendingTypeUpdateByRelInput, FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeUpdateByRelInput> | FarmSpendingTypeCreateWithoutFarmSpendingTypeUpdateByRelInput[] | FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeUpdateByRelInput[]
    connectOrCreate?: FarmSpendingTypeCreateOrConnectWithoutFarmSpendingTypeUpdateByRelInput | FarmSpendingTypeCreateOrConnectWithoutFarmSpendingTypeUpdateByRelInput[]
    createMany?: FarmSpendingTypeCreateManyFarmSpendingTypeUpdateByRelInputEnvelope
    connect?: FarmSpendingTypeWhereUniqueInput | FarmSpendingTypeWhereUniqueInput[]
  }

  export type UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput = {
    create?: XOR<UserHistoryCreateWithoutUserHistoryCreatedByRelInput, UserHistoryUncheckedCreateWithoutUserHistoryCreatedByRelInput> | UserHistoryCreateWithoutUserHistoryCreatedByRelInput[] | UserHistoryUncheckedCreateWithoutUserHistoryCreatedByRelInput[]
    connectOrCreate?: UserHistoryCreateOrConnectWithoutUserHistoryCreatedByRelInput | UserHistoryCreateOrConnectWithoutUserHistoryCreatedByRelInput[]
    createMany?: UserHistoryCreateManyUserHistoryCreatedByRelInputEnvelope
    connect?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
  }

  export type UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput = {
    create?: XOR<UserHistoryCreateWithoutUserHistoryUpdatedByRelInput, UserHistoryUncheckedCreateWithoutUserHistoryUpdatedByRelInput> | UserHistoryCreateWithoutUserHistoryUpdatedByRelInput[] | UserHistoryUncheckedCreateWithoutUserHistoryUpdatedByRelInput[]
    connectOrCreate?: UserHistoryCreateOrConnectWithoutUserHistoryUpdatedByRelInput | UserHistoryCreateOrConnectWithoutUserHistoryUpdatedByRelInput[]
    createMany?: UserHistoryCreateManyUserHistoryUpdatedByRelInputEnvelope
    connect?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
  }

  export type UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput = {
    create?: XOR<UserHistoryCreateWithoutUserHistoryIdRelInput, UserHistoryUncheckedCreateWithoutUserHistoryIdRelInput> | UserHistoryCreateWithoutUserHistoryIdRelInput[] | UserHistoryUncheckedCreateWithoutUserHistoryIdRelInput[]
    connectOrCreate?: UserHistoryCreateOrConnectWithoutUserHistoryIdRelInput | UserHistoryCreateOrConnectWithoutUserHistoryIdRelInput[]
    createMany?: UserHistoryCreateManyUserHistoryIdRelInputEnvelope
    connect?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
  }

  export type ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput = {
    create?: XOR<ChurchIncomeHistoryCreateWithoutChurchIncomeHistoryCreateByRelInput, ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeHistoryCreateByRelInput> | ChurchIncomeHistoryCreateWithoutChurchIncomeHistoryCreateByRelInput[] | ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeHistoryCreateByRelInput[]
    connectOrCreate?: ChurchIncomeHistoryCreateOrConnectWithoutChurchIncomeHistoryCreateByRelInput | ChurchIncomeHistoryCreateOrConnectWithoutChurchIncomeHistoryCreateByRelInput[]
    createMany?: ChurchIncomeHistoryCreateManyChurchIncomeHistoryCreateByRelInputEnvelope
    connect?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
  }

  export type ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput = {
    create?: XOR<ChurchIncomeHistoryCreateWithoutChurchIncomeHistoryUpdateByRelInput, ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeHistoryUpdateByRelInput> | ChurchIncomeHistoryCreateWithoutChurchIncomeHistoryUpdateByRelInput[] | ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeHistoryUpdateByRelInput[]
    connectOrCreate?: ChurchIncomeHistoryCreateOrConnectWithoutChurchIncomeHistoryUpdateByRelInput | ChurchIncomeHistoryCreateOrConnectWithoutChurchIncomeHistoryUpdateByRelInput[]
    createMany?: ChurchIncomeHistoryCreateManyChurchIncomeHistoryUpdateByRelInputEnvelope
    connect?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
  }

  export type ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput = {
    create?: XOR<ChurchSpendingHistoryCreateWithoutChurchSpendingHistoryCreateByRelInput, ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingHistoryCreateByRelInput> | ChurchSpendingHistoryCreateWithoutChurchSpendingHistoryCreateByRelInput[] | ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingHistoryCreateByRelInput[]
    connectOrCreate?: ChurchSpendingHistoryCreateOrConnectWithoutChurchSpendingHistoryCreateByRelInput | ChurchSpendingHistoryCreateOrConnectWithoutChurchSpendingHistoryCreateByRelInput[]
    createMany?: ChurchSpendingHistoryCreateManyChurchSpendingHistoryCreateByRelInputEnvelope
    connect?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
  }

  export type ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput = {
    create?: XOR<ChurchSpendingHistoryCreateWithoutChurchSpendingHistoryUpdateByRelInput, ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingHistoryUpdateByRelInput> | ChurchSpendingHistoryCreateWithoutChurchSpendingHistoryUpdateByRelInput[] | ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingHistoryUpdateByRelInput[]
    connectOrCreate?: ChurchSpendingHistoryCreateOrConnectWithoutChurchSpendingHistoryUpdateByRelInput | ChurchSpendingHistoryCreateOrConnectWithoutChurchSpendingHistoryUpdateByRelInput[]
    createMany?: ChurchSpendingHistoryCreateManyChurchSpendingHistoryUpdateByRelInputEnvelope
    connect?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
  }

  export type StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput = {
    create?: XOR<StoreIncomeHistoryCreateWithoutStoreIncomeHistoryCreateByRelInput, StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeHistoryCreateByRelInput> | StoreIncomeHistoryCreateWithoutStoreIncomeHistoryCreateByRelInput[] | StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeHistoryCreateByRelInput[]
    connectOrCreate?: StoreIncomeHistoryCreateOrConnectWithoutStoreIncomeHistoryCreateByRelInput | StoreIncomeHistoryCreateOrConnectWithoutStoreIncomeHistoryCreateByRelInput[]
    createMany?: StoreIncomeHistoryCreateManyStoreIncomeHistoryCreateByRelInputEnvelope
    connect?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
  }

  export type StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput = {
    create?: XOR<StoreIncomeHistoryCreateWithoutStoreIncomeHistoryUpdateByRelInput, StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeHistoryUpdateByRelInput> | StoreIncomeHistoryCreateWithoutStoreIncomeHistoryUpdateByRelInput[] | StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeHistoryUpdateByRelInput[]
    connectOrCreate?: StoreIncomeHistoryCreateOrConnectWithoutStoreIncomeHistoryUpdateByRelInput | StoreIncomeHistoryCreateOrConnectWithoutStoreIncomeHistoryUpdateByRelInput[]
    createMany?: StoreIncomeHistoryCreateManyStoreIncomeHistoryUpdateByRelInputEnvelope
    connect?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
  }

  export type StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput = {
    create?: XOR<StoreSpendingHistoryCreateWithoutStoreSpendingHistoryCreateByRelInput, StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingHistoryCreateByRelInput> | StoreSpendingHistoryCreateWithoutStoreSpendingHistoryCreateByRelInput[] | StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingHistoryCreateByRelInput[]
    connectOrCreate?: StoreSpendingHistoryCreateOrConnectWithoutStoreSpendingHistoryCreateByRelInput | StoreSpendingHistoryCreateOrConnectWithoutStoreSpendingHistoryCreateByRelInput[]
    createMany?: StoreSpendingHistoryCreateManyStoreSpendingHistoryCreateByRelInputEnvelope
    connect?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
  }

  export type StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput = {
    create?: XOR<StoreSpendingHistoryCreateWithoutStoreSpendingHistoryUpdateByRelInput, StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingHistoryUpdateByRelInput> | StoreSpendingHistoryCreateWithoutStoreSpendingHistoryUpdateByRelInput[] | StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingHistoryUpdateByRelInput[]
    connectOrCreate?: StoreSpendingHistoryCreateOrConnectWithoutStoreSpendingHistoryUpdateByRelInput | StoreSpendingHistoryCreateOrConnectWithoutStoreSpendingHistoryUpdateByRelInput[]
    createMany?: StoreSpendingHistoryCreateManyStoreSpendingHistoryUpdateByRelInputEnvelope
    connect?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
  }

  export type FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput = {
    create?: XOR<FarmIncomeHistoryCreateWithoutFarmIncomeHistoryCreateByRelInput, FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeHistoryCreateByRelInput> | FarmIncomeHistoryCreateWithoutFarmIncomeHistoryCreateByRelInput[] | FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeHistoryCreateByRelInput[]
    connectOrCreate?: FarmIncomeHistoryCreateOrConnectWithoutFarmIncomeHistoryCreateByRelInput | FarmIncomeHistoryCreateOrConnectWithoutFarmIncomeHistoryCreateByRelInput[]
    createMany?: FarmIncomeHistoryCreateManyFarmIncomeHistoryCreateByRelInputEnvelope
    connect?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
  }

  export type FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput = {
    create?: XOR<FarmIncomeHistoryCreateWithoutFarmIncomeHistoryUpdateByRelInput, FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeHistoryUpdateByRelInput> | FarmIncomeHistoryCreateWithoutFarmIncomeHistoryUpdateByRelInput[] | FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeHistoryUpdateByRelInput[]
    connectOrCreate?: FarmIncomeHistoryCreateOrConnectWithoutFarmIncomeHistoryUpdateByRelInput | FarmIncomeHistoryCreateOrConnectWithoutFarmIncomeHistoryUpdateByRelInput[]
    createMany?: FarmIncomeHistoryCreateManyFarmIncomeHistoryUpdateByRelInputEnvelope
    connect?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
  }

  export type FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput = {
    create?: XOR<FarmSpendingHistoryCreateWithoutFarmSpendingHistoryCreateByRelInput, FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingHistoryCreateByRelInput> | FarmSpendingHistoryCreateWithoutFarmSpendingHistoryCreateByRelInput[] | FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingHistoryCreateByRelInput[]
    connectOrCreate?: FarmSpendingHistoryCreateOrConnectWithoutFarmSpendingHistoryCreateByRelInput | FarmSpendingHistoryCreateOrConnectWithoutFarmSpendingHistoryCreateByRelInput[]
    createMany?: FarmSpendingHistoryCreateManyFarmSpendingHistoryCreateByRelInputEnvelope
    connect?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
  }

  export type FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput = {
    create?: XOR<FarmSpendingHistoryCreateWithoutFarmSpendingHistoryUpdateByRelInput, FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingHistoryUpdateByRelInput> | FarmSpendingHistoryCreateWithoutFarmSpendingHistoryUpdateByRelInput[] | FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingHistoryUpdateByRelInput[]
    connectOrCreate?: FarmSpendingHistoryCreateOrConnectWithoutFarmSpendingHistoryUpdateByRelInput | FarmSpendingHistoryCreateOrConnectWithoutFarmSpendingHistoryUpdateByRelInput[]
    createMany?: FarmSpendingHistoryCreateManyFarmSpendingHistoryUpdateByRelInputEnvelope
    connect?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutCreatedByRelInput = {
    create?: XOR<UserCreateWithoutCreatedByRelInput, UserUncheckedCreateWithoutCreatedByRelInput> | UserCreateWithoutCreatedByRelInput[] | UserUncheckedCreateWithoutCreatedByRelInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCreatedByRelInput | UserCreateOrConnectWithoutCreatedByRelInput[]
    createMany?: UserCreateManyCreatedByRelInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutUpdatedByRelInput = {
    create?: XOR<UserCreateWithoutUpdatedByRelInput, UserUncheckedCreateWithoutUpdatedByRelInput> | UserCreateWithoutUpdatedByRelInput[] | UserUncheckedCreateWithoutUpdatedByRelInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedByRelInput | UserCreateOrConnectWithoutUpdatedByRelInput[]
    createMany?: UserCreateManyUpdatedByRelInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput = {
    create?: XOR<ChurchIncomeCreateWithoutChurchIncomeCreateByRelInput, ChurchIncomeUncheckedCreateWithoutChurchIncomeCreateByRelInput> | ChurchIncomeCreateWithoutChurchIncomeCreateByRelInput[] | ChurchIncomeUncheckedCreateWithoutChurchIncomeCreateByRelInput[]
    connectOrCreate?: ChurchIncomeCreateOrConnectWithoutChurchIncomeCreateByRelInput | ChurchIncomeCreateOrConnectWithoutChurchIncomeCreateByRelInput[]
    createMany?: ChurchIncomeCreateManyChurchIncomeCreateByRelInputEnvelope
    connect?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
  }

  export type ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput = {
    create?: XOR<ChurchIncomeCreateWithoutChurchIncomeUpdateByRelInput, ChurchIncomeUncheckedCreateWithoutChurchIncomeUpdateByRelInput> | ChurchIncomeCreateWithoutChurchIncomeUpdateByRelInput[] | ChurchIncomeUncheckedCreateWithoutChurchIncomeUpdateByRelInput[]
    connectOrCreate?: ChurchIncomeCreateOrConnectWithoutChurchIncomeUpdateByRelInput | ChurchIncomeCreateOrConnectWithoutChurchIncomeUpdateByRelInput[]
    createMany?: ChurchIncomeCreateManyChurchIncomeUpdateByRelInputEnvelope
    connect?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
  }

  export type ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput = {
    create?: XOR<ChurchIncomeTypeCreateWithoutChurchIncomeTypeCreateByRelInput, ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeCreateByRelInput> | ChurchIncomeTypeCreateWithoutChurchIncomeTypeCreateByRelInput[] | ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeCreateByRelInput[]
    connectOrCreate?: ChurchIncomeTypeCreateOrConnectWithoutChurchIncomeTypeCreateByRelInput | ChurchIncomeTypeCreateOrConnectWithoutChurchIncomeTypeCreateByRelInput[]
    createMany?: ChurchIncomeTypeCreateManyChurchIncomeTypeCreateByRelInputEnvelope
    connect?: ChurchIncomeTypeWhereUniqueInput | ChurchIncomeTypeWhereUniqueInput[]
  }

  export type ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput = {
    create?: XOR<ChurchIncomeTypeCreateWithoutChurchIncomeTypeUpdateByRelInput, ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeUpdateByRelInput> | ChurchIncomeTypeCreateWithoutChurchIncomeTypeUpdateByRelInput[] | ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeUpdateByRelInput[]
    connectOrCreate?: ChurchIncomeTypeCreateOrConnectWithoutChurchIncomeTypeUpdateByRelInput | ChurchIncomeTypeCreateOrConnectWithoutChurchIncomeTypeUpdateByRelInput[]
    createMany?: ChurchIncomeTypeCreateManyChurchIncomeTypeUpdateByRelInputEnvelope
    connect?: ChurchIncomeTypeWhereUniqueInput | ChurchIncomeTypeWhereUniqueInput[]
  }

  export type ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput = {
    create?: XOR<ChurchSpendingCreateWithoutChurchSpendingCreateByRelInput, ChurchSpendingUncheckedCreateWithoutChurchSpendingCreateByRelInput> | ChurchSpendingCreateWithoutChurchSpendingCreateByRelInput[] | ChurchSpendingUncheckedCreateWithoutChurchSpendingCreateByRelInput[]
    connectOrCreate?: ChurchSpendingCreateOrConnectWithoutChurchSpendingCreateByRelInput | ChurchSpendingCreateOrConnectWithoutChurchSpendingCreateByRelInput[]
    createMany?: ChurchSpendingCreateManyChurchSpendingCreateByRelInputEnvelope
    connect?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
  }

  export type ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput = {
    create?: XOR<ChurchSpendingCreateWithoutChurchSpendingUpdateByRelInput, ChurchSpendingUncheckedCreateWithoutChurchSpendingUpdateByRelInput> | ChurchSpendingCreateWithoutChurchSpendingUpdateByRelInput[] | ChurchSpendingUncheckedCreateWithoutChurchSpendingUpdateByRelInput[]
    connectOrCreate?: ChurchSpendingCreateOrConnectWithoutChurchSpendingUpdateByRelInput | ChurchSpendingCreateOrConnectWithoutChurchSpendingUpdateByRelInput[]
    createMany?: ChurchSpendingCreateManyChurchSpendingUpdateByRelInputEnvelope
    connect?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
  }

  export type ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput = {
    create?: XOR<ChurchSpendingTypeCreateWithoutChurchSpendingTypeCreateByRelInput, ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeCreateByRelInput> | ChurchSpendingTypeCreateWithoutChurchSpendingTypeCreateByRelInput[] | ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeCreateByRelInput[]
    connectOrCreate?: ChurchSpendingTypeCreateOrConnectWithoutChurchSpendingTypeCreateByRelInput | ChurchSpendingTypeCreateOrConnectWithoutChurchSpendingTypeCreateByRelInput[]
    createMany?: ChurchSpendingTypeCreateManyChurchSpendingTypeCreateByRelInputEnvelope
    connect?: ChurchSpendingTypeWhereUniqueInput | ChurchSpendingTypeWhereUniqueInput[]
  }

  export type ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput = {
    create?: XOR<ChurchSpendingTypeCreateWithoutChurchSpendingTypeUpdateByRelInput, ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeUpdateByRelInput> | ChurchSpendingTypeCreateWithoutChurchSpendingTypeUpdateByRelInput[] | ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeUpdateByRelInput[]
    connectOrCreate?: ChurchSpendingTypeCreateOrConnectWithoutChurchSpendingTypeUpdateByRelInput | ChurchSpendingTypeCreateOrConnectWithoutChurchSpendingTypeUpdateByRelInput[]
    createMany?: ChurchSpendingTypeCreateManyChurchSpendingTypeUpdateByRelInputEnvelope
    connect?: ChurchSpendingTypeWhereUniqueInput | ChurchSpendingTypeWhereUniqueInput[]
  }

  export type StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput = {
    create?: XOR<StoreIncomeCreateWithoutStoreIncomeCreateByRelInput, StoreIncomeUncheckedCreateWithoutStoreIncomeCreateByRelInput> | StoreIncomeCreateWithoutStoreIncomeCreateByRelInput[] | StoreIncomeUncheckedCreateWithoutStoreIncomeCreateByRelInput[]
    connectOrCreate?: StoreIncomeCreateOrConnectWithoutStoreIncomeCreateByRelInput | StoreIncomeCreateOrConnectWithoutStoreIncomeCreateByRelInput[]
    createMany?: StoreIncomeCreateManyStoreIncomeCreateByRelInputEnvelope
    connect?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
  }

  export type StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput = {
    create?: XOR<StoreIncomeCreateWithoutStoreIncomeUpdateByRelInput, StoreIncomeUncheckedCreateWithoutStoreIncomeUpdateByRelInput> | StoreIncomeCreateWithoutStoreIncomeUpdateByRelInput[] | StoreIncomeUncheckedCreateWithoutStoreIncomeUpdateByRelInput[]
    connectOrCreate?: StoreIncomeCreateOrConnectWithoutStoreIncomeUpdateByRelInput | StoreIncomeCreateOrConnectWithoutStoreIncomeUpdateByRelInput[]
    createMany?: StoreIncomeCreateManyStoreIncomeUpdateByRelInputEnvelope
    connect?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
  }

  export type StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput = {
    create?: XOR<StoreIncomeTypeCreateWithoutStoreIncomeTypeCreateByRelInput, StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeCreateByRelInput> | StoreIncomeTypeCreateWithoutStoreIncomeTypeCreateByRelInput[] | StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeCreateByRelInput[]
    connectOrCreate?: StoreIncomeTypeCreateOrConnectWithoutStoreIncomeTypeCreateByRelInput | StoreIncomeTypeCreateOrConnectWithoutStoreIncomeTypeCreateByRelInput[]
    createMany?: StoreIncomeTypeCreateManyStoreIncomeTypeCreateByRelInputEnvelope
    connect?: StoreIncomeTypeWhereUniqueInput | StoreIncomeTypeWhereUniqueInput[]
  }

  export type StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput = {
    create?: XOR<StoreIncomeTypeCreateWithoutStoreIncomeTypeUpdateByRelInput, StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeUpdateByRelInput> | StoreIncomeTypeCreateWithoutStoreIncomeTypeUpdateByRelInput[] | StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeUpdateByRelInput[]
    connectOrCreate?: StoreIncomeTypeCreateOrConnectWithoutStoreIncomeTypeUpdateByRelInput | StoreIncomeTypeCreateOrConnectWithoutStoreIncomeTypeUpdateByRelInput[]
    createMany?: StoreIncomeTypeCreateManyStoreIncomeTypeUpdateByRelInputEnvelope
    connect?: StoreIncomeTypeWhereUniqueInput | StoreIncomeTypeWhereUniqueInput[]
  }

  export type StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput = {
    create?: XOR<StoreSpendingCreateWithoutStoreSpendingCreateByRelInput, StoreSpendingUncheckedCreateWithoutStoreSpendingCreateByRelInput> | StoreSpendingCreateWithoutStoreSpendingCreateByRelInput[] | StoreSpendingUncheckedCreateWithoutStoreSpendingCreateByRelInput[]
    connectOrCreate?: StoreSpendingCreateOrConnectWithoutStoreSpendingCreateByRelInput | StoreSpendingCreateOrConnectWithoutStoreSpendingCreateByRelInput[]
    createMany?: StoreSpendingCreateManyStoreSpendingCreateByRelInputEnvelope
    connect?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
  }

  export type StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput = {
    create?: XOR<StoreSpendingCreateWithoutStoreSpendingUpdateByRelInput, StoreSpendingUncheckedCreateWithoutStoreSpendingUpdateByRelInput> | StoreSpendingCreateWithoutStoreSpendingUpdateByRelInput[] | StoreSpendingUncheckedCreateWithoutStoreSpendingUpdateByRelInput[]
    connectOrCreate?: StoreSpendingCreateOrConnectWithoutStoreSpendingUpdateByRelInput | StoreSpendingCreateOrConnectWithoutStoreSpendingUpdateByRelInput[]
    createMany?: StoreSpendingCreateManyStoreSpendingUpdateByRelInputEnvelope
    connect?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
  }

  export type StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput = {
    create?: XOR<StoreSpendingTypeCreateWithoutStoreSpendingTypeCreateByRelInput, StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeCreateByRelInput> | StoreSpendingTypeCreateWithoutStoreSpendingTypeCreateByRelInput[] | StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeCreateByRelInput[]
    connectOrCreate?: StoreSpendingTypeCreateOrConnectWithoutStoreSpendingTypeCreateByRelInput | StoreSpendingTypeCreateOrConnectWithoutStoreSpendingTypeCreateByRelInput[]
    createMany?: StoreSpendingTypeCreateManyStoreSpendingTypeCreateByRelInputEnvelope
    connect?: StoreSpendingTypeWhereUniqueInput | StoreSpendingTypeWhereUniqueInput[]
  }

  export type StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput = {
    create?: XOR<StoreSpendingTypeCreateWithoutStoreSpendingTypeUpdateByRelInput, StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeUpdateByRelInput> | StoreSpendingTypeCreateWithoutStoreSpendingTypeUpdateByRelInput[] | StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeUpdateByRelInput[]
    connectOrCreate?: StoreSpendingTypeCreateOrConnectWithoutStoreSpendingTypeUpdateByRelInput | StoreSpendingTypeCreateOrConnectWithoutStoreSpendingTypeUpdateByRelInput[]
    createMany?: StoreSpendingTypeCreateManyStoreSpendingTypeUpdateByRelInputEnvelope
    connect?: StoreSpendingTypeWhereUniqueInput | StoreSpendingTypeWhereUniqueInput[]
  }

  export type FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput = {
    create?: XOR<FarmIncomeCreateWithoutFarmIncomeCreateByRelInput, FarmIncomeUncheckedCreateWithoutFarmIncomeCreateByRelInput> | FarmIncomeCreateWithoutFarmIncomeCreateByRelInput[] | FarmIncomeUncheckedCreateWithoutFarmIncomeCreateByRelInput[]
    connectOrCreate?: FarmIncomeCreateOrConnectWithoutFarmIncomeCreateByRelInput | FarmIncomeCreateOrConnectWithoutFarmIncomeCreateByRelInput[]
    createMany?: FarmIncomeCreateManyFarmIncomeCreateByRelInputEnvelope
    connect?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
  }

  export type FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput = {
    create?: XOR<FarmIncomeCreateWithoutFarmIncomeUpdateByRelInput, FarmIncomeUncheckedCreateWithoutFarmIncomeUpdateByRelInput> | FarmIncomeCreateWithoutFarmIncomeUpdateByRelInput[] | FarmIncomeUncheckedCreateWithoutFarmIncomeUpdateByRelInput[]
    connectOrCreate?: FarmIncomeCreateOrConnectWithoutFarmIncomeUpdateByRelInput | FarmIncomeCreateOrConnectWithoutFarmIncomeUpdateByRelInput[]
    createMany?: FarmIncomeCreateManyFarmIncomeUpdateByRelInputEnvelope
    connect?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
  }

  export type FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput = {
    create?: XOR<FarmIncomeTypeCreateWithoutFarmIncomeTypeCreateByRelInput, FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeCreateByRelInput> | FarmIncomeTypeCreateWithoutFarmIncomeTypeCreateByRelInput[] | FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeCreateByRelInput[]
    connectOrCreate?: FarmIncomeTypeCreateOrConnectWithoutFarmIncomeTypeCreateByRelInput | FarmIncomeTypeCreateOrConnectWithoutFarmIncomeTypeCreateByRelInput[]
    createMany?: FarmIncomeTypeCreateManyFarmIncomeTypeCreateByRelInputEnvelope
    connect?: FarmIncomeTypeWhereUniqueInput | FarmIncomeTypeWhereUniqueInput[]
  }

  export type FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput = {
    create?: XOR<FarmIncomeTypeCreateWithoutFarmIncomeTypeUpdateByRelInput, FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeUpdateByRelInput> | FarmIncomeTypeCreateWithoutFarmIncomeTypeUpdateByRelInput[] | FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeUpdateByRelInput[]
    connectOrCreate?: FarmIncomeTypeCreateOrConnectWithoutFarmIncomeTypeUpdateByRelInput | FarmIncomeTypeCreateOrConnectWithoutFarmIncomeTypeUpdateByRelInput[]
    createMany?: FarmIncomeTypeCreateManyFarmIncomeTypeUpdateByRelInputEnvelope
    connect?: FarmIncomeTypeWhereUniqueInput | FarmIncomeTypeWhereUniqueInput[]
  }

  export type FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput = {
    create?: XOR<FarmSpendingCreateWithoutFarmSpendingCreateByRelInput, FarmSpendingUncheckedCreateWithoutFarmSpendingCreateByRelInput> | FarmSpendingCreateWithoutFarmSpendingCreateByRelInput[] | FarmSpendingUncheckedCreateWithoutFarmSpendingCreateByRelInput[]
    connectOrCreate?: FarmSpendingCreateOrConnectWithoutFarmSpendingCreateByRelInput | FarmSpendingCreateOrConnectWithoutFarmSpendingCreateByRelInput[]
    createMany?: FarmSpendingCreateManyFarmSpendingCreateByRelInputEnvelope
    connect?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
  }

  export type FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput = {
    create?: XOR<FarmSpendingCreateWithoutFarmSpendingUpdateByRelInput, FarmSpendingUncheckedCreateWithoutFarmSpendingUpdateByRelInput> | FarmSpendingCreateWithoutFarmSpendingUpdateByRelInput[] | FarmSpendingUncheckedCreateWithoutFarmSpendingUpdateByRelInput[]
    connectOrCreate?: FarmSpendingCreateOrConnectWithoutFarmSpendingUpdateByRelInput | FarmSpendingCreateOrConnectWithoutFarmSpendingUpdateByRelInput[]
    createMany?: FarmSpendingCreateManyFarmSpendingUpdateByRelInputEnvelope
    connect?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
  }

  export type FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput = {
    create?: XOR<FarmSpendingTypeCreateWithoutFarmSpendingTypeCreateByRelInput, FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeCreateByRelInput> | FarmSpendingTypeCreateWithoutFarmSpendingTypeCreateByRelInput[] | FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeCreateByRelInput[]
    connectOrCreate?: FarmSpendingTypeCreateOrConnectWithoutFarmSpendingTypeCreateByRelInput | FarmSpendingTypeCreateOrConnectWithoutFarmSpendingTypeCreateByRelInput[]
    createMany?: FarmSpendingTypeCreateManyFarmSpendingTypeCreateByRelInputEnvelope
    connect?: FarmSpendingTypeWhereUniqueInput | FarmSpendingTypeWhereUniqueInput[]
  }

  export type FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput = {
    create?: XOR<FarmSpendingTypeCreateWithoutFarmSpendingTypeUpdateByRelInput, FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeUpdateByRelInput> | FarmSpendingTypeCreateWithoutFarmSpendingTypeUpdateByRelInput[] | FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeUpdateByRelInput[]
    connectOrCreate?: FarmSpendingTypeCreateOrConnectWithoutFarmSpendingTypeUpdateByRelInput | FarmSpendingTypeCreateOrConnectWithoutFarmSpendingTypeUpdateByRelInput[]
    createMany?: FarmSpendingTypeCreateManyFarmSpendingTypeUpdateByRelInputEnvelope
    connect?: FarmSpendingTypeWhereUniqueInput | FarmSpendingTypeWhereUniqueInput[]
  }

  export type UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput = {
    create?: XOR<UserHistoryCreateWithoutUserHistoryCreatedByRelInput, UserHistoryUncheckedCreateWithoutUserHistoryCreatedByRelInput> | UserHistoryCreateWithoutUserHistoryCreatedByRelInput[] | UserHistoryUncheckedCreateWithoutUserHistoryCreatedByRelInput[]
    connectOrCreate?: UserHistoryCreateOrConnectWithoutUserHistoryCreatedByRelInput | UserHistoryCreateOrConnectWithoutUserHistoryCreatedByRelInput[]
    createMany?: UserHistoryCreateManyUserHistoryCreatedByRelInputEnvelope
    connect?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
  }

  export type UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput = {
    create?: XOR<UserHistoryCreateWithoutUserHistoryUpdatedByRelInput, UserHistoryUncheckedCreateWithoutUserHistoryUpdatedByRelInput> | UserHistoryCreateWithoutUserHistoryUpdatedByRelInput[] | UserHistoryUncheckedCreateWithoutUserHistoryUpdatedByRelInput[]
    connectOrCreate?: UserHistoryCreateOrConnectWithoutUserHistoryUpdatedByRelInput | UserHistoryCreateOrConnectWithoutUserHistoryUpdatedByRelInput[]
    createMany?: UserHistoryCreateManyUserHistoryUpdatedByRelInputEnvelope
    connect?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
  }

  export type UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput = {
    create?: XOR<UserHistoryCreateWithoutUserHistoryIdRelInput, UserHistoryUncheckedCreateWithoutUserHistoryIdRelInput> | UserHistoryCreateWithoutUserHistoryIdRelInput[] | UserHistoryUncheckedCreateWithoutUserHistoryIdRelInput[]
    connectOrCreate?: UserHistoryCreateOrConnectWithoutUserHistoryIdRelInput | UserHistoryCreateOrConnectWithoutUserHistoryIdRelInput[]
    createMany?: UserHistoryCreateManyUserHistoryIdRelInputEnvelope
    connect?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
  }

  export type ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput = {
    create?: XOR<ChurchIncomeHistoryCreateWithoutChurchIncomeHistoryCreateByRelInput, ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeHistoryCreateByRelInput> | ChurchIncomeHistoryCreateWithoutChurchIncomeHistoryCreateByRelInput[] | ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeHistoryCreateByRelInput[]
    connectOrCreate?: ChurchIncomeHistoryCreateOrConnectWithoutChurchIncomeHistoryCreateByRelInput | ChurchIncomeHistoryCreateOrConnectWithoutChurchIncomeHistoryCreateByRelInput[]
    createMany?: ChurchIncomeHistoryCreateManyChurchIncomeHistoryCreateByRelInputEnvelope
    connect?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
  }

  export type ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput = {
    create?: XOR<ChurchIncomeHistoryCreateWithoutChurchIncomeHistoryUpdateByRelInput, ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeHistoryUpdateByRelInput> | ChurchIncomeHistoryCreateWithoutChurchIncomeHistoryUpdateByRelInput[] | ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeHistoryUpdateByRelInput[]
    connectOrCreate?: ChurchIncomeHistoryCreateOrConnectWithoutChurchIncomeHistoryUpdateByRelInput | ChurchIncomeHistoryCreateOrConnectWithoutChurchIncomeHistoryUpdateByRelInput[]
    createMany?: ChurchIncomeHistoryCreateManyChurchIncomeHistoryUpdateByRelInputEnvelope
    connect?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
  }

  export type ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput = {
    create?: XOR<ChurchSpendingHistoryCreateWithoutChurchSpendingHistoryCreateByRelInput, ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingHistoryCreateByRelInput> | ChurchSpendingHistoryCreateWithoutChurchSpendingHistoryCreateByRelInput[] | ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingHistoryCreateByRelInput[]
    connectOrCreate?: ChurchSpendingHistoryCreateOrConnectWithoutChurchSpendingHistoryCreateByRelInput | ChurchSpendingHistoryCreateOrConnectWithoutChurchSpendingHistoryCreateByRelInput[]
    createMany?: ChurchSpendingHistoryCreateManyChurchSpendingHistoryCreateByRelInputEnvelope
    connect?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
  }

  export type ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput = {
    create?: XOR<ChurchSpendingHistoryCreateWithoutChurchSpendingHistoryUpdateByRelInput, ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingHistoryUpdateByRelInput> | ChurchSpendingHistoryCreateWithoutChurchSpendingHistoryUpdateByRelInput[] | ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingHistoryUpdateByRelInput[]
    connectOrCreate?: ChurchSpendingHistoryCreateOrConnectWithoutChurchSpendingHistoryUpdateByRelInput | ChurchSpendingHistoryCreateOrConnectWithoutChurchSpendingHistoryUpdateByRelInput[]
    createMany?: ChurchSpendingHistoryCreateManyChurchSpendingHistoryUpdateByRelInputEnvelope
    connect?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
  }

  export type StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput = {
    create?: XOR<StoreIncomeHistoryCreateWithoutStoreIncomeHistoryCreateByRelInput, StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeHistoryCreateByRelInput> | StoreIncomeHistoryCreateWithoutStoreIncomeHistoryCreateByRelInput[] | StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeHistoryCreateByRelInput[]
    connectOrCreate?: StoreIncomeHistoryCreateOrConnectWithoutStoreIncomeHistoryCreateByRelInput | StoreIncomeHistoryCreateOrConnectWithoutStoreIncomeHistoryCreateByRelInput[]
    createMany?: StoreIncomeHistoryCreateManyStoreIncomeHistoryCreateByRelInputEnvelope
    connect?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
  }

  export type StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput = {
    create?: XOR<StoreIncomeHistoryCreateWithoutStoreIncomeHistoryUpdateByRelInput, StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeHistoryUpdateByRelInput> | StoreIncomeHistoryCreateWithoutStoreIncomeHistoryUpdateByRelInput[] | StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeHistoryUpdateByRelInput[]
    connectOrCreate?: StoreIncomeHistoryCreateOrConnectWithoutStoreIncomeHistoryUpdateByRelInput | StoreIncomeHistoryCreateOrConnectWithoutStoreIncomeHistoryUpdateByRelInput[]
    createMany?: StoreIncomeHistoryCreateManyStoreIncomeHistoryUpdateByRelInputEnvelope
    connect?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
  }

  export type StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput = {
    create?: XOR<StoreSpendingHistoryCreateWithoutStoreSpendingHistoryCreateByRelInput, StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingHistoryCreateByRelInput> | StoreSpendingHistoryCreateWithoutStoreSpendingHistoryCreateByRelInput[] | StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingHistoryCreateByRelInput[]
    connectOrCreate?: StoreSpendingHistoryCreateOrConnectWithoutStoreSpendingHistoryCreateByRelInput | StoreSpendingHistoryCreateOrConnectWithoutStoreSpendingHistoryCreateByRelInput[]
    createMany?: StoreSpendingHistoryCreateManyStoreSpendingHistoryCreateByRelInputEnvelope
    connect?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
  }

  export type StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput = {
    create?: XOR<StoreSpendingHistoryCreateWithoutStoreSpendingHistoryUpdateByRelInput, StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingHistoryUpdateByRelInput> | StoreSpendingHistoryCreateWithoutStoreSpendingHistoryUpdateByRelInput[] | StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingHistoryUpdateByRelInput[]
    connectOrCreate?: StoreSpendingHistoryCreateOrConnectWithoutStoreSpendingHistoryUpdateByRelInput | StoreSpendingHistoryCreateOrConnectWithoutStoreSpendingHistoryUpdateByRelInput[]
    createMany?: StoreSpendingHistoryCreateManyStoreSpendingHistoryUpdateByRelInputEnvelope
    connect?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
  }

  export type FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput = {
    create?: XOR<FarmIncomeHistoryCreateWithoutFarmIncomeHistoryCreateByRelInput, FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeHistoryCreateByRelInput> | FarmIncomeHistoryCreateWithoutFarmIncomeHistoryCreateByRelInput[] | FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeHistoryCreateByRelInput[]
    connectOrCreate?: FarmIncomeHistoryCreateOrConnectWithoutFarmIncomeHistoryCreateByRelInput | FarmIncomeHistoryCreateOrConnectWithoutFarmIncomeHistoryCreateByRelInput[]
    createMany?: FarmIncomeHistoryCreateManyFarmIncomeHistoryCreateByRelInputEnvelope
    connect?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
  }

  export type FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput = {
    create?: XOR<FarmIncomeHistoryCreateWithoutFarmIncomeHistoryUpdateByRelInput, FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeHistoryUpdateByRelInput> | FarmIncomeHistoryCreateWithoutFarmIncomeHistoryUpdateByRelInput[] | FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeHistoryUpdateByRelInput[]
    connectOrCreate?: FarmIncomeHistoryCreateOrConnectWithoutFarmIncomeHistoryUpdateByRelInput | FarmIncomeHistoryCreateOrConnectWithoutFarmIncomeHistoryUpdateByRelInput[]
    createMany?: FarmIncomeHistoryCreateManyFarmIncomeHistoryUpdateByRelInputEnvelope
    connect?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
  }

  export type FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput = {
    create?: XOR<FarmSpendingHistoryCreateWithoutFarmSpendingHistoryCreateByRelInput, FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingHistoryCreateByRelInput> | FarmSpendingHistoryCreateWithoutFarmSpendingHistoryCreateByRelInput[] | FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingHistoryCreateByRelInput[]
    connectOrCreate?: FarmSpendingHistoryCreateOrConnectWithoutFarmSpendingHistoryCreateByRelInput | FarmSpendingHistoryCreateOrConnectWithoutFarmSpendingHistoryCreateByRelInput[]
    createMany?: FarmSpendingHistoryCreateManyFarmSpendingHistoryCreateByRelInputEnvelope
    connect?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
  }

  export type FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput = {
    create?: XOR<FarmSpendingHistoryCreateWithoutFarmSpendingHistoryUpdateByRelInput, FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingHistoryUpdateByRelInput> | FarmSpendingHistoryCreateWithoutFarmSpendingHistoryUpdateByRelInput[] | FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingHistoryUpdateByRelInput[]
    connectOrCreate?: FarmSpendingHistoryCreateOrConnectWithoutFarmSpendingHistoryUpdateByRelInput | FarmSpendingHistoryCreateOrConnectWithoutFarmSpendingHistoryUpdateByRelInput[]
    createMany?: FarmSpendingHistoryCreateManyFarmSpendingHistoryUpdateByRelInputEnvelope
    connect?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type EnumRoleFieldUpdateOperationsInput = {
    set?: $Enums.Role
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type UserUpdateOneWithoutSelfCreatedByRelNestedInput = {
    create?: XOR<UserCreateWithoutSelfCreatedByRelInput, UserUncheckedCreateWithoutSelfCreatedByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutSelfCreatedByRelInput
    upsert?: UserUpsertWithoutSelfCreatedByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSelfCreatedByRelInput, UserUpdateWithoutSelfCreatedByRelInput>, UserUncheckedUpdateWithoutSelfCreatedByRelInput>
  }

  export type UserUpdateManyWithoutCreatedByRelNestedInput = {
    create?: XOR<UserCreateWithoutCreatedByRelInput, UserUncheckedCreateWithoutCreatedByRelInput> | UserCreateWithoutCreatedByRelInput[] | UserUncheckedCreateWithoutCreatedByRelInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCreatedByRelInput | UserCreateOrConnectWithoutCreatedByRelInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCreatedByRelInput | UserUpsertWithWhereUniqueWithoutCreatedByRelInput[]
    createMany?: UserCreateManyCreatedByRelInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutCreatedByRelInput | UserUpdateWithWhereUniqueWithoutCreatedByRelInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCreatedByRelInput | UserUpdateManyWithWhereWithoutCreatedByRelInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserUpdateOneWithoutSelfUpdatedByRelNestedInput = {
    create?: XOR<UserCreateWithoutSelfUpdatedByRelInput, UserUncheckedCreateWithoutSelfUpdatedByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutSelfUpdatedByRelInput
    upsert?: UserUpsertWithoutSelfUpdatedByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSelfUpdatedByRelInput, UserUpdateWithoutSelfUpdatedByRelInput>, UserUncheckedUpdateWithoutSelfUpdatedByRelInput>
  }

  export type UserUpdateManyWithoutUpdatedByRelNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedByRelInput, UserUncheckedCreateWithoutUpdatedByRelInput> | UserCreateWithoutUpdatedByRelInput[] | UserUncheckedCreateWithoutUpdatedByRelInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedByRelInput | UserCreateOrConnectWithoutUpdatedByRelInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutUpdatedByRelInput | UserUpsertWithWhereUniqueWithoutUpdatedByRelInput[]
    createMany?: UserCreateManyUpdatedByRelInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutUpdatedByRelInput | UserUpdateWithWhereUniqueWithoutUpdatedByRelInput[]
    updateMany?: UserUpdateManyWithWhereWithoutUpdatedByRelInput | UserUpdateManyWithWhereWithoutUpdatedByRelInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput = {
    create?: XOR<ChurchIncomeCreateWithoutChurchIncomeCreateByRelInput, ChurchIncomeUncheckedCreateWithoutChurchIncomeCreateByRelInput> | ChurchIncomeCreateWithoutChurchIncomeCreateByRelInput[] | ChurchIncomeUncheckedCreateWithoutChurchIncomeCreateByRelInput[]
    connectOrCreate?: ChurchIncomeCreateOrConnectWithoutChurchIncomeCreateByRelInput | ChurchIncomeCreateOrConnectWithoutChurchIncomeCreateByRelInput[]
    upsert?: ChurchIncomeUpsertWithWhereUniqueWithoutChurchIncomeCreateByRelInput | ChurchIncomeUpsertWithWhereUniqueWithoutChurchIncomeCreateByRelInput[]
    createMany?: ChurchIncomeCreateManyChurchIncomeCreateByRelInputEnvelope
    set?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
    disconnect?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
    delete?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
    connect?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
    update?: ChurchIncomeUpdateWithWhereUniqueWithoutChurchIncomeCreateByRelInput | ChurchIncomeUpdateWithWhereUniqueWithoutChurchIncomeCreateByRelInput[]
    updateMany?: ChurchIncomeUpdateManyWithWhereWithoutChurchIncomeCreateByRelInput | ChurchIncomeUpdateManyWithWhereWithoutChurchIncomeCreateByRelInput[]
    deleteMany?: ChurchIncomeScalarWhereInput | ChurchIncomeScalarWhereInput[]
  }

  export type ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput = {
    create?: XOR<ChurchIncomeCreateWithoutChurchIncomeUpdateByRelInput, ChurchIncomeUncheckedCreateWithoutChurchIncomeUpdateByRelInput> | ChurchIncomeCreateWithoutChurchIncomeUpdateByRelInput[] | ChurchIncomeUncheckedCreateWithoutChurchIncomeUpdateByRelInput[]
    connectOrCreate?: ChurchIncomeCreateOrConnectWithoutChurchIncomeUpdateByRelInput | ChurchIncomeCreateOrConnectWithoutChurchIncomeUpdateByRelInput[]
    upsert?: ChurchIncomeUpsertWithWhereUniqueWithoutChurchIncomeUpdateByRelInput | ChurchIncomeUpsertWithWhereUniqueWithoutChurchIncomeUpdateByRelInput[]
    createMany?: ChurchIncomeCreateManyChurchIncomeUpdateByRelInputEnvelope
    set?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
    disconnect?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
    delete?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
    connect?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
    update?: ChurchIncomeUpdateWithWhereUniqueWithoutChurchIncomeUpdateByRelInput | ChurchIncomeUpdateWithWhereUniqueWithoutChurchIncomeUpdateByRelInput[]
    updateMany?: ChurchIncomeUpdateManyWithWhereWithoutChurchIncomeUpdateByRelInput | ChurchIncomeUpdateManyWithWhereWithoutChurchIncomeUpdateByRelInput[]
    deleteMany?: ChurchIncomeScalarWhereInput | ChurchIncomeScalarWhereInput[]
  }

  export type ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput = {
    create?: XOR<ChurchIncomeTypeCreateWithoutChurchIncomeTypeCreateByRelInput, ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeCreateByRelInput> | ChurchIncomeTypeCreateWithoutChurchIncomeTypeCreateByRelInput[] | ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeCreateByRelInput[]
    connectOrCreate?: ChurchIncomeTypeCreateOrConnectWithoutChurchIncomeTypeCreateByRelInput | ChurchIncomeTypeCreateOrConnectWithoutChurchIncomeTypeCreateByRelInput[]
    upsert?: ChurchIncomeTypeUpsertWithWhereUniqueWithoutChurchIncomeTypeCreateByRelInput | ChurchIncomeTypeUpsertWithWhereUniqueWithoutChurchIncomeTypeCreateByRelInput[]
    createMany?: ChurchIncomeTypeCreateManyChurchIncomeTypeCreateByRelInputEnvelope
    set?: ChurchIncomeTypeWhereUniqueInput | ChurchIncomeTypeWhereUniqueInput[]
    disconnect?: ChurchIncomeTypeWhereUniqueInput | ChurchIncomeTypeWhereUniqueInput[]
    delete?: ChurchIncomeTypeWhereUniqueInput | ChurchIncomeTypeWhereUniqueInput[]
    connect?: ChurchIncomeTypeWhereUniqueInput | ChurchIncomeTypeWhereUniqueInput[]
    update?: ChurchIncomeTypeUpdateWithWhereUniqueWithoutChurchIncomeTypeCreateByRelInput | ChurchIncomeTypeUpdateWithWhereUniqueWithoutChurchIncomeTypeCreateByRelInput[]
    updateMany?: ChurchIncomeTypeUpdateManyWithWhereWithoutChurchIncomeTypeCreateByRelInput | ChurchIncomeTypeUpdateManyWithWhereWithoutChurchIncomeTypeCreateByRelInput[]
    deleteMany?: ChurchIncomeTypeScalarWhereInput | ChurchIncomeTypeScalarWhereInput[]
  }

  export type ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput = {
    create?: XOR<ChurchIncomeTypeCreateWithoutChurchIncomeTypeUpdateByRelInput, ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeUpdateByRelInput> | ChurchIncomeTypeCreateWithoutChurchIncomeTypeUpdateByRelInput[] | ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeUpdateByRelInput[]
    connectOrCreate?: ChurchIncomeTypeCreateOrConnectWithoutChurchIncomeTypeUpdateByRelInput | ChurchIncomeTypeCreateOrConnectWithoutChurchIncomeTypeUpdateByRelInput[]
    upsert?: ChurchIncomeTypeUpsertWithWhereUniqueWithoutChurchIncomeTypeUpdateByRelInput | ChurchIncomeTypeUpsertWithWhereUniqueWithoutChurchIncomeTypeUpdateByRelInput[]
    createMany?: ChurchIncomeTypeCreateManyChurchIncomeTypeUpdateByRelInputEnvelope
    set?: ChurchIncomeTypeWhereUniqueInput | ChurchIncomeTypeWhereUniqueInput[]
    disconnect?: ChurchIncomeTypeWhereUniqueInput | ChurchIncomeTypeWhereUniqueInput[]
    delete?: ChurchIncomeTypeWhereUniqueInput | ChurchIncomeTypeWhereUniqueInput[]
    connect?: ChurchIncomeTypeWhereUniqueInput | ChurchIncomeTypeWhereUniqueInput[]
    update?: ChurchIncomeTypeUpdateWithWhereUniqueWithoutChurchIncomeTypeUpdateByRelInput | ChurchIncomeTypeUpdateWithWhereUniqueWithoutChurchIncomeTypeUpdateByRelInput[]
    updateMany?: ChurchIncomeTypeUpdateManyWithWhereWithoutChurchIncomeTypeUpdateByRelInput | ChurchIncomeTypeUpdateManyWithWhereWithoutChurchIncomeTypeUpdateByRelInput[]
    deleteMany?: ChurchIncomeTypeScalarWhereInput | ChurchIncomeTypeScalarWhereInput[]
  }

  export type ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput = {
    create?: XOR<ChurchSpendingCreateWithoutChurchSpendingCreateByRelInput, ChurchSpendingUncheckedCreateWithoutChurchSpendingCreateByRelInput> | ChurchSpendingCreateWithoutChurchSpendingCreateByRelInput[] | ChurchSpendingUncheckedCreateWithoutChurchSpendingCreateByRelInput[]
    connectOrCreate?: ChurchSpendingCreateOrConnectWithoutChurchSpendingCreateByRelInput | ChurchSpendingCreateOrConnectWithoutChurchSpendingCreateByRelInput[]
    upsert?: ChurchSpendingUpsertWithWhereUniqueWithoutChurchSpendingCreateByRelInput | ChurchSpendingUpsertWithWhereUniqueWithoutChurchSpendingCreateByRelInput[]
    createMany?: ChurchSpendingCreateManyChurchSpendingCreateByRelInputEnvelope
    set?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
    disconnect?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
    delete?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
    connect?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
    update?: ChurchSpendingUpdateWithWhereUniqueWithoutChurchSpendingCreateByRelInput | ChurchSpendingUpdateWithWhereUniqueWithoutChurchSpendingCreateByRelInput[]
    updateMany?: ChurchSpendingUpdateManyWithWhereWithoutChurchSpendingCreateByRelInput | ChurchSpendingUpdateManyWithWhereWithoutChurchSpendingCreateByRelInput[]
    deleteMany?: ChurchSpendingScalarWhereInput | ChurchSpendingScalarWhereInput[]
  }

  export type ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput = {
    create?: XOR<ChurchSpendingCreateWithoutChurchSpendingUpdateByRelInput, ChurchSpendingUncheckedCreateWithoutChurchSpendingUpdateByRelInput> | ChurchSpendingCreateWithoutChurchSpendingUpdateByRelInput[] | ChurchSpendingUncheckedCreateWithoutChurchSpendingUpdateByRelInput[]
    connectOrCreate?: ChurchSpendingCreateOrConnectWithoutChurchSpendingUpdateByRelInput | ChurchSpendingCreateOrConnectWithoutChurchSpendingUpdateByRelInput[]
    upsert?: ChurchSpendingUpsertWithWhereUniqueWithoutChurchSpendingUpdateByRelInput | ChurchSpendingUpsertWithWhereUniqueWithoutChurchSpendingUpdateByRelInput[]
    createMany?: ChurchSpendingCreateManyChurchSpendingUpdateByRelInputEnvelope
    set?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
    disconnect?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
    delete?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
    connect?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
    update?: ChurchSpendingUpdateWithWhereUniqueWithoutChurchSpendingUpdateByRelInput | ChurchSpendingUpdateWithWhereUniqueWithoutChurchSpendingUpdateByRelInput[]
    updateMany?: ChurchSpendingUpdateManyWithWhereWithoutChurchSpendingUpdateByRelInput | ChurchSpendingUpdateManyWithWhereWithoutChurchSpendingUpdateByRelInput[]
    deleteMany?: ChurchSpendingScalarWhereInput | ChurchSpendingScalarWhereInput[]
  }

  export type ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput = {
    create?: XOR<ChurchSpendingTypeCreateWithoutChurchSpendingTypeCreateByRelInput, ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeCreateByRelInput> | ChurchSpendingTypeCreateWithoutChurchSpendingTypeCreateByRelInput[] | ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeCreateByRelInput[]
    connectOrCreate?: ChurchSpendingTypeCreateOrConnectWithoutChurchSpendingTypeCreateByRelInput | ChurchSpendingTypeCreateOrConnectWithoutChurchSpendingTypeCreateByRelInput[]
    upsert?: ChurchSpendingTypeUpsertWithWhereUniqueWithoutChurchSpendingTypeCreateByRelInput | ChurchSpendingTypeUpsertWithWhereUniqueWithoutChurchSpendingTypeCreateByRelInput[]
    createMany?: ChurchSpendingTypeCreateManyChurchSpendingTypeCreateByRelInputEnvelope
    set?: ChurchSpendingTypeWhereUniqueInput | ChurchSpendingTypeWhereUniqueInput[]
    disconnect?: ChurchSpendingTypeWhereUniqueInput | ChurchSpendingTypeWhereUniqueInput[]
    delete?: ChurchSpendingTypeWhereUniqueInput | ChurchSpendingTypeWhereUniqueInput[]
    connect?: ChurchSpendingTypeWhereUniqueInput | ChurchSpendingTypeWhereUniqueInput[]
    update?: ChurchSpendingTypeUpdateWithWhereUniqueWithoutChurchSpendingTypeCreateByRelInput | ChurchSpendingTypeUpdateWithWhereUniqueWithoutChurchSpendingTypeCreateByRelInput[]
    updateMany?: ChurchSpendingTypeUpdateManyWithWhereWithoutChurchSpendingTypeCreateByRelInput | ChurchSpendingTypeUpdateManyWithWhereWithoutChurchSpendingTypeCreateByRelInput[]
    deleteMany?: ChurchSpendingTypeScalarWhereInput | ChurchSpendingTypeScalarWhereInput[]
  }

  export type ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput = {
    create?: XOR<ChurchSpendingTypeCreateWithoutChurchSpendingTypeUpdateByRelInput, ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeUpdateByRelInput> | ChurchSpendingTypeCreateWithoutChurchSpendingTypeUpdateByRelInput[] | ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeUpdateByRelInput[]
    connectOrCreate?: ChurchSpendingTypeCreateOrConnectWithoutChurchSpendingTypeUpdateByRelInput | ChurchSpendingTypeCreateOrConnectWithoutChurchSpendingTypeUpdateByRelInput[]
    upsert?: ChurchSpendingTypeUpsertWithWhereUniqueWithoutChurchSpendingTypeUpdateByRelInput | ChurchSpendingTypeUpsertWithWhereUniqueWithoutChurchSpendingTypeUpdateByRelInput[]
    createMany?: ChurchSpendingTypeCreateManyChurchSpendingTypeUpdateByRelInputEnvelope
    set?: ChurchSpendingTypeWhereUniqueInput | ChurchSpendingTypeWhereUniqueInput[]
    disconnect?: ChurchSpendingTypeWhereUniqueInput | ChurchSpendingTypeWhereUniqueInput[]
    delete?: ChurchSpendingTypeWhereUniqueInput | ChurchSpendingTypeWhereUniqueInput[]
    connect?: ChurchSpendingTypeWhereUniqueInput | ChurchSpendingTypeWhereUniqueInput[]
    update?: ChurchSpendingTypeUpdateWithWhereUniqueWithoutChurchSpendingTypeUpdateByRelInput | ChurchSpendingTypeUpdateWithWhereUniqueWithoutChurchSpendingTypeUpdateByRelInput[]
    updateMany?: ChurchSpendingTypeUpdateManyWithWhereWithoutChurchSpendingTypeUpdateByRelInput | ChurchSpendingTypeUpdateManyWithWhereWithoutChurchSpendingTypeUpdateByRelInput[]
    deleteMany?: ChurchSpendingTypeScalarWhereInput | ChurchSpendingTypeScalarWhereInput[]
  }

  export type StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput = {
    create?: XOR<StoreIncomeCreateWithoutStoreIncomeCreateByRelInput, StoreIncomeUncheckedCreateWithoutStoreIncomeCreateByRelInput> | StoreIncomeCreateWithoutStoreIncomeCreateByRelInput[] | StoreIncomeUncheckedCreateWithoutStoreIncomeCreateByRelInput[]
    connectOrCreate?: StoreIncomeCreateOrConnectWithoutStoreIncomeCreateByRelInput | StoreIncomeCreateOrConnectWithoutStoreIncomeCreateByRelInput[]
    upsert?: StoreIncomeUpsertWithWhereUniqueWithoutStoreIncomeCreateByRelInput | StoreIncomeUpsertWithWhereUniqueWithoutStoreIncomeCreateByRelInput[]
    createMany?: StoreIncomeCreateManyStoreIncomeCreateByRelInputEnvelope
    set?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
    disconnect?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
    delete?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
    connect?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
    update?: StoreIncomeUpdateWithWhereUniqueWithoutStoreIncomeCreateByRelInput | StoreIncomeUpdateWithWhereUniqueWithoutStoreIncomeCreateByRelInput[]
    updateMany?: StoreIncomeUpdateManyWithWhereWithoutStoreIncomeCreateByRelInput | StoreIncomeUpdateManyWithWhereWithoutStoreIncomeCreateByRelInput[]
    deleteMany?: StoreIncomeScalarWhereInput | StoreIncomeScalarWhereInput[]
  }

  export type StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput = {
    create?: XOR<StoreIncomeCreateWithoutStoreIncomeUpdateByRelInput, StoreIncomeUncheckedCreateWithoutStoreIncomeUpdateByRelInput> | StoreIncomeCreateWithoutStoreIncomeUpdateByRelInput[] | StoreIncomeUncheckedCreateWithoutStoreIncomeUpdateByRelInput[]
    connectOrCreate?: StoreIncomeCreateOrConnectWithoutStoreIncomeUpdateByRelInput | StoreIncomeCreateOrConnectWithoutStoreIncomeUpdateByRelInput[]
    upsert?: StoreIncomeUpsertWithWhereUniqueWithoutStoreIncomeUpdateByRelInput | StoreIncomeUpsertWithWhereUniqueWithoutStoreIncomeUpdateByRelInput[]
    createMany?: StoreIncomeCreateManyStoreIncomeUpdateByRelInputEnvelope
    set?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
    disconnect?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
    delete?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
    connect?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
    update?: StoreIncomeUpdateWithWhereUniqueWithoutStoreIncomeUpdateByRelInput | StoreIncomeUpdateWithWhereUniqueWithoutStoreIncomeUpdateByRelInput[]
    updateMany?: StoreIncomeUpdateManyWithWhereWithoutStoreIncomeUpdateByRelInput | StoreIncomeUpdateManyWithWhereWithoutStoreIncomeUpdateByRelInput[]
    deleteMany?: StoreIncomeScalarWhereInput | StoreIncomeScalarWhereInput[]
  }

  export type StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput = {
    create?: XOR<StoreIncomeTypeCreateWithoutStoreIncomeTypeCreateByRelInput, StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeCreateByRelInput> | StoreIncomeTypeCreateWithoutStoreIncomeTypeCreateByRelInput[] | StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeCreateByRelInput[]
    connectOrCreate?: StoreIncomeTypeCreateOrConnectWithoutStoreIncomeTypeCreateByRelInput | StoreIncomeTypeCreateOrConnectWithoutStoreIncomeTypeCreateByRelInput[]
    upsert?: StoreIncomeTypeUpsertWithWhereUniqueWithoutStoreIncomeTypeCreateByRelInput | StoreIncomeTypeUpsertWithWhereUniqueWithoutStoreIncomeTypeCreateByRelInput[]
    createMany?: StoreIncomeTypeCreateManyStoreIncomeTypeCreateByRelInputEnvelope
    set?: StoreIncomeTypeWhereUniqueInput | StoreIncomeTypeWhereUniqueInput[]
    disconnect?: StoreIncomeTypeWhereUniqueInput | StoreIncomeTypeWhereUniqueInput[]
    delete?: StoreIncomeTypeWhereUniqueInput | StoreIncomeTypeWhereUniqueInput[]
    connect?: StoreIncomeTypeWhereUniqueInput | StoreIncomeTypeWhereUniqueInput[]
    update?: StoreIncomeTypeUpdateWithWhereUniqueWithoutStoreIncomeTypeCreateByRelInput | StoreIncomeTypeUpdateWithWhereUniqueWithoutStoreIncomeTypeCreateByRelInput[]
    updateMany?: StoreIncomeTypeUpdateManyWithWhereWithoutStoreIncomeTypeCreateByRelInput | StoreIncomeTypeUpdateManyWithWhereWithoutStoreIncomeTypeCreateByRelInput[]
    deleteMany?: StoreIncomeTypeScalarWhereInput | StoreIncomeTypeScalarWhereInput[]
  }

  export type StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput = {
    create?: XOR<StoreIncomeTypeCreateWithoutStoreIncomeTypeUpdateByRelInput, StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeUpdateByRelInput> | StoreIncomeTypeCreateWithoutStoreIncomeTypeUpdateByRelInput[] | StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeUpdateByRelInput[]
    connectOrCreate?: StoreIncomeTypeCreateOrConnectWithoutStoreIncomeTypeUpdateByRelInput | StoreIncomeTypeCreateOrConnectWithoutStoreIncomeTypeUpdateByRelInput[]
    upsert?: StoreIncomeTypeUpsertWithWhereUniqueWithoutStoreIncomeTypeUpdateByRelInput | StoreIncomeTypeUpsertWithWhereUniqueWithoutStoreIncomeTypeUpdateByRelInput[]
    createMany?: StoreIncomeTypeCreateManyStoreIncomeTypeUpdateByRelInputEnvelope
    set?: StoreIncomeTypeWhereUniqueInput | StoreIncomeTypeWhereUniqueInput[]
    disconnect?: StoreIncomeTypeWhereUniqueInput | StoreIncomeTypeWhereUniqueInput[]
    delete?: StoreIncomeTypeWhereUniqueInput | StoreIncomeTypeWhereUniqueInput[]
    connect?: StoreIncomeTypeWhereUniqueInput | StoreIncomeTypeWhereUniqueInput[]
    update?: StoreIncomeTypeUpdateWithWhereUniqueWithoutStoreIncomeTypeUpdateByRelInput | StoreIncomeTypeUpdateWithWhereUniqueWithoutStoreIncomeTypeUpdateByRelInput[]
    updateMany?: StoreIncomeTypeUpdateManyWithWhereWithoutStoreIncomeTypeUpdateByRelInput | StoreIncomeTypeUpdateManyWithWhereWithoutStoreIncomeTypeUpdateByRelInput[]
    deleteMany?: StoreIncomeTypeScalarWhereInput | StoreIncomeTypeScalarWhereInput[]
  }

  export type StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput = {
    create?: XOR<StoreSpendingCreateWithoutStoreSpendingCreateByRelInput, StoreSpendingUncheckedCreateWithoutStoreSpendingCreateByRelInput> | StoreSpendingCreateWithoutStoreSpendingCreateByRelInput[] | StoreSpendingUncheckedCreateWithoutStoreSpendingCreateByRelInput[]
    connectOrCreate?: StoreSpendingCreateOrConnectWithoutStoreSpendingCreateByRelInput | StoreSpendingCreateOrConnectWithoutStoreSpendingCreateByRelInput[]
    upsert?: StoreSpendingUpsertWithWhereUniqueWithoutStoreSpendingCreateByRelInput | StoreSpendingUpsertWithWhereUniqueWithoutStoreSpendingCreateByRelInput[]
    createMany?: StoreSpendingCreateManyStoreSpendingCreateByRelInputEnvelope
    set?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
    disconnect?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
    delete?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
    connect?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
    update?: StoreSpendingUpdateWithWhereUniqueWithoutStoreSpendingCreateByRelInput | StoreSpendingUpdateWithWhereUniqueWithoutStoreSpendingCreateByRelInput[]
    updateMany?: StoreSpendingUpdateManyWithWhereWithoutStoreSpendingCreateByRelInput | StoreSpendingUpdateManyWithWhereWithoutStoreSpendingCreateByRelInput[]
    deleteMany?: StoreSpendingScalarWhereInput | StoreSpendingScalarWhereInput[]
  }

  export type StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput = {
    create?: XOR<StoreSpendingCreateWithoutStoreSpendingUpdateByRelInput, StoreSpendingUncheckedCreateWithoutStoreSpendingUpdateByRelInput> | StoreSpendingCreateWithoutStoreSpendingUpdateByRelInput[] | StoreSpendingUncheckedCreateWithoutStoreSpendingUpdateByRelInput[]
    connectOrCreate?: StoreSpendingCreateOrConnectWithoutStoreSpendingUpdateByRelInput | StoreSpendingCreateOrConnectWithoutStoreSpendingUpdateByRelInput[]
    upsert?: StoreSpendingUpsertWithWhereUniqueWithoutStoreSpendingUpdateByRelInput | StoreSpendingUpsertWithWhereUniqueWithoutStoreSpendingUpdateByRelInput[]
    createMany?: StoreSpendingCreateManyStoreSpendingUpdateByRelInputEnvelope
    set?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
    disconnect?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
    delete?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
    connect?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
    update?: StoreSpendingUpdateWithWhereUniqueWithoutStoreSpendingUpdateByRelInput | StoreSpendingUpdateWithWhereUniqueWithoutStoreSpendingUpdateByRelInput[]
    updateMany?: StoreSpendingUpdateManyWithWhereWithoutStoreSpendingUpdateByRelInput | StoreSpendingUpdateManyWithWhereWithoutStoreSpendingUpdateByRelInput[]
    deleteMany?: StoreSpendingScalarWhereInput | StoreSpendingScalarWhereInput[]
  }

  export type StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput = {
    create?: XOR<StoreSpendingTypeCreateWithoutStoreSpendingTypeCreateByRelInput, StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeCreateByRelInput> | StoreSpendingTypeCreateWithoutStoreSpendingTypeCreateByRelInput[] | StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeCreateByRelInput[]
    connectOrCreate?: StoreSpendingTypeCreateOrConnectWithoutStoreSpendingTypeCreateByRelInput | StoreSpendingTypeCreateOrConnectWithoutStoreSpendingTypeCreateByRelInput[]
    upsert?: StoreSpendingTypeUpsertWithWhereUniqueWithoutStoreSpendingTypeCreateByRelInput | StoreSpendingTypeUpsertWithWhereUniqueWithoutStoreSpendingTypeCreateByRelInput[]
    createMany?: StoreSpendingTypeCreateManyStoreSpendingTypeCreateByRelInputEnvelope
    set?: StoreSpendingTypeWhereUniqueInput | StoreSpendingTypeWhereUniqueInput[]
    disconnect?: StoreSpendingTypeWhereUniqueInput | StoreSpendingTypeWhereUniqueInput[]
    delete?: StoreSpendingTypeWhereUniqueInput | StoreSpendingTypeWhereUniqueInput[]
    connect?: StoreSpendingTypeWhereUniqueInput | StoreSpendingTypeWhereUniqueInput[]
    update?: StoreSpendingTypeUpdateWithWhereUniqueWithoutStoreSpendingTypeCreateByRelInput | StoreSpendingTypeUpdateWithWhereUniqueWithoutStoreSpendingTypeCreateByRelInput[]
    updateMany?: StoreSpendingTypeUpdateManyWithWhereWithoutStoreSpendingTypeCreateByRelInput | StoreSpendingTypeUpdateManyWithWhereWithoutStoreSpendingTypeCreateByRelInput[]
    deleteMany?: StoreSpendingTypeScalarWhereInput | StoreSpendingTypeScalarWhereInput[]
  }

  export type StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput = {
    create?: XOR<StoreSpendingTypeCreateWithoutStoreSpendingTypeUpdateByRelInput, StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeUpdateByRelInput> | StoreSpendingTypeCreateWithoutStoreSpendingTypeUpdateByRelInput[] | StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeUpdateByRelInput[]
    connectOrCreate?: StoreSpendingTypeCreateOrConnectWithoutStoreSpendingTypeUpdateByRelInput | StoreSpendingTypeCreateOrConnectWithoutStoreSpendingTypeUpdateByRelInput[]
    upsert?: StoreSpendingTypeUpsertWithWhereUniqueWithoutStoreSpendingTypeUpdateByRelInput | StoreSpendingTypeUpsertWithWhereUniqueWithoutStoreSpendingTypeUpdateByRelInput[]
    createMany?: StoreSpendingTypeCreateManyStoreSpendingTypeUpdateByRelInputEnvelope
    set?: StoreSpendingTypeWhereUniqueInput | StoreSpendingTypeWhereUniqueInput[]
    disconnect?: StoreSpendingTypeWhereUniqueInput | StoreSpendingTypeWhereUniqueInput[]
    delete?: StoreSpendingTypeWhereUniqueInput | StoreSpendingTypeWhereUniqueInput[]
    connect?: StoreSpendingTypeWhereUniqueInput | StoreSpendingTypeWhereUniqueInput[]
    update?: StoreSpendingTypeUpdateWithWhereUniqueWithoutStoreSpendingTypeUpdateByRelInput | StoreSpendingTypeUpdateWithWhereUniqueWithoutStoreSpendingTypeUpdateByRelInput[]
    updateMany?: StoreSpendingTypeUpdateManyWithWhereWithoutStoreSpendingTypeUpdateByRelInput | StoreSpendingTypeUpdateManyWithWhereWithoutStoreSpendingTypeUpdateByRelInput[]
    deleteMany?: StoreSpendingTypeScalarWhereInput | StoreSpendingTypeScalarWhereInput[]
  }

  export type FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput = {
    create?: XOR<FarmIncomeCreateWithoutFarmIncomeCreateByRelInput, FarmIncomeUncheckedCreateWithoutFarmIncomeCreateByRelInput> | FarmIncomeCreateWithoutFarmIncomeCreateByRelInput[] | FarmIncomeUncheckedCreateWithoutFarmIncomeCreateByRelInput[]
    connectOrCreate?: FarmIncomeCreateOrConnectWithoutFarmIncomeCreateByRelInput | FarmIncomeCreateOrConnectWithoutFarmIncomeCreateByRelInput[]
    upsert?: FarmIncomeUpsertWithWhereUniqueWithoutFarmIncomeCreateByRelInput | FarmIncomeUpsertWithWhereUniqueWithoutFarmIncomeCreateByRelInput[]
    createMany?: FarmIncomeCreateManyFarmIncomeCreateByRelInputEnvelope
    set?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
    disconnect?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
    delete?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
    connect?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
    update?: FarmIncomeUpdateWithWhereUniqueWithoutFarmIncomeCreateByRelInput | FarmIncomeUpdateWithWhereUniqueWithoutFarmIncomeCreateByRelInput[]
    updateMany?: FarmIncomeUpdateManyWithWhereWithoutFarmIncomeCreateByRelInput | FarmIncomeUpdateManyWithWhereWithoutFarmIncomeCreateByRelInput[]
    deleteMany?: FarmIncomeScalarWhereInput | FarmIncomeScalarWhereInput[]
  }

  export type FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput = {
    create?: XOR<FarmIncomeCreateWithoutFarmIncomeUpdateByRelInput, FarmIncomeUncheckedCreateWithoutFarmIncomeUpdateByRelInput> | FarmIncomeCreateWithoutFarmIncomeUpdateByRelInput[] | FarmIncomeUncheckedCreateWithoutFarmIncomeUpdateByRelInput[]
    connectOrCreate?: FarmIncomeCreateOrConnectWithoutFarmIncomeUpdateByRelInput | FarmIncomeCreateOrConnectWithoutFarmIncomeUpdateByRelInput[]
    upsert?: FarmIncomeUpsertWithWhereUniqueWithoutFarmIncomeUpdateByRelInput | FarmIncomeUpsertWithWhereUniqueWithoutFarmIncomeUpdateByRelInput[]
    createMany?: FarmIncomeCreateManyFarmIncomeUpdateByRelInputEnvelope
    set?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
    disconnect?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
    delete?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
    connect?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
    update?: FarmIncomeUpdateWithWhereUniqueWithoutFarmIncomeUpdateByRelInput | FarmIncomeUpdateWithWhereUniqueWithoutFarmIncomeUpdateByRelInput[]
    updateMany?: FarmIncomeUpdateManyWithWhereWithoutFarmIncomeUpdateByRelInput | FarmIncomeUpdateManyWithWhereWithoutFarmIncomeUpdateByRelInput[]
    deleteMany?: FarmIncomeScalarWhereInput | FarmIncomeScalarWhereInput[]
  }

  export type FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput = {
    create?: XOR<FarmIncomeTypeCreateWithoutFarmIncomeTypeCreateByRelInput, FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeCreateByRelInput> | FarmIncomeTypeCreateWithoutFarmIncomeTypeCreateByRelInput[] | FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeCreateByRelInput[]
    connectOrCreate?: FarmIncomeTypeCreateOrConnectWithoutFarmIncomeTypeCreateByRelInput | FarmIncomeTypeCreateOrConnectWithoutFarmIncomeTypeCreateByRelInput[]
    upsert?: FarmIncomeTypeUpsertWithWhereUniqueWithoutFarmIncomeTypeCreateByRelInput | FarmIncomeTypeUpsertWithWhereUniqueWithoutFarmIncomeTypeCreateByRelInput[]
    createMany?: FarmIncomeTypeCreateManyFarmIncomeTypeCreateByRelInputEnvelope
    set?: FarmIncomeTypeWhereUniqueInput | FarmIncomeTypeWhereUniqueInput[]
    disconnect?: FarmIncomeTypeWhereUniqueInput | FarmIncomeTypeWhereUniqueInput[]
    delete?: FarmIncomeTypeWhereUniqueInput | FarmIncomeTypeWhereUniqueInput[]
    connect?: FarmIncomeTypeWhereUniqueInput | FarmIncomeTypeWhereUniqueInput[]
    update?: FarmIncomeTypeUpdateWithWhereUniqueWithoutFarmIncomeTypeCreateByRelInput | FarmIncomeTypeUpdateWithWhereUniqueWithoutFarmIncomeTypeCreateByRelInput[]
    updateMany?: FarmIncomeTypeUpdateManyWithWhereWithoutFarmIncomeTypeCreateByRelInput | FarmIncomeTypeUpdateManyWithWhereWithoutFarmIncomeTypeCreateByRelInput[]
    deleteMany?: FarmIncomeTypeScalarWhereInput | FarmIncomeTypeScalarWhereInput[]
  }

  export type FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput = {
    create?: XOR<FarmIncomeTypeCreateWithoutFarmIncomeTypeUpdateByRelInput, FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeUpdateByRelInput> | FarmIncomeTypeCreateWithoutFarmIncomeTypeUpdateByRelInput[] | FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeUpdateByRelInput[]
    connectOrCreate?: FarmIncomeTypeCreateOrConnectWithoutFarmIncomeTypeUpdateByRelInput | FarmIncomeTypeCreateOrConnectWithoutFarmIncomeTypeUpdateByRelInput[]
    upsert?: FarmIncomeTypeUpsertWithWhereUniqueWithoutFarmIncomeTypeUpdateByRelInput | FarmIncomeTypeUpsertWithWhereUniqueWithoutFarmIncomeTypeUpdateByRelInput[]
    createMany?: FarmIncomeTypeCreateManyFarmIncomeTypeUpdateByRelInputEnvelope
    set?: FarmIncomeTypeWhereUniqueInput | FarmIncomeTypeWhereUniqueInput[]
    disconnect?: FarmIncomeTypeWhereUniqueInput | FarmIncomeTypeWhereUniqueInput[]
    delete?: FarmIncomeTypeWhereUniqueInput | FarmIncomeTypeWhereUniqueInput[]
    connect?: FarmIncomeTypeWhereUniqueInput | FarmIncomeTypeWhereUniqueInput[]
    update?: FarmIncomeTypeUpdateWithWhereUniqueWithoutFarmIncomeTypeUpdateByRelInput | FarmIncomeTypeUpdateWithWhereUniqueWithoutFarmIncomeTypeUpdateByRelInput[]
    updateMany?: FarmIncomeTypeUpdateManyWithWhereWithoutFarmIncomeTypeUpdateByRelInput | FarmIncomeTypeUpdateManyWithWhereWithoutFarmIncomeTypeUpdateByRelInput[]
    deleteMany?: FarmIncomeTypeScalarWhereInput | FarmIncomeTypeScalarWhereInput[]
  }

  export type FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput = {
    create?: XOR<FarmSpendingCreateWithoutFarmSpendingCreateByRelInput, FarmSpendingUncheckedCreateWithoutFarmSpendingCreateByRelInput> | FarmSpendingCreateWithoutFarmSpendingCreateByRelInput[] | FarmSpendingUncheckedCreateWithoutFarmSpendingCreateByRelInput[]
    connectOrCreate?: FarmSpendingCreateOrConnectWithoutFarmSpendingCreateByRelInput | FarmSpendingCreateOrConnectWithoutFarmSpendingCreateByRelInput[]
    upsert?: FarmSpendingUpsertWithWhereUniqueWithoutFarmSpendingCreateByRelInput | FarmSpendingUpsertWithWhereUniqueWithoutFarmSpendingCreateByRelInput[]
    createMany?: FarmSpendingCreateManyFarmSpendingCreateByRelInputEnvelope
    set?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
    disconnect?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
    delete?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
    connect?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
    update?: FarmSpendingUpdateWithWhereUniqueWithoutFarmSpendingCreateByRelInput | FarmSpendingUpdateWithWhereUniqueWithoutFarmSpendingCreateByRelInput[]
    updateMany?: FarmSpendingUpdateManyWithWhereWithoutFarmSpendingCreateByRelInput | FarmSpendingUpdateManyWithWhereWithoutFarmSpendingCreateByRelInput[]
    deleteMany?: FarmSpendingScalarWhereInput | FarmSpendingScalarWhereInput[]
  }

  export type FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput = {
    create?: XOR<FarmSpendingCreateWithoutFarmSpendingUpdateByRelInput, FarmSpendingUncheckedCreateWithoutFarmSpendingUpdateByRelInput> | FarmSpendingCreateWithoutFarmSpendingUpdateByRelInput[] | FarmSpendingUncheckedCreateWithoutFarmSpendingUpdateByRelInput[]
    connectOrCreate?: FarmSpendingCreateOrConnectWithoutFarmSpendingUpdateByRelInput | FarmSpendingCreateOrConnectWithoutFarmSpendingUpdateByRelInput[]
    upsert?: FarmSpendingUpsertWithWhereUniqueWithoutFarmSpendingUpdateByRelInput | FarmSpendingUpsertWithWhereUniqueWithoutFarmSpendingUpdateByRelInput[]
    createMany?: FarmSpendingCreateManyFarmSpendingUpdateByRelInputEnvelope
    set?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
    disconnect?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
    delete?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
    connect?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
    update?: FarmSpendingUpdateWithWhereUniqueWithoutFarmSpendingUpdateByRelInput | FarmSpendingUpdateWithWhereUniqueWithoutFarmSpendingUpdateByRelInput[]
    updateMany?: FarmSpendingUpdateManyWithWhereWithoutFarmSpendingUpdateByRelInput | FarmSpendingUpdateManyWithWhereWithoutFarmSpendingUpdateByRelInput[]
    deleteMany?: FarmSpendingScalarWhereInput | FarmSpendingScalarWhereInput[]
  }

  export type FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput = {
    create?: XOR<FarmSpendingTypeCreateWithoutFarmSpendingTypeCreateByRelInput, FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeCreateByRelInput> | FarmSpendingTypeCreateWithoutFarmSpendingTypeCreateByRelInput[] | FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeCreateByRelInput[]
    connectOrCreate?: FarmSpendingTypeCreateOrConnectWithoutFarmSpendingTypeCreateByRelInput | FarmSpendingTypeCreateOrConnectWithoutFarmSpendingTypeCreateByRelInput[]
    upsert?: FarmSpendingTypeUpsertWithWhereUniqueWithoutFarmSpendingTypeCreateByRelInput | FarmSpendingTypeUpsertWithWhereUniqueWithoutFarmSpendingTypeCreateByRelInput[]
    createMany?: FarmSpendingTypeCreateManyFarmSpendingTypeCreateByRelInputEnvelope
    set?: FarmSpendingTypeWhereUniqueInput | FarmSpendingTypeWhereUniqueInput[]
    disconnect?: FarmSpendingTypeWhereUniqueInput | FarmSpendingTypeWhereUniqueInput[]
    delete?: FarmSpendingTypeWhereUniqueInput | FarmSpendingTypeWhereUniqueInput[]
    connect?: FarmSpendingTypeWhereUniqueInput | FarmSpendingTypeWhereUniqueInput[]
    update?: FarmSpendingTypeUpdateWithWhereUniqueWithoutFarmSpendingTypeCreateByRelInput | FarmSpendingTypeUpdateWithWhereUniqueWithoutFarmSpendingTypeCreateByRelInput[]
    updateMany?: FarmSpendingTypeUpdateManyWithWhereWithoutFarmSpendingTypeCreateByRelInput | FarmSpendingTypeUpdateManyWithWhereWithoutFarmSpendingTypeCreateByRelInput[]
    deleteMany?: FarmSpendingTypeScalarWhereInput | FarmSpendingTypeScalarWhereInput[]
  }

  export type FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput = {
    create?: XOR<FarmSpendingTypeCreateWithoutFarmSpendingTypeUpdateByRelInput, FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeUpdateByRelInput> | FarmSpendingTypeCreateWithoutFarmSpendingTypeUpdateByRelInput[] | FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeUpdateByRelInput[]
    connectOrCreate?: FarmSpendingTypeCreateOrConnectWithoutFarmSpendingTypeUpdateByRelInput | FarmSpendingTypeCreateOrConnectWithoutFarmSpendingTypeUpdateByRelInput[]
    upsert?: FarmSpendingTypeUpsertWithWhereUniqueWithoutFarmSpendingTypeUpdateByRelInput | FarmSpendingTypeUpsertWithWhereUniqueWithoutFarmSpendingTypeUpdateByRelInput[]
    createMany?: FarmSpendingTypeCreateManyFarmSpendingTypeUpdateByRelInputEnvelope
    set?: FarmSpendingTypeWhereUniqueInput | FarmSpendingTypeWhereUniqueInput[]
    disconnect?: FarmSpendingTypeWhereUniqueInput | FarmSpendingTypeWhereUniqueInput[]
    delete?: FarmSpendingTypeWhereUniqueInput | FarmSpendingTypeWhereUniqueInput[]
    connect?: FarmSpendingTypeWhereUniqueInput | FarmSpendingTypeWhereUniqueInput[]
    update?: FarmSpendingTypeUpdateWithWhereUniqueWithoutFarmSpendingTypeUpdateByRelInput | FarmSpendingTypeUpdateWithWhereUniqueWithoutFarmSpendingTypeUpdateByRelInput[]
    updateMany?: FarmSpendingTypeUpdateManyWithWhereWithoutFarmSpendingTypeUpdateByRelInput | FarmSpendingTypeUpdateManyWithWhereWithoutFarmSpendingTypeUpdateByRelInput[]
    deleteMany?: FarmSpendingTypeScalarWhereInput | FarmSpendingTypeScalarWhereInput[]
  }

  export type UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput = {
    create?: XOR<UserHistoryCreateWithoutUserHistoryCreatedByRelInput, UserHistoryUncheckedCreateWithoutUserHistoryCreatedByRelInput> | UserHistoryCreateWithoutUserHistoryCreatedByRelInput[] | UserHistoryUncheckedCreateWithoutUserHistoryCreatedByRelInput[]
    connectOrCreate?: UserHistoryCreateOrConnectWithoutUserHistoryCreatedByRelInput | UserHistoryCreateOrConnectWithoutUserHistoryCreatedByRelInput[]
    upsert?: UserHistoryUpsertWithWhereUniqueWithoutUserHistoryCreatedByRelInput | UserHistoryUpsertWithWhereUniqueWithoutUserHistoryCreatedByRelInput[]
    createMany?: UserHistoryCreateManyUserHistoryCreatedByRelInputEnvelope
    set?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    disconnect?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    delete?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    connect?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    update?: UserHistoryUpdateWithWhereUniqueWithoutUserHistoryCreatedByRelInput | UserHistoryUpdateWithWhereUniqueWithoutUserHistoryCreatedByRelInput[]
    updateMany?: UserHistoryUpdateManyWithWhereWithoutUserHistoryCreatedByRelInput | UserHistoryUpdateManyWithWhereWithoutUserHistoryCreatedByRelInput[]
    deleteMany?: UserHistoryScalarWhereInput | UserHistoryScalarWhereInput[]
  }

  export type UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput = {
    create?: XOR<UserHistoryCreateWithoutUserHistoryUpdatedByRelInput, UserHistoryUncheckedCreateWithoutUserHistoryUpdatedByRelInput> | UserHistoryCreateWithoutUserHistoryUpdatedByRelInput[] | UserHistoryUncheckedCreateWithoutUserHistoryUpdatedByRelInput[]
    connectOrCreate?: UserHistoryCreateOrConnectWithoutUserHistoryUpdatedByRelInput | UserHistoryCreateOrConnectWithoutUserHistoryUpdatedByRelInput[]
    upsert?: UserHistoryUpsertWithWhereUniqueWithoutUserHistoryUpdatedByRelInput | UserHistoryUpsertWithWhereUniqueWithoutUserHistoryUpdatedByRelInput[]
    createMany?: UserHistoryCreateManyUserHistoryUpdatedByRelInputEnvelope
    set?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    disconnect?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    delete?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    connect?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    update?: UserHistoryUpdateWithWhereUniqueWithoutUserHistoryUpdatedByRelInput | UserHistoryUpdateWithWhereUniqueWithoutUserHistoryUpdatedByRelInput[]
    updateMany?: UserHistoryUpdateManyWithWhereWithoutUserHistoryUpdatedByRelInput | UserHistoryUpdateManyWithWhereWithoutUserHistoryUpdatedByRelInput[]
    deleteMany?: UserHistoryScalarWhereInput | UserHistoryScalarWhereInput[]
  }

  export type UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput = {
    create?: XOR<UserHistoryCreateWithoutUserHistoryIdRelInput, UserHistoryUncheckedCreateWithoutUserHistoryIdRelInput> | UserHistoryCreateWithoutUserHistoryIdRelInput[] | UserHistoryUncheckedCreateWithoutUserHistoryIdRelInput[]
    connectOrCreate?: UserHistoryCreateOrConnectWithoutUserHistoryIdRelInput | UserHistoryCreateOrConnectWithoutUserHistoryIdRelInput[]
    upsert?: UserHistoryUpsertWithWhereUniqueWithoutUserHistoryIdRelInput | UserHistoryUpsertWithWhereUniqueWithoutUserHistoryIdRelInput[]
    createMany?: UserHistoryCreateManyUserHistoryIdRelInputEnvelope
    set?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    disconnect?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    delete?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    connect?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    update?: UserHistoryUpdateWithWhereUniqueWithoutUserHistoryIdRelInput | UserHistoryUpdateWithWhereUniqueWithoutUserHistoryIdRelInput[]
    updateMany?: UserHistoryUpdateManyWithWhereWithoutUserHistoryIdRelInput | UserHistoryUpdateManyWithWhereWithoutUserHistoryIdRelInput[]
    deleteMany?: UserHistoryScalarWhereInput | UserHistoryScalarWhereInput[]
  }

  export type ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput = {
    create?: XOR<ChurchIncomeHistoryCreateWithoutChurchIncomeHistoryCreateByRelInput, ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeHistoryCreateByRelInput> | ChurchIncomeHistoryCreateWithoutChurchIncomeHistoryCreateByRelInput[] | ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeHistoryCreateByRelInput[]
    connectOrCreate?: ChurchIncomeHistoryCreateOrConnectWithoutChurchIncomeHistoryCreateByRelInput | ChurchIncomeHistoryCreateOrConnectWithoutChurchIncomeHistoryCreateByRelInput[]
    upsert?: ChurchIncomeHistoryUpsertWithWhereUniqueWithoutChurchIncomeHistoryCreateByRelInput | ChurchIncomeHistoryUpsertWithWhereUniqueWithoutChurchIncomeHistoryCreateByRelInput[]
    createMany?: ChurchIncomeHistoryCreateManyChurchIncomeHistoryCreateByRelInputEnvelope
    set?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
    disconnect?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
    delete?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
    connect?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
    update?: ChurchIncomeHistoryUpdateWithWhereUniqueWithoutChurchIncomeHistoryCreateByRelInput | ChurchIncomeHistoryUpdateWithWhereUniqueWithoutChurchIncomeHistoryCreateByRelInput[]
    updateMany?: ChurchIncomeHistoryUpdateManyWithWhereWithoutChurchIncomeHistoryCreateByRelInput | ChurchIncomeHistoryUpdateManyWithWhereWithoutChurchIncomeHistoryCreateByRelInput[]
    deleteMany?: ChurchIncomeHistoryScalarWhereInput | ChurchIncomeHistoryScalarWhereInput[]
  }

  export type ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput = {
    create?: XOR<ChurchIncomeHistoryCreateWithoutChurchIncomeHistoryUpdateByRelInput, ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeHistoryUpdateByRelInput> | ChurchIncomeHistoryCreateWithoutChurchIncomeHistoryUpdateByRelInput[] | ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeHistoryUpdateByRelInput[]
    connectOrCreate?: ChurchIncomeHistoryCreateOrConnectWithoutChurchIncomeHistoryUpdateByRelInput | ChurchIncomeHistoryCreateOrConnectWithoutChurchIncomeHistoryUpdateByRelInput[]
    upsert?: ChurchIncomeHistoryUpsertWithWhereUniqueWithoutChurchIncomeHistoryUpdateByRelInput | ChurchIncomeHistoryUpsertWithWhereUniqueWithoutChurchIncomeHistoryUpdateByRelInput[]
    createMany?: ChurchIncomeHistoryCreateManyChurchIncomeHistoryUpdateByRelInputEnvelope
    set?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
    disconnect?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
    delete?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
    connect?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
    update?: ChurchIncomeHistoryUpdateWithWhereUniqueWithoutChurchIncomeHistoryUpdateByRelInput | ChurchIncomeHistoryUpdateWithWhereUniqueWithoutChurchIncomeHistoryUpdateByRelInput[]
    updateMany?: ChurchIncomeHistoryUpdateManyWithWhereWithoutChurchIncomeHistoryUpdateByRelInput | ChurchIncomeHistoryUpdateManyWithWhereWithoutChurchIncomeHistoryUpdateByRelInput[]
    deleteMany?: ChurchIncomeHistoryScalarWhereInput | ChurchIncomeHistoryScalarWhereInput[]
  }

  export type ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput = {
    create?: XOR<ChurchSpendingHistoryCreateWithoutChurchSpendingHistoryCreateByRelInput, ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingHistoryCreateByRelInput> | ChurchSpendingHistoryCreateWithoutChurchSpendingHistoryCreateByRelInput[] | ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingHistoryCreateByRelInput[]
    connectOrCreate?: ChurchSpendingHistoryCreateOrConnectWithoutChurchSpendingHistoryCreateByRelInput | ChurchSpendingHistoryCreateOrConnectWithoutChurchSpendingHistoryCreateByRelInput[]
    upsert?: ChurchSpendingHistoryUpsertWithWhereUniqueWithoutChurchSpendingHistoryCreateByRelInput | ChurchSpendingHistoryUpsertWithWhereUniqueWithoutChurchSpendingHistoryCreateByRelInput[]
    createMany?: ChurchSpendingHistoryCreateManyChurchSpendingHistoryCreateByRelInputEnvelope
    set?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
    disconnect?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
    delete?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
    connect?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
    update?: ChurchSpendingHistoryUpdateWithWhereUniqueWithoutChurchSpendingHistoryCreateByRelInput | ChurchSpendingHistoryUpdateWithWhereUniqueWithoutChurchSpendingHistoryCreateByRelInput[]
    updateMany?: ChurchSpendingHistoryUpdateManyWithWhereWithoutChurchSpendingHistoryCreateByRelInput | ChurchSpendingHistoryUpdateManyWithWhereWithoutChurchSpendingHistoryCreateByRelInput[]
    deleteMany?: ChurchSpendingHistoryScalarWhereInput | ChurchSpendingHistoryScalarWhereInput[]
  }

  export type ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput = {
    create?: XOR<ChurchSpendingHistoryCreateWithoutChurchSpendingHistoryUpdateByRelInput, ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingHistoryUpdateByRelInput> | ChurchSpendingHistoryCreateWithoutChurchSpendingHistoryUpdateByRelInput[] | ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingHistoryUpdateByRelInput[]
    connectOrCreate?: ChurchSpendingHistoryCreateOrConnectWithoutChurchSpendingHistoryUpdateByRelInput | ChurchSpendingHistoryCreateOrConnectWithoutChurchSpendingHistoryUpdateByRelInput[]
    upsert?: ChurchSpendingHistoryUpsertWithWhereUniqueWithoutChurchSpendingHistoryUpdateByRelInput | ChurchSpendingHistoryUpsertWithWhereUniqueWithoutChurchSpendingHistoryUpdateByRelInput[]
    createMany?: ChurchSpendingHistoryCreateManyChurchSpendingHistoryUpdateByRelInputEnvelope
    set?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
    disconnect?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
    delete?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
    connect?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
    update?: ChurchSpendingHistoryUpdateWithWhereUniqueWithoutChurchSpendingHistoryUpdateByRelInput | ChurchSpendingHistoryUpdateWithWhereUniqueWithoutChurchSpendingHistoryUpdateByRelInput[]
    updateMany?: ChurchSpendingHistoryUpdateManyWithWhereWithoutChurchSpendingHistoryUpdateByRelInput | ChurchSpendingHistoryUpdateManyWithWhereWithoutChurchSpendingHistoryUpdateByRelInput[]
    deleteMany?: ChurchSpendingHistoryScalarWhereInput | ChurchSpendingHistoryScalarWhereInput[]
  }

  export type StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput = {
    create?: XOR<StoreIncomeHistoryCreateWithoutStoreIncomeHistoryCreateByRelInput, StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeHistoryCreateByRelInput> | StoreIncomeHistoryCreateWithoutStoreIncomeHistoryCreateByRelInput[] | StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeHistoryCreateByRelInput[]
    connectOrCreate?: StoreIncomeHistoryCreateOrConnectWithoutStoreIncomeHistoryCreateByRelInput | StoreIncomeHistoryCreateOrConnectWithoutStoreIncomeHistoryCreateByRelInput[]
    upsert?: StoreIncomeHistoryUpsertWithWhereUniqueWithoutStoreIncomeHistoryCreateByRelInput | StoreIncomeHistoryUpsertWithWhereUniqueWithoutStoreIncomeHistoryCreateByRelInput[]
    createMany?: StoreIncomeHistoryCreateManyStoreIncomeHistoryCreateByRelInputEnvelope
    set?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
    disconnect?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
    delete?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
    connect?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
    update?: StoreIncomeHistoryUpdateWithWhereUniqueWithoutStoreIncomeHistoryCreateByRelInput | StoreIncomeHistoryUpdateWithWhereUniqueWithoutStoreIncomeHistoryCreateByRelInput[]
    updateMany?: StoreIncomeHistoryUpdateManyWithWhereWithoutStoreIncomeHistoryCreateByRelInput | StoreIncomeHistoryUpdateManyWithWhereWithoutStoreIncomeHistoryCreateByRelInput[]
    deleteMany?: StoreIncomeHistoryScalarWhereInput | StoreIncomeHistoryScalarWhereInput[]
  }

  export type StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput = {
    create?: XOR<StoreIncomeHistoryCreateWithoutStoreIncomeHistoryUpdateByRelInput, StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeHistoryUpdateByRelInput> | StoreIncomeHistoryCreateWithoutStoreIncomeHistoryUpdateByRelInput[] | StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeHistoryUpdateByRelInput[]
    connectOrCreate?: StoreIncomeHistoryCreateOrConnectWithoutStoreIncomeHistoryUpdateByRelInput | StoreIncomeHistoryCreateOrConnectWithoutStoreIncomeHistoryUpdateByRelInput[]
    upsert?: StoreIncomeHistoryUpsertWithWhereUniqueWithoutStoreIncomeHistoryUpdateByRelInput | StoreIncomeHistoryUpsertWithWhereUniqueWithoutStoreIncomeHistoryUpdateByRelInput[]
    createMany?: StoreIncomeHistoryCreateManyStoreIncomeHistoryUpdateByRelInputEnvelope
    set?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
    disconnect?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
    delete?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
    connect?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
    update?: StoreIncomeHistoryUpdateWithWhereUniqueWithoutStoreIncomeHistoryUpdateByRelInput | StoreIncomeHistoryUpdateWithWhereUniqueWithoutStoreIncomeHistoryUpdateByRelInput[]
    updateMany?: StoreIncomeHistoryUpdateManyWithWhereWithoutStoreIncomeHistoryUpdateByRelInput | StoreIncomeHistoryUpdateManyWithWhereWithoutStoreIncomeHistoryUpdateByRelInput[]
    deleteMany?: StoreIncomeHistoryScalarWhereInput | StoreIncomeHistoryScalarWhereInput[]
  }

  export type StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput = {
    create?: XOR<StoreSpendingHistoryCreateWithoutStoreSpendingHistoryCreateByRelInput, StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingHistoryCreateByRelInput> | StoreSpendingHistoryCreateWithoutStoreSpendingHistoryCreateByRelInput[] | StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingHistoryCreateByRelInput[]
    connectOrCreate?: StoreSpendingHistoryCreateOrConnectWithoutStoreSpendingHistoryCreateByRelInput | StoreSpendingHistoryCreateOrConnectWithoutStoreSpendingHistoryCreateByRelInput[]
    upsert?: StoreSpendingHistoryUpsertWithWhereUniqueWithoutStoreSpendingHistoryCreateByRelInput | StoreSpendingHistoryUpsertWithWhereUniqueWithoutStoreSpendingHistoryCreateByRelInput[]
    createMany?: StoreSpendingHistoryCreateManyStoreSpendingHistoryCreateByRelInputEnvelope
    set?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
    disconnect?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
    delete?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
    connect?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
    update?: StoreSpendingHistoryUpdateWithWhereUniqueWithoutStoreSpendingHistoryCreateByRelInput | StoreSpendingHistoryUpdateWithWhereUniqueWithoutStoreSpendingHistoryCreateByRelInput[]
    updateMany?: StoreSpendingHistoryUpdateManyWithWhereWithoutStoreSpendingHistoryCreateByRelInput | StoreSpendingHistoryUpdateManyWithWhereWithoutStoreSpendingHistoryCreateByRelInput[]
    deleteMany?: StoreSpendingHistoryScalarWhereInput | StoreSpendingHistoryScalarWhereInput[]
  }

  export type StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput = {
    create?: XOR<StoreSpendingHistoryCreateWithoutStoreSpendingHistoryUpdateByRelInput, StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingHistoryUpdateByRelInput> | StoreSpendingHistoryCreateWithoutStoreSpendingHistoryUpdateByRelInput[] | StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingHistoryUpdateByRelInput[]
    connectOrCreate?: StoreSpendingHistoryCreateOrConnectWithoutStoreSpendingHistoryUpdateByRelInput | StoreSpendingHistoryCreateOrConnectWithoutStoreSpendingHistoryUpdateByRelInput[]
    upsert?: StoreSpendingHistoryUpsertWithWhereUniqueWithoutStoreSpendingHistoryUpdateByRelInput | StoreSpendingHistoryUpsertWithWhereUniqueWithoutStoreSpendingHistoryUpdateByRelInput[]
    createMany?: StoreSpendingHistoryCreateManyStoreSpendingHistoryUpdateByRelInputEnvelope
    set?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
    disconnect?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
    delete?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
    connect?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
    update?: StoreSpendingHistoryUpdateWithWhereUniqueWithoutStoreSpendingHistoryUpdateByRelInput | StoreSpendingHistoryUpdateWithWhereUniqueWithoutStoreSpendingHistoryUpdateByRelInput[]
    updateMany?: StoreSpendingHistoryUpdateManyWithWhereWithoutStoreSpendingHistoryUpdateByRelInput | StoreSpendingHistoryUpdateManyWithWhereWithoutStoreSpendingHistoryUpdateByRelInput[]
    deleteMany?: StoreSpendingHistoryScalarWhereInput | StoreSpendingHistoryScalarWhereInput[]
  }

  export type FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput = {
    create?: XOR<FarmIncomeHistoryCreateWithoutFarmIncomeHistoryCreateByRelInput, FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeHistoryCreateByRelInput> | FarmIncomeHistoryCreateWithoutFarmIncomeHistoryCreateByRelInput[] | FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeHistoryCreateByRelInput[]
    connectOrCreate?: FarmIncomeHistoryCreateOrConnectWithoutFarmIncomeHistoryCreateByRelInput | FarmIncomeHistoryCreateOrConnectWithoutFarmIncomeHistoryCreateByRelInput[]
    upsert?: FarmIncomeHistoryUpsertWithWhereUniqueWithoutFarmIncomeHistoryCreateByRelInput | FarmIncomeHistoryUpsertWithWhereUniqueWithoutFarmIncomeHistoryCreateByRelInput[]
    createMany?: FarmIncomeHistoryCreateManyFarmIncomeHistoryCreateByRelInputEnvelope
    set?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
    disconnect?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
    delete?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
    connect?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
    update?: FarmIncomeHistoryUpdateWithWhereUniqueWithoutFarmIncomeHistoryCreateByRelInput | FarmIncomeHistoryUpdateWithWhereUniqueWithoutFarmIncomeHistoryCreateByRelInput[]
    updateMany?: FarmIncomeHistoryUpdateManyWithWhereWithoutFarmIncomeHistoryCreateByRelInput | FarmIncomeHistoryUpdateManyWithWhereWithoutFarmIncomeHistoryCreateByRelInput[]
    deleteMany?: FarmIncomeHistoryScalarWhereInput | FarmIncomeHistoryScalarWhereInput[]
  }

  export type FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput = {
    create?: XOR<FarmIncomeHistoryCreateWithoutFarmIncomeHistoryUpdateByRelInput, FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeHistoryUpdateByRelInput> | FarmIncomeHistoryCreateWithoutFarmIncomeHistoryUpdateByRelInput[] | FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeHistoryUpdateByRelInput[]
    connectOrCreate?: FarmIncomeHistoryCreateOrConnectWithoutFarmIncomeHistoryUpdateByRelInput | FarmIncomeHistoryCreateOrConnectWithoutFarmIncomeHistoryUpdateByRelInput[]
    upsert?: FarmIncomeHistoryUpsertWithWhereUniqueWithoutFarmIncomeHistoryUpdateByRelInput | FarmIncomeHistoryUpsertWithWhereUniqueWithoutFarmIncomeHistoryUpdateByRelInput[]
    createMany?: FarmIncomeHistoryCreateManyFarmIncomeHistoryUpdateByRelInputEnvelope
    set?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
    disconnect?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
    delete?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
    connect?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
    update?: FarmIncomeHistoryUpdateWithWhereUniqueWithoutFarmIncomeHistoryUpdateByRelInput | FarmIncomeHistoryUpdateWithWhereUniqueWithoutFarmIncomeHistoryUpdateByRelInput[]
    updateMany?: FarmIncomeHistoryUpdateManyWithWhereWithoutFarmIncomeHistoryUpdateByRelInput | FarmIncomeHistoryUpdateManyWithWhereWithoutFarmIncomeHistoryUpdateByRelInput[]
    deleteMany?: FarmIncomeHistoryScalarWhereInput | FarmIncomeHistoryScalarWhereInput[]
  }

  export type FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput = {
    create?: XOR<FarmSpendingHistoryCreateWithoutFarmSpendingHistoryCreateByRelInput, FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingHistoryCreateByRelInput> | FarmSpendingHistoryCreateWithoutFarmSpendingHistoryCreateByRelInput[] | FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingHistoryCreateByRelInput[]
    connectOrCreate?: FarmSpendingHistoryCreateOrConnectWithoutFarmSpendingHistoryCreateByRelInput | FarmSpendingHistoryCreateOrConnectWithoutFarmSpendingHistoryCreateByRelInput[]
    upsert?: FarmSpendingHistoryUpsertWithWhereUniqueWithoutFarmSpendingHistoryCreateByRelInput | FarmSpendingHistoryUpsertWithWhereUniqueWithoutFarmSpendingHistoryCreateByRelInput[]
    createMany?: FarmSpendingHistoryCreateManyFarmSpendingHistoryCreateByRelInputEnvelope
    set?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
    disconnect?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
    delete?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
    connect?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
    update?: FarmSpendingHistoryUpdateWithWhereUniqueWithoutFarmSpendingHistoryCreateByRelInput | FarmSpendingHistoryUpdateWithWhereUniqueWithoutFarmSpendingHistoryCreateByRelInput[]
    updateMany?: FarmSpendingHistoryUpdateManyWithWhereWithoutFarmSpendingHistoryCreateByRelInput | FarmSpendingHistoryUpdateManyWithWhereWithoutFarmSpendingHistoryCreateByRelInput[]
    deleteMany?: FarmSpendingHistoryScalarWhereInput | FarmSpendingHistoryScalarWhereInput[]
  }

  export type FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput = {
    create?: XOR<FarmSpendingHistoryCreateWithoutFarmSpendingHistoryUpdateByRelInput, FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingHistoryUpdateByRelInput> | FarmSpendingHistoryCreateWithoutFarmSpendingHistoryUpdateByRelInput[] | FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingHistoryUpdateByRelInput[]
    connectOrCreate?: FarmSpendingHistoryCreateOrConnectWithoutFarmSpendingHistoryUpdateByRelInput | FarmSpendingHistoryCreateOrConnectWithoutFarmSpendingHistoryUpdateByRelInput[]
    upsert?: FarmSpendingHistoryUpsertWithWhereUniqueWithoutFarmSpendingHistoryUpdateByRelInput | FarmSpendingHistoryUpsertWithWhereUniqueWithoutFarmSpendingHistoryUpdateByRelInput[]
    createMany?: FarmSpendingHistoryCreateManyFarmSpendingHistoryUpdateByRelInputEnvelope
    set?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
    disconnect?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
    delete?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
    connect?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
    update?: FarmSpendingHistoryUpdateWithWhereUniqueWithoutFarmSpendingHistoryUpdateByRelInput | FarmSpendingHistoryUpdateWithWhereUniqueWithoutFarmSpendingHistoryUpdateByRelInput[]
    updateMany?: FarmSpendingHistoryUpdateManyWithWhereWithoutFarmSpendingHistoryUpdateByRelInput | FarmSpendingHistoryUpdateManyWithWhereWithoutFarmSpendingHistoryUpdateByRelInput[]
    deleteMany?: FarmSpendingHistoryScalarWhereInput | FarmSpendingHistoryScalarWhereInput[]
  }

  export type NullableBigIntFieldUpdateOperationsInput = {
    set?: bigint | number | null
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type UserUncheckedUpdateManyWithoutCreatedByRelNestedInput = {
    create?: XOR<UserCreateWithoutCreatedByRelInput, UserUncheckedCreateWithoutCreatedByRelInput> | UserCreateWithoutCreatedByRelInput[] | UserUncheckedCreateWithoutCreatedByRelInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCreatedByRelInput | UserCreateOrConnectWithoutCreatedByRelInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCreatedByRelInput | UserUpsertWithWhereUniqueWithoutCreatedByRelInput[]
    createMany?: UserCreateManyCreatedByRelInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutCreatedByRelInput | UserUpdateWithWhereUniqueWithoutCreatedByRelInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCreatedByRelInput | UserUpdateManyWithWhereWithoutCreatedByRelInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedByRelInput, UserUncheckedCreateWithoutUpdatedByRelInput> | UserCreateWithoutUpdatedByRelInput[] | UserUncheckedCreateWithoutUpdatedByRelInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedByRelInput | UserCreateOrConnectWithoutUpdatedByRelInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutUpdatedByRelInput | UserUpsertWithWhereUniqueWithoutUpdatedByRelInput[]
    createMany?: UserCreateManyUpdatedByRelInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutUpdatedByRelInput | UserUpdateWithWhereUniqueWithoutUpdatedByRelInput[]
    updateMany?: UserUpdateManyWithWhereWithoutUpdatedByRelInput | UserUpdateManyWithWhereWithoutUpdatedByRelInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput = {
    create?: XOR<ChurchIncomeCreateWithoutChurchIncomeCreateByRelInput, ChurchIncomeUncheckedCreateWithoutChurchIncomeCreateByRelInput> | ChurchIncomeCreateWithoutChurchIncomeCreateByRelInput[] | ChurchIncomeUncheckedCreateWithoutChurchIncomeCreateByRelInput[]
    connectOrCreate?: ChurchIncomeCreateOrConnectWithoutChurchIncomeCreateByRelInput | ChurchIncomeCreateOrConnectWithoutChurchIncomeCreateByRelInput[]
    upsert?: ChurchIncomeUpsertWithWhereUniqueWithoutChurchIncomeCreateByRelInput | ChurchIncomeUpsertWithWhereUniqueWithoutChurchIncomeCreateByRelInput[]
    createMany?: ChurchIncomeCreateManyChurchIncomeCreateByRelInputEnvelope
    set?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
    disconnect?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
    delete?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
    connect?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
    update?: ChurchIncomeUpdateWithWhereUniqueWithoutChurchIncomeCreateByRelInput | ChurchIncomeUpdateWithWhereUniqueWithoutChurchIncomeCreateByRelInput[]
    updateMany?: ChurchIncomeUpdateManyWithWhereWithoutChurchIncomeCreateByRelInput | ChurchIncomeUpdateManyWithWhereWithoutChurchIncomeCreateByRelInput[]
    deleteMany?: ChurchIncomeScalarWhereInput | ChurchIncomeScalarWhereInput[]
  }

  export type ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput = {
    create?: XOR<ChurchIncomeCreateWithoutChurchIncomeUpdateByRelInput, ChurchIncomeUncheckedCreateWithoutChurchIncomeUpdateByRelInput> | ChurchIncomeCreateWithoutChurchIncomeUpdateByRelInput[] | ChurchIncomeUncheckedCreateWithoutChurchIncomeUpdateByRelInput[]
    connectOrCreate?: ChurchIncomeCreateOrConnectWithoutChurchIncomeUpdateByRelInput | ChurchIncomeCreateOrConnectWithoutChurchIncomeUpdateByRelInput[]
    upsert?: ChurchIncomeUpsertWithWhereUniqueWithoutChurchIncomeUpdateByRelInput | ChurchIncomeUpsertWithWhereUniqueWithoutChurchIncomeUpdateByRelInput[]
    createMany?: ChurchIncomeCreateManyChurchIncomeUpdateByRelInputEnvelope
    set?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
    disconnect?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
    delete?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
    connect?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
    update?: ChurchIncomeUpdateWithWhereUniqueWithoutChurchIncomeUpdateByRelInput | ChurchIncomeUpdateWithWhereUniqueWithoutChurchIncomeUpdateByRelInput[]
    updateMany?: ChurchIncomeUpdateManyWithWhereWithoutChurchIncomeUpdateByRelInput | ChurchIncomeUpdateManyWithWhereWithoutChurchIncomeUpdateByRelInput[]
    deleteMany?: ChurchIncomeScalarWhereInput | ChurchIncomeScalarWhereInput[]
  }

  export type ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput = {
    create?: XOR<ChurchIncomeTypeCreateWithoutChurchIncomeTypeCreateByRelInput, ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeCreateByRelInput> | ChurchIncomeTypeCreateWithoutChurchIncomeTypeCreateByRelInput[] | ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeCreateByRelInput[]
    connectOrCreate?: ChurchIncomeTypeCreateOrConnectWithoutChurchIncomeTypeCreateByRelInput | ChurchIncomeTypeCreateOrConnectWithoutChurchIncomeTypeCreateByRelInput[]
    upsert?: ChurchIncomeTypeUpsertWithWhereUniqueWithoutChurchIncomeTypeCreateByRelInput | ChurchIncomeTypeUpsertWithWhereUniqueWithoutChurchIncomeTypeCreateByRelInput[]
    createMany?: ChurchIncomeTypeCreateManyChurchIncomeTypeCreateByRelInputEnvelope
    set?: ChurchIncomeTypeWhereUniqueInput | ChurchIncomeTypeWhereUniqueInput[]
    disconnect?: ChurchIncomeTypeWhereUniqueInput | ChurchIncomeTypeWhereUniqueInput[]
    delete?: ChurchIncomeTypeWhereUniqueInput | ChurchIncomeTypeWhereUniqueInput[]
    connect?: ChurchIncomeTypeWhereUniqueInput | ChurchIncomeTypeWhereUniqueInput[]
    update?: ChurchIncomeTypeUpdateWithWhereUniqueWithoutChurchIncomeTypeCreateByRelInput | ChurchIncomeTypeUpdateWithWhereUniqueWithoutChurchIncomeTypeCreateByRelInput[]
    updateMany?: ChurchIncomeTypeUpdateManyWithWhereWithoutChurchIncomeTypeCreateByRelInput | ChurchIncomeTypeUpdateManyWithWhereWithoutChurchIncomeTypeCreateByRelInput[]
    deleteMany?: ChurchIncomeTypeScalarWhereInput | ChurchIncomeTypeScalarWhereInput[]
  }

  export type ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput = {
    create?: XOR<ChurchIncomeTypeCreateWithoutChurchIncomeTypeUpdateByRelInput, ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeUpdateByRelInput> | ChurchIncomeTypeCreateWithoutChurchIncomeTypeUpdateByRelInput[] | ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeUpdateByRelInput[]
    connectOrCreate?: ChurchIncomeTypeCreateOrConnectWithoutChurchIncomeTypeUpdateByRelInput | ChurchIncomeTypeCreateOrConnectWithoutChurchIncomeTypeUpdateByRelInput[]
    upsert?: ChurchIncomeTypeUpsertWithWhereUniqueWithoutChurchIncomeTypeUpdateByRelInput | ChurchIncomeTypeUpsertWithWhereUniqueWithoutChurchIncomeTypeUpdateByRelInput[]
    createMany?: ChurchIncomeTypeCreateManyChurchIncomeTypeUpdateByRelInputEnvelope
    set?: ChurchIncomeTypeWhereUniqueInput | ChurchIncomeTypeWhereUniqueInput[]
    disconnect?: ChurchIncomeTypeWhereUniqueInput | ChurchIncomeTypeWhereUniqueInput[]
    delete?: ChurchIncomeTypeWhereUniqueInput | ChurchIncomeTypeWhereUniqueInput[]
    connect?: ChurchIncomeTypeWhereUniqueInput | ChurchIncomeTypeWhereUniqueInput[]
    update?: ChurchIncomeTypeUpdateWithWhereUniqueWithoutChurchIncomeTypeUpdateByRelInput | ChurchIncomeTypeUpdateWithWhereUniqueWithoutChurchIncomeTypeUpdateByRelInput[]
    updateMany?: ChurchIncomeTypeUpdateManyWithWhereWithoutChurchIncomeTypeUpdateByRelInput | ChurchIncomeTypeUpdateManyWithWhereWithoutChurchIncomeTypeUpdateByRelInput[]
    deleteMany?: ChurchIncomeTypeScalarWhereInput | ChurchIncomeTypeScalarWhereInput[]
  }

  export type ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput = {
    create?: XOR<ChurchSpendingCreateWithoutChurchSpendingCreateByRelInput, ChurchSpendingUncheckedCreateWithoutChurchSpendingCreateByRelInput> | ChurchSpendingCreateWithoutChurchSpendingCreateByRelInput[] | ChurchSpendingUncheckedCreateWithoutChurchSpendingCreateByRelInput[]
    connectOrCreate?: ChurchSpendingCreateOrConnectWithoutChurchSpendingCreateByRelInput | ChurchSpendingCreateOrConnectWithoutChurchSpendingCreateByRelInput[]
    upsert?: ChurchSpendingUpsertWithWhereUniqueWithoutChurchSpendingCreateByRelInput | ChurchSpendingUpsertWithWhereUniqueWithoutChurchSpendingCreateByRelInput[]
    createMany?: ChurchSpendingCreateManyChurchSpendingCreateByRelInputEnvelope
    set?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
    disconnect?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
    delete?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
    connect?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
    update?: ChurchSpendingUpdateWithWhereUniqueWithoutChurchSpendingCreateByRelInput | ChurchSpendingUpdateWithWhereUniqueWithoutChurchSpendingCreateByRelInput[]
    updateMany?: ChurchSpendingUpdateManyWithWhereWithoutChurchSpendingCreateByRelInput | ChurchSpendingUpdateManyWithWhereWithoutChurchSpendingCreateByRelInput[]
    deleteMany?: ChurchSpendingScalarWhereInput | ChurchSpendingScalarWhereInput[]
  }

  export type ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput = {
    create?: XOR<ChurchSpendingCreateWithoutChurchSpendingUpdateByRelInput, ChurchSpendingUncheckedCreateWithoutChurchSpendingUpdateByRelInput> | ChurchSpendingCreateWithoutChurchSpendingUpdateByRelInput[] | ChurchSpendingUncheckedCreateWithoutChurchSpendingUpdateByRelInput[]
    connectOrCreate?: ChurchSpendingCreateOrConnectWithoutChurchSpendingUpdateByRelInput | ChurchSpendingCreateOrConnectWithoutChurchSpendingUpdateByRelInput[]
    upsert?: ChurchSpendingUpsertWithWhereUniqueWithoutChurchSpendingUpdateByRelInput | ChurchSpendingUpsertWithWhereUniqueWithoutChurchSpendingUpdateByRelInput[]
    createMany?: ChurchSpendingCreateManyChurchSpendingUpdateByRelInputEnvelope
    set?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
    disconnect?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
    delete?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
    connect?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
    update?: ChurchSpendingUpdateWithWhereUniqueWithoutChurchSpendingUpdateByRelInput | ChurchSpendingUpdateWithWhereUniqueWithoutChurchSpendingUpdateByRelInput[]
    updateMany?: ChurchSpendingUpdateManyWithWhereWithoutChurchSpendingUpdateByRelInput | ChurchSpendingUpdateManyWithWhereWithoutChurchSpendingUpdateByRelInput[]
    deleteMany?: ChurchSpendingScalarWhereInput | ChurchSpendingScalarWhereInput[]
  }

  export type ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput = {
    create?: XOR<ChurchSpendingTypeCreateWithoutChurchSpendingTypeCreateByRelInput, ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeCreateByRelInput> | ChurchSpendingTypeCreateWithoutChurchSpendingTypeCreateByRelInput[] | ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeCreateByRelInput[]
    connectOrCreate?: ChurchSpendingTypeCreateOrConnectWithoutChurchSpendingTypeCreateByRelInput | ChurchSpendingTypeCreateOrConnectWithoutChurchSpendingTypeCreateByRelInput[]
    upsert?: ChurchSpendingTypeUpsertWithWhereUniqueWithoutChurchSpendingTypeCreateByRelInput | ChurchSpendingTypeUpsertWithWhereUniqueWithoutChurchSpendingTypeCreateByRelInput[]
    createMany?: ChurchSpendingTypeCreateManyChurchSpendingTypeCreateByRelInputEnvelope
    set?: ChurchSpendingTypeWhereUniqueInput | ChurchSpendingTypeWhereUniqueInput[]
    disconnect?: ChurchSpendingTypeWhereUniqueInput | ChurchSpendingTypeWhereUniqueInput[]
    delete?: ChurchSpendingTypeWhereUniqueInput | ChurchSpendingTypeWhereUniqueInput[]
    connect?: ChurchSpendingTypeWhereUniqueInput | ChurchSpendingTypeWhereUniqueInput[]
    update?: ChurchSpendingTypeUpdateWithWhereUniqueWithoutChurchSpendingTypeCreateByRelInput | ChurchSpendingTypeUpdateWithWhereUniqueWithoutChurchSpendingTypeCreateByRelInput[]
    updateMany?: ChurchSpendingTypeUpdateManyWithWhereWithoutChurchSpendingTypeCreateByRelInput | ChurchSpendingTypeUpdateManyWithWhereWithoutChurchSpendingTypeCreateByRelInput[]
    deleteMany?: ChurchSpendingTypeScalarWhereInput | ChurchSpendingTypeScalarWhereInput[]
  }

  export type ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput = {
    create?: XOR<ChurchSpendingTypeCreateWithoutChurchSpendingTypeUpdateByRelInput, ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeUpdateByRelInput> | ChurchSpendingTypeCreateWithoutChurchSpendingTypeUpdateByRelInput[] | ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeUpdateByRelInput[]
    connectOrCreate?: ChurchSpendingTypeCreateOrConnectWithoutChurchSpendingTypeUpdateByRelInput | ChurchSpendingTypeCreateOrConnectWithoutChurchSpendingTypeUpdateByRelInput[]
    upsert?: ChurchSpendingTypeUpsertWithWhereUniqueWithoutChurchSpendingTypeUpdateByRelInput | ChurchSpendingTypeUpsertWithWhereUniqueWithoutChurchSpendingTypeUpdateByRelInput[]
    createMany?: ChurchSpendingTypeCreateManyChurchSpendingTypeUpdateByRelInputEnvelope
    set?: ChurchSpendingTypeWhereUniqueInput | ChurchSpendingTypeWhereUniqueInput[]
    disconnect?: ChurchSpendingTypeWhereUniqueInput | ChurchSpendingTypeWhereUniqueInput[]
    delete?: ChurchSpendingTypeWhereUniqueInput | ChurchSpendingTypeWhereUniqueInput[]
    connect?: ChurchSpendingTypeWhereUniqueInput | ChurchSpendingTypeWhereUniqueInput[]
    update?: ChurchSpendingTypeUpdateWithWhereUniqueWithoutChurchSpendingTypeUpdateByRelInput | ChurchSpendingTypeUpdateWithWhereUniqueWithoutChurchSpendingTypeUpdateByRelInput[]
    updateMany?: ChurchSpendingTypeUpdateManyWithWhereWithoutChurchSpendingTypeUpdateByRelInput | ChurchSpendingTypeUpdateManyWithWhereWithoutChurchSpendingTypeUpdateByRelInput[]
    deleteMany?: ChurchSpendingTypeScalarWhereInput | ChurchSpendingTypeScalarWhereInput[]
  }

  export type StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput = {
    create?: XOR<StoreIncomeCreateWithoutStoreIncomeCreateByRelInput, StoreIncomeUncheckedCreateWithoutStoreIncomeCreateByRelInput> | StoreIncomeCreateWithoutStoreIncomeCreateByRelInput[] | StoreIncomeUncheckedCreateWithoutStoreIncomeCreateByRelInput[]
    connectOrCreate?: StoreIncomeCreateOrConnectWithoutStoreIncomeCreateByRelInput | StoreIncomeCreateOrConnectWithoutStoreIncomeCreateByRelInput[]
    upsert?: StoreIncomeUpsertWithWhereUniqueWithoutStoreIncomeCreateByRelInput | StoreIncomeUpsertWithWhereUniqueWithoutStoreIncomeCreateByRelInput[]
    createMany?: StoreIncomeCreateManyStoreIncomeCreateByRelInputEnvelope
    set?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
    disconnect?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
    delete?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
    connect?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
    update?: StoreIncomeUpdateWithWhereUniqueWithoutStoreIncomeCreateByRelInput | StoreIncomeUpdateWithWhereUniqueWithoutStoreIncomeCreateByRelInput[]
    updateMany?: StoreIncomeUpdateManyWithWhereWithoutStoreIncomeCreateByRelInput | StoreIncomeUpdateManyWithWhereWithoutStoreIncomeCreateByRelInput[]
    deleteMany?: StoreIncomeScalarWhereInput | StoreIncomeScalarWhereInput[]
  }

  export type StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput = {
    create?: XOR<StoreIncomeCreateWithoutStoreIncomeUpdateByRelInput, StoreIncomeUncheckedCreateWithoutStoreIncomeUpdateByRelInput> | StoreIncomeCreateWithoutStoreIncomeUpdateByRelInput[] | StoreIncomeUncheckedCreateWithoutStoreIncomeUpdateByRelInput[]
    connectOrCreate?: StoreIncomeCreateOrConnectWithoutStoreIncomeUpdateByRelInput | StoreIncomeCreateOrConnectWithoutStoreIncomeUpdateByRelInput[]
    upsert?: StoreIncomeUpsertWithWhereUniqueWithoutStoreIncomeUpdateByRelInput | StoreIncomeUpsertWithWhereUniqueWithoutStoreIncomeUpdateByRelInput[]
    createMany?: StoreIncomeCreateManyStoreIncomeUpdateByRelInputEnvelope
    set?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
    disconnect?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
    delete?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
    connect?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
    update?: StoreIncomeUpdateWithWhereUniqueWithoutStoreIncomeUpdateByRelInput | StoreIncomeUpdateWithWhereUniqueWithoutStoreIncomeUpdateByRelInput[]
    updateMany?: StoreIncomeUpdateManyWithWhereWithoutStoreIncomeUpdateByRelInput | StoreIncomeUpdateManyWithWhereWithoutStoreIncomeUpdateByRelInput[]
    deleteMany?: StoreIncomeScalarWhereInput | StoreIncomeScalarWhereInput[]
  }

  export type StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput = {
    create?: XOR<StoreIncomeTypeCreateWithoutStoreIncomeTypeCreateByRelInput, StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeCreateByRelInput> | StoreIncomeTypeCreateWithoutStoreIncomeTypeCreateByRelInput[] | StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeCreateByRelInput[]
    connectOrCreate?: StoreIncomeTypeCreateOrConnectWithoutStoreIncomeTypeCreateByRelInput | StoreIncomeTypeCreateOrConnectWithoutStoreIncomeTypeCreateByRelInput[]
    upsert?: StoreIncomeTypeUpsertWithWhereUniqueWithoutStoreIncomeTypeCreateByRelInput | StoreIncomeTypeUpsertWithWhereUniqueWithoutStoreIncomeTypeCreateByRelInput[]
    createMany?: StoreIncomeTypeCreateManyStoreIncomeTypeCreateByRelInputEnvelope
    set?: StoreIncomeTypeWhereUniqueInput | StoreIncomeTypeWhereUniqueInput[]
    disconnect?: StoreIncomeTypeWhereUniqueInput | StoreIncomeTypeWhereUniqueInput[]
    delete?: StoreIncomeTypeWhereUniqueInput | StoreIncomeTypeWhereUniqueInput[]
    connect?: StoreIncomeTypeWhereUniqueInput | StoreIncomeTypeWhereUniqueInput[]
    update?: StoreIncomeTypeUpdateWithWhereUniqueWithoutStoreIncomeTypeCreateByRelInput | StoreIncomeTypeUpdateWithWhereUniqueWithoutStoreIncomeTypeCreateByRelInput[]
    updateMany?: StoreIncomeTypeUpdateManyWithWhereWithoutStoreIncomeTypeCreateByRelInput | StoreIncomeTypeUpdateManyWithWhereWithoutStoreIncomeTypeCreateByRelInput[]
    deleteMany?: StoreIncomeTypeScalarWhereInput | StoreIncomeTypeScalarWhereInput[]
  }

  export type StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput = {
    create?: XOR<StoreIncomeTypeCreateWithoutStoreIncomeTypeUpdateByRelInput, StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeUpdateByRelInput> | StoreIncomeTypeCreateWithoutStoreIncomeTypeUpdateByRelInput[] | StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeUpdateByRelInput[]
    connectOrCreate?: StoreIncomeTypeCreateOrConnectWithoutStoreIncomeTypeUpdateByRelInput | StoreIncomeTypeCreateOrConnectWithoutStoreIncomeTypeUpdateByRelInput[]
    upsert?: StoreIncomeTypeUpsertWithWhereUniqueWithoutStoreIncomeTypeUpdateByRelInput | StoreIncomeTypeUpsertWithWhereUniqueWithoutStoreIncomeTypeUpdateByRelInput[]
    createMany?: StoreIncomeTypeCreateManyStoreIncomeTypeUpdateByRelInputEnvelope
    set?: StoreIncomeTypeWhereUniqueInput | StoreIncomeTypeWhereUniqueInput[]
    disconnect?: StoreIncomeTypeWhereUniqueInput | StoreIncomeTypeWhereUniqueInput[]
    delete?: StoreIncomeTypeWhereUniqueInput | StoreIncomeTypeWhereUniqueInput[]
    connect?: StoreIncomeTypeWhereUniqueInput | StoreIncomeTypeWhereUniqueInput[]
    update?: StoreIncomeTypeUpdateWithWhereUniqueWithoutStoreIncomeTypeUpdateByRelInput | StoreIncomeTypeUpdateWithWhereUniqueWithoutStoreIncomeTypeUpdateByRelInput[]
    updateMany?: StoreIncomeTypeUpdateManyWithWhereWithoutStoreIncomeTypeUpdateByRelInput | StoreIncomeTypeUpdateManyWithWhereWithoutStoreIncomeTypeUpdateByRelInput[]
    deleteMany?: StoreIncomeTypeScalarWhereInput | StoreIncomeTypeScalarWhereInput[]
  }

  export type StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput = {
    create?: XOR<StoreSpendingCreateWithoutStoreSpendingCreateByRelInput, StoreSpendingUncheckedCreateWithoutStoreSpendingCreateByRelInput> | StoreSpendingCreateWithoutStoreSpendingCreateByRelInput[] | StoreSpendingUncheckedCreateWithoutStoreSpendingCreateByRelInput[]
    connectOrCreate?: StoreSpendingCreateOrConnectWithoutStoreSpendingCreateByRelInput | StoreSpendingCreateOrConnectWithoutStoreSpendingCreateByRelInput[]
    upsert?: StoreSpendingUpsertWithWhereUniqueWithoutStoreSpendingCreateByRelInput | StoreSpendingUpsertWithWhereUniqueWithoutStoreSpendingCreateByRelInput[]
    createMany?: StoreSpendingCreateManyStoreSpendingCreateByRelInputEnvelope
    set?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
    disconnect?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
    delete?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
    connect?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
    update?: StoreSpendingUpdateWithWhereUniqueWithoutStoreSpendingCreateByRelInput | StoreSpendingUpdateWithWhereUniqueWithoutStoreSpendingCreateByRelInput[]
    updateMany?: StoreSpendingUpdateManyWithWhereWithoutStoreSpendingCreateByRelInput | StoreSpendingUpdateManyWithWhereWithoutStoreSpendingCreateByRelInput[]
    deleteMany?: StoreSpendingScalarWhereInput | StoreSpendingScalarWhereInput[]
  }

  export type StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput = {
    create?: XOR<StoreSpendingCreateWithoutStoreSpendingUpdateByRelInput, StoreSpendingUncheckedCreateWithoutStoreSpendingUpdateByRelInput> | StoreSpendingCreateWithoutStoreSpendingUpdateByRelInput[] | StoreSpendingUncheckedCreateWithoutStoreSpendingUpdateByRelInput[]
    connectOrCreate?: StoreSpendingCreateOrConnectWithoutStoreSpendingUpdateByRelInput | StoreSpendingCreateOrConnectWithoutStoreSpendingUpdateByRelInput[]
    upsert?: StoreSpendingUpsertWithWhereUniqueWithoutStoreSpendingUpdateByRelInput | StoreSpendingUpsertWithWhereUniqueWithoutStoreSpendingUpdateByRelInput[]
    createMany?: StoreSpendingCreateManyStoreSpendingUpdateByRelInputEnvelope
    set?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
    disconnect?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
    delete?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
    connect?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
    update?: StoreSpendingUpdateWithWhereUniqueWithoutStoreSpendingUpdateByRelInput | StoreSpendingUpdateWithWhereUniqueWithoutStoreSpendingUpdateByRelInput[]
    updateMany?: StoreSpendingUpdateManyWithWhereWithoutStoreSpendingUpdateByRelInput | StoreSpendingUpdateManyWithWhereWithoutStoreSpendingUpdateByRelInput[]
    deleteMany?: StoreSpendingScalarWhereInput | StoreSpendingScalarWhereInput[]
  }

  export type StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput = {
    create?: XOR<StoreSpendingTypeCreateWithoutStoreSpendingTypeCreateByRelInput, StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeCreateByRelInput> | StoreSpendingTypeCreateWithoutStoreSpendingTypeCreateByRelInput[] | StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeCreateByRelInput[]
    connectOrCreate?: StoreSpendingTypeCreateOrConnectWithoutStoreSpendingTypeCreateByRelInput | StoreSpendingTypeCreateOrConnectWithoutStoreSpendingTypeCreateByRelInput[]
    upsert?: StoreSpendingTypeUpsertWithWhereUniqueWithoutStoreSpendingTypeCreateByRelInput | StoreSpendingTypeUpsertWithWhereUniqueWithoutStoreSpendingTypeCreateByRelInput[]
    createMany?: StoreSpendingTypeCreateManyStoreSpendingTypeCreateByRelInputEnvelope
    set?: StoreSpendingTypeWhereUniqueInput | StoreSpendingTypeWhereUniqueInput[]
    disconnect?: StoreSpendingTypeWhereUniqueInput | StoreSpendingTypeWhereUniqueInput[]
    delete?: StoreSpendingTypeWhereUniqueInput | StoreSpendingTypeWhereUniqueInput[]
    connect?: StoreSpendingTypeWhereUniqueInput | StoreSpendingTypeWhereUniqueInput[]
    update?: StoreSpendingTypeUpdateWithWhereUniqueWithoutStoreSpendingTypeCreateByRelInput | StoreSpendingTypeUpdateWithWhereUniqueWithoutStoreSpendingTypeCreateByRelInput[]
    updateMany?: StoreSpendingTypeUpdateManyWithWhereWithoutStoreSpendingTypeCreateByRelInput | StoreSpendingTypeUpdateManyWithWhereWithoutStoreSpendingTypeCreateByRelInput[]
    deleteMany?: StoreSpendingTypeScalarWhereInput | StoreSpendingTypeScalarWhereInput[]
  }

  export type StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput = {
    create?: XOR<StoreSpendingTypeCreateWithoutStoreSpendingTypeUpdateByRelInput, StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeUpdateByRelInput> | StoreSpendingTypeCreateWithoutStoreSpendingTypeUpdateByRelInput[] | StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeUpdateByRelInput[]
    connectOrCreate?: StoreSpendingTypeCreateOrConnectWithoutStoreSpendingTypeUpdateByRelInput | StoreSpendingTypeCreateOrConnectWithoutStoreSpendingTypeUpdateByRelInput[]
    upsert?: StoreSpendingTypeUpsertWithWhereUniqueWithoutStoreSpendingTypeUpdateByRelInput | StoreSpendingTypeUpsertWithWhereUniqueWithoutStoreSpendingTypeUpdateByRelInput[]
    createMany?: StoreSpendingTypeCreateManyStoreSpendingTypeUpdateByRelInputEnvelope
    set?: StoreSpendingTypeWhereUniqueInput | StoreSpendingTypeWhereUniqueInput[]
    disconnect?: StoreSpendingTypeWhereUniqueInput | StoreSpendingTypeWhereUniqueInput[]
    delete?: StoreSpendingTypeWhereUniqueInput | StoreSpendingTypeWhereUniqueInput[]
    connect?: StoreSpendingTypeWhereUniqueInput | StoreSpendingTypeWhereUniqueInput[]
    update?: StoreSpendingTypeUpdateWithWhereUniqueWithoutStoreSpendingTypeUpdateByRelInput | StoreSpendingTypeUpdateWithWhereUniqueWithoutStoreSpendingTypeUpdateByRelInput[]
    updateMany?: StoreSpendingTypeUpdateManyWithWhereWithoutStoreSpendingTypeUpdateByRelInput | StoreSpendingTypeUpdateManyWithWhereWithoutStoreSpendingTypeUpdateByRelInput[]
    deleteMany?: StoreSpendingTypeScalarWhereInput | StoreSpendingTypeScalarWhereInput[]
  }

  export type FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput = {
    create?: XOR<FarmIncomeCreateWithoutFarmIncomeCreateByRelInput, FarmIncomeUncheckedCreateWithoutFarmIncomeCreateByRelInput> | FarmIncomeCreateWithoutFarmIncomeCreateByRelInput[] | FarmIncomeUncheckedCreateWithoutFarmIncomeCreateByRelInput[]
    connectOrCreate?: FarmIncomeCreateOrConnectWithoutFarmIncomeCreateByRelInput | FarmIncomeCreateOrConnectWithoutFarmIncomeCreateByRelInput[]
    upsert?: FarmIncomeUpsertWithWhereUniqueWithoutFarmIncomeCreateByRelInput | FarmIncomeUpsertWithWhereUniqueWithoutFarmIncomeCreateByRelInput[]
    createMany?: FarmIncomeCreateManyFarmIncomeCreateByRelInputEnvelope
    set?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
    disconnect?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
    delete?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
    connect?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
    update?: FarmIncomeUpdateWithWhereUniqueWithoutFarmIncomeCreateByRelInput | FarmIncomeUpdateWithWhereUniqueWithoutFarmIncomeCreateByRelInput[]
    updateMany?: FarmIncomeUpdateManyWithWhereWithoutFarmIncomeCreateByRelInput | FarmIncomeUpdateManyWithWhereWithoutFarmIncomeCreateByRelInput[]
    deleteMany?: FarmIncomeScalarWhereInput | FarmIncomeScalarWhereInput[]
  }

  export type FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput = {
    create?: XOR<FarmIncomeCreateWithoutFarmIncomeUpdateByRelInput, FarmIncomeUncheckedCreateWithoutFarmIncomeUpdateByRelInput> | FarmIncomeCreateWithoutFarmIncomeUpdateByRelInput[] | FarmIncomeUncheckedCreateWithoutFarmIncomeUpdateByRelInput[]
    connectOrCreate?: FarmIncomeCreateOrConnectWithoutFarmIncomeUpdateByRelInput | FarmIncomeCreateOrConnectWithoutFarmIncomeUpdateByRelInput[]
    upsert?: FarmIncomeUpsertWithWhereUniqueWithoutFarmIncomeUpdateByRelInput | FarmIncomeUpsertWithWhereUniqueWithoutFarmIncomeUpdateByRelInput[]
    createMany?: FarmIncomeCreateManyFarmIncomeUpdateByRelInputEnvelope
    set?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
    disconnect?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
    delete?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
    connect?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
    update?: FarmIncomeUpdateWithWhereUniqueWithoutFarmIncomeUpdateByRelInput | FarmIncomeUpdateWithWhereUniqueWithoutFarmIncomeUpdateByRelInput[]
    updateMany?: FarmIncomeUpdateManyWithWhereWithoutFarmIncomeUpdateByRelInput | FarmIncomeUpdateManyWithWhereWithoutFarmIncomeUpdateByRelInput[]
    deleteMany?: FarmIncomeScalarWhereInput | FarmIncomeScalarWhereInput[]
  }

  export type FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput = {
    create?: XOR<FarmIncomeTypeCreateWithoutFarmIncomeTypeCreateByRelInput, FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeCreateByRelInput> | FarmIncomeTypeCreateWithoutFarmIncomeTypeCreateByRelInput[] | FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeCreateByRelInput[]
    connectOrCreate?: FarmIncomeTypeCreateOrConnectWithoutFarmIncomeTypeCreateByRelInput | FarmIncomeTypeCreateOrConnectWithoutFarmIncomeTypeCreateByRelInput[]
    upsert?: FarmIncomeTypeUpsertWithWhereUniqueWithoutFarmIncomeTypeCreateByRelInput | FarmIncomeTypeUpsertWithWhereUniqueWithoutFarmIncomeTypeCreateByRelInput[]
    createMany?: FarmIncomeTypeCreateManyFarmIncomeTypeCreateByRelInputEnvelope
    set?: FarmIncomeTypeWhereUniqueInput | FarmIncomeTypeWhereUniqueInput[]
    disconnect?: FarmIncomeTypeWhereUniqueInput | FarmIncomeTypeWhereUniqueInput[]
    delete?: FarmIncomeTypeWhereUniqueInput | FarmIncomeTypeWhereUniqueInput[]
    connect?: FarmIncomeTypeWhereUniqueInput | FarmIncomeTypeWhereUniqueInput[]
    update?: FarmIncomeTypeUpdateWithWhereUniqueWithoutFarmIncomeTypeCreateByRelInput | FarmIncomeTypeUpdateWithWhereUniqueWithoutFarmIncomeTypeCreateByRelInput[]
    updateMany?: FarmIncomeTypeUpdateManyWithWhereWithoutFarmIncomeTypeCreateByRelInput | FarmIncomeTypeUpdateManyWithWhereWithoutFarmIncomeTypeCreateByRelInput[]
    deleteMany?: FarmIncomeTypeScalarWhereInput | FarmIncomeTypeScalarWhereInput[]
  }

  export type FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput = {
    create?: XOR<FarmIncomeTypeCreateWithoutFarmIncomeTypeUpdateByRelInput, FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeUpdateByRelInput> | FarmIncomeTypeCreateWithoutFarmIncomeTypeUpdateByRelInput[] | FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeUpdateByRelInput[]
    connectOrCreate?: FarmIncomeTypeCreateOrConnectWithoutFarmIncomeTypeUpdateByRelInput | FarmIncomeTypeCreateOrConnectWithoutFarmIncomeTypeUpdateByRelInput[]
    upsert?: FarmIncomeTypeUpsertWithWhereUniqueWithoutFarmIncomeTypeUpdateByRelInput | FarmIncomeTypeUpsertWithWhereUniqueWithoutFarmIncomeTypeUpdateByRelInput[]
    createMany?: FarmIncomeTypeCreateManyFarmIncomeTypeUpdateByRelInputEnvelope
    set?: FarmIncomeTypeWhereUniqueInput | FarmIncomeTypeWhereUniqueInput[]
    disconnect?: FarmIncomeTypeWhereUniqueInput | FarmIncomeTypeWhereUniqueInput[]
    delete?: FarmIncomeTypeWhereUniqueInput | FarmIncomeTypeWhereUniqueInput[]
    connect?: FarmIncomeTypeWhereUniqueInput | FarmIncomeTypeWhereUniqueInput[]
    update?: FarmIncomeTypeUpdateWithWhereUniqueWithoutFarmIncomeTypeUpdateByRelInput | FarmIncomeTypeUpdateWithWhereUniqueWithoutFarmIncomeTypeUpdateByRelInput[]
    updateMany?: FarmIncomeTypeUpdateManyWithWhereWithoutFarmIncomeTypeUpdateByRelInput | FarmIncomeTypeUpdateManyWithWhereWithoutFarmIncomeTypeUpdateByRelInput[]
    deleteMany?: FarmIncomeTypeScalarWhereInput | FarmIncomeTypeScalarWhereInput[]
  }

  export type FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput = {
    create?: XOR<FarmSpendingCreateWithoutFarmSpendingCreateByRelInput, FarmSpendingUncheckedCreateWithoutFarmSpendingCreateByRelInput> | FarmSpendingCreateWithoutFarmSpendingCreateByRelInput[] | FarmSpendingUncheckedCreateWithoutFarmSpendingCreateByRelInput[]
    connectOrCreate?: FarmSpendingCreateOrConnectWithoutFarmSpendingCreateByRelInput | FarmSpendingCreateOrConnectWithoutFarmSpendingCreateByRelInput[]
    upsert?: FarmSpendingUpsertWithWhereUniqueWithoutFarmSpendingCreateByRelInput | FarmSpendingUpsertWithWhereUniqueWithoutFarmSpendingCreateByRelInput[]
    createMany?: FarmSpendingCreateManyFarmSpendingCreateByRelInputEnvelope
    set?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
    disconnect?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
    delete?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
    connect?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
    update?: FarmSpendingUpdateWithWhereUniqueWithoutFarmSpendingCreateByRelInput | FarmSpendingUpdateWithWhereUniqueWithoutFarmSpendingCreateByRelInput[]
    updateMany?: FarmSpendingUpdateManyWithWhereWithoutFarmSpendingCreateByRelInput | FarmSpendingUpdateManyWithWhereWithoutFarmSpendingCreateByRelInput[]
    deleteMany?: FarmSpendingScalarWhereInput | FarmSpendingScalarWhereInput[]
  }

  export type FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput = {
    create?: XOR<FarmSpendingCreateWithoutFarmSpendingUpdateByRelInput, FarmSpendingUncheckedCreateWithoutFarmSpendingUpdateByRelInput> | FarmSpendingCreateWithoutFarmSpendingUpdateByRelInput[] | FarmSpendingUncheckedCreateWithoutFarmSpendingUpdateByRelInput[]
    connectOrCreate?: FarmSpendingCreateOrConnectWithoutFarmSpendingUpdateByRelInput | FarmSpendingCreateOrConnectWithoutFarmSpendingUpdateByRelInput[]
    upsert?: FarmSpendingUpsertWithWhereUniqueWithoutFarmSpendingUpdateByRelInput | FarmSpendingUpsertWithWhereUniqueWithoutFarmSpendingUpdateByRelInput[]
    createMany?: FarmSpendingCreateManyFarmSpendingUpdateByRelInputEnvelope
    set?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
    disconnect?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
    delete?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
    connect?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
    update?: FarmSpendingUpdateWithWhereUniqueWithoutFarmSpendingUpdateByRelInput | FarmSpendingUpdateWithWhereUniqueWithoutFarmSpendingUpdateByRelInput[]
    updateMany?: FarmSpendingUpdateManyWithWhereWithoutFarmSpendingUpdateByRelInput | FarmSpendingUpdateManyWithWhereWithoutFarmSpendingUpdateByRelInput[]
    deleteMany?: FarmSpendingScalarWhereInput | FarmSpendingScalarWhereInput[]
  }

  export type FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput = {
    create?: XOR<FarmSpendingTypeCreateWithoutFarmSpendingTypeCreateByRelInput, FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeCreateByRelInput> | FarmSpendingTypeCreateWithoutFarmSpendingTypeCreateByRelInput[] | FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeCreateByRelInput[]
    connectOrCreate?: FarmSpendingTypeCreateOrConnectWithoutFarmSpendingTypeCreateByRelInput | FarmSpendingTypeCreateOrConnectWithoutFarmSpendingTypeCreateByRelInput[]
    upsert?: FarmSpendingTypeUpsertWithWhereUniqueWithoutFarmSpendingTypeCreateByRelInput | FarmSpendingTypeUpsertWithWhereUniqueWithoutFarmSpendingTypeCreateByRelInput[]
    createMany?: FarmSpendingTypeCreateManyFarmSpendingTypeCreateByRelInputEnvelope
    set?: FarmSpendingTypeWhereUniqueInput | FarmSpendingTypeWhereUniqueInput[]
    disconnect?: FarmSpendingTypeWhereUniqueInput | FarmSpendingTypeWhereUniqueInput[]
    delete?: FarmSpendingTypeWhereUniqueInput | FarmSpendingTypeWhereUniqueInput[]
    connect?: FarmSpendingTypeWhereUniqueInput | FarmSpendingTypeWhereUniqueInput[]
    update?: FarmSpendingTypeUpdateWithWhereUniqueWithoutFarmSpendingTypeCreateByRelInput | FarmSpendingTypeUpdateWithWhereUniqueWithoutFarmSpendingTypeCreateByRelInput[]
    updateMany?: FarmSpendingTypeUpdateManyWithWhereWithoutFarmSpendingTypeCreateByRelInput | FarmSpendingTypeUpdateManyWithWhereWithoutFarmSpendingTypeCreateByRelInput[]
    deleteMany?: FarmSpendingTypeScalarWhereInput | FarmSpendingTypeScalarWhereInput[]
  }

  export type FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput = {
    create?: XOR<FarmSpendingTypeCreateWithoutFarmSpendingTypeUpdateByRelInput, FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeUpdateByRelInput> | FarmSpendingTypeCreateWithoutFarmSpendingTypeUpdateByRelInput[] | FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeUpdateByRelInput[]
    connectOrCreate?: FarmSpendingTypeCreateOrConnectWithoutFarmSpendingTypeUpdateByRelInput | FarmSpendingTypeCreateOrConnectWithoutFarmSpendingTypeUpdateByRelInput[]
    upsert?: FarmSpendingTypeUpsertWithWhereUniqueWithoutFarmSpendingTypeUpdateByRelInput | FarmSpendingTypeUpsertWithWhereUniqueWithoutFarmSpendingTypeUpdateByRelInput[]
    createMany?: FarmSpendingTypeCreateManyFarmSpendingTypeUpdateByRelInputEnvelope
    set?: FarmSpendingTypeWhereUniqueInput | FarmSpendingTypeWhereUniqueInput[]
    disconnect?: FarmSpendingTypeWhereUniqueInput | FarmSpendingTypeWhereUniqueInput[]
    delete?: FarmSpendingTypeWhereUniqueInput | FarmSpendingTypeWhereUniqueInput[]
    connect?: FarmSpendingTypeWhereUniqueInput | FarmSpendingTypeWhereUniqueInput[]
    update?: FarmSpendingTypeUpdateWithWhereUniqueWithoutFarmSpendingTypeUpdateByRelInput | FarmSpendingTypeUpdateWithWhereUniqueWithoutFarmSpendingTypeUpdateByRelInput[]
    updateMany?: FarmSpendingTypeUpdateManyWithWhereWithoutFarmSpendingTypeUpdateByRelInput | FarmSpendingTypeUpdateManyWithWhereWithoutFarmSpendingTypeUpdateByRelInput[]
    deleteMany?: FarmSpendingTypeScalarWhereInput | FarmSpendingTypeScalarWhereInput[]
  }

  export type UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput = {
    create?: XOR<UserHistoryCreateWithoutUserHistoryCreatedByRelInput, UserHistoryUncheckedCreateWithoutUserHistoryCreatedByRelInput> | UserHistoryCreateWithoutUserHistoryCreatedByRelInput[] | UserHistoryUncheckedCreateWithoutUserHistoryCreatedByRelInput[]
    connectOrCreate?: UserHistoryCreateOrConnectWithoutUserHistoryCreatedByRelInput | UserHistoryCreateOrConnectWithoutUserHistoryCreatedByRelInput[]
    upsert?: UserHistoryUpsertWithWhereUniqueWithoutUserHistoryCreatedByRelInput | UserHistoryUpsertWithWhereUniqueWithoutUserHistoryCreatedByRelInput[]
    createMany?: UserHistoryCreateManyUserHistoryCreatedByRelInputEnvelope
    set?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    disconnect?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    delete?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    connect?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    update?: UserHistoryUpdateWithWhereUniqueWithoutUserHistoryCreatedByRelInput | UserHistoryUpdateWithWhereUniqueWithoutUserHistoryCreatedByRelInput[]
    updateMany?: UserHistoryUpdateManyWithWhereWithoutUserHistoryCreatedByRelInput | UserHistoryUpdateManyWithWhereWithoutUserHistoryCreatedByRelInput[]
    deleteMany?: UserHistoryScalarWhereInput | UserHistoryScalarWhereInput[]
  }

  export type UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput = {
    create?: XOR<UserHistoryCreateWithoutUserHistoryUpdatedByRelInput, UserHistoryUncheckedCreateWithoutUserHistoryUpdatedByRelInput> | UserHistoryCreateWithoutUserHistoryUpdatedByRelInput[] | UserHistoryUncheckedCreateWithoutUserHistoryUpdatedByRelInput[]
    connectOrCreate?: UserHistoryCreateOrConnectWithoutUserHistoryUpdatedByRelInput | UserHistoryCreateOrConnectWithoutUserHistoryUpdatedByRelInput[]
    upsert?: UserHistoryUpsertWithWhereUniqueWithoutUserHistoryUpdatedByRelInput | UserHistoryUpsertWithWhereUniqueWithoutUserHistoryUpdatedByRelInput[]
    createMany?: UserHistoryCreateManyUserHistoryUpdatedByRelInputEnvelope
    set?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    disconnect?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    delete?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    connect?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    update?: UserHistoryUpdateWithWhereUniqueWithoutUserHistoryUpdatedByRelInput | UserHistoryUpdateWithWhereUniqueWithoutUserHistoryUpdatedByRelInput[]
    updateMany?: UserHistoryUpdateManyWithWhereWithoutUserHistoryUpdatedByRelInput | UserHistoryUpdateManyWithWhereWithoutUserHistoryUpdatedByRelInput[]
    deleteMany?: UserHistoryScalarWhereInput | UserHistoryScalarWhereInput[]
  }

  export type UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput = {
    create?: XOR<UserHistoryCreateWithoutUserHistoryIdRelInput, UserHistoryUncheckedCreateWithoutUserHistoryIdRelInput> | UserHistoryCreateWithoutUserHistoryIdRelInput[] | UserHistoryUncheckedCreateWithoutUserHistoryIdRelInput[]
    connectOrCreate?: UserHistoryCreateOrConnectWithoutUserHistoryIdRelInput | UserHistoryCreateOrConnectWithoutUserHistoryIdRelInput[]
    upsert?: UserHistoryUpsertWithWhereUniqueWithoutUserHistoryIdRelInput | UserHistoryUpsertWithWhereUniqueWithoutUserHistoryIdRelInput[]
    createMany?: UserHistoryCreateManyUserHistoryIdRelInputEnvelope
    set?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    disconnect?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    delete?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    connect?: UserHistoryWhereUniqueInput | UserHistoryWhereUniqueInput[]
    update?: UserHistoryUpdateWithWhereUniqueWithoutUserHistoryIdRelInput | UserHistoryUpdateWithWhereUniqueWithoutUserHistoryIdRelInput[]
    updateMany?: UserHistoryUpdateManyWithWhereWithoutUserHistoryIdRelInput | UserHistoryUpdateManyWithWhereWithoutUserHistoryIdRelInput[]
    deleteMany?: UserHistoryScalarWhereInput | UserHistoryScalarWhereInput[]
  }

  export type ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput = {
    create?: XOR<ChurchIncomeHistoryCreateWithoutChurchIncomeHistoryCreateByRelInput, ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeHistoryCreateByRelInput> | ChurchIncomeHistoryCreateWithoutChurchIncomeHistoryCreateByRelInput[] | ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeHistoryCreateByRelInput[]
    connectOrCreate?: ChurchIncomeHistoryCreateOrConnectWithoutChurchIncomeHistoryCreateByRelInput | ChurchIncomeHistoryCreateOrConnectWithoutChurchIncomeHistoryCreateByRelInput[]
    upsert?: ChurchIncomeHistoryUpsertWithWhereUniqueWithoutChurchIncomeHistoryCreateByRelInput | ChurchIncomeHistoryUpsertWithWhereUniqueWithoutChurchIncomeHistoryCreateByRelInput[]
    createMany?: ChurchIncomeHistoryCreateManyChurchIncomeHistoryCreateByRelInputEnvelope
    set?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
    disconnect?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
    delete?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
    connect?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
    update?: ChurchIncomeHistoryUpdateWithWhereUniqueWithoutChurchIncomeHistoryCreateByRelInput | ChurchIncomeHistoryUpdateWithWhereUniqueWithoutChurchIncomeHistoryCreateByRelInput[]
    updateMany?: ChurchIncomeHistoryUpdateManyWithWhereWithoutChurchIncomeHistoryCreateByRelInput | ChurchIncomeHistoryUpdateManyWithWhereWithoutChurchIncomeHistoryCreateByRelInput[]
    deleteMany?: ChurchIncomeHistoryScalarWhereInput | ChurchIncomeHistoryScalarWhereInput[]
  }

  export type ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput = {
    create?: XOR<ChurchIncomeHistoryCreateWithoutChurchIncomeHistoryUpdateByRelInput, ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeHistoryUpdateByRelInput> | ChurchIncomeHistoryCreateWithoutChurchIncomeHistoryUpdateByRelInput[] | ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeHistoryUpdateByRelInput[]
    connectOrCreate?: ChurchIncomeHistoryCreateOrConnectWithoutChurchIncomeHistoryUpdateByRelInput | ChurchIncomeHistoryCreateOrConnectWithoutChurchIncomeHistoryUpdateByRelInput[]
    upsert?: ChurchIncomeHistoryUpsertWithWhereUniqueWithoutChurchIncomeHistoryUpdateByRelInput | ChurchIncomeHistoryUpsertWithWhereUniqueWithoutChurchIncomeHistoryUpdateByRelInput[]
    createMany?: ChurchIncomeHistoryCreateManyChurchIncomeHistoryUpdateByRelInputEnvelope
    set?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
    disconnect?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
    delete?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
    connect?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
    update?: ChurchIncomeHistoryUpdateWithWhereUniqueWithoutChurchIncomeHistoryUpdateByRelInput | ChurchIncomeHistoryUpdateWithWhereUniqueWithoutChurchIncomeHistoryUpdateByRelInput[]
    updateMany?: ChurchIncomeHistoryUpdateManyWithWhereWithoutChurchIncomeHistoryUpdateByRelInput | ChurchIncomeHistoryUpdateManyWithWhereWithoutChurchIncomeHistoryUpdateByRelInput[]
    deleteMany?: ChurchIncomeHistoryScalarWhereInput | ChurchIncomeHistoryScalarWhereInput[]
  }

  export type ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput = {
    create?: XOR<ChurchSpendingHistoryCreateWithoutChurchSpendingHistoryCreateByRelInput, ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingHistoryCreateByRelInput> | ChurchSpendingHistoryCreateWithoutChurchSpendingHistoryCreateByRelInput[] | ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingHistoryCreateByRelInput[]
    connectOrCreate?: ChurchSpendingHistoryCreateOrConnectWithoutChurchSpendingHistoryCreateByRelInput | ChurchSpendingHistoryCreateOrConnectWithoutChurchSpendingHistoryCreateByRelInput[]
    upsert?: ChurchSpendingHistoryUpsertWithWhereUniqueWithoutChurchSpendingHistoryCreateByRelInput | ChurchSpendingHistoryUpsertWithWhereUniqueWithoutChurchSpendingHistoryCreateByRelInput[]
    createMany?: ChurchSpendingHistoryCreateManyChurchSpendingHistoryCreateByRelInputEnvelope
    set?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
    disconnect?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
    delete?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
    connect?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
    update?: ChurchSpendingHistoryUpdateWithWhereUniqueWithoutChurchSpendingHistoryCreateByRelInput | ChurchSpendingHistoryUpdateWithWhereUniqueWithoutChurchSpendingHistoryCreateByRelInput[]
    updateMany?: ChurchSpendingHistoryUpdateManyWithWhereWithoutChurchSpendingHistoryCreateByRelInput | ChurchSpendingHistoryUpdateManyWithWhereWithoutChurchSpendingHistoryCreateByRelInput[]
    deleteMany?: ChurchSpendingHistoryScalarWhereInput | ChurchSpendingHistoryScalarWhereInput[]
  }

  export type ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput = {
    create?: XOR<ChurchSpendingHistoryCreateWithoutChurchSpendingHistoryUpdateByRelInput, ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingHistoryUpdateByRelInput> | ChurchSpendingHistoryCreateWithoutChurchSpendingHistoryUpdateByRelInput[] | ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingHistoryUpdateByRelInput[]
    connectOrCreate?: ChurchSpendingHistoryCreateOrConnectWithoutChurchSpendingHistoryUpdateByRelInput | ChurchSpendingHistoryCreateOrConnectWithoutChurchSpendingHistoryUpdateByRelInput[]
    upsert?: ChurchSpendingHistoryUpsertWithWhereUniqueWithoutChurchSpendingHistoryUpdateByRelInput | ChurchSpendingHistoryUpsertWithWhereUniqueWithoutChurchSpendingHistoryUpdateByRelInput[]
    createMany?: ChurchSpendingHistoryCreateManyChurchSpendingHistoryUpdateByRelInputEnvelope
    set?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
    disconnect?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
    delete?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
    connect?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
    update?: ChurchSpendingHistoryUpdateWithWhereUniqueWithoutChurchSpendingHistoryUpdateByRelInput | ChurchSpendingHistoryUpdateWithWhereUniqueWithoutChurchSpendingHistoryUpdateByRelInput[]
    updateMany?: ChurchSpendingHistoryUpdateManyWithWhereWithoutChurchSpendingHistoryUpdateByRelInput | ChurchSpendingHistoryUpdateManyWithWhereWithoutChurchSpendingHistoryUpdateByRelInput[]
    deleteMany?: ChurchSpendingHistoryScalarWhereInput | ChurchSpendingHistoryScalarWhereInput[]
  }

  export type StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput = {
    create?: XOR<StoreIncomeHistoryCreateWithoutStoreIncomeHistoryCreateByRelInput, StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeHistoryCreateByRelInput> | StoreIncomeHistoryCreateWithoutStoreIncomeHistoryCreateByRelInput[] | StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeHistoryCreateByRelInput[]
    connectOrCreate?: StoreIncomeHistoryCreateOrConnectWithoutStoreIncomeHistoryCreateByRelInput | StoreIncomeHistoryCreateOrConnectWithoutStoreIncomeHistoryCreateByRelInput[]
    upsert?: StoreIncomeHistoryUpsertWithWhereUniqueWithoutStoreIncomeHistoryCreateByRelInput | StoreIncomeHistoryUpsertWithWhereUniqueWithoutStoreIncomeHistoryCreateByRelInput[]
    createMany?: StoreIncomeHistoryCreateManyStoreIncomeHistoryCreateByRelInputEnvelope
    set?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
    disconnect?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
    delete?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
    connect?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
    update?: StoreIncomeHistoryUpdateWithWhereUniqueWithoutStoreIncomeHistoryCreateByRelInput | StoreIncomeHistoryUpdateWithWhereUniqueWithoutStoreIncomeHistoryCreateByRelInput[]
    updateMany?: StoreIncomeHistoryUpdateManyWithWhereWithoutStoreIncomeHistoryCreateByRelInput | StoreIncomeHistoryUpdateManyWithWhereWithoutStoreIncomeHistoryCreateByRelInput[]
    deleteMany?: StoreIncomeHistoryScalarWhereInput | StoreIncomeHistoryScalarWhereInput[]
  }

  export type StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput = {
    create?: XOR<StoreIncomeHistoryCreateWithoutStoreIncomeHistoryUpdateByRelInput, StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeHistoryUpdateByRelInput> | StoreIncomeHistoryCreateWithoutStoreIncomeHistoryUpdateByRelInput[] | StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeHistoryUpdateByRelInput[]
    connectOrCreate?: StoreIncomeHistoryCreateOrConnectWithoutStoreIncomeHistoryUpdateByRelInput | StoreIncomeHistoryCreateOrConnectWithoutStoreIncomeHistoryUpdateByRelInput[]
    upsert?: StoreIncomeHistoryUpsertWithWhereUniqueWithoutStoreIncomeHistoryUpdateByRelInput | StoreIncomeHistoryUpsertWithWhereUniqueWithoutStoreIncomeHistoryUpdateByRelInput[]
    createMany?: StoreIncomeHistoryCreateManyStoreIncomeHistoryUpdateByRelInputEnvelope
    set?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
    disconnect?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
    delete?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
    connect?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
    update?: StoreIncomeHistoryUpdateWithWhereUniqueWithoutStoreIncomeHistoryUpdateByRelInput | StoreIncomeHistoryUpdateWithWhereUniqueWithoutStoreIncomeHistoryUpdateByRelInput[]
    updateMany?: StoreIncomeHistoryUpdateManyWithWhereWithoutStoreIncomeHistoryUpdateByRelInput | StoreIncomeHistoryUpdateManyWithWhereWithoutStoreIncomeHistoryUpdateByRelInput[]
    deleteMany?: StoreIncomeHistoryScalarWhereInput | StoreIncomeHistoryScalarWhereInput[]
  }

  export type StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput = {
    create?: XOR<StoreSpendingHistoryCreateWithoutStoreSpendingHistoryCreateByRelInput, StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingHistoryCreateByRelInput> | StoreSpendingHistoryCreateWithoutStoreSpendingHistoryCreateByRelInput[] | StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingHistoryCreateByRelInput[]
    connectOrCreate?: StoreSpendingHistoryCreateOrConnectWithoutStoreSpendingHistoryCreateByRelInput | StoreSpendingHistoryCreateOrConnectWithoutStoreSpendingHistoryCreateByRelInput[]
    upsert?: StoreSpendingHistoryUpsertWithWhereUniqueWithoutStoreSpendingHistoryCreateByRelInput | StoreSpendingHistoryUpsertWithWhereUniqueWithoutStoreSpendingHistoryCreateByRelInput[]
    createMany?: StoreSpendingHistoryCreateManyStoreSpendingHistoryCreateByRelInputEnvelope
    set?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
    disconnect?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
    delete?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
    connect?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
    update?: StoreSpendingHistoryUpdateWithWhereUniqueWithoutStoreSpendingHistoryCreateByRelInput | StoreSpendingHistoryUpdateWithWhereUniqueWithoutStoreSpendingHistoryCreateByRelInput[]
    updateMany?: StoreSpendingHistoryUpdateManyWithWhereWithoutStoreSpendingHistoryCreateByRelInput | StoreSpendingHistoryUpdateManyWithWhereWithoutStoreSpendingHistoryCreateByRelInput[]
    deleteMany?: StoreSpendingHistoryScalarWhereInput | StoreSpendingHistoryScalarWhereInput[]
  }

  export type StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput = {
    create?: XOR<StoreSpendingHistoryCreateWithoutStoreSpendingHistoryUpdateByRelInput, StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingHistoryUpdateByRelInput> | StoreSpendingHistoryCreateWithoutStoreSpendingHistoryUpdateByRelInput[] | StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingHistoryUpdateByRelInput[]
    connectOrCreate?: StoreSpendingHistoryCreateOrConnectWithoutStoreSpendingHistoryUpdateByRelInput | StoreSpendingHistoryCreateOrConnectWithoutStoreSpendingHistoryUpdateByRelInput[]
    upsert?: StoreSpendingHistoryUpsertWithWhereUniqueWithoutStoreSpendingHistoryUpdateByRelInput | StoreSpendingHistoryUpsertWithWhereUniqueWithoutStoreSpendingHistoryUpdateByRelInput[]
    createMany?: StoreSpendingHistoryCreateManyStoreSpendingHistoryUpdateByRelInputEnvelope
    set?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
    disconnect?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
    delete?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
    connect?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
    update?: StoreSpendingHistoryUpdateWithWhereUniqueWithoutStoreSpendingHistoryUpdateByRelInput | StoreSpendingHistoryUpdateWithWhereUniqueWithoutStoreSpendingHistoryUpdateByRelInput[]
    updateMany?: StoreSpendingHistoryUpdateManyWithWhereWithoutStoreSpendingHistoryUpdateByRelInput | StoreSpendingHistoryUpdateManyWithWhereWithoutStoreSpendingHistoryUpdateByRelInput[]
    deleteMany?: StoreSpendingHistoryScalarWhereInput | StoreSpendingHistoryScalarWhereInput[]
  }

  export type FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput = {
    create?: XOR<FarmIncomeHistoryCreateWithoutFarmIncomeHistoryCreateByRelInput, FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeHistoryCreateByRelInput> | FarmIncomeHistoryCreateWithoutFarmIncomeHistoryCreateByRelInput[] | FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeHistoryCreateByRelInput[]
    connectOrCreate?: FarmIncomeHistoryCreateOrConnectWithoutFarmIncomeHistoryCreateByRelInput | FarmIncomeHistoryCreateOrConnectWithoutFarmIncomeHistoryCreateByRelInput[]
    upsert?: FarmIncomeHistoryUpsertWithWhereUniqueWithoutFarmIncomeHistoryCreateByRelInput | FarmIncomeHistoryUpsertWithWhereUniqueWithoutFarmIncomeHistoryCreateByRelInput[]
    createMany?: FarmIncomeHistoryCreateManyFarmIncomeHistoryCreateByRelInputEnvelope
    set?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
    disconnect?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
    delete?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
    connect?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
    update?: FarmIncomeHistoryUpdateWithWhereUniqueWithoutFarmIncomeHistoryCreateByRelInput | FarmIncomeHistoryUpdateWithWhereUniqueWithoutFarmIncomeHistoryCreateByRelInput[]
    updateMany?: FarmIncomeHistoryUpdateManyWithWhereWithoutFarmIncomeHistoryCreateByRelInput | FarmIncomeHistoryUpdateManyWithWhereWithoutFarmIncomeHistoryCreateByRelInput[]
    deleteMany?: FarmIncomeHistoryScalarWhereInput | FarmIncomeHistoryScalarWhereInput[]
  }

  export type FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput = {
    create?: XOR<FarmIncomeHistoryCreateWithoutFarmIncomeHistoryUpdateByRelInput, FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeHistoryUpdateByRelInput> | FarmIncomeHistoryCreateWithoutFarmIncomeHistoryUpdateByRelInput[] | FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeHistoryUpdateByRelInput[]
    connectOrCreate?: FarmIncomeHistoryCreateOrConnectWithoutFarmIncomeHistoryUpdateByRelInput | FarmIncomeHistoryCreateOrConnectWithoutFarmIncomeHistoryUpdateByRelInput[]
    upsert?: FarmIncomeHistoryUpsertWithWhereUniqueWithoutFarmIncomeHistoryUpdateByRelInput | FarmIncomeHistoryUpsertWithWhereUniqueWithoutFarmIncomeHistoryUpdateByRelInput[]
    createMany?: FarmIncomeHistoryCreateManyFarmIncomeHistoryUpdateByRelInputEnvelope
    set?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
    disconnect?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
    delete?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
    connect?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
    update?: FarmIncomeHistoryUpdateWithWhereUniqueWithoutFarmIncomeHistoryUpdateByRelInput | FarmIncomeHistoryUpdateWithWhereUniqueWithoutFarmIncomeHistoryUpdateByRelInput[]
    updateMany?: FarmIncomeHistoryUpdateManyWithWhereWithoutFarmIncomeHistoryUpdateByRelInput | FarmIncomeHistoryUpdateManyWithWhereWithoutFarmIncomeHistoryUpdateByRelInput[]
    deleteMany?: FarmIncomeHistoryScalarWhereInput | FarmIncomeHistoryScalarWhereInput[]
  }

  export type FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput = {
    create?: XOR<FarmSpendingHistoryCreateWithoutFarmSpendingHistoryCreateByRelInput, FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingHistoryCreateByRelInput> | FarmSpendingHistoryCreateWithoutFarmSpendingHistoryCreateByRelInput[] | FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingHistoryCreateByRelInput[]
    connectOrCreate?: FarmSpendingHistoryCreateOrConnectWithoutFarmSpendingHistoryCreateByRelInput | FarmSpendingHistoryCreateOrConnectWithoutFarmSpendingHistoryCreateByRelInput[]
    upsert?: FarmSpendingHistoryUpsertWithWhereUniqueWithoutFarmSpendingHistoryCreateByRelInput | FarmSpendingHistoryUpsertWithWhereUniqueWithoutFarmSpendingHistoryCreateByRelInput[]
    createMany?: FarmSpendingHistoryCreateManyFarmSpendingHistoryCreateByRelInputEnvelope
    set?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
    disconnect?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
    delete?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
    connect?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
    update?: FarmSpendingHistoryUpdateWithWhereUniqueWithoutFarmSpendingHistoryCreateByRelInput | FarmSpendingHistoryUpdateWithWhereUniqueWithoutFarmSpendingHistoryCreateByRelInput[]
    updateMany?: FarmSpendingHistoryUpdateManyWithWhereWithoutFarmSpendingHistoryCreateByRelInput | FarmSpendingHistoryUpdateManyWithWhereWithoutFarmSpendingHistoryCreateByRelInput[]
    deleteMany?: FarmSpendingHistoryScalarWhereInput | FarmSpendingHistoryScalarWhereInput[]
  }

  export type FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput = {
    create?: XOR<FarmSpendingHistoryCreateWithoutFarmSpendingHistoryUpdateByRelInput, FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingHistoryUpdateByRelInput> | FarmSpendingHistoryCreateWithoutFarmSpendingHistoryUpdateByRelInput[] | FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingHistoryUpdateByRelInput[]
    connectOrCreate?: FarmSpendingHistoryCreateOrConnectWithoutFarmSpendingHistoryUpdateByRelInput | FarmSpendingHistoryCreateOrConnectWithoutFarmSpendingHistoryUpdateByRelInput[]
    upsert?: FarmSpendingHistoryUpsertWithWhereUniqueWithoutFarmSpendingHistoryUpdateByRelInput | FarmSpendingHistoryUpsertWithWhereUniqueWithoutFarmSpendingHistoryUpdateByRelInput[]
    createMany?: FarmSpendingHistoryCreateManyFarmSpendingHistoryUpdateByRelInputEnvelope
    set?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
    disconnect?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
    delete?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
    connect?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
    update?: FarmSpendingHistoryUpdateWithWhereUniqueWithoutFarmSpendingHistoryUpdateByRelInput | FarmSpendingHistoryUpdateWithWhereUniqueWithoutFarmSpendingHistoryUpdateByRelInput[]
    updateMany?: FarmSpendingHistoryUpdateManyWithWhereWithoutFarmSpendingHistoryUpdateByRelInput | FarmSpendingHistoryUpdateManyWithWhereWithoutFarmSpendingHistoryUpdateByRelInput[]
    deleteMany?: FarmSpendingHistoryScalarWhereInput | FarmSpendingHistoryScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutUserHistoryCreatedByRelInput = {
    create?: XOR<UserCreateWithoutUserHistoryCreatedByRelInput, UserUncheckedCreateWithoutUserHistoryCreatedByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserHistoryCreatedByRelInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUserHistoryUpdatedByRelInput = {
    create?: XOR<UserCreateWithoutUserHistoryUpdatedByRelInput, UserUncheckedCreateWithoutUserHistoryUpdatedByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserHistoryUpdatedByRelInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUserHistoryIdRelInput = {
    create?: XOR<UserCreateWithoutUserHistoryIdRelInput, UserUncheckedCreateWithoutUserHistoryIdRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserHistoryIdRelInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneWithoutUserHistoryCreatedByRelNestedInput = {
    create?: XOR<UserCreateWithoutUserHistoryCreatedByRelInput, UserUncheckedCreateWithoutUserHistoryCreatedByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserHistoryCreatedByRelInput
    upsert?: UserUpsertWithoutUserHistoryCreatedByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUserHistoryCreatedByRelInput, UserUpdateWithoutUserHistoryCreatedByRelInput>, UserUncheckedUpdateWithoutUserHistoryCreatedByRelInput>
  }

  export type UserUpdateOneWithoutUserHistoryUpdatedByRelNestedInput = {
    create?: XOR<UserCreateWithoutUserHistoryUpdatedByRelInput, UserUncheckedCreateWithoutUserHistoryUpdatedByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserHistoryUpdatedByRelInput
    upsert?: UserUpsertWithoutUserHistoryUpdatedByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUserHistoryUpdatedByRelInput, UserUpdateWithoutUserHistoryUpdatedByRelInput>, UserUncheckedUpdateWithoutUserHistoryUpdatedByRelInput>
  }

  export type UserUpdateOneRequiredWithoutUserHistoryIdRelNestedInput = {
    create?: XOR<UserCreateWithoutUserHistoryIdRelInput, UserUncheckedCreateWithoutUserHistoryIdRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserHistoryIdRelInput
    upsert?: UserUpsertWithoutUserHistoryIdRelInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUserHistoryIdRelInput, UserUpdateWithoutUserHistoryIdRelInput>, UserUncheckedUpdateWithoutUserHistoryIdRelInput>
  }

  export type ChurchIncomeTypeCreateNestedOneWithoutChurchIncomeTypeIdRelInput = {
    create?: XOR<ChurchIncomeTypeCreateWithoutChurchIncomeTypeIdRelInput, ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeIdRelInput>
    connectOrCreate?: ChurchIncomeTypeCreateOrConnectWithoutChurchIncomeTypeIdRelInput
    connect?: ChurchIncomeTypeWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutChurchIncomeCreateByRelInput = {
    create?: XOR<UserCreateWithoutChurchIncomeCreateByRelInput, UserUncheckedCreateWithoutChurchIncomeCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutChurchIncomeCreateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutChurchIncomeUpdateByRelInput = {
    create?: XOR<UserCreateWithoutChurchIncomeUpdateByRelInput, UserUncheckedCreateWithoutChurchIncomeUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutChurchIncomeUpdateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type ChurchIncomeTypeUpdateOneRequiredWithoutChurchIncomeTypeIdRelNestedInput = {
    create?: XOR<ChurchIncomeTypeCreateWithoutChurchIncomeTypeIdRelInput, ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeIdRelInput>
    connectOrCreate?: ChurchIncomeTypeCreateOrConnectWithoutChurchIncomeTypeIdRelInput
    upsert?: ChurchIncomeTypeUpsertWithoutChurchIncomeTypeIdRelInput
    connect?: ChurchIncomeTypeWhereUniqueInput
    update?: XOR<XOR<ChurchIncomeTypeUpdateToOneWithWhereWithoutChurchIncomeTypeIdRelInput, ChurchIncomeTypeUpdateWithoutChurchIncomeTypeIdRelInput>, ChurchIncomeTypeUncheckedUpdateWithoutChurchIncomeTypeIdRelInput>
  }

  export type UserUpdateOneWithoutChurchIncomeCreateByRelNestedInput = {
    create?: XOR<UserCreateWithoutChurchIncomeCreateByRelInput, UserUncheckedCreateWithoutChurchIncomeCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutChurchIncomeCreateByRelInput
    upsert?: UserUpsertWithoutChurchIncomeCreateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutChurchIncomeCreateByRelInput, UserUpdateWithoutChurchIncomeCreateByRelInput>, UserUncheckedUpdateWithoutChurchIncomeCreateByRelInput>
  }

  export type UserUpdateOneWithoutChurchIncomeUpdateByRelNestedInput = {
    create?: XOR<UserCreateWithoutChurchIncomeUpdateByRelInput, UserUncheckedCreateWithoutChurchIncomeUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutChurchIncomeUpdateByRelInput
    upsert?: UserUpsertWithoutChurchIncomeUpdateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutChurchIncomeUpdateByRelInput, UserUpdateWithoutChurchIncomeUpdateByRelInput>, UserUncheckedUpdateWithoutChurchIncomeUpdateByRelInput>
  }

  export type ChurchIncomeTypeCreateNestedOneWithoutChurchIncomeTypeHistoryIdRelInput = {
    create?: XOR<ChurchIncomeTypeCreateWithoutChurchIncomeTypeHistoryIdRelInput, ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeHistoryIdRelInput>
    connectOrCreate?: ChurchIncomeTypeCreateOrConnectWithoutChurchIncomeTypeHistoryIdRelInput
    connect?: ChurchIncomeTypeWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutChurchIncomeHistoryCreateByRelInput = {
    create?: XOR<UserCreateWithoutChurchIncomeHistoryCreateByRelInput, UserUncheckedCreateWithoutChurchIncomeHistoryCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutChurchIncomeHistoryCreateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutChurchIncomeHistoryUpdateByRelInput = {
    create?: XOR<UserCreateWithoutChurchIncomeHistoryUpdateByRelInput, UserUncheckedCreateWithoutChurchIncomeHistoryUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutChurchIncomeHistoryUpdateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type ChurchIncomeTypeUpdateOneRequiredWithoutChurchIncomeTypeHistoryIdRelNestedInput = {
    create?: XOR<ChurchIncomeTypeCreateWithoutChurchIncomeTypeHistoryIdRelInput, ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeHistoryIdRelInput>
    connectOrCreate?: ChurchIncomeTypeCreateOrConnectWithoutChurchIncomeTypeHistoryIdRelInput
    upsert?: ChurchIncomeTypeUpsertWithoutChurchIncomeTypeHistoryIdRelInput
    connect?: ChurchIncomeTypeWhereUniqueInput
    update?: XOR<XOR<ChurchIncomeTypeUpdateToOneWithWhereWithoutChurchIncomeTypeHistoryIdRelInput, ChurchIncomeTypeUpdateWithoutChurchIncomeTypeHistoryIdRelInput>, ChurchIncomeTypeUncheckedUpdateWithoutChurchIncomeTypeHistoryIdRelInput>
  }

  export type UserUpdateOneWithoutChurchIncomeHistoryCreateByRelNestedInput = {
    create?: XOR<UserCreateWithoutChurchIncomeHistoryCreateByRelInput, UserUncheckedCreateWithoutChurchIncomeHistoryCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutChurchIncomeHistoryCreateByRelInput
    upsert?: UserUpsertWithoutChurchIncomeHistoryCreateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutChurchIncomeHistoryCreateByRelInput, UserUpdateWithoutChurchIncomeHistoryCreateByRelInput>, UserUncheckedUpdateWithoutChurchIncomeHistoryCreateByRelInput>
  }

  export type UserUpdateOneWithoutChurchIncomeHistoryUpdateByRelNestedInput = {
    create?: XOR<UserCreateWithoutChurchIncomeHistoryUpdateByRelInput, UserUncheckedCreateWithoutChurchIncomeHistoryUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutChurchIncomeHistoryUpdateByRelInput
    upsert?: UserUpsertWithoutChurchIncomeHistoryUpdateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutChurchIncomeHistoryUpdateByRelInput, UserUpdateWithoutChurchIncomeHistoryUpdateByRelInput>, UserUncheckedUpdateWithoutChurchIncomeHistoryUpdateByRelInput>
  }

  export type UserCreateNestedOneWithoutChurchIncomeTypeCreateByRelInput = {
    create?: XOR<UserCreateWithoutChurchIncomeTypeCreateByRelInput, UserUncheckedCreateWithoutChurchIncomeTypeCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutChurchIncomeTypeCreateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutChurchIncomeTypeUpdateByRelInput = {
    create?: XOR<UserCreateWithoutChurchIncomeTypeUpdateByRelInput, UserUncheckedCreateWithoutChurchIncomeTypeUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutChurchIncomeTypeUpdateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type ChurchIncomeCreateNestedManyWithoutChurchIncomeTypeIdRelInput = {
    create?: XOR<ChurchIncomeCreateWithoutChurchIncomeTypeIdRelInput, ChurchIncomeUncheckedCreateWithoutChurchIncomeTypeIdRelInput> | ChurchIncomeCreateWithoutChurchIncomeTypeIdRelInput[] | ChurchIncomeUncheckedCreateWithoutChurchIncomeTypeIdRelInput[]
    connectOrCreate?: ChurchIncomeCreateOrConnectWithoutChurchIncomeTypeIdRelInput | ChurchIncomeCreateOrConnectWithoutChurchIncomeTypeIdRelInput[]
    createMany?: ChurchIncomeCreateManyChurchIncomeTypeIdRelInputEnvelope
    connect?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
  }

  export type ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeTypeHistoryIdRelInput = {
    create?: XOR<ChurchIncomeHistoryCreateWithoutChurchIncomeTypeHistoryIdRelInput, ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeTypeHistoryIdRelInput> | ChurchIncomeHistoryCreateWithoutChurchIncomeTypeHistoryIdRelInput[] | ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeTypeHistoryIdRelInput[]
    connectOrCreate?: ChurchIncomeHistoryCreateOrConnectWithoutChurchIncomeTypeHistoryIdRelInput | ChurchIncomeHistoryCreateOrConnectWithoutChurchIncomeTypeHistoryIdRelInput[]
    createMany?: ChurchIncomeHistoryCreateManyChurchIncomeTypeHistoryIdRelInputEnvelope
    connect?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
  }

  export type ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeTypeIdRelInput = {
    create?: XOR<ChurchIncomeCreateWithoutChurchIncomeTypeIdRelInput, ChurchIncomeUncheckedCreateWithoutChurchIncomeTypeIdRelInput> | ChurchIncomeCreateWithoutChurchIncomeTypeIdRelInput[] | ChurchIncomeUncheckedCreateWithoutChurchIncomeTypeIdRelInput[]
    connectOrCreate?: ChurchIncomeCreateOrConnectWithoutChurchIncomeTypeIdRelInput | ChurchIncomeCreateOrConnectWithoutChurchIncomeTypeIdRelInput[]
    createMany?: ChurchIncomeCreateManyChurchIncomeTypeIdRelInputEnvelope
    connect?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
  }

  export type ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeTypeHistoryIdRelInput = {
    create?: XOR<ChurchIncomeHistoryCreateWithoutChurchIncomeTypeHistoryIdRelInput, ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeTypeHistoryIdRelInput> | ChurchIncomeHistoryCreateWithoutChurchIncomeTypeHistoryIdRelInput[] | ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeTypeHistoryIdRelInput[]
    connectOrCreate?: ChurchIncomeHistoryCreateOrConnectWithoutChurchIncomeTypeHistoryIdRelInput | ChurchIncomeHistoryCreateOrConnectWithoutChurchIncomeTypeHistoryIdRelInput[]
    createMany?: ChurchIncomeHistoryCreateManyChurchIncomeTypeHistoryIdRelInputEnvelope
    connect?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
  }

  export type UserUpdateOneWithoutChurchIncomeTypeCreateByRelNestedInput = {
    create?: XOR<UserCreateWithoutChurchIncomeTypeCreateByRelInput, UserUncheckedCreateWithoutChurchIncomeTypeCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutChurchIncomeTypeCreateByRelInput
    upsert?: UserUpsertWithoutChurchIncomeTypeCreateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutChurchIncomeTypeCreateByRelInput, UserUpdateWithoutChurchIncomeTypeCreateByRelInput>, UserUncheckedUpdateWithoutChurchIncomeTypeCreateByRelInput>
  }

  export type UserUpdateOneWithoutChurchIncomeTypeUpdateByRelNestedInput = {
    create?: XOR<UserCreateWithoutChurchIncomeTypeUpdateByRelInput, UserUncheckedCreateWithoutChurchIncomeTypeUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutChurchIncomeTypeUpdateByRelInput
    upsert?: UserUpsertWithoutChurchIncomeTypeUpdateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutChurchIncomeTypeUpdateByRelInput, UserUpdateWithoutChurchIncomeTypeUpdateByRelInput>, UserUncheckedUpdateWithoutChurchIncomeTypeUpdateByRelInput>
  }

  export type ChurchIncomeUpdateManyWithoutChurchIncomeTypeIdRelNestedInput = {
    create?: XOR<ChurchIncomeCreateWithoutChurchIncomeTypeIdRelInput, ChurchIncomeUncheckedCreateWithoutChurchIncomeTypeIdRelInput> | ChurchIncomeCreateWithoutChurchIncomeTypeIdRelInput[] | ChurchIncomeUncheckedCreateWithoutChurchIncomeTypeIdRelInput[]
    connectOrCreate?: ChurchIncomeCreateOrConnectWithoutChurchIncomeTypeIdRelInput | ChurchIncomeCreateOrConnectWithoutChurchIncomeTypeIdRelInput[]
    upsert?: ChurchIncomeUpsertWithWhereUniqueWithoutChurchIncomeTypeIdRelInput | ChurchIncomeUpsertWithWhereUniqueWithoutChurchIncomeTypeIdRelInput[]
    createMany?: ChurchIncomeCreateManyChurchIncomeTypeIdRelInputEnvelope
    set?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
    disconnect?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
    delete?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
    connect?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
    update?: ChurchIncomeUpdateWithWhereUniqueWithoutChurchIncomeTypeIdRelInput | ChurchIncomeUpdateWithWhereUniqueWithoutChurchIncomeTypeIdRelInput[]
    updateMany?: ChurchIncomeUpdateManyWithWhereWithoutChurchIncomeTypeIdRelInput | ChurchIncomeUpdateManyWithWhereWithoutChurchIncomeTypeIdRelInput[]
    deleteMany?: ChurchIncomeScalarWhereInput | ChurchIncomeScalarWhereInput[]
  }

  export type ChurchIncomeHistoryUpdateManyWithoutChurchIncomeTypeHistoryIdRelNestedInput = {
    create?: XOR<ChurchIncomeHistoryCreateWithoutChurchIncomeTypeHistoryIdRelInput, ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeTypeHistoryIdRelInput> | ChurchIncomeHistoryCreateWithoutChurchIncomeTypeHistoryIdRelInput[] | ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeTypeHistoryIdRelInput[]
    connectOrCreate?: ChurchIncomeHistoryCreateOrConnectWithoutChurchIncomeTypeHistoryIdRelInput | ChurchIncomeHistoryCreateOrConnectWithoutChurchIncomeTypeHistoryIdRelInput[]
    upsert?: ChurchIncomeHistoryUpsertWithWhereUniqueWithoutChurchIncomeTypeHistoryIdRelInput | ChurchIncomeHistoryUpsertWithWhereUniqueWithoutChurchIncomeTypeHistoryIdRelInput[]
    createMany?: ChurchIncomeHistoryCreateManyChurchIncomeTypeHistoryIdRelInputEnvelope
    set?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
    disconnect?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
    delete?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
    connect?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
    update?: ChurchIncomeHistoryUpdateWithWhereUniqueWithoutChurchIncomeTypeHistoryIdRelInput | ChurchIncomeHistoryUpdateWithWhereUniqueWithoutChurchIncomeTypeHistoryIdRelInput[]
    updateMany?: ChurchIncomeHistoryUpdateManyWithWhereWithoutChurchIncomeTypeHistoryIdRelInput | ChurchIncomeHistoryUpdateManyWithWhereWithoutChurchIncomeTypeHistoryIdRelInput[]
    deleteMany?: ChurchIncomeHistoryScalarWhereInput | ChurchIncomeHistoryScalarWhereInput[]
  }

  export type ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeTypeIdRelNestedInput = {
    create?: XOR<ChurchIncomeCreateWithoutChurchIncomeTypeIdRelInput, ChurchIncomeUncheckedCreateWithoutChurchIncomeTypeIdRelInput> | ChurchIncomeCreateWithoutChurchIncomeTypeIdRelInput[] | ChurchIncomeUncheckedCreateWithoutChurchIncomeTypeIdRelInput[]
    connectOrCreate?: ChurchIncomeCreateOrConnectWithoutChurchIncomeTypeIdRelInput | ChurchIncomeCreateOrConnectWithoutChurchIncomeTypeIdRelInput[]
    upsert?: ChurchIncomeUpsertWithWhereUniqueWithoutChurchIncomeTypeIdRelInput | ChurchIncomeUpsertWithWhereUniqueWithoutChurchIncomeTypeIdRelInput[]
    createMany?: ChurchIncomeCreateManyChurchIncomeTypeIdRelInputEnvelope
    set?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
    disconnect?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
    delete?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
    connect?: ChurchIncomeWhereUniqueInput | ChurchIncomeWhereUniqueInput[]
    update?: ChurchIncomeUpdateWithWhereUniqueWithoutChurchIncomeTypeIdRelInput | ChurchIncomeUpdateWithWhereUniqueWithoutChurchIncomeTypeIdRelInput[]
    updateMany?: ChurchIncomeUpdateManyWithWhereWithoutChurchIncomeTypeIdRelInput | ChurchIncomeUpdateManyWithWhereWithoutChurchIncomeTypeIdRelInput[]
    deleteMany?: ChurchIncomeScalarWhereInput | ChurchIncomeScalarWhereInput[]
  }

  export type ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeTypeHistoryIdRelNestedInput = {
    create?: XOR<ChurchIncomeHistoryCreateWithoutChurchIncomeTypeHistoryIdRelInput, ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeTypeHistoryIdRelInput> | ChurchIncomeHistoryCreateWithoutChurchIncomeTypeHistoryIdRelInput[] | ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeTypeHistoryIdRelInput[]
    connectOrCreate?: ChurchIncomeHistoryCreateOrConnectWithoutChurchIncomeTypeHistoryIdRelInput | ChurchIncomeHistoryCreateOrConnectWithoutChurchIncomeTypeHistoryIdRelInput[]
    upsert?: ChurchIncomeHistoryUpsertWithWhereUniqueWithoutChurchIncomeTypeHistoryIdRelInput | ChurchIncomeHistoryUpsertWithWhereUniqueWithoutChurchIncomeTypeHistoryIdRelInput[]
    createMany?: ChurchIncomeHistoryCreateManyChurchIncomeTypeHistoryIdRelInputEnvelope
    set?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
    disconnect?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
    delete?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
    connect?: ChurchIncomeHistoryWhereUniqueInput | ChurchIncomeHistoryWhereUniqueInput[]
    update?: ChurchIncomeHistoryUpdateWithWhereUniqueWithoutChurchIncomeTypeHistoryIdRelInput | ChurchIncomeHistoryUpdateWithWhereUniqueWithoutChurchIncomeTypeHistoryIdRelInput[]
    updateMany?: ChurchIncomeHistoryUpdateManyWithWhereWithoutChurchIncomeTypeHistoryIdRelInput | ChurchIncomeHistoryUpdateManyWithWhereWithoutChurchIncomeTypeHistoryIdRelInput[]
    deleteMany?: ChurchIncomeHistoryScalarWhereInput | ChurchIncomeHistoryScalarWhereInput[]
  }

  export type ChurchSpendingTypeCreateNestedOneWithoutChurchSpendingTypeIdRelInput = {
    create?: XOR<ChurchSpendingTypeCreateWithoutChurchSpendingTypeIdRelInput, ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeIdRelInput>
    connectOrCreate?: ChurchSpendingTypeCreateOrConnectWithoutChurchSpendingTypeIdRelInput
    connect?: ChurchSpendingTypeWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutChurchSpendingCreateByRelInput = {
    create?: XOR<UserCreateWithoutChurchSpendingCreateByRelInput, UserUncheckedCreateWithoutChurchSpendingCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutChurchSpendingCreateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutChurchSpendingUpdateByRelInput = {
    create?: XOR<UserCreateWithoutChurchSpendingUpdateByRelInput, UserUncheckedCreateWithoutChurchSpendingUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutChurchSpendingUpdateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type ChurchSpendingTypeUpdateOneRequiredWithoutChurchSpendingTypeIdRelNestedInput = {
    create?: XOR<ChurchSpendingTypeCreateWithoutChurchSpendingTypeIdRelInput, ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeIdRelInput>
    connectOrCreate?: ChurchSpendingTypeCreateOrConnectWithoutChurchSpendingTypeIdRelInput
    upsert?: ChurchSpendingTypeUpsertWithoutChurchSpendingTypeIdRelInput
    connect?: ChurchSpendingTypeWhereUniqueInput
    update?: XOR<XOR<ChurchSpendingTypeUpdateToOneWithWhereWithoutChurchSpendingTypeIdRelInput, ChurchSpendingTypeUpdateWithoutChurchSpendingTypeIdRelInput>, ChurchSpendingTypeUncheckedUpdateWithoutChurchSpendingTypeIdRelInput>
  }

  export type UserUpdateOneWithoutChurchSpendingCreateByRelNestedInput = {
    create?: XOR<UserCreateWithoutChurchSpendingCreateByRelInput, UserUncheckedCreateWithoutChurchSpendingCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutChurchSpendingCreateByRelInput
    upsert?: UserUpsertWithoutChurchSpendingCreateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutChurchSpendingCreateByRelInput, UserUpdateWithoutChurchSpendingCreateByRelInput>, UserUncheckedUpdateWithoutChurchSpendingCreateByRelInput>
  }

  export type UserUpdateOneWithoutChurchSpendingUpdateByRelNestedInput = {
    create?: XOR<UserCreateWithoutChurchSpendingUpdateByRelInput, UserUncheckedCreateWithoutChurchSpendingUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutChurchSpendingUpdateByRelInput
    upsert?: UserUpsertWithoutChurchSpendingUpdateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutChurchSpendingUpdateByRelInput, UserUpdateWithoutChurchSpendingUpdateByRelInput>, UserUncheckedUpdateWithoutChurchSpendingUpdateByRelInput>
  }

  export type ChurchSpendingTypeCreateNestedOneWithoutChurchSpendingTypeHistoryIdRelInput = {
    create?: XOR<ChurchSpendingTypeCreateWithoutChurchSpendingTypeHistoryIdRelInput, ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeHistoryIdRelInput>
    connectOrCreate?: ChurchSpendingTypeCreateOrConnectWithoutChurchSpendingTypeHistoryIdRelInput
    connect?: ChurchSpendingTypeWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutChurchSpendingHistoryCreateByRelInput = {
    create?: XOR<UserCreateWithoutChurchSpendingHistoryCreateByRelInput, UserUncheckedCreateWithoutChurchSpendingHistoryCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutChurchSpendingHistoryCreateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutChurchSpendingHistoryUpdateByRelInput = {
    create?: XOR<UserCreateWithoutChurchSpendingHistoryUpdateByRelInput, UserUncheckedCreateWithoutChurchSpendingHistoryUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutChurchSpendingHistoryUpdateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type ChurchSpendingTypeUpdateOneRequiredWithoutChurchSpendingTypeHistoryIdRelNestedInput = {
    create?: XOR<ChurchSpendingTypeCreateWithoutChurchSpendingTypeHistoryIdRelInput, ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeHistoryIdRelInput>
    connectOrCreate?: ChurchSpendingTypeCreateOrConnectWithoutChurchSpendingTypeHistoryIdRelInput
    upsert?: ChurchSpendingTypeUpsertWithoutChurchSpendingTypeHistoryIdRelInput
    connect?: ChurchSpendingTypeWhereUniqueInput
    update?: XOR<XOR<ChurchSpendingTypeUpdateToOneWithWhereWithoutChurchSpendingTypeHistoryIdRelInput, ChurchSpendingTypeUpdateWithoutChurchSpendingTypeHistoryIdRelInput>, ChurchSpendingTypeUncheckedUpdateWithoutChurchSpendingTypeHistoryIdRelInput>
  }

  export type UserUpdateOneWithoutChurchSpendingHistoryCreateByRelNestedInput = {
    create?: XOR<UserCreateWithoutChurchSpendingHistoryCreateByRelInput, UserUncheckedCreateWithoutChurchSpendingHistoryCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutChurchSpendingHistoryCreateByRelInput
    upsert?: UserUpsertWithoutChurchSpendingHistoryCreateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutChurchSpendingHistoryCreateByRelInput, UserUpdateWithoutChurchSpendingHistoryCreateByRelInput>, UserUncheckedUpdateWithoutChurchSpendingHistoryCreateByRelInput>
  }

  export type UserUpdateOneWithoutChurchSpendingHistoryUpdateByRelNestedInput = {
    create?: XOR<UserCreateWithoutChurchSpendingHistoryUpdateByRelInput, UserUncheckedCreateWithoutChurchSpendingHistoryUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutChurchSpendingHistoryUpdateByRelInput
    upsert?: UserUpsertWithoutChurchSpendingHistoryUpdateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutChurchSpendingHistoryUpdateByRelInput, UserUpdateWithoutChurchSpendingHistoryUpdateByRelInput>, UserUncheckedUpdateWithoutChurchSpendingHistoryUpdateByRelInput>
  }

  export type UserCreateNestedOneWithoutChurchSpendingTypeCreateByRelInput = {
    create?: XOR<UserCreateWithoutChurchSpendingTypeCreateByRelInput, UserUncheckedCreateWithoutChurchSpendingTypeCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutChurchSpendingTypeCreateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutChurchSpendingTypeUpdateByRelInput = {
    create?: XOR<UserCreateWithoutChurchSpendingTypeUpdateByRelInput, UserUncheckedCreateWithoutChurchSpendingTypeUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutChurchSpendingTypeUpdateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type ChurchSpendingCreateNestedManyWithoutChurchSpendingTypeIdRelInput = {
    create?: XOR<ChurchSpendingCreateWithoutChurchSpendingTypeIdRelInput, ChurchSpendingUncheckedCreateWithoutChurchSpendingTypeIdRelInput> | ChurchSpendingCreateWithoutChurchSpendingTypeIdRelInput[] | ChurchSpendingUncheckedCreateWithoutChurchSpendingTypeIdRelInput[]
    connectOrCreate?: ChurchSpendingCreateOrConnectWithoutChurchSpendingTypeIdRelInput | ChurchSpendingCreateOrConnectWithoutChurchSpendingTypeIdRelInput[]
    createMany?: ChurchSpendingCreateManyChurchSpendingTypeIdRelInputEnvelope
    connect?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
  }

  export type ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingTypeHistoryIdRelInput = {
    create?: XOR<ChurchSpendingHistoryCreateWithoutChurchSpendingTypeHistoryIdRelInput, ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingTypeHistoryIdRelInput> | ChurchSpendingHistoryCreateWithoutChurchSpendingTypeHistoryIdRelInput[] | ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingTypeHistoryIdRelInput[]
    connectOrCreate?: ChurchSpendingHistoryCreateOrConnectWithoutChurchSpendingTypeHistoryIdRelInput | ChurchSpendingHistoryCreateOrConnectWithoutChurchSpendingTypeHistoryIdRelInput[]
    createMany?: ChurchSpendingHistoryCreateManyChurchSpendingTypeHistoryIdRelInputEnvelope
    connect?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
  }

  export type ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingTypeIdRelInput = {
    create?: XOR<ChurchSpendingCreateWithoutChurchSpendingTypeIdRelInput, ChurchSpendingUncheckedCreateWithoutChurchSpendingTypeIdRelInput> | ChurchSpendingCreateWithoutChurchSpendingTypeIdRelInput[] | ChurchSpendingUncheckedCreateWithoutChurchSpendingTypeIdRelInput[]
    connectOrCreate?: ChurchSpendingCreateOrConnectWithoutChurchSpendingTypeIdRelInput | ChurchSpendingCreateOrConnectWithoutChurchSpendingTypeIdRelInput[]
    createMany?: ChurchSpendingCreateManyChurchSpendingTypeIdRelInputEnvelope
    connect?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
  }

  export type ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingTypeHistoryIdRelInput = {
    create?: XOR<ChurchSpendingHistoryCreateWithoutChurchSpendingTypeHistoryIdRelInput, ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingTypeHistoryIdRelInput> | ChurchSpendingHistoryCreateWithoutChurchSpendingTypeHistoryIdRelInput[] | ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingTypeHistoryIdRelInput[]
    connectOrCreate?: ChurchSpendingHistoryCreateOrConnectWithoutChurchSpendingTypeHistoryIdRelInput | ChurchSpendingHistoryCreateOrConnectWithoutChurchSpendingTypeHistoryIdRelInput[]
    createMany?: ChurchSpendingHistoryCreateManyChurchSpendingTypeHistoryIdRelInputEnvelope
    connect?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
  }

  export type UserUpdateOneWithoutChurchSpendingTypeCreateByRelNestedInput = {
    create?: XOR<UserCreateWithoutChurchSpendingTypeCreateByRelInput, UserUncheckedCreateWithoutChurchSpendingTypeCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutChurchSpendingTypeCreateByRelInput
    upsert?: UserUpsertWithoutChurchSpendingTypeCreateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutChurchSpendingTypeCreateByRelInput, UserUpdateWithoutChurchSpendingTypeCreateByRelInput>, UserUncheckedUpdateWithoutChurchSpendingTypeCreateByRelInput>
  }

  export type UserUpdateOneWithoutChurchSpendingTypeUpdateByRelNestedInput = {
    create?: XOR<UserCreateWithoutChurchSpendingTypeUpdateByRelInput, UserUncheckedCreateWithoutChurchSpendingTypeUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutChurchSpendingTypeUpdateByRelInput
    upsert?: UserUpsertWithoutChurchSpendingTypeUpdateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutChurchSpendingTypeUpdateByRelInput, UserUpdateWithoutChurchSpendingTypeUpdateByRelInput>, UserUncheckedUpdateWithoutChurchSpendingTypeUpdateByRelInput>
  }

  export type ChurchSpendingUpdateManyWithoutChurchSpendingTypeIdRelNestedInput = {
    create?: XOR<ChurchSpendingCreateWithoutChurchSpendingTypeIdRelInput, ChurchSpendingUncheckedCreateWithoutChurchSpendingTypeIdRelInput> | ChurchSpendingCreateWithoutChurchSpendingTypeIdRelInput[] | ChurchSpendingUncheckedCreateWithoutChurchSpendingTypeIdRelInput[]
    connectOrCreate?: ChurchSpendingCreateOrConnectWithoutChurchSpendingTypeIdRelInput | ChurchSpendingCreateOrConnectWithoutChurchSpendingTypeIdRelInput[]
    upsert?: ChurchSpendingUpsertWithWhereUniqueWithoutChurchSpendingTypeIdRelInput | ChurchSpendingUpsertWithWhereUniqueWithoutChurchSpendingTypeIdRelInput[]
    createMany?: ChurchSpendingCreateManyChurchSpendingTypeIdRelInputEnvelope
    set?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
    disconnect?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
    delete?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
    connect?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
    update?: ChurchSpendingUpdateWithWhereUniqueWithoutChurchSpendingTypeIdRelInput | ChurchSpendingUpdateWithWhereUniqueWithoutChurchSpendingTypeIdRelInput[]
    updateMany?: ChurchSpendingUpdateManyWithWhereWithoutChurchSpendingTypeIdRelInput | ChurchSpendingUpdateManyWithWhereWithoutChurchSpendingTypeIdRelInput[]
    deleteMany?: ChurchSpendingScalarWhereInput | ChurchSpendingScalarWhereInput[]
  }

  export type ChurchSpendingHistoryUpdateManyWithoutChurchSpendingTypeHistoryIdRelNestedInput = {
    create?: XOR<ChurchSpendingHistoryCreateWithoutChurchSpendingTypeHistoryIdRelInput, ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingTypeHistoryIdRelInput> | ChurchSpendingHistoryCreateWithoutChurchSpendingTypeHistoryIdRelInput[] | ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingTypeHistoryIdRelInput[]
    connectOrCreate?: ChurchSpendingHistoryCreateOrConnectWithoutChurchSpendingTypeHistoryIdRelInput | ChurchSpendingHistoryCreateOrConnectWithoutChurchSpendingTypeHistoryIdRelInput[]
    upsert?: ChurchSpendingHistoryUpsertWithWhereUniqueWithoutChurchSpendingTypeHistoryIdRelInput | ChurchSpendingHistoryUpsertWithWhereUniqueWithoutChurchSpendingTypeHistoryIdRelInput[]
    createMany?: ChurchSpendingHistoryCreateManyChurchSpendingTypeHistoryIdRelInputEnvelope
    set?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
    disconnect?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
    delete?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
    connect?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
    update?: ChurchSpendingHistoryUpdateWithWhereUniqueWithoutChurchSpendingTypeHistoryIdRelInput | ChurchSpendingHistoryUpdateWithWhereUniqueWithoutChurchSpendingTypeHistoryIdRelInput[]
    updateMany?: ChurchSpendingHistoryUpdateManyWithWhereWithoutChurchSpendingTypeHistoryIdRelInput | ChurchSpendingHistoryUpdateManyWithWhereWithoutChurchSpendingTypeHistoryIdRelInput[]
    deleteMany?: ChurchSpendingHistoryScalarWhereInput | ChurchSpendingHistoryScalarWhereInput[]
  }

  export type ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingTypeIdRelNestedInput = {
    create?: XOR<ChurchSpendingCreateWithoutChurchSpendingTypeIdRelInput, ChurchSpendingUncheckedCreateWithoutChurchSpendingTypeIdRelInput> | ChurchSpendingCreateWithoutChurchSpendingTypeIdRelInput[] | ChurchSpendingUncheckedCreateWithoutChurchSpendingTypeIdRelInput[]
    connectOrCreate?: ChurchSpendingCreateOrConnectWithoutChurchSpendingTypeIdRelInput | ChurchSpendingCreateOrConnectWithoutChurchSpendingTypeIdRelInput[]
    upsert?: ChurchSpendingUpsertWithWhereUniqueWithoutChurchSpendingTypeIdRelInput | ChurchSpendingUpsertWithWhereUniqueWithoutChurchSpendingTypeIdRelInput[]
    createMany?: ChurchSpendingCreateManyChurchSpendingTypeIdRelInputEnvelope
    set?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
    disconnect?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
    delete?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
    connect?: ChurchSpendingWhereUniqueInput | ChurchSpendingWhereUniqueInput[]
    update?: ChurchSpendingUpdateWithWhereUniqueWithoutChurchSpendingTypeIdRelInput | ChurchSpendingUpdateWithWhereUniqueWithoutChurchSpendingTypeIdRelInput[]
    updateMany?: ChurchSpendingUpdateManyWithWhereWithoutChurchSpendingTypeIdRelInput | ChurchSpendingUpdateManyWithWhereWithoutChurchSpendingTypeIdRelInput[]
    deleteMany?: ChurchSpendingScalarWhereInput | ChurchSpendingScalarWhereInput[]
  }

  export type ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingTypeHistoryIdRelNestedInput = {
    create?: XOR<ChurchSpendingHistoryCreateWithoutChurchSpendingTypeHistoryIdRelInput, ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingTypeHistoryIdRelInput> | ChurchSpendingHistoryCreateWithoutChurchSpendingTypeHistoryIdRelInput[] | ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingTypeHistoryIdRelInput[]
    connectOrCreate?: ChurchSpendingHistoryCreateOrConnectWithoutChurchSpendingTypeHistoryIdRelInput | ChurchSpendingHistoryCreateOrConnectWithoutChurchSpendingTypeHistoryIdRelInput[]
    upsert?: ChurchSpendingHistoryUpsertWithWhereUniqueWithoutChurchSpendingTypeHistoryIdRelInput | ChurchSpendingHistoryUpsertWithWhereUniqueWithoutChurchSpendingTypeHistoryIdRelInput[]
    createMany?: ChurchSpendingHistoryCreateManyChurchSpendingTypeHistoryIdRelInputEnvelope
    set?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
    disconnect?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
    delete?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
    connect?: ChurchSpendingHistoryWhereUniqueInput | ChurchSpendingHistoryWhereUniqueInput[]
    update?: ChurchSpendingHistoryUpdateWithWhereUniqueWithoutChurchSpendingTypeHistoryIdRelInput | ChurchSpendingHistoryUpdateWithWhereUniqueWithoutChurchSpendingTypeHistoryIdRelInput[]
    updateMany?: ChurchSpendingHistoryUpdateManyWithWhereWithoutChurchSpendingTypeHistoryIdRelInput | ChurchSpendingHistoryUpdateManyWithWhereWithoutChurchSpendingTypeHistoryIdRelInput[]
    deleteMany?: ChurchSpendingHistoryScalarWhereInput | ChurchSpendingHistoryScalarWhereInput[]
  }

  export type StoreIncomeTypeCreateNestedOneWithoutStoreIncomeTypeIdRelInput = {
    create?: XOR<StoreIncomeTypeCreateWithoutStoreIncomeTypeIdRelInput, StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeIdRelInput>
    connectOrCreate?: StoreIncomeTypeCreateOrConnectWithoutStoreIncomeTypeIdRelInput
    connect?: StoreIncomeTypeWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutStoreIncomeCreateByRelInput = {
    create?: XOR<UserCreateWithoutStoreIncomeCreateByRelInput, UserUncheckedCreateWithoutStoreIncomeCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoreIncomeCreateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutStoreIncomeUpdateByRelInput = {
    create?: XOR<UserCreateWithoutStoreIncomeUpdateByRelInput, UserUncheckedCreateWithoutStoreIncomeUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoreIncomeUpdateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type StoreIncomeTypeUpdateOneRequiredWithoutStoreIncomeTypeIdRelNestedInput = {
    create?: XOR<StoreIncomeTypeCreateWithoutStoreIncomeTypeIdRelInput, StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeIdRelInput>
    connectOrCreate?: StoreIncomeTypeCreateOrConnectWithoutStoreIncomeTypeIdRelInput
    upsert?: StoreIncomeTypeUpsertWithoutStoreIncomeTypeIdRelInput
    connect?: StoreIncomeTypeWhereUniqueInput
    update?: XOR<XOR<StoreIncomeTypeUpdateToOneWithWhereWithoutStoreIncomeTypeIdRelInput, StoreIncomeTypeUpdateWithoutStoreIncomeTypeIdRelInput>, StoreIncomeTypeUncheckedUpdateWithoutStoreIncomeTypeIdRelInput>
  }

  export type UserUpdateOneWithoutStoreIncomeCreateByRelNestedInput = {
    create?: XOR<UserCreateWithoutStoreIncomeCreateByRelInput, UserUncheckedCreateWithoutStoreIncomeCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoreIncomeCreateByRelInput
    upsert?: UserUpsertWithoutStoreIncomeCreateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutStoreIncomeCreateByRelInput, UserUpdateWithoutStoreIncomeCreateByRelInput>, UserUncheckedUpdateWithoutStoreIncomeCreateByRelInput>
  }

  export type UserUpdateOneWithoutStoreIncomeUpdateByRelNestedInput = {
    create?: XOR<UserCreateWithoutStoreIncomeUpdateByRelInput, UserUncheckedCreateWithoutStoreIncomeUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoreIncomeUpdateByRelInput
    upsert?: UserUpsertWithoutStoreIncomeUpdateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutStoreIncomeUpdateByRelInput, UserUpdateWithoutStoreIncomeUpdateByRelInput>, UserUncheckedUpdateWithoutStoreIncomeUpdateByRelInput>
  }

  export type StoreIncomeTypeCreateNestedOneWithoutStoreIncomeTypeHistoryIdRelInput = {
    create?: XOR<StoreIncomeTypeCreateWithoutStoreIncomeTypeHistoryIdRelInput, StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeHistoryIdRelInput>
    connectOrCreate?: StoreIncomeTypeCreateOrConnectWithoutStoreIncomeTypeHistoryIdRelInput
    connect?: StoreIncomeTypeWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutStoreIncomeHistoryCreateByRelInput = {
    create?: XOR<UserCreateWithoutStoreIncomeHistoryCreateByRelInput, UserUncheckedCreateWithoutStoreIncomeHistoryCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoreIncomeHistoryCreateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutStoreIncomeHistoryUpdateByRelInput = {
    create?: XOR<UserCreateWithoutStoreIncomeHistoryUpdateByRelInput, UserUncheckedCreateWithoutStoreIncomeHistoryUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoreIncomeHistoryUpdateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type StoreIncomeTypeUpdateOneRequiredWithoutStoreIncomeTypeHistoryIdRelNestedInput = {
    create?: XOR<StoreIncomeTypeCreateWithoutStoreIncomeTypeHistoryIdRelInput, StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeHistoryIdRelInput>
    connectOrCreate?: StoreIncomeTypeCreateOrConnectWithoutStoreIncomeTypeHistoryIdRelInput
    upsert?: StoreIncomeTypeUpsertWithoutStoreIncomeTypeHistoryIdRelInput
    connect?: StoreIncomeTypeWhereUniqueInput
    update?: XOR<XOR<StoreIncomeTypeUpdateToOneWithWhereWithoutStoreIncomeTypeHistoryIdRelInput, StoreIncomeTypeUpdateWithoutStoreIncomeTypeHistoryIdRelInput>, StoreIncomeTypeUncheckedUpdateWithoutStoreIncomeTypeHistoryIdRelInput>
  }

  export type UserUpdateOneWithoutStoreIncomeHistoryCreateByRelNestedInput = {
    create?: XOR<UserCreateWithoutStoreIncomeHistoryCreateByRelInput, UserUncheckedCreateWithoutStoreIncomeHistoryCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoreIncomeHistoryCreateByRelInput
    upsert?: UserUpsertWithoutStoreIncomeHistoryCreateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutStoreIncomeHistoryCreateByRelInput, UserUpdateWithoutStoreIncomeHistoryCreateByRelInput>, UserUncheckedUpdateWithoutStoreIncomeHistoryCreateByRelInput>
  }

  export type UserUpdateOneWithoutStoreIncomeHistoryUpdateByRelNestedInput = {
    create?: XOR<UserCreateWithoutStoreIncomeHistoryUpdateByRelInput, UserUncheckedCreateWithoutStoreIncomeHistoryUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoreIncomeHistoryUpdateByRelInput
    upsert?: UserUpsertWithoutStoreIncomeHistoryUpdateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutStoreIncomeHistoryUpdateByRelInput, UserUpdateWithoutStoreIncomeHistoryUpdateByRelInput>, UserUncheckedUpdateWithoutStoreIncomeHistoryUpdateByRelInput>
  }

  export type UserCreateNestedOneWithoutStoreIncomeTypeCreateByRelInput = {
    create?: XOR<UserCreateWithoutStoreIncomeTypeCreateByRelInput, UserUncheckedCreateWithoutStoreIncomeTypeCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoreIncomeTypeCreateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutStoreIncomeTypeUpdateByRelInput = {
    create?: XOR<UserCreateWithoutStoreIncomeTypeUpdateByRelInput, UserUncheckedCreateWithoutStoreIncomeTypeUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoreIncomeTypeUpdateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type StoreIncomeCreateNestedManyWithoutStoreIncomeTypeIdRelInput = {
    create?: XOR<StoreIncomeCreateWithoutStoreIncomeTypeIdRelInput, StoreIncomeUncheckedCreateWithoutStoreIncomeTypeIdRelInput> | StoreIncomeCreateWithoutStoreIncomeTypeIdRelInput[] | StoreIncomeUncheckedCreateWithoutStoreIncomeTypeIdRelInput[]
    connectOrCreate?: StoreIncomeCreateOrConnectWithoutStoreIncomeTypeIdRelInput | StoreIncomeCreateOrConnectWithoutStoreIncomeTypeIdRelInput[]
    createMany?: StoreIncomeCreateManyStoreIncomeTypeIdRelInputEnvelope
    connect?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
  }

  export type StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeTypeHistoryIdRelInput = {
    create?: XOR<StoreIncomeHistoryCreateWithoutStoreIncomeTypeHistoryIdRelInput, StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeTypeHistoryIdRelInput> | StoreIncomeHistoryCreateWithoutStoreIncomeTypeHistoryIdRelInput[] | StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeTypeHistoryIdRelInput[]
    connectOrCreate?: StoreIncomeHistoryCreateOrConnectWithoutStoreIncomeTypeHistoryIdRelInput | StoreIncomeHistoryCreateOrConnectWithoutStoreIncomeTypeHistoryIdRelInput[]
    createMany?: StoreIncomeHistoryCreateManyStoreIncomeTypeHistoryIdRelInputEnvelope
    connect?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
  }

  export type StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeTypeIdRelInput = {
    create?: XOR<StoreIncomeCreateWithoutStoreIncomeTypeIdRelInput, StoreIncomeUncheckedCreateWithoutStoreIncomeTypeIdRelInput> | StoreIncomeCreateWithoutStoreIncomeTypeIdRelInput[] | StoreIncomeUncheckedCreateWithoutStoreIncomeTypeIdRelInput[]
    connectOrCreate?: StoreIncomeCreateOrConnectWithoutStoreIncomeTypeIdRelInput | StoreIncomeCreateOrConnectWithoutStoreIncomeTypeIdRelInput[]
    createMany?: StoreIncomeCreateManyStoreIncomeTypeIdRelInputEnvelope
    connect?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
  }

  export type StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeTypeHistoryIdRelInput = {
    create?: XOR<StoreIncomeHistoryCreateWithoutStoreIncomeTypeHistoryIdRelInput, StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeTypeHistoryIdRelInput> | StoreIncomeHistoryCreateWithoutStoreIncomeTypeHistoryIdRelInput[] | StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeTypeHistoryIdRelInput[]
    connectOrCreate?: StoreIncomeHistoryCreateOrConnectWithoutStoreIncomeTypeHistoryIdRelInput | StoreIncomeHistoryCreateOrConnectWithoutStoreIncomeTypeHistoryIdRelInput[]
    createMany?: StoreIncomeHistoryCreateManyStoreIncomeTypeHistoryIdRelInputEnvelope
    connect?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
  }

  export type UserUpdateOneWithoutStoreIncomeTypeCreateByRelNestedInput = {
    create?: XOR<UserCreateWithoutStoreIncomeTypeCreateByRelInput, UserUncheckedCreateWithoutStoreIncomeTypeCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoreIncomeTypeCreateByRelInput
    upsert?: UserUpsertWithoutStoreIncomeTypeCreateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutStoreIncomeTypeCreateByRelInput, UserUpdateWithoutStoreIncomeTypeCreateByRelInput>, UserUncheckedUpdateWithoutStoreIncomeTypeCreateByRelInput>
  }

  export type UserUpdateOneWithoutStoreIncomeTypeUpdateByRelNestedInput = {
    create?: XOR<UserCreateWithoutStoreIncomeTypeUpdateByRelInput, UserUncheckedCreateWithoutStoreIncomeTypeUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoreIncomeTypeUpdateByRelInput
    upsert?: UserUpsertWithoutStoreIncomeTypeUpdateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutStoreIncomeTypeUpdateByRelInput, UserUpdateWithoutStoreIncomeTypeUpdateByRelInput>, UserUncheckedUpdateWithoutStoreIncomeTypeUpdateByRelInput>
  }

  export type StoreIncomeUpdateManyWithoutStoreIncomeTypeIdRelNestedInput = {
    create?: XOR<StoreIncomeCreateWithoutStoreIncomeTypeIdRelInput, StoreIncomeUncheckedCreateWithoutStoreIncomeTypeIdRelInput> | StoreIncomeCreateWithoutStoreIncomeTypeIdRelInput[] | StoreIncomeUncheckedCreateWithoutStoreIncomeTypeIdRelInput[]
    connectOrCreate?: StoreIncomeCreateOrConnectWithoutStoreIncomeTypeIdRelInput | StoreIncomeCreateOrConnectWithoutStoreIncomeTypeIdRelInput[]
    upsert?: StoreIncomeUpsertWithWhereUniqueWithoutStoreIncomeTypeIdRelInput | StoreIncomeUpsertWithWhereUniqueWithoutStoreIncomeTypeIdRelInput[]
    createMany?: StoreIncomeCreateManyStoreIncomeTypeIdRelInputEnvelope
    set?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
    disconnect?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
    delete?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
    connect?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
    update?: StoreIncomeUpdateWithWhereUniqueWithoutStoreIncomeTypeIdRelInput | StoreIncomeUpdateWithWhereUniqueWithoutStoreIncomeTypeIdRelInput[]
    updateMany?: StoreIncomeUpdateManyWithWhereWithoutStoreIncomeTypeIdRelInput | StoreIncomeUpdateManyWithWhereWithoutStoreIncomeTypeIdRelInput[]
    deleteMany?: StoreIncomeScalarWhereInput | StoreIncomeScalarWhereInput[]
  }

  export type StoreIncomeHistoryUpdateManyWithoutStoreIncomeTypeHistoryIdRelNestedInput = {
    create?: XOR<StoreIncomeHistoryCreateWithoutStoreIncomeTypeHistoryIdRelInput, StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeTypeHistoryIdRelInput> | StoreIncomeHistoryCreateWithoutStoreIncomeTypeHistoryIdRelInput[] | StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeTypeHistoryIdRelInput[]
    connectOrCreate?: StoreIncomeHistoryCreateOrConnectWithoutStoreIncomeTypeHistoryIdRelInput | StoreIncomeHistoryCreateOrConnectWithoutStoreIncomeTypeHistoryIdRelInput[]
    upsert?: StoreIncomeHistoryUpsertWithWhereUniqueWithoutStoreIncomeTypeHistoryIdRelInput | StoreIncomeHistoryUpsertWithWhereUniqueWithoutStoreIncomeTypeHistoryIdRelInput[]
    createMany?: StoreIncomeHistoryCreateManyStoreIncomeTypeHistoryIdRelInputEnvelope
    set?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
    disconnect?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
    delete?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
    connect?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
    update?: StoreIncomeHistoryUpdateWithWhereUniqueWithoutStoreIncomeTypeHistoryIdRelInput | StoreIncomeHistoryUpdateWithWhereUniqueWithoutStoreIncomeTypeHistoryIdRelInput[]
    updateMany?: StoreIncomeHistoryUpdateManyWithWhereWithoutStoreIncomeTypeHistoryIdRelInput | StoreIncomeHistoryUpdateManyWithWhereWithoutStoreIncomeTypeHistoryIdRelInput[]
    deleteMany?: StoreIncomeHistoryScalarWhereInput | StoreIncomeHistoryScalarWhereInput[]
  }

  export type StoreIncomeUncheckedUpdateManyWithoutStoreIncomeTypeIdRelNestedInput = {
    create?: XOR<StoreIncomeCreateWithoutStoreIncomeTypeIdRelInput, StoreIncomeUncheckedCreateWithoutStoreIncomeTypeIdRelInput> | StoreIncomeCreateWithoutStoreIncomeTypeIdRelInput[] | StoreIncomeUncheckedCreateWithoutStoreIncomeTypeIdRelInput[]
    connectOrCreate?: StoreIncomeCreateOrConnectWithoutStoreIncomeTypeIdRelInput | StoreIncomeCreateOrConnectWithoutStoreIncomeTypeIdRelInput[]
    upsert?: StoreIncomeUpsertWithWhereUniqueWithoutStoreIncomeTypeIdRelInput | StoreIncomeUpsertWithWhereUniqueWithoutStoreIncomeTypeIdRelInput[]
    createMany?: StoreIncomeCreateManyStoreIncomeTypeIdRelInputEnvelope
    set?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
    disconnect?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
    delete?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
    connect?: StoreIncomeWhereUniqueInput | StoreIncomeWhereUniqueInput[]
    update?: StoreIncomeUpdateWithWhereUniqueWithoutStoreIncomeTypeIdRelInput | StoreIncomeUpdateWithWhereUniqueWithoutStoreIncomeTypeIdRelInput[]
    updateMany?: StoreIncomeUpdateManyWithWhereWithoutStoreIncomeTypeIdRelInput | StoreIncomeUpdateManyWithWhereWithoutStoreIncomeTypeIdRelInput[]
    deleteMany?: StoreIncomeScalarWhereInput | StoreIncomeScalarWhereInput[]
  }

  export type StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeTypeHistoryIdRelNestedInput = {
    create?: XOR<StoreIncomeHistoryCreateWithoutStoreIncomeTypeHistoryIdRelInput, StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeTypeHistoryIdRelInput> | StoreIncomeHistoryCreateWithoutStoreIncomeTypeHistoryIdRelInput[] | StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeTypeHistoryIdRelInput[]
    connectOrCreate?: StoreIncomeHistoryCreateOrConnectWithoutStoreIncomeTypeHistoryIdRelInput | StoreIncomeHistoryCreateOrConnectWithoutStoreIncomeTypeHistoryIdRelInput[]
    upsert?: StoreIncomeHistoryUpsertWithWhereUniqueWithoutStoreIncomeTypeHistoryIdRelInput | StoreIncomeHistoryUpsertWithWhereUniqueWithoutStoreIncomeTypeHistoryIdRelInput[]
    createMany?: StoreIncomeHistoryCreateManyStoreIncomeTypeHistoryIdRelInputEnvelope
    set?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
    disconnect?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
    delete?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
    connect?: StoreIncomeHistoryWhereUniqueInput | StoreIncomeHistoryWhereUniqueInput[]
    update?: StoreIncomeHistoryUpdateWithWhereUniqueWithoutStoreIncomeTypeHistoryIdRelInput | StoreIncomeHistoryUpdateWithWhereUniqueWithoutStoreIncomeTypeHistoryIdRelInput[]
    updateMany?: StoreIncomeHistoryUpdateManyWithWhereWithoutStoreIncomeTypeHistoryIdRelInput | StoreIncomeHistoryUpdateManyWithWhereWithoutStoreIncomeTypeHistoryIdRelInput[]
    deleteMany?: StoreIncomeHistoryScalarWhereInput | StoreIncomeHistoryScalarWhereInput[]
  }

  export type StoreSpendingTypeCreateNestedOneWithoutStoreSpendingTypeIdRelInput = {
    create?: XOR<StoreSpendingTypeCreateWithoutStoreSpendingTypeIdRelInput, StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeIdRelInput>
    connectOrCreate?: StoreSpendingTypeCreateOrConnectWithoutStoreSpendingTypeIdRelInput
    connect?: StoreSpendingTypeWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutStoreSpendingCreateByRelInput = {
    create?: XOR<UserCreateWithoutStoreSpendingCreateByRelInput, UserUncheckedCreateWithoutStoreSpendingCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoreSpendingCreateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutStoreSpendingUpdateByRelInput = {
    create?: XOR<UserCreateWithoutStoreSpendingUpdateByRelInput, UserUncheckedCreateWithoutStoreSpendingUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoreSpendingUpdateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type StoreSpendingTypeUpdateOneRequiredWithoutStoreSpendingTypeIdRelNestedInput = {
    create?: XOR<StoreSpendingTypeCreateWithoutStoreSpendingTypeIdRelInput, StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeIdRelInput>
    connectOrCreate?: StoreSpendingTypeCreateOrConnectWithoutStoreSpendingTypeIdRelInput
    upsert?: StoreSpendingTypeUpsertWithoutStoreSpendingTypeIdRelInput
    connect?: StoreSpendingTypeWhereUniqueInput
    update?: XOR<XOR<StoreSpendingTypeUpdateToOneWithWhereWithoutStoreSpendingTypeIdRelInput, StoreSpendingTypeUpdateWithoutStoreSpendingTypeIdRelInput>, StoreSpendingTypeUncheckedUpdateWithoutStoreSpendingTypeIdRelInput>
  }

  export type UserUpdateOneWithoutStoreSpendingCreateByRelNestedInput = {
    create?: XOR<UserCreateWithoutStoreSpendingCreateByRelInput, UserUncheckedCreateWithoutStoreSpendingCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoreSpendingCreateByRelInput
    upsert?: UserUpsertWithoutStoreSpendingCreateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutStoreSpendingCreateByRelInput, UserUpdateWithoutStoreSpendingCreateByRelInput>, UserUncheckedUpdateWithoutStoreSpendingCreateByRelInput>
  }

  export type UserUpdateOneWithoutStoreSpendingUpdateByRelNestedInput = {
    create?: XOR<UserCreateWithoutStoreSpendingUpdateByRelInput, UserUncheckedCreateWithoutStoreSpendingUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoreSpendingUpdateByRelInput
    upsert?: UserUpsertWithoutStoreSpendingUpdateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutStoreSpendingUpdateByRelInput, UserUpdateWithoutStoreSpendingUpdateByRelInput>, UserUncheckedUpdateWithoutStoreSpendingUpdateByRelInput>
  }

  export type StoreSpendingTypeCreateNestedOneWithoutStoreSpendingTypeHistoryIdRelInput = {
    create?: XOR<StoreSpendingTypeCreateWithoutStoreSpendingTypeHistoryIdRelInput, StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeHistoryIdRelInput>
    connectOrCreate?: StoreSpendingTypeCreateOrConnectWithoutStoreSpendingTypeHistoryIdRelInput
    connect?: StoreSpendingTypeWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutStoreSpendingHistoryCreateByRelInput = {
    create?: XOR<UserCreateWithoutStoreSpendingHistoryCreateByRelInput, UserUncheckedCreateWithoutStoreSpendingHistoryCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoreSpendingHistoryCreateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutStoreSpendingHistoryUpdateByRelInput = {
    create?: XOR<UserCreateWithoutStoreSpendingHistoryUpdateByRelInput, UserUncheckedCreateWithoutStoreSpendingHistoryUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoreSpendingHistoryUpdateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type StoreSpendingTypeUpdateOneRequiredWithoutStoreSpendingTypeHistoryIdRelNestedInput = {
    create?: XOR<StoreSpendingTypeCreateWithoutStoreSpendingTypeHistoryIdRelInput, StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeHistoryIdRelInput>
    connectOrCreate?: StoreSpendingTypeCreateOrConnectWithoutStoreSpendingTypeHistoryIdRelInput
    upsert?: StoreSpendingTypeUpsertWithoutStoreSpendingTypeHistoryIdRelInput
    connect?: StoreSpendingTypeWhereUniqueInput
    update?: XOR<XOR<StoreSpendingTypeUpdateToOneWithWhereWithoutStoreSpendingTypeHistoryIdRelInput, StoreSpendingTypeUpdateWithoutStoreSpendingTypeHistoryIdRelInput>, StoreSpendingTypeUncheckedUpdateWithoutStoreSpendingTypeHistoryIdRelInput>
  }

  export type UserUpdateOneWithoutStoreSpendingHistoryCreateByRelNestedInput = {
    create?: XOR<UserCreateWithoutStoreSpendingHistoryCreateByRelInput, UserUncheckedCreateWithoutStoreSpendingHistoryCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoreSpendingHistoryCreateByRelInput
    upsert?: UserUpsertWithoutStoreSpendingHistoryCreateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutStoreSpendingHistoryCreateByRelInput, UserUpdateWithoutStoreSpendingHistoryCreateByRelInput>, UserUncheckedUpdateWithoutStoreSpendingHistoryCreateByRelInput>
  }

  export type UserUpdateOneWithoutStoreSpendingHistoryUpdateByRelNestedInput = {
    create?: XOR<UserCreateWithoutStoreSpendingHistoryUpdateByRelInput, UserUncheckedCreateWithoutStoreSpendingHistoryUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoreSpendingHistoryUpdateByRelInput
    upsert?: UserUpsertWithoutStoreSpendingHistoryUpdateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutStoreSpendingHistoryUpdateByRelInput, UserUpdateWithoutStoreSpendingHistoryUpdateByRelInput>, UserUncheckedUpdateWithoutStoreSpendingHistoryUpdateByRelInput>
  }

  export type UserCreateNestedOneWithoutStoreSpendingTypeCreateByRelInput = {
    create?: XOR<UserCreateWithoutStoreSpendingTypeCreateByRelInput, UserUncheckedCreateWithoutStoreSpendingTypeCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoreSpendingTypeCreateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutStoreSpendingTypeUpdateByRelInput = {
    create?: XOR<UserCreateWithoutStoreSpendingTypeUpdateByRelInput, UserUncheckedCreateWithoutStoreSpendingTypeUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoreSpendingTypeUpdateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type StoreSpendingCreateNestedManyWithoutStoreSpendingTypeIdRelInput = {
    create?: XOR<StoreSpendingCreateWithoutStoreSpendingTypeIdRelInput, StoreSpendingUncheckedCreateWithoutStoreSpendingTypeIdRelInput> | StoreSpendingCreateWithoutStoreSpendingTypeIdRelInput[] | StoreSpendingUncheckedCreateWithoutStoreSpendingTypeIdRelInput[]
    connectOrCreate?: StoreSpendingCreateOrConnectWithoutStoreSpendingTypeIdRelInput | StoreSpendingCreateOrConnectWithoutStoreSpendingTypeIdRelInput[]
    createMany?: StoreSpendingCreateManyStoreSpendingTypeIdRelInputEnvelope
    connect?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
  }

  export type StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingTypeHistoryIdRelInput = {
    create?: XOR<StoreSpendingHistoryCreateWithoutStoreSpendingTypeHistoryIdRelInput, StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingTypeHistoryIdRelInput> | StoreSpendingHistoryCreateWithoutStoreSpendingTypeHistoryIdRelInput[] | StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingTypeHistoryIdRelInput[]
    connectOrCreate?: StoreSpendingHistoryCreateOrConnectWithoutStoreSpendingTypeHistoryIdRelInput | StoreSpendingHistoryCreateOrConnectWithoutStoreSpendingTypeHistoryIdRelInput[]
    createMany?: StoreSpendingHistoryCreateManyStoreSpendingTypeHistoryIdRelInputEnvelope
    connect?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
  }

  export type StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingTypeIdRelInput = {
    create?: XOR<StoreSpendingCreateWithoutStoreSpendingTypeIdRelInput, StoreSpendingUncheckedCreateWithoutStoreSpendingTypeIdRelInput> | StoreSpendingCreateWithoutStoreSpendingTypeIdRelInput[] | StoreSpendingUncheckedCreateWithoutStoreSpendingTypeIdRelInput[]
    connectOrCreate?: StoreSpendingCreateOrConnectWithoutStoreSpendingTypeIdRelInput | StoreSpendingCreateOrConnectWithoutStoreSpendingTypeIdRelInput[]
    createMany?: StoreSpendingCreateManyStoreSpendingTypeIdRelInputEnvelope
    connect?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
  }

  export type StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingTypeHistoryIdRelInput = {
    create?: XOR<StoreSpendingHistoryCreateWithoutStoreSpendingTypeHistoryIdRelInput, StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingTypeHistoryIdRelInput> | StoreSpendingHistoryCreateWithoutStoreSpendingTypeHistoryIdRelInput[] | StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingTypeHistoryIdRelInput[]
    connectOrCreate?: StoreSpendingHistoryCreateOrConnectWithoutStoreSpendingTypeHistoryIdRelInput | StoreSpendingHistoryCreateOrConnectWithoutStoreSpendingTypeHistoryIdRelInput[]
    createMany?: StoreSpendingHistoryCreateManyStoreSpendingTypeHistoryIdRelInputEnvelope
    connect?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
  }

  export type UserUpdateOneWithoutStoreSpendingTypeCreateByRelNestedInput = {
    create?: XOR<UserCreateWithoutStoreSpendingTypeCreateByRelInput, UserUncheckedCreateWithoutStoreSpendingTypeCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoreSpendingTypeCreateByRelInput
    upsert?: UserUpsertWithoutStoreSpendingTypeCreateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutStoreSpendingTypeCreateByRelInput, UserUpdateWithoutStoreSpendingTypeCreateByRelInput>, UserUncheckedUpdateWithoutStoreSpendingTypeCreateByRelInput>
  }

  export type UserUpdateOneWithoutStoreSpendingTypeUpdateByRelNestedInput = {
    create?: XOR<UserCreateWithoutStoreSpendingTypeUpdateByRelInput, UserUncheckedCreateWithoutStoreSpendingTypeUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoreSpendingTypeUpdateByRelInput
    upsert?: UserUpsertWithoutStoreSpendingTypeUpdateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutStoreSpendingTypeUpdateByRelInput, UserUpdateWithoutStoreSpendingTypeUpdateByRelInput>, UserUncheckedUpdateWithoutStoreSpendingTypeUpdateByRelInput>
  }

  export type StoreSpendingUpdateManyWithoutStoreSpendingTypeIdRelNestedInput = {
    create?: XOR<StoreSpendingCreateWithoutStoreSpendingTypeIdRelInput, StoreSpendingUncheckedCreateWithoutStoreSpendingTypeIdRelInput> | StoreSpendingCreateWithoutStoreSpendingTypeIdRelInput[] | StoreSpendingUncheckedCreateWithoutStoreSpendingTypeIdRelInput[]
    connectOrCreate?: StoreSpendingCreateOrConnectWithoutStoreSpendingTypeIdRelInput | StoreSpendingCreateOrConnectWithoutStoreSpendingTypeIdRelInput[]
    upsert?: StoreSpendingUpsertWithWhereUniqueWithoutStoreSpendingTypeIdRelInput | StoreSpendingUpsertWithWhereUniqueWithoutStoreSpendingTypeIdRelInput[]
    createMany?: StoreSpendingCreateManyStoreSpendingTypeIdRelInputEnvelope
    set?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
    disconnect?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
    delete?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
    connect?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
    update?: StoreSpendingUpdateWithWhereUniqueWithoutStoreSpendingTypeIdRelInput | StoreSpendingUpdateWithWhereUniqueWithoutStoreSpendingTypeIdRelInput[]
    updateMany?: StoreSpendingUpdateManyWithWhereWithoutStoreSpendingTypeIdRelInput | StoreSpendingUpdateManyWithWhereWithoutStoreSpendingTypeIdRelInput[]
    deleteMany?: StoreSpendingScalarWhereInput | StoreSpendingScalarWhereInput[]
  }

  export type StoreSpendingHistoryUpdateManyWithoutStoreSpendingTypeHistoryIdRelNestedInput = {
    create?: XOR<StoreSpendingHistoryCreateWithoutStoreSpendingTypeHistoryIdRelInput, StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingTypeHistoryIdRelInput> | StoreSpendingHistoryCreateWithoutStoreSpendingTypeHistoryIdRelInput[] | StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingTypeHistoryIdRelInput[]
    connectOrCreate?: StoreSpendingHistoryCreateOrConnectWithoutStoreSpendingTypeHistoryIdRelInput | StoreSpendingHistoryCreateOrConnectWithoutStoreSpendingTypeHistoryIdRelInput[]
    upsert?: StoreSpendingHistoryUpsertWithWhereUniqueWithoutStoreSpendingTypeHistoryIdRelInput | StoreSpendingHistoryUpsertWithWhereUniqueWithoutStoreSpendingTypeHistoryIdRelInput[]
    createMany?: StoreSpendingHistoryCreateManyStoreSpendingTypeHistoryIdRelInputEnvelope
    set?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
    disconnect?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
    delete?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
    connect?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
    update?: StoreSpendingHistoryUpdateWithWhereUniqueWithoutStoreSpendingTypeHistoryIdRelInput | StoreSpendingHistoryUpdateWithWhereUniqueWithoutStoreSpendingTypeHistoryIdRelInput[]
    updateMany?: StoreSpendingHistoryUpdateManyWithWhereWithoutStoreSpendingTypeHistoryIdRelInput | StoreSpendingHistoryUpdateManyWithWhereWithoutStoreSpendingTypeHistoryIdRelInput[]
    deleteMany?: StoreSpendingHistoryScalarWhereInput | StoreSpendingHistoryScalarWhereInput[]
  }

  export type StoreSpendingUncheckedUpdateManyWithoutStoreSpendingTypeIdRelNestedInput = {
    create?: XOR<StoreSpendingCreateWithoutStoreSpendingTypeIdRelInput, StoreSpendingUncheckedCreateWithoutStoreSpendingTypeIdRelInput> | StoreSpendingCreateWithoutStoreSpendingTypeIdRelInput[] | StoreSpendingUncheckedCreateWithoutStoreSpendingTypeIdRelInput[]
    connectOrCreate?: StoreSpendingCreateOrConnectWithoutStoreSpendingTypeIdRelInput | StoreSpendingCreateOrConnectWithoutStoreSpendingTypeIdRelInput[]
    upsert?: StoreSpendingUpsertWithWhereUniqueWithoutStoreSpendingTypeIdRelInput | StoreSpendingUpsertWithWhereUniqueWithoutStoreSpendingTypeIdRelInput[]
    createMany?: StoreSpendingCreateManyStoreSpendingTypeIdRelInputEnvelope
    set?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
    disconnect?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
    delete?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
    connect?: StoreSpendingWhereUniqueInput | StoreSpendingWhereUniqueInput[]
    update?: StoreSpendingUpdateWithWhereUniqueWithoutStoreSpendingTypeIdRelInput | StoreSpendingUpdateWithWhereUniqueWithoutStoreSpendingTypeIdRelInput[]
    updateMany?: StoreSpendingUpdateManyWithWhereWithoutStoreSpendingTypeIdRelInput | StoreSpendingUpdateManyWithWhereWithoutStoreSpendingTypeIdRelInput[]
    deleteMany?: StoreSpendingScalarWhereInput | StoreSpendingScalarWhereInput[]
  }

  export type StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingTypeHistoryIdRelNestedInput = {
    create?: XOR<StoreSpendingHistoryCreateWithoutStoreSpendingTypeHistoryIdRelInput, StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingTypeHistoryIdRelInput> | StoreSpendingHistoryCreateWithoutStoreSpendingTypeHistoryIdRelInput[] | StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingTypeHistoryIdRelInput[]
    connectOrCreate?: StoreSpendingHistoryCreateOrConnectWithoutStoreSpendingTypeHistoryIdRelInput | StoreSpendingHistoryCreateOrConnectWithoutStoreSpendingTypeHistoryIdRelInput[]
    upsert?: StoreSpendingHistoryUpsertWithWhereUniqueWithoutStoreSpendingTypeHistoryIdRelInput | StoreSpendingHistoryUpsertWithWhereUniqueWithoutStoreSpendingTypeHistoryIdRelInput[]
    createMany?: StoreSpendingHistoryCreateManyStoreSpendingTypeHistoryIdRelInputEnvelope
    set?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
    disconnect?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
    delete?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
    connect?: StoreSpendingHistoryWhereUniqueInput | StoreSpendingHistoryWhereUniqueInput[]
    update?: StoreSpendingHistoryUpdateWithWhereUniqueWithoutStoreSpendingTypeHistoryIdRelInput | StoreSpendingHistoryUpdateWithWhereUniqueWithoutStoreSpendingTypeHistoryIdRelInput[]
    updateMany?: StoreSpendingHistoryUpdateManyWithWhereWithoutStoreSpendingTypeHistoryIdRelInput | StoreSpendingHistoryUpdateManyWithWhereWithoutStoreSpendingTypeHistoryIdRelInput[]
    deleteMany?: StoreSpendingHistoryScalarWhereInput | StoreSpendingHistoryScalarWhereInput[]
  }

  export type FarmIncomeTypeCreateNestedOneWithoutFarmIncomeTypeIdRelInput = {
    create?: XOR<FarmIncomeTypeCreateWithoutFarmIncomeTypeIdRelInput, FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeIdRelInput>
    connectOrCreate?: FarmIncomeTypeCreateOrConnectWithoutFarmIncomeTypeIdRelInput
    connect?: FarmIncomeTypeWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutFarmIncomeCreateByRelInput = {
    create?: XOR<UserCreateWithoutFarmIncomeCreateByRelInput, UserUncheckedCreateWithoutFarmIncomeCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutFarmIncomeCreateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutFarmIncomeUpdateByRelInput = {
    create?: XOR<UserCreateWithoutFarmIncomeUpdateByRelInput, UserUncheckedCreateWithoutFarmIncomeUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutFarmIncomeUpdateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type FarmIncomeTypeUpdateOneRequiredWithoutFarmIncomeTypeIdRelNestedInput = {
    create?: XOR<FarmIncomeTypeCreateWithoutFarmIncomeTypeIdRelInput, FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeIdRelInput>
    connectOrCreate?: FarmIncomeTypeCreateOrConnectWithoutFarmIncomeTypeIdRelInput
    upsert?: FarmIncomeTypeUpsertWithoutFarmIncomeTypeIdRelInput
    connect?: FarmIncomeTypeWhereUniqueInput
    update?: XOR<XOR<FarmIncomeTypeUpdateToOneWithWhereWithoutFarmIncomeTypeIdRelInput, FarmIncomeTypeUpdateWithoutFarmIncomeTypeIdRelInput>, FarmIncomeTypeUncheckedUpdateWithoutFarmIncomeTypeIdRelInput>
  }

  export type UserUpdateOneWithoutFarmIncomeCreateByRelNestedInput = {
    create?: XOR<UserCreateWithoutFarmIncomeCreateByRelInput, UserUncheckedCreateWithoutFarmIncomeCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutFarmIncomeCreateByRelInput
    upsert?: UserUpsertWithoutFarmIncomeCreateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFarmIncomeCreateByRelInput, UserUpdateWithoutFarmIncomeCreateByRelInput>, UserUncheckedUpdateWithoutFarmIncomeCreateByRelInput>
  }

  export type UserUpdateOneWithoutFarmIncomeUpdateByRelNestedInput = {
    create?: XOR<UserCreateWithoutFarmIncomeUpdateByRelInput, UserUncheckedCreateWithoutFarmIncomeUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutFarmIncomeUpdateByRelInput
    upsert?: UserUpsertWithoutFarmIncomeUpdateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFarmIncomeUpdateByRelInput, UserUpdateWithoutFarmIncomeUpdateByRelInput>, UserUncheckedUpdateWithoutFarmIncomeUpdateByRelInput>
  }

  export type FarmIncomeTypeCreateNestedOneWithoutFarmIncomeTypeHistoryIdRelInput = {
    create?: XOR<FarmIncomeTypeCreateWithoutFarmIncomeTypeHistoryIdRelInput, FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeHistoryIdRelInput>
    connectOrCreate?: FarmIncomeTypeCreateOrConnectWithoutFarmIncomeTypeHistoryIdRelInput
    connect?: FarmIncomeTypeWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutFarmIncomeHistoryCreateByRelInput = {
    create?: XOR<UserCreateWithoutFarmIncomeHistoryCreateByRelInput, UserUncheckedCreateWithoutFarmIncomeHistoryCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutFarmIncomeHistoryCreateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutFarmIncomeHistoryUpdateByRelInput = {
    create?: XOR<UserCreateWithoutFarmIncomeHistoryUpdateByRelInput, UserUncheckedCreateWithoutFarmIncomeHistoryUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutFarmIncomeHistoryUpdateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type FarmIncomeTypeUpdateOneRequiredWithoutFarmIncomeTypeHistoryIdRelNestedInput = {
    create?: XOR<FarmIncomeTypeCreateWithoutFarmIncomeTypeHistoryIdRelInput, FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeHistoryIdRelInput>
    connectOrCreate?: FarmIncomeTypeCreateOrConnectWithoutFarmIncomeTypeHistoryIdRelInput
    upsert?: FarmIncomeTypeUpsertWithoutFarmIncomeTypeHistoryIdRelInput
    connect?: FarmIncomeTypeWhereUniqueInput
    update?: XOR<XOR<FarmIncomeTypeUpdateToOneWithWhereWithoutFarmIncomeTypeHistoryIdRelInput, FarmIncomeTypeUpdateWithoutFarmIncomeTypeHistoryIdRelInput>, FarmIncomeTypeUncheckedUpdateWithoutFarmIncomeTypeHistoryIdRelInput>
  }

  export type UserUpdateOneWithoutFarmIncomeHistoryCreateByRelNestedInput = {
    create?: XOR<UserCreateWithoutFarmIncomeHistoryCreateByRelInput, UserUncheckedCreateWithoutFarmIncomeHistoryCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutFarmIncomeHistoryCreateByRelInput
    upsert?: UserUpsertWithoutFarmIncomeHistoryCreateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFarmIncomeHistoryCreateByRelInput, UserUpdateWithoutFarmIncomeHistoryCreateByRelInput>, UserUncheckedUpdateWithoutFarmIncomeHistoryCreateByRelInput>
  }

  export type UserUpdateOneWithoutFarmIncomeHistoryUpdateByRelNestedInput = {
    create?: XOR<UserCreateWithoutFarmIncomeHistoryUpdateByRelInput, UserUncheckedCreateWithoutFarmIncomeHistoryUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutFarmIncomeHistoryUpdateByRelInput
    upsert?: UserUpsertWithoutFarmIncomeHistoryUpdateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFarmIncomeHistoryUpdateByRelInput, UserUpdateWithoutFarmIncomeHistoryUpdateByRelInput>, UserUncheckedUpdateWithoutFarmIncomeHistoryUpdateByRelInput>
  }

  export type UserCreateNestedOneWithoutFarmIncomeTypeCreateByRelInput = {
    create?: XOR<UserCreateWithoutFarmIncomeTypeCreateByRelInput, UserUncheckedCreateWithoutFarmIncomeTypeCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutFarmIncomeTypeCreateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutFarmIncomeTypeUpdateByRelInput = {
    create?: XOR<UserCreateWithoutFarmIncomeTypeUpdateByRelInput, UserUncheckedCreateWithoutFarmIncomeTypeUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutFarmIncomeTypeUpdateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type FarmIncomeCreateNestedManyWithoutFarmIncomeTypeIdRelInput = {
    create?: XOR<FarmIncomeCreateWithoutFarmIncomeTypeIdRelInput, FarmIncomeUncheckedCreateWithoutFarmIncomeTypeIdRelInput> | FarmIncomeCreateWithoutFarmIncomeTypeIdRelInput[] | FarmIncomeUncheckedCreateWithoutFarmIncomeTypeIdRelInput[]
    connectOrCreate?: FarmIncomeCreateOrConnectWithoutFarmIncomeTypeIdRelInput | FarmIncomeCreateOrConnectWithoutFarmIncomeTypeIdRelInput[]
    createMany?: FarmIncomeCreateManyFarmIncomeTypeIdRelInputEnvelope
    connect?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
  }

  export type FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeTypeHistoryIdRelInput = {
    create?: XOR<FarmIncomeHistoryCreateWithoutFarmIncomeTypeHistoryIdRelInput, FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeTypeHistoryIdRelInput> | FarmIncomeHistoryCreateWithoutFarmIncomeTypeHistoryIdRelInput[] | FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeTypeHistoryIdRelInput[]
    connectOrCreate?: FarmIncomeHistoryCreateOrConnectWithoutFarmIncomeTypeHistoryIdRelInput | FarmIncomeHistoryCreateOrConnectWithoutFarmIncomeTypeHistoryIdRelInput[]
    createMany?: FarmIncomeHistoryCreateManyFarmIncomeTypeHistoryIdRelInputEnvelope
    connect?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
  }

  export type FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeTypeIdRelInput = {
    create?: XOR<FarmIncomeCreateWithoutFarmIncomeTypeIdRelInput, FarmIncomeUncheckedCreateWithoutFarmIncomeTypeIdRelInput> | FarmIncomeCreateWithoutFarmIncomeTypeIdRelInput[] | FarmIncomeUncheckedCreateWithoutFarmIncomeTypeIdRelInput[]
    connectOrCreate?: FarmIncomeCreateOrConnectWithoutFarmIncomeTypeIdRelInput | FarmIncomeCreateOrConnectWithoutFarmIncomeTypeIdRelInput[]
    createMany?: FarmIncomeCreateManyFarmIncomeTypeIdRelInputEnvelope
    connect?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
  }

  export type FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeTypeHistoryIdRelInput = {
    create?: XOR<FarmIncomeHistoryCreateWithoutFarmIncomeTypeHistoryIdRelInput, FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeTypeHistoryIdRelInput> | FarmIncomeHistoryCreateWithoutFarmIncomeTypeHistoryIdRelInput[] | FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeTypeHistoryIdRelInput[]
    connectOrCreate?: FarmIncomeHistoryCreateOrConnectWithoutFarmIncomeTypeHistoryIdRelInput | FarmIncomeHistoryCreateOrConnectWithoutFarmIncomeTypeHistoryIdRelInput[]
    createMany?: FarmIncomeHistoryCreateManyFarmIncomeTypeHistoryIdRelInputEnvelope
    connect?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
  }

  export type UserUpdateOneWithoutFarmIncomeTypeCreateByRelNestedInput = {
    create?: XOR<UserCreateWithoutFarmIncomeTypeCreateByRelInput, UserUncheckedCreateWithoutFarmIncomeTypeCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutFarmIncomeTypeCreateByRelInput
    upsert?: UserUpsertWithoutFarmIncomeTypeCreateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFarmIncomeTypeCreateByRelInput, UserUpdateWithoutFarmIncomeTypeCreateByRelInput>, UserUncheckedUpdateWithoutFarmIncomeTypeCreateByRelInput>
  }

  export type UserUpdateOneWithoutFarmIncomeTypeUpdateByRelNestedInput = {
    create?: XOR<UserCreateWithoutFarmIncomeTypeUpdateByRelInput, UserUncheckedCreateWithoutFarmIncomeTypeUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutFarmIncomeTypeUpdateByRelInput
    upsert?: UserUpsertWithoutFarmIncomeTypeUpdateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFarmIncomeTypeUpdateByRelInput, UserUpdateWithoutFarmIncomeTypeUpdateByRelInput>, UserUncheckedUpdateWithoutFarmIncomeTypeUpdateByRelInput>
  }

  export type FarmIncomeUpdateManyWithoutFarmIncomeTypeIdRelNestedInput = {
    create?: XOR<FarmIncomeCreateWithoutFarmIncomeTypeIdRelInput, FarmIncomeUncheckedCreateWithoutFarmIncomeTypeIdRelInput> | FarmIncomeCreateWithoutFarmIncomeTypeIdRelInput[] | FarmIncomeUncheckedCreateWithoutFarmIncomeTypeIdRelInput[]
    connectOrCreate?: FarmIncomeCreateOrConnectWithoutFarmIncomeTypeIdRelInput | FarmIncomeCreateOrConnectWithoutFarmIncomeTypeIdRelInput[]
    upsert?: FarmIncomeUpsertWithWhereUniqueWithoutFarmIncomeTypeIdRelInput | FarmIncomeUpsertWithWhereUniqueWithoutFarmIncomeTypeIdRelInput[]
    createMany?: FarmIncomeCreateManyFarmIncomeTypeIdRelInputEnvelope
    set?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
    disconnect?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
    delete?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
    connect?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
    update?: FarmIncomeUpdateWithWhereUniqueWithoutFarmIncomeTypeIdRelInput | FarmIncomeUpdateWithWhereUniqueWithoutFarmIncomeTypeIdRelInput[]
    updateMany?: FarmIncomeUpdateManyWithWhereWithoutFarmIncomeTypeIdRelInput | FarmIncomeUpdateManyWithWhereWithoutFarmIncomeTypeIdRelInput[]
    deleteMany?: FarmIncomeScalarWhereInput | FarmIncomeScalarWhereInput[]
  }

  export type FarmIncomeHistoryUpdateManyWithoutFarmIncomeTypeHistoryIdRelNestedInput = {
    create?: XOR<FarmIncomeHistoryCreateWithoutFarmIncomeTypeHistoryIdRelInput, FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeTypeHistoryIdRelInput> | FarmIncomeHistoryCreateWithoutFarmIncomeTypeHistoryIdRelInput[] | FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeTypeHistoryIdRelInput[]
    connectOrCreate?: FarmIncomeHistoryCreateOrConnectWithoutFarmIncomeTypeHistoryIdRelInput | FarmIncomeHistoryCreateOrConnectWithoutFarmIncomeTypeHistoryIdRelInput[]
    upsert?: FarmIncomeHistoryUpsertWithWhereUniqueWithoutFarmIncomeTypeHistoryIdRelInput | FarmIncomeHistoryUpsertWithWhereUniqueWithoutFarmIncomeTypeHistoryIdRelInput[]
    createMany?: FarmIncomeHistoryCreateManyFarmIncomeTypeHistoryIdRelInputEnvelope
    set?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
    disconnect?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
    delete?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
    connect?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
    update?: FarmIncomeHistoryUpdateWithWhereUniqueWithoutFarmIncomeTypeHistoryIdRelInput | FarmIncomeHistoryUpdateWithWhereUniqueWithoutFarmIncomeTypeHistoryIdRelInput[]
    updateMany?: FarmIncomeHistoryUpdateManyWithWhereWithoutFarmIncomeTypeHistoryIdRelInput | FarmIncomeHistoryUpdateManyWithWhereWithoutFarmIncomeTypeHistoryIdRelInput[]
    deleteMany?: FarmIncomeHistoryScalarWhereInput | FarmIncomeHistoryScalarWhereInput[]
  }

  export type FarmIncomeUncheckedUpdateManyWithoutFarmIncomeTypeIdRelNestedInput = {
    create?: XOR<FarmIncomeCreateWithoutFarmIncomeTypeIdRelInput, FarmIncomeUncheckedCreateWithoutFarmIncomeTypeIdRelInput> | FarmIncomeCreateWithoutFarmIncomeTypeIdRelInput[] | FarmIncomeUncheckedCreateWithoutFarmIncomeTypeIdRelInput[]
    connectOrCreate?: FarmIncomeCreateOrConnectWithoutFarmIncomeTypeIdRelInput | FarmIncomeCreateOrConnectWithoutFarmIncomeTypeIdRelInput[]
    upsert?: FarmIncomeUpsertWithWhereUniqueWithoutFarmIncomeTypeIdRelInput | FarmIncomeUpsertWithWhereUniqueWithoutFarmIncomeTypeIdRelInput[]
    createMany?: FarmIncomeCreateManyFarmIncomeTypeIdRelInputEnvelope
    set?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
    disconnect?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
    delete?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
    connect?: FarmIncomeWhereUniqueInput | FarmIncomeWhereUniqueInput[]
    update?: FarmIncomeUpdateWithWhereUniqueWithoutFarmIncomeTypeIdRelInput | FarmIncomeUpdateWithWhereUniqueWithoutFarmIncomeTypeIdRelInput[]
    updateMany?: FarmIncomeUpdateManyWithWhereWithoutFarmIncomeTypeIdRelInput | FarmIncomeUpdateManyWithWhereWithoutFarmIncomeTypeIdRelInput[]
    deleteMany?: FarmIncomeScalarWhereInput | FarmIncomeScalarWhereInput[]
  }

  export type FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeTypeHistoryIdRelNestedInput = {
    create?: XOR<FarmIncomeHistoryCreateWithoutFarmIncomeTypeHistoryIdRelInput, FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeTypeHistoryIdRelInput> | FarmIncomeHistoryCreateWithoutFarmIncomeTypeHistoryIdRelInput[] | FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeTypeHistoryIdRelInput[]
    connectOrCreate?: FarmIncomeHistoryCreateOrConnectWithoutFarmIncomeTypeHistoryIdRelInput | FarmIncomeHistoryCreateOrConnectWithoutFarmIncomeTypeHistoryIdRelInput[]
    upsert?: FarmIncomeHistoryUpsertWithWhereUniqueWithoutFarmIncomeTypeHistoryIdRelInput | FarmIncomeHistoryUpsertWithWhereUniqueWithoutFarmIncomeTypeHistoryIdRelInput[]
    createMany?: FarmIncomeHistoryCreateManyFarmIncomeTypeHistoryIdRelInputEnvelope
    set?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
    disconnect?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
    delete?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
    connect?: FarmIncomeHistoryWhereUniqueInput | FarmIncomeHistoryWhereUniqueInput[]
    update?: FarmIncomeHistoryUpdateWithWhereUniqueWithoutFarmIncomeTypeHistoryIdRelInput | FarmIncomeHistoryUpdateWithWhereUniqueWithoutFarmIncomeTypeHistoryIdRelInput[]
    updateMany?: FarmIncomeHistoryUpdateManyWithWhereWithoutFarmIncomeTypeHistoryIdRelInput | FarmIncomeHistoryUpdateManyWithWhereWithoutFarmIncomeTypeHistoryIdRelInput[]
    deleteMany?: FarmIncomeHistoryScalarWhereInput | FarmIncomeHistoryScalarWhereInput[]
  }

  export type FarmSpendingTypeCreateNestedOneWithoutFarmSpendingTypeIdRelInput = {
    create?: XOR<FarmSpendingTypeCreateWithoutFarmSpendingTypeIdRelInput, FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeIdRelInput>
    connectOrCreate?: FarmSpendingTypeCreateOrConnectWithoutFarmSpendingTypeIdRelInput
    connect?: FarmSpendingTypeWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutFarmSpendingCreateByRelInput = {
    create?: XOR<UserCreateWithoutFarmSpendingCreateByRelInput, UserUncheckedCreateWithoutFarmSpendingCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutFarmSpendingCreateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutFarmSpendingUpdateByRelInput = {
    create?: XOR<UserCreateWithoutFarmSpendingUpdateByRelInput, UserUncheckedCreateWithoutFarmSpendingUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutFarmSpendingUpdateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type FarmSpendingTypeUpdateOneRequiredWithoutFarmSpendingTypeIdRelNestedInput = {
    create?: XOR<FarmSpendingTypeCreateWithoutFarmSpendingTypeIdRelInput, FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeIdRelInput>
    connectOrCreate?: FarmSpendingTypeCreateOrConnectWithoutFarmSpendingTypeIdRelInput
    upsert?: FarmSpendingTypeUpsertWithoutFarmSpendingTypeIdRelInput
    connect?: FarmSpendingTypeWhereUniqueInput
    update?: XOR<XOR<FarmSpendingTypeUpdateToOneWithWhereWithoutFarmSpendingTypeIdRelInput, FarmSpendingTypeUpdateWithoutFarmSpendingTypeIdRelInput>, FarmSpendingTypeUncheckedUpdateWithoutFarmSpendingTypeIdRelInput>
  }

  export type UserUpdateOneWithoutFarmSpendingCreateByRelNestedInput = {
    create?: XOR<UserCreateWithoutFarmSpendingCreateByRelInput, UserUncheckedCreateWithoutFarmSpendingCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutFarmSpendingCreateByRelInput
    upsert?: UserUpsertWithoutFarmSpendingCreateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFarmSpendingCreateByRelInput, UserUpdateWithoutFarmSpendingCreateByRelInput>, UserUncheckedUpdateWithoutFarmSpendingCreateByRelInput>
  }

  export type UserUpdateOneWithoutFarmSpendingUpdateByRelNestedInput = {
    create?: XOR<UserCreateWithoutFarmSpendingUpdateByRelInput, UserUncheckedCreateWithoutFarmSpendingUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutFarmSpendingUpdateByRelInput
    upsert?: UserUpsertWithoutFarmSpendingUpdateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFarmSpendingUpdateByRelInput, UserUpdateWithoutFarmSpendingUpdateByRelInput>, UserUncheckedUpdateWithoutFarmSpendingUpdateByRelInput>
  }

  export type FarmSpendingTypeCreateNestedOneWithoutFarmSpendingTypeHistoryIdRelInput = {
    create?: XOR<FarmSpendingTypeCreateWithoutFarmSpendingTypeHistoryIdRelInput, FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeHistoryIdRelInput>
    connectOrCreate?: FarmSpendingTypeCreateOrConnectWithoutFarmSpendingTypeHistoryIdRelInput
    connect?: FarmSpendingTypeWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutFarmSpendingHistoryCreateByRelInput = {
    create?: XOR<UserCreateWithoutFarmSpendingHistoryCreateByRelInput, UserUncheckedCreateWithoutFarmSpendingHistoryCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutFarmSpendingHistoryCreateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutFarmSpendingHistoryUpdateByRelInput = {
    create?: XOR<UserCreateWithoutFarmSpendingHistoryUpdateByRelInput, UserUncheckedCreateWithoutFarmSpendingHistoryUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutFarmSpendingHistoryUpdateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type FarmSpendingTypeUpdateOneRequiredWithoutFarmSpendingTypeHistoryIdRelNestedInput = {
    create?: XOR<FarmSpendingTypeCreateWithoutFarmSpendingTypeHistoryIdRelInput, FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeHistoryIdRelInput>
    connectOrCreate?: FarmSpendingTypeCreateOrConnectWithoutFarmSpendingTypeHistoryIdRelInput
    upsert?: FarmSpendingTypeUpsertWithoutFarmSpendingTypeHistoryIdRelInput
    connect?: FarmSpendingTypeWhereUniqueInput
    update?: XOR<XOR<FarmSpendingTypeUpdateToOneWithWhereWithoutFarmSpendingTypeHistoryIdRelInput, FarmSpendingTypeUpdateWithoutFarmSpendingTypeHistoryIdRelInput>, FarmSpendingTypeUncheckedUpdateWithoutFarmSpendingTypeHistoryIdRelInput>
  }

  export type UserUpdateOneWithoutFarmSpendingHistoryCreateByRelNestedInput = {
    create?: XOR<UserCreateWithoutFarmSpendingHistoryCreateByRelInput, UserUncheckedCreateWithoutFarmSpendingHistoryCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutFarmSpendingHistoryCreateByRelInput
    upsert?: UserUpsertWithoutFarmSpendingHistoryCreateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFarmSpendingHistoryCreateByRelInput, UserUpdateWithoutFarmSpendingHistoryCreateByRelInput>, UserUncheckedUpdateWithoutFarmSpendingHistoryCreateByRelInput>
  }

  export type UserUpdateOneWithoutFarmSpendingHistoryUpdateByRelNestedInput = {
    create?: XOR<UserCreateWithoutFarmSpendingHistoryUpdateByRelInput, UserUncheckedCreateWithoutFarmSpendingHistoryUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutFarmSpendingHistoryUpdateByRelInput
    upsert?: UserUpsertWithoutFarmSpendingHistoryUpdateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFarmSpendingHistoryUpdateByRelInput, UserUpdateWithoutFarmSpendingHistoryUpdateByRelInput>, UserUncheckedUpdateWithoutFarmSpendingHistoryUpdateByRelInput>
  }

  export type UserCreateNestedOneWithoutFarmSpendingTypeCreateByRelInput = {
    create?: XOR<UserCreateWithoutFarmSpendingTypeCreateByRelInput, UserUncheckedCreateWithoutFarmSpendingTypeCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutFarmSpendingTypeCreateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutFarmSpendingTypeUpdateByRelInput = {
    create?: XOR<UserCreateWithoutFarmSpendingTypeUpdateByRelInput, UserUncheckedCreateWithoutFarmSpendingTypeUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutFarmSpendingTypeUpdateByRelInput
    connect?: UserWhereUniqueInput
  }

  export type FarmSpendingCreateNestedManyWithoutFarmSpendingTypeIdRelInput = {
    create?: XOR<FarmSpendingCreateWithoutFarmSpendingTypeIdRelInput, FarmSpendingUncheckedCreateWithoutFarmSpendingTypeIdRelInput> | FarmSpendingCreateWithoutFarmSpendingTypeIdRelInput[] | FarmSpendingUncheckedCreateWithoutFarmSpendingTypeIdRelInput[]
    connectOrCreate?: FarmSpendingCreateOrConnectWithoutFarmSpendingTypeIdRelInput | FarmSpendingCreateOrConnectWithoutFarmSpendingTypeIdRelInput[]
    createMany?: FarmSpendingCreateManyFarmSpendingTypeIdRelInputEnvelope
    connect?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
  }

  export type FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingTypeHistoryIdRelInput = {
    create?: XOR<FarmSpendingHistoryCreateWithoutFarmSpendingTypeHistoryIdRelInput, FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingTypeHistoryIdRelInput> | FarmSpendingHistoryCreateWithoutFarmSpendingTypeHistoryIdRelInput[] | FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingTypeHistoryIdRelInput[]
    connectOrCreate?: FarmSpendingHistoryCreateOrConnectWithoutFarmSpendingTypeHistoryIdRelInput | FarmSpendingHistoryCreateOrConnectWithoutFarmSpendingTypeHistoryIdRelInput[]
    createMany?: FarmSpendingHistoryCreateManyFarmSpendingTypeHistoryIdRelInputEnvelope
    connect?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
  }

  export type FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingTypeIdRelInput = {
    create?: XOR<FarmSpendingCreateWithoutFarmSpendingTypeIdRelInput, FarmSpendingUncheckedCreateWithoutFarmSpendingTypeIdRelInput> | FarmSpendingCreateWithoutFarmSpendingTypeIdRelInput[] | FarmSpendingUncheckedCreateWithoutFarmSpendingTypeIdRelInput[]
    connectOrCreate?: FarmSpendingCreateOrConnectWithoutFarmSpendingTypeIdRelInput | FarmSpendingCreateOrConnectWithoutFarmSpendingTypeIdRelInput[]
    createMany?: FarmSpendingCreateManyFarmSpendingTypeIdRelInputEnvelope
    connect?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
  }

  export type FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingTypeHistoryIdRelInput = {
    create?: XOR<FarmSpendingHistoryCreateWithoutFarmSpendingTypeHistoryIdRelInput, FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingTypeHistoryIdRelInput> | FarmSpendingHistoryCreateWithoutFarmSpendingTypeHistoryIdRelInput[] | FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingTypeHistoryIdRelInput[]
    connectOrCreate?: FarmSpendingHistoryCreateOrConnectWithoutFarmSpendingTypeHistoryIdRelInput | FarmSpendingHistoryCreateOrConnectWithoutFarmSpendingTypeHistoryIdRelInput[]
    createMany?: FarmSpendingHistoryCreateManyFarmSpendingTypeHistoryIdRelInputEnvelope
    connect?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
  }

  export type UserUpdateOneWithoutFarmSpendingTypeCreateByRelNestedInput = {
    create?: XOR<UserCreateWithoutFarmSpendingTypeCreateByRelInput, UserUncheckedCreateWithoutFarmSpendingTypeCreateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutFarmSpendingTypeCreateByRelInput
    upsert?: UserUpsertWithoutFarmSpendingTypeCreateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFarmSpendingTypeCreateByRelInput, UserUpdateWithoutFarmSpendingTypeCreateByRelInput>, UserUncheckedUpdateWithoutFarmSpendingTypeCreateByRelInput>
  }

  export type UserUpdateOneWithoutFarmSpendingTypeUpdateByRelNestedInput = {
    create?: XOR<UserCreateWithoutFarmSpendingTypeUpdateByRelInput, UserUncheckedCreateWithoutFarmSpendingTypeUpdateByRelInput>
    connectOrCreate?: UserCreateOrConnectWithoutFarmSpendingTypeUpdateByRelInput
    upsert?: UserUpsertWithoutFarmSpendingTypeUpdateByRelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFarmSpendingTypeUpdateByRelInput, UserUpdateWithoutFarmSpendingTypeUpdateByRelInput>, UserUncheckedUpdateWithoutFarmSpendingTypeUpdateByRelInput>
  }

  export type FarmSpendingUpdateManyWithoutFarmSpendingTypeIdRelNestedInput = {
    create?: XOR<FarmSpendingCreateWithoutFarmSpendingTypeIdRelInput, FarmSpendingUncheckedCreateWithoutFarmSpendingTypeIdRelInput> | FarmSpendingCreateWithoutFarmSpendingTypeIdRelInput[] | FarmSpendingUncheckedCreateWithoutFarmSpendingTypeIdRelInput[]
    connectOrCreate?: FarmSpendingCreateOrConnectWithoutFarmSpendingTypeIdRelInput | FarmSpendingCreateOrConnectWithoutFarmSpendingTypeIdRelInput[]
    upsert?: FarmSpendingUpsertWithWhereUniqueWithoutFarmSpendingTypeIdRelInput | FarmSpendingUpsertWithWhereUniqueWithoutFarmSpendingTypeIdRelInput[]
    createMany?: FarmSpendingCreateManyFarmSpendingTypeIdRelInputEnvelope
    set?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
    disconnect?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
    delete?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
    connect?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
    update?: FarmSpendingUpdateWithWhereUniqueWithoutFarmSpendingTypeIdRelInput | FarmSpendingUpdateWithWhereUniqueWithoutFarmSpendingTypeIdRelInput[]
    updateMany?: FarmSpendingUpdateManyWithWhereWithoutFarmSpendingTypeIdRelInput | FarmSpendingUpdateManyWithWhereWithoutFarmSpendingTypeIdRelInput[]
    deleteMany?: FarmSpendingScalarWhereInput | FarmSpendingScalarWhereInput[]
  }

  export type FarmSpendingHistoryUpdateManyWithoutFarmSpendingTypeHistoryIdRelNestedInput = {
    create?: XOR<FarmSpendingHistoryCreateWithoutFarmSpendingTypeHistoryIdRelInput, FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingTypeHistoryIdRelInput> | FarmSpendingHistoryCreateWithoutFarmSpendingTypeHistoryIdRelInput[] | FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingTypeHistoryIdRelInput[]
    connectOrCreate?: FarmSpendingHistoryCreateOrConnectWithoutFarmSpendingTypeHistoryIdRelInput | FarmSpendingHistoryCreateOrConnectWithoutFarmSpendingTypeHistoryIdRelInput[]
    upsert?: FarmSpendingHistoryUpsertWithWhereUniqueWithoutFarmSpendingTypeHistoryIdRelInput | FarmSpendingHistoryUpsertWithWhereUniqueWithoutFarmSpendingTypeHistoryIdRelInput[]
    createMany?: FarmSpendingHistoryCreateManyFarmSpendingTypeHistoryIdRelInputEnvelope
    set?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
    disconnect?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
    delete?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
    connect?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
    update?: FarmSpendingHistoryUpdateWithWhereUniqueWithoutFarmSpendingTypeHistoryIdRelInput | FarmSpendingHistoryUpdateWithWhereUniqueWithoutFarmSpendingTypeHistoryIdRelInput[]
    updateMany?: FarmSpendingHistoryUpdateManyWithWhereWithoutFarmSpendingTypeHistoryIdRelInput | FarmSpendingHistoryUpdateManyWithWhereWithoutFarmSpendingTypeHistoryIdRelInput[]
    deleteMany?: FarmSpendingHistoryScalarWhereInput | FarmSpendingHistoryScalarWhereInput[]
  }

  export type FarmSpendingUncheckedUpdateManyWithoutFarmSpendingTypeIdRelNestedInput = {
    create?: XOR<FarmSpendingCreateWithoutFarmSpendingTypeIdRelInput, FarmSpendingUncheckedCreateWithoutFarmSpendingTypeIdRelInput> | FarmSpendingCreateWithoutFarmSpendingTypeIdRelInput[] | FarmSpendingUncheckedCreateWithoutFarmSpendingTypeIdRelInput[]
    connectOrCreate?: FarmSpendingCreateOrConnectWithoutFarmSpendingTypeIdRelInput | FarmSpendingCreateOrConnectWithoutFarmSpendingTypeIdRelInput[]
    upsert?: FarmSpendingUpsertWithWhereUniqueWithoutFarmSpendingTypeIdRelInput | FarmSpendingUpsertWithWhereUniqueWithoutFarmSpendingTypeIdRelInput[]
    createMany?: FarmSpendingCreateManyFarmSpendingTypeIdRelInputEnvelope
    set?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
    disconnect?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
    delete?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
    connect?: FarmSpendingWhereUniqueInput | FarmSpendingWhereUniqueInput[]
    update?: FarmSpendingUpdateWithWhereUniqueWithoutFarmSpendingTypeIdRelInput | FarmSpendingUpdateWithWhereUniqueWithoutFarmSpendingTypeIdRelInput[]
    updateMany?: FarmSpendingUpdateManyWithWhereWithoutFarmSpendingTypeIdRelInput | FarmSpendingUpdateManyWithWhereWithoutFarmSpendingTypeIdRelInput[]
    deleteMany?: FarmSpendingScalarWhereInput | FarmSpendingScalarWhereInput[]
  }

  export type FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingTypeHistoryIdRelNestedInput = {
    create?: XOR<FarmSpendingHistoryCreateWithoutFarmSpendingTypeHistoryIdRelInput, FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingTypeHistoryIdRelInput> | FarmSpendingHistoryCreateWithoutFarmSpendingTypeHistoryIdRelInput[] | FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingTypeHistoryIdRelInput[]
    connectOrCreate?: FarmSpendingHistoryCreateOrConnectWithoutFarmSpendingTypeHistoryIdRelInput | FarmSpendingHistoryCreateOrConnectWithoutFarmSpendingTypeHistoryIdRelInput[]
    upsert?: FarmSpendingHistoryUpsertWithWhereUniqueWithoutFarmSpendingTypeHistoryIdRelInput | FarmSpendingHistoryUpsertWithWhereUniqueWithoutFarmSpendingTypeHistoryIdRelInput[]
    createMany?: FarmSpendingHistoryCreateManyFarmSpendingTypeHistoryIdRelInputEnvelope
    set?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
    disconnect?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
    delete?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
    connect?: FarmSpendingHistoryWhereUniqueInput | FarmSpendingHistoryWhereUniqueInput[]
    update?: FarmSpendingHistoryUpdateWithWhereUniqueWithoutFarmSpendingTypeHistoryIdRelInput | FarmSpendingHistoryUpdateWithWhereUniqueWithoutFarmSpendingTypeHistoryIdRelInput[]
    updateMany?: FarmSpendingHistoryUpdateManyWithWhereWithoutFarmSpendingTypeHistoryIdRelInput | FarmSpendingHistoryUpdateManyWithWhereWithoutFarmSpendingTypeHistoryIdRelInput[]
    deleteMany?: FarmSpendingHistoryScalarWhereInput | FarmSpendingHistoryScalarWhereInput[]
  }

  export type NestedBigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedEnumRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleFilter<$PrismaModel> | $Enums.Role
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedBigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedEnumRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleFilter<$PrismaModel>
    _max?: NestedEnumRoleFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedBigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }
  export type NestedJsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type UserCreateWithoutSelfCreatedByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutSelfCreatedByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutSelfCreatedByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSelfCreatedByRelInput, UserUncheckedCreateWithoutSelfCreatedByRelInput>
  }

  export type UserCreateWithoutCreatedByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutCreatedByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutCreatedByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedByRelInput, UserUncheckedCreateWithoutCreatedByRelInput>
  }

  export type UserCreateManyCreatedByRelInputEnvelope = {
    data: UserCreateManyCreatedByRelInput | UserCreateManyCreatedByRelInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutSelfUpdatedByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutSelfUpdatedByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutSelfUpdatedByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSelfUpdatedByRelInput, UserUncheckedCreateWithoutSelfUpdatedByRelInput>
  }

  export type UserCreateWithoutUpdatedByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutUpdatedByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutUpdatedByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdatedByRelInput, UserUncheckedCreateWithoutUpdatedByRelInput>
  }

  export type UserCreateManyUpdatedByRelInputEnvelope = {
    data: UserCreateManyUpdatedByRelInput | UserCreateManyUpdatedByRelInput[]
    skipDuplicates?: boolean
  }

  export type ChurchIncomeCreateWithoutChurchIncomeCreateByRelInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    churchIncomeTypeIdRel: ChurchIncomeTypeCreateNestedOneWithoutChurchIncomeTypeIdRelInput
    churchIncomeUpdateByRel?: UserCreateNestedOneWithoutChurchIncomeUpdateByRelInput
  }

  export type ChurchIncomeUncheckedCreateWithoutChurchIncomeCreateByRelInput = {
    id?: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchIncomeCreateOrConnectWithoutChurchIncomeCreateByRelInput = {
    where: ChurchIncomeWhereUniqueInput
    create: XOR<ChurchIncomeCreateWithoutChurchIncomeCreateByRelInput, ChurchIncomeUncheckedCreateWithoutChurchIncomeCreateByRelInput>
  }

  export type ChurchIncomeCreateManyChurchIncomeCreateByRelInputEnvelope = {
    data: ChurchIncomeCreateManyChurchIncomeCreateByRelInput | ChurchIncomeCreateManyChurchIncomeCreateByRelInput[]
    skipDuplicates?: boolean
  }

  export type ChurchIncomeCreateWithoutChurchIncomeUpdateByRelInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    churchIncomeTypeIdRel: ChurchIncomeTypeCreateNestedOneWithoutChurchIncomeTypeIdRelInput
    churchIncomeCreateByRel?: UserCreateNestedOneWithoutChurchIncomeCreateByRelInput
  }

  export type ChurchIncomeUncheckedCreateWithoutChurchIncomeUpdateByRelInput = {
    id?: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type ChurchIncomeCreateOrConnectWithoutChurchIncomeUpdateByRelInput = {
    where: ChurchIncomeWhereUniqueInput
    create: XOR<ChurchIncomeCreateWithoutChurchIncomeUpdateByRelInput, ChurchIncomeUncheckedCreateWithoutChurchIncomeUpdateByRelInput>
  }

  export type ChurchIncomeCreateManyChurchIncomeUpdateByRelInputEnvelope = {
    data: ChurchIncomeCreateManyChurchIncomeUpdateByRelInput | ChurchIncomeCreateManyChurchIncomeUpdateByRelInput[]
    skipDuplicates?: boolean
  }

  export type ChurchIncomeTypeCreateWithoutChurchIncomeTypeCreateByRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    churchIncomeTypeUpdateByRel?: UserCreateNestedOneWithoutChurchIncomeTypeUpdateByRelInput
    churchIncomeTypeIdRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeTypeIdRelInput
    churchIncomeTypeHistoryIdRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeTypeHistoryIdRelInput
  }

  export type ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeCreateByRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    churchIncomeTypeIdRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeTypeIdRelInput
    churchIncomeTypeHistoryIdRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeTypeHistoryIdRelInput
  }

  export type ChurchIncomeTypeCreateOrConnectWithoutChurchIncomeTypeCreateByRelInput = {
    where: ChurchIncomeTypeWhereUniqueInput
    create: XOR<ChurchIncomeTypeCreateWithoutChurchIncomeTypeCreateByRelInput, ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeCreateByRelInput>
  }

  export type ChurchIncomeTypeCreateManyChurchIncomeTypeCreateByRelInputEnvelope = {
    data: ChurchIncomeTypeCreateManyChurchIncomeTypeCreateByRelInput | ChurchIncomeTypeCreateManyChurchIncomeTypeCreateByRelInput[]
    skipDuplicates?: boolean
  }

  export type ChurchIncomeTypeCreateWithoutChurchIncomeTypeUpdateByRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    churchIncomeTypeCreateByRel?: UserCreateNestedOneWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeIdRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeTypeIdRelInput
    churchIncomeTypeHistoryIdRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeTypeHistoryIdRelInput
  }

  export type ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeUpdateByRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    churchIncomeTypeIdRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeTypeIdRelInput
    churchIncomeTypeHistoryIdRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeTypeHistoryIdRelInput
  }

  export type ChurchIncomeTypeCreateOrConnectWithoutChurchIncomeTypeUpdateByRelInput = {
    where: ChurchIncomeTypeWhereUniqueInput
    create: XOR<ChurchIncomeTypeCreateWithoutChurchIncomeTypeUpdateByRelInput, ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeUpdateByRelInput>
  }

  export type ChurchIncomeTypeCreateManyChurchIncomeTypeUpdateByRelInputEnvelope = {
    data: ChurchIncomeTypeCreateManyChurchIncomeTypeUpdateByRelInput | ChurchIncomeTypeCreateManyChurchIncomeTypeUpdateByRelInput[]
    skipDuplicates?: boolean
  }

  export type ChurchSpendingCreateWithoutChurchSpendingCreateByRelInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    bill?: string | null
    billNumber?: string | null
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    churchSpendingTypeIdRel: ChurchSpendingTypeCreateNestedOneWithoutChurchSpendingTypeIdRelInput
    churchSpendingUpdateByRel?: UserCreateNestedOneWithoutChurchSpendingUpdateByRelInput
  }

  export type ChurchSpendingUncheckedCreateWithoutChurchSpendingCreateByRelInput = {
    id?: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    bill?: string | null
    billNumber?: string | null
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchSpendingCreateOrConnectWithoutChurchSpendingCreateByRelInput = {
    where: ChurchSpendingWhereUniqueInput
    create: XOR<ChurchSpendingCreateWithoutChurchSpendingCreateByRelInput, ChurchSpendingUncheckedCreateWithoutChurchSpendingCreateByRelInput>
  }

  export type ChurchSpendingCreateManyChurchSpendingCreateByRelInputEnvelope = {
    data: ChurchSpendingCreateManyChurchSpendingCreateByRelInput | ChurchSpendingCreateManyChurchSpendingCreateByRelInput[]
    skipDuplicates?: boolean
  }

  export type ChurchSpendingCreateWithoutChurchSpendingUpdateByRelInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    bill?: string | null
    billNumber?: string | null
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    churchSpendingTypeIdRel: ChurchSpendingTypeCreateNestedOneWithoutChurchSpendingTypeIdRelInput
    churchSpendingCreateByRel?: UserCreateNestedOneWithoutChurchSpendingCreateByRelInput
  }

  export type ChurchSpendingUncheckedCreateWithoutChurchSpendingUpdateByRelInput = {
    id?: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    bill?: string | null
    billNumber?: string | null
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type ChurchSpendingCreateOrConnectWithoutChurchSpendingUpdateByRelInput = {
    where: ChurchSpendingWhereUniqueInput
    create: XOR<ChurchSpendingCreateWithoutChurchSpendingUpdateByRelInput, ChurchSpendingUncheckedCreateWithoutChurchSpendingUpdateByRelInput>
  }

  export type ChurchSpendingCreateManyChurchSpendingUpdateByRelInputEnvelope = {
    data: ChurchSpendingCreateManyChurchSpendingUpdateByRelInput | ChurchSpendingCreateManyChurchSpendingUpdateByRelInput[]
    skipDuplicates?: boolean
  }

  export type ChurchSpendingTypeCreateWithoutChurchSpendingTypeCreateByRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    createAt?: Date | string
    deleted?: boolean
    updatedAt?: Date | string
    churchSpendingTypeUpdateByRel?: UserCreateNestedOneWithoutChurchSpendingTypeUpdateByRelInput
    churchSpendingTypeIdRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingTypeIdRelInput
    churchSpendingTypeHistoryIdRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingTypeHistoryIdRelInput
  }

  export type ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeCreateByRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    createAt?: Date | string
    deleted?: boolean
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    churchSpendingTypeIdRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingTypeIdRelInput
    churchSpendingTypeHistoryIdRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingTypeHistoryIdRelInput
  }

  export type ChurchSpendingTypeCreateOrConnectWithoutChurchSpendingTypeCreateByRelInput = {
    where: ChurchSpendingTypeWhereUniqueInput
    create: XOR<ChurchSpendingTypeCreateWithoutChurchSpendingTypeCreateByRelInput, ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeCreateByRelInput>
  }

  export type ChurchSpendingTypeCreateManyChurchSpendingTypeCreateByRelInputEnvelope = {
    data: ChurchSpendingTypeCreateManyChurchSpendingTypeCreateByRelInput | ChurchSpendingTypeCreateManyChurchSpendingTypeCreateByRelInput[]
    skipDuplicates?: boolean
  }

  export type ChurchSpendingTypeCreateWithoutChurchSpendingTypeUpdateByRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    createAt?: Date | string
    deleted?: boolean
    updatedAt?: Date | string
    churchSpendingTypeCreateByRel?: UserCreateNestedOneWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeIdRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingTypeIdRelInput
    churchSpendingTypeHistoryIdRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingTypeHistoryIdRelInput
  }

  export type ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeUpdateByRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    createAt?: Date | string
    createBy?: bigint | number | null
    deleted?: boolean
    updatedAt?: Date | string
    churchSpendingTypeIdRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingTypeIdRelInput
    churchSpendingTypeHistoryIdRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingTypeHistoryIdRelInput
  }

  export type ChurchSpendingTypeCreateOrConnectWithoutChurchSpendingTypeUpdateByRelInput = {
    where: ChurchSpendingTypeWhereUniqueInput
    create: XOR<ChurchSpendingTypeCreateWithoutChurchSpendingTypeUpdateByRelInput, ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeUpdateByRelInput>
  }

  export type ChurchSpendingTypeCreateManyChurchSpendingTypeUpdateByRelInputEnvelope = {
    data: ChurchSpendingTypeCreateManyChurchSpendingTypeUpdateByRelInput | ChurchSpendingTypeCreateManyChurchSpendingTypeUpdateByRelInput[]
    skipDuplicates?: boolean
  }

  export type StoreIncomeCreateWithoutStoreIncomeCreateByRelInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    storeIncomeTypeIdRel: StoreIncomeTypeCreateNestedOneWithoutStoreIncomeTypeIdRelInput
    storeIncomeUpdateByRel?: UserCreateNestedOneWithoutStoreIncomeUpdateByRelInput
  }

  export type StoreIncomeUncheckedCreateWithoutStoreIncomeCreateByRelInput = {
    id?: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreIncomeCreateOrConnectWithoutStoreIncomeCreateByRelInput = {
    where: StoreIncomeWhereUniqueInput
    create: XOR<StoreIncomeCreateWithoutStoreIncomeCreateByRelInput, StoreIncomeUncheckedCreateWithoutStoreIncomeCreateByRelInput>
  }

  export type StoreIncomeCreateManyStoreIncomeCreateByRelInputEnvelope = {
    data: StoreIncomeCreateManyStoreIncomeCreateByRelInput | StoreIncomeCreateManyStoreIncomeCreateByRelInput[]
    skipDuplicates?: boolean
  }

  export type StoreIncomeCreateWithoutStoreIncomeUpdateByRelInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    storeIncomeTypeIdRel: StoreIncomeTypeCreateNestedOneWithoutStoreIncomeTypeIdRelInput
    storeIncomeCreateByRel?: UserCreateNestedOneWithoutStoreIncomeCreateByRelInput
  }

  export type StoreIncomeUncheckedCreateWithoutStoreIncomeUpdateByRelInput = {
    id?: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type StoreIncomeCreateOrConnectWithoutStoreIncomeUpdateByRelInput = {
    where: StoreIncomeWhereUniqueInput
    create: XOR<StoreIncomeCreateWithoutStoreIncomeUpdateByRelInput, StoreIncomeUncheckedCreateWithoutStoreIncomeUpdateByRelInput>
  }

  export type StoreIncomeCreateManyStoreIncomeUpdateByRelInputEnvelope = {
    data: StoreIncomeCreateManyStoreIncomeUpdateByRelInput | StoreIncomeCreateManyStoreIncomeUpdateByRelInput[]
    skipDuplicates?: boolean
  }

  export type StoreIncomeTypeCreateWithoutStoreIncomeTypeCreateByRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    storeIncomeTypeUpdateByRel?: UserCreateNestedOneWithoutStoreIncomeTypeUpdateByRelInput
    storeIncomeTypeIdRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeTypeIdRelInput
    storeIncomeTypeHistoryIdRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeTypeHistoryIdRelInput
  }

  export type StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeCreateByRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    storeIncomeTypeIdRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeTypeIdRelInput
    storeIncomeTypeHistoryIdRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeTypeHistoryIdRelInput
  }

  export type StoreIncomeTypeCreateOrConnectWithoutStoreIncomeTypeCreateByRelInput = {
    where: StoreIncomeTypeWhereUniqueInput
    create: XOR<StoreIncomeTypeCreateWithoutStoreIncomeTypeCreateByRelInput, StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeCreateByRelInput>
  }

  export type StoreIncomeTypeCreateManyStoreIncomeTypeCreateByRelInputEnvelope = {
    data: StoreIncomeTypeCreateManyStoreIncomeTypeCreateByRelInput | StoreIncomeTypeCreateManyStoreIncomeTypeCreateByRelInput[]
    skipDuplicates?: boolean
  }

  export type StoreIncomeTypeCreateWithoutStoreIncomeTypeUpdateByRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    storeIncomeTypeCreateByRel?: UserCreateNestedOneWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeIdRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeTypeIdRelInput
    storeIncomeTypeHistoryIdRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeTypeHistoryIdRelInput
  }

  export type StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeUpdateByRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    storeIncomeTypeIdRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeTypeIdRelInput
    storeIncomeTypeHistoryIdRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeTypeHistoryIdRelInput
  }

  export type StoreIncomeTypeCreateOrConnectWithoutStoreIncomeTypeUpdateByRelInput = {
    where: StoreIncomeTypeWhereUniqueInput
    create: XOR<StoreIncomeTypeCreateWithoutStoreIncomeTypeUpdateByRelInput, StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeUpdateByRelInput>
  }

  export type StoreIncomeTypeCreateManyStoreIncomeTypeUpdateByRelInputEnvelope = {
    data: StoreIncomeTypeCreateManyStoreIncomeTypeUpdateByRelInput | StoreIncomeTypeCreateManyStoreIncomeTypeUpdateByRelInput[]
    skipDuplicates?: boolean
  }

  export type StoreSpendingCreateWithoutStoreSpendingCreateByRelInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    storeSpendingTypeIdRel: StoreSpendingTypeCreateNestedOneWithoutStoreSpendingTypeIdRelInput
    storeSpendingUpdateByRel?: UserCreateNestedOneWithoutStoreSpendingUpdateByRelInput
  }

  export type StoreSpendingUncheckedCreateWithoutStoreSpendingCreateByRelInput = {
    id?: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreSpendingCreateOrConnectWithoutStoreSpendingCreateByRelInput = {
    where: StoreSpendingWhereUniqueInput
    create: XOR<StoreSpendingCreateWithoutStoreSpendingCreateByRelInput, StoreSpendingUncheckedCreateWithoutStoreSpendingCreateByRelInput>
  }

  export type StoreSpendingCreateManyStoreSpendingCreateByRelInputEnvelope = {
    data: StoreSpendingCreateManyStoreSpendingCreateByRelInput | StoreSpendingCreateManyStoreSpendingCreateByRelInput[]
    skipDuplicates?: boolean
  }

  export type StoreSpendingCreateWithoutStoreSpendingUpdateByRelInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    storeSpendingTypeIdRel: StoreSpendingTypeCreateNestedOneWithoutStoreSpendingTypeIdRelInput
    storeSpendingCreateByRel?: UserCreateNestedOneWithoutStoreSpendingCreateByRelInput
  }

  export type StoreSpendingUncheckedCreateWithoutStoreSpendingUpdateByRelInput = {
    id?: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type StoreSpendingCreateOrConnectWithoutStoreSpendingUpdateByRelInput = {
    where: StoreSpendingWhereUniqueInput
    create: XOR<StoreSpendingCreateWithoutStoreSpendingUpdateByRelInput, StoreSpendingUncheckedCreateWithoutStoreSpendingUpdateByRelInput>
  }

  export type StoreSpendingCreateManyStoreSpendingUpdateByRelInputEnvelope = {
    data: StoreSpendingCreateManyStoreSpendingUpdateByRelInput | StoreSpendingCreateManyStoreSpendingUpdateByRelInput[]
    skipDuplicates?: boolean
  }

  export type StoreSpendingTypeCreateWithoutStoreSpendingTypeCreateByRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    storeSpendingTypeUpdateByRel?: UserCreateNestedOneWithoutStoreSpendingTypeUpdateByRelInput
    storeSpendingTypeIdRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingTypeIdRelInput
    storeSpendingTypeHistoryIdRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingTypeHistoryIdRelInput
  }

  export type StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeCreateByRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    storeSpendingTypeIdRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingTypeIdRelInput
    storeSpendingTypeHistoryIdRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingTypeHistoryIdRelInput
  }

  export type StoreSpendingTypeCreateOrConnectWithoutStoreSpendingTypeCreateByRelInput = {
    where: StoreSpendingTypeWhereUniqueInput
    create: XOR<StoreSpendingTypeCreateWithoutStoreSpendingTypeCreateByRelInput, StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeCreateByRelInput>
  }

  export type StoreSpendingTypeCreateManyStoreSpendingTypeCreateByRelInputEnvelope = {
    data: StoreSpendingTypeCreateManyStoreSpendingTypeCreateByRelInput | StoreSpendingTypeCreateManyStoreSpendingTypeCreateByRelInput[]
    skipDuplicates?: boolean
  }

  export type StoreSpendingTypeCreateWithoutStoreSpendingTypeUpdateByRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    storeSpendingTypeCreateByRel?: UserCreateNestedOneWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeIdRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingTypeIdRelInput
    storeSpendingTypeHistoryIdRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingTypeHistoryIdRelInput
  }

  export type StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeUpdateByRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    storeSpendingTypeIdRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingTypeIdRelInput
    storeSpendingTypeHistoryIdRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingTypeHistoryIdRelInput
  }

  export type StoreSpendingTypeCreateOrConnectWithoutStoreSpendingTypeUpdateByRelInput = {
    where: StoreSpendingTypeWhereUniqueInput
    create: XOR<StoreSpendingTypeCreateWithoutStoreSpendingTypeUpdateByRelInput, StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeUpdateByRelInput>
  }

  export type StoreSpendingTypeCreateManyStoreSpendingTypeUpdateByRelInputEnvelope = {
    data: StoreSpendingTypeCreateManyStoreSpendingTypeUpdateByRelInput | StoreSpendingTypeCreateManyStoreSpendingTypeUpdateByRelInput[]
    skipDuplicates?: boolean
  }

  export type FarmIncomeCreateWithoutFarmIncomeCreateByRelInput = {
    id?: bigint | number
    detail?: string | null
    amount?: bigint | number
    price: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    farmIncomeTypeIdRel: FarmIncomeTypeCreateNestedOneWithoutFarmIncomeTypeIdRelInput
    farmIncomeUpdateByRel?: UserCreateNestedOneWithoutFarmIncomeUpdateByRelInput
  }

  export type FarmIncomeUncheckedCreateWithoutFarmIncomeCreateByRelInput = {
    id?: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    amount?: bigint | number
    price: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmIncomeCreateOrConnectWithoutFarmIncomeCreateByRelInput = {
    where: FarmIncomeWhereUniqueInput
    create: XOR<FarmIncomeCreateWithoutFarmIncomeCreateByRelInput, FarmIncomeUncheckedCreateWithoutFarmIncomeCreateByRelInput>
  }

  export type FarmIncomeCreateManyFarmIncomeCreateByRelInputEnvelope = {
    data: FarmIncomeCreateManyFarmIncomeCreateByRelInput | FarmIncomeCreateManyFarmIncomeCreateByRelInput[]
    skipDuplicates?: boolean
  }

  export type FarmIncomeCreateWithoutFarmIncomeUpdateByRelInput = {
    id?: bigint | number
    detail?: string | null
    amount?: bigint | number
    price: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    farmIncomeTypeIdRel: FarmIncomeTypeCreateNestedOneWithoutFarmIncomeTypeIdRelInput
    farmIncomeCreateByRel?: UserCreateNestedOneWithoutFarmIncomeCreateByRelInput
  }

  export type FarmIncomeUncheckedCreateWithoutFarmIncomeUpdateByRelInput = {
    id?: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    amount?: bigint | number
    price: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type FarmIncomeCreateOrConnectWithoutFarmIncomeUpdateByRelInput = {
    where: FarmIncomeWhereUniqueInput
    create: XOR<FarmIncomeCreateWithoutFarmIncomeUpdateByRelInput, FarmIncomeUncheckedCreateWithoutFarmIncomeUpdateByRelInput>
  }

  export type FarmIncomeCreateManyFarmIncomeUpdateByRelInputEnvelope = {
    data: FarmIncomeCreateManyFarmIncomeUpdateByRelInput | FarmIncomeCreateManyFarmIncomeUpdateByRelInput[]
    skipDuplicates?: boolean
  }

  export type FarmIncomeTypeCreateWithoutFarmIncomeTypeCreateByRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    farmIncomeTypeUpdateByRel?: UserCreateNestedOneWithoutFarmIncomeTypeUpdateByRelInput
    farmIncomeTypeIdRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeTypeIdRelInput
    farmIncomeTypeHistoryIdRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeTypeHistoryIdRelInput
  }

  export type FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeCreateByRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    farmIncomeTypeIdRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeTypeIdRelInput
    farmIncomeTypeHistoryIdRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeTypeHistoryIdRelInput
  }

  export type FarmIncomeTypeCreateOrConnectWithoutFarmIncomeTypeCreateByRelInput = {
    where: FarmIncomeTypeWhereUniqueInput
    create: XOR<FarmIncomeTypeCreateWithoutFarmIncomeTypeCreateByRelInput, FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeCreateByRelInput>
  }

  export type FarmIncomeTypeCreateManyFarmIncomeTypeCreateByRelInputEnvelope = {
    data: FarmIncomeTypeCreateManyFarmIncomeTypeCreateByRelInput | FarmIncomeTypeCreateManyFarmIncomeTypeCreateByRelInput[]
    skipDuplicates?: boolean
  }

  export type FarmIncomeTypeCreateWithoutFarmIncomeTypeUpdateByRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    farmIncomeTypeCreateByRel?: UserCreateNestedOneWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeIdRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeTypeIdRelInput
    farmIncomeTypeHistoryIdRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeTypeHistoryIdRelInput
  }

  export type FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeUpdateByRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    farmIncomeTypeIdRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeTypeIdRelInput
    farmIncomeTypeHistoryIdRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeTypeHistoryIdRelInput
  }

  export type FarmIncomeTypeCreateOrConnectWithoutFarmIncomeTypeUpdateByRelInput = {
    where: FarmIncomeTypeWhereUniqueInput
    create: XOR<FarmIncomeTypeCreateWithoutFarmIncomeTypeUpdateByRelInput, FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeUpdateByRelInput>
  }

  export type FarmIncomeTypeCreateManyFarmIncomeTypeUpdateByRelInputEnvelope = {
    data: FarmIncomeTypeCreateManyFarmIncomeTypeUpdateByRelInput | FarmIncomeTypeCreateManyFarmIncomeTypeUpdateByRelInput[]
    skipDuplicates?: boolean
  }

  export type FarmSpendingCreateWithoutFarmSpendingCreateByRelInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    farmSpendingTypeIdRel: FarmSpendingTypeCreateNestedOneWithoutFarmSpendingTypeIdRelInput
    farmSpendingUpdateByRel?: UserCreateNestedOneWithoutFarmSpendingUpdateByRelInput
  }

  export type FarmSpendingUncheckedCreateWithoutFarmSpendingCreateByRelInput = {
    id?: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmSpendingCreateOrConnectWithoutFarmSpendingCreateByRelInput = {
    where: FarmSpendingWhereUniqueInput
    create: XOR<FarmSpendingCreateWithoutFarmSpendingCreateByRelInput, FarmSpendingUncheckedCreateWithoutFarmSpendingCreateByRelInput>
  }

  export type FarmSpendingCreateManyFarmSpendingCreateByRelInputEnvelope = {
    data: FarmSpendingCreateManyFarmSpendingCreateByRelInput | FarmSpendingCreateManyFarmSpendingCreateByRelInput[]
    skipDuplicates?: boolean
  }

  export type FarmSpendingCreateWithoutFarmSpendingUpdateByRelInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    farmSpendingTypeIdRel: FarmSpendingTypeCreateNestedOneWithoutFarmSpendingTypeIdRelInput
    farmSpendingCreateByRel?: UserCreateNestedOneWithoutFarmSpendingCreateByRelInput
  }

  export type FarmSpendingUncheckedCreateWithoutFarmSpendingUpdateByRelInput = {
    id?: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type FarmSpendingCreateOrConnectWithoutFarmSpendingUpdateByRelInput = {
    where: FarmSpendingWhereUniqueInput
    create: XOR<FarmSpendingCreateWithoutFarmSpendingUpdateByRelInput, FarmSpendingUncheckedCreateWithoutFarmSpendingUpdateByRelInput>
  }

  export type FarmSpendingCreateManyFarmSpendingUpdateByRelInputEnvelope = {
    data: FarmSpendingCreateManyFarmSpendingUpdateByRelInput | FarmSpendingCreateManyFarmSpendingUpdateByRelInput[]
    skipDuplicates?: boolean
  }

  export type FarmSpendingTypeCreateWithoutFarmSpendingTypeCreateByRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    farmSpendingTypeUpdateByRel?: UserCreateNestedOneWithoutFarmSpendingTypeUpdateByRelInput
    farmSpendingTypeIdRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingTypeIdRelInput
    farmSpendingTypeHistoryIdRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingTypeHistoryIdRelInput
  }

  export type FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeCreateByRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    farmSpendingTypeIdRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingTypeIdRelInput
    farmSpendingTypeHistoryIdRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingTypeHistoryIdRelInput
  }

  export type FarmSpendingTypeCreateOrConnectWithoutFarmSpendingTypeCreateByRelInput = {
    where: FarmSpendingTypeWhereUniqueInput
    create: XOR<FarmSpendingTypeCreateWithoutFarmSpendingTypeCreateByRelInput, FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeCreateByRelInput>
  }

  export type FarmSpendingTypeCreateManyFarmSpendingTypeCreateByRelInputEnvelope = {
    data: FarmSpendingTypeCreateManyFarmSpendingTypeCreateByRelInput | FarmSpendingTypeCreateManyFarmSpendingTypeCreateByRelInput[]
    skipDuplicates?: boolean
  }

  export type FarmSpendingTypeCreateWithoutFarmSpendingTypeUpdateByRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    farmSpendingTypeCreateByRel?: UserCreateNestedOneWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeIdRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingTypeIdRelInput
    farmSpendingTypeHistoryIdRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingTypeHistoryIdRelInput
  }

  export type FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeUpdateByRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    farmSpendingTypeIdRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingTypeIdRelInput
    farmSpendingTypeHistoryIdRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingTypeHistoryIdRelInput
  }

  export type FarmSpendingTypeCreateOrConnectWithoutFarmSpendingTypeUpdateByRelInput = {
    where: FarmSpendingTypeWhereUniqueInput
    create: XOR<FarmSpendingTypeCreateWithoutFarmSpendingTypeUpdateByRelInput, FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeUpdateByRelInput>
  }

  export type FarmSpendingTypeCreateManyFarmSpendingTypeUpdateByRelInputEnvelope = {
    data: FarmSpendingTypeCreateManyFarmSpendingTypeUpdateByRelInput | FarmSpendingTypeCreateManyFarmSpendingTypeUpdateByRelInput[]
    skipDuplicates?: boolean
  }

  export type UserHistoryCreateWithoutUserHistoryCreatedByRelInput = {
    id?: bigint | number
    createdAt?: Date | string
    updatedAt?: Date | string
    deleted?: boolean
    oldData: JsonNullValueInput | InputJsonValue
    newData: JsonNullValueInput | InputJsonValue
    userHistoryUpdatedByRel?: UserCreateNestedOneWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel: UserCreateNestedOneWithoutUserHistoryIdRelInput
  }

  export type UserHistoryUncheckedCreateWithoutUserHistoryCreatedByRelInput = {
    id?: bigint | number
    userId: bigint | number
    createdAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    deleted?: boolean
    oldData: JsonNullValueInput | InputJsonValue
    newData: JsonNullValueInput | InputJsonValue
  }

  export type UserHistoryCreateOrConnectWithoutUserHistoryCreatedByRelInput = {
    where: UserHistoryWhereUniqueInput
    create: XOR<UserHistoryCreateWithoutUserHistoryCreatedByRelInput, UserHistoryUncheckedCreateWithoutUserHistoryCreatedByRelInput>
  }

  export type UserHistoryCreateManyUserHistoryCreatedByRelInputEnvelope = {
    data: UserHistoryCreateManyUserHistoryCreatedByRelInput | UserHistoryCreateManyUserHistoryCreatedByRelInput[]
    skipDuplicates?: boolean
  }

  export type UserHistoryCreateWithoutUserHistoryUpdatedByRelInput = {
    id?: bigint | number
    createdAt?: Date | string
    updatedAt?: Date | string
    deleted?: boolean
    oldData: JsonNullValueInput | InputJsonValue
    newData: JsonNullValueInput | InputJsonValue
    userHistoryCreatedByRel?: UserCreateNestedOneWithoutUserHistoryCreatedByRelInput
    userHistoryIdRel: UserCreateNestedOneWithoutUserHistoryIdRelInput
  }

  export type UserHistoryUncheckedCreateWithoutUserHistoryUpdatedByRelInput = {
    id?: bigint | number
    userId: bigint | number
    createdAt?: Date | string
    createdBy?: bigint | number | null
    updatedAt?: Date | string
    deleted?: boolean
    oldData: JsonNullValueInput | InputJsonValue
    newData: JsonNullValueInput | InputJsonValue
  }

  export type UserHistoryCreateOrConnectWithoutUserHistoryUpdatedByRelInput = {
    where: UserHistoryWhereUniqueInput
    create: XOR<UserHistoryCreateWithoutUserHistoryUpdatedByRelInput, UserHistoryUncheckedCreateWithoutUserHistoryUpdatedByRelInput>
  }

  export type UserHistoryCreateManyUserHistoryUpdatedByRelInputEnvelope = {
    data: UserHistoryCreateManyUserHistoryUpdatedByRelInput | UserHistoryCreateManyUserHistoryUpdatedByRelInput[]
    skipDuplicates?: boolean
  }

  export type UserHistoryCreateWithoutUserHistoryIdRelInput = {
    id?: bigint | number
    createdAt?: Date | string
    updatedAt?: Date | string
    deleted?: boolean
    oldData: JsonNullValueInput | InputJsonValue
    newData: JsonNullValueInput | InputJsonValue
    userHistoryCreatedByRel?: UserCreateNestedOneWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserCreateNestedOneWithoutUserHistoryUpdatedByRelInput
  }

  export type UserHistoryUncheckedCreateWithoutUserHistoryIdRelInput = {
    id?: bigint | number
    createdAt?: Date | string
    createdBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    deleted?: boolean
    oldData: JsonNullValueInput | InputJsonValue
    newData: JsonNullValueInput | InputJsonValue
  }

  export type UserHistoryCreateOrConnectWithoutUserHistoryIdRelInput = {
    where: UserHistoryWhereUniqueInput
    create: XOR<UserHistoryCreateWithoutUserHistoryIdRelInput, UserHistoryUncheckedCreateWithoutUserHistoryIdRelInput>
  }

  export type UserHistoryCreateManyUserHistoryIdRelInputEnvelope = {
    data: UserHistoryCreateManyUserHistoryIdRelInput | UserHistoryCreateManyUserHistoryIdRelInput[]
    skipDuplicates?: boolean
  }

  export type ChurchIncomeHistoryCreateWithoutChurchIncomeHistoryCreateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    churchIncomeTypeHistoryIdRel: ChurchIncomeTypeCreateNestedOneWithoutChurchIncomeTypeHistoryIdRelInput
    churchIncomeHistoryUpdateByRel?: UserCreateNestedOneWithoutChurchIncomeHistoryUpdateByRelInput
  }

  export type ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeHistoryCreateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchIncomeHistoryCreateOrConnectWithoutChurchIncomeHistoryCreateByRelInput = {
    where: ChurchIncomeHistoryWhereUniqueInput
    create: XOR<ChurchIncomeHistoryCreateWithoutChurchIncomeHistoryCreateByRelInput, ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeHistoryCreateByRelInput>
  }

  export type ChurchIncomeHistoryCreateManyChurchIncomeHistoryCreateByRelInputEnvelope = {
    data: ChurchIncomeHistoryCreateManyChurchIncomeHistoryCreateByRelInput | ChurchIncomeHistoryCreateManyChurchIncomeHistoryCreateByRelInput[]
    skipDuplicates?: boolean
  }

  export type ChurchIncomeHistoryCreateWithoutChurchIncomeHistoryUpdateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    churchIncomeTypeHistoryIdRel: ChurchIncomeTypeCreateNestedOneWithoutChurchIncomeTypeHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: UserCreateNestedOneWithoutChurchIncomeHistoryCreateByRelInput
  }

  export type ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeHistoryUpdateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type ChurchIncomeHistoryCreateOrConnectWithoutChurchIncomeHistoryUpdateByRelInput = {
    where: ChurchIncomeHistoryWhereUniqueInput
    create: XOR<ChurchIncomeHistoryCreateWithoutChurchIncomeHistoryUpdateByRelInput, ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeHistoryUpdateByRelInput>
  }

  export type ChurchIncomeHistoryCreateManyChurchIncomeHistoryUpdateByRelInputEnvelope = {
    data: ChurchIncomeHistoryCreateManyChurchIncomeHistoryUpdateByRelInput | ChurchIncomeHistoryCreateManyChurchIncomeHistoryUpdateByRelInput[]
    skipDuplicates?: boolean
  }

  export type ChurchSpendingHistoryCreateWithoutChurchSpendingHistoryCreateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    bill: string
    billNumber: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    churchSpendingTypeHistoryIdRel: ChurchSpendingTypeCreateNestedOneWithoutChurchSpendingTypeHistoryIdRelInput
    churchSpendingHistoryUpdateByRel?: UserCreateNestedOneWithoutChurchSpendingHistoryUpdateByRelInput
  }

  export type ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingHistoryCreateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    bill: string
    billNumber: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchSpendingHistoryCreateOrConnectWithoutChurchSpendingHistoryCreateByRelInput = {
    where: ChurchSpendingHistoryWhereUniqueInput
    create: XOR<ChurchSpendingHistoryCreateWithoutChurchSpendingHistoryCreateByRelInput, ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingHistoryCreateByRelInput>
  }

  export type ChurchSpendingHistoryCreateManyChurchSpendingHistoryCreateByRelInputEnvelope = {
    data: ChurchSpendingHistoryCreateManyChurchSpendingHistoryCreateByRelInput | ChurchSpendingHistoryCreateManyChurchSpendingHistoryCreateByRelInput[]
    skipDuplicates?: boolean
  }

  export type ChurchSpendingHistoryCreateWithoutChurchSpendingHistoryUpdateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    bill: string
    billNumber: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    churchSpendingTypeHistoryIdRel: ChurchSpendingTypeCreateNestedOneWithoutChurchSpendingTypeHistoryIdRelInput
    churchSpendingHistoryCreateByRel?: UserCreateNestedOneWithoutChurchSpendingHistoryCreateByRelInput
  }

  export type ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingHistoryUpdateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    bill: string
    billNumber: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type ChurchSpendingHistoryCreateOrConnectWithoutChurchSpendingHistoryUpdateByRelInput = {
    where: ChurchSpendingHistoryWhereUniqueInput
    create: XOR<ChurchSpendingHistoryCreateWithoutChurchSpendingHistoryUpdateByRelInput, ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingHistoryUpdateByRelInput>
  }

  export type ChurchSpendingHistoryCreateManyChurchSpendingHistoryUpdateByRelInputEnvelope = {
    data: ChurchSpendingHistoryCreateManyChurchSpendingHistoryUpdateByRelInput | ChurchSpendingHistoryCreateManyChurchSpendingHistoryUpdateByRelInput[]
    skipDuplicates?: boolean
  }

  export type StoreIncomeHistoryCreateWithoutStoreIncomeHistoryCreateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    storeIncomeTypeHistoryIdRel: StoreIncomeTypeCreateNestedOneWithoutStoreIncomeTypeHistoryIdRelInput
    storeIncomeHistoryUpdateByRel?: UserCreateNestedOneWithoutStoreIncomeHistoryUpdateByRelInput
  }

  export type StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeHistoryCreateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreIncomeHistoryCreateOrConnectWithoutStoreIncomeHistoryCreateByRelInput = {
    where: StoreIncomeHistoryWhereUniqueInput
    create: XOR<StoreIncomeHistoryCreateWithoutStoreIncomeHistoryCreateByRelInput, StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeHistoryCreateByRelInput>
  }

  export type StoreIncomeHistoryCreateManyStoreIncomeHistoryCreateByRelInputEnvelope = {
    data: StoreIncomeHistoryCreateManyStoreIncomeHistoryCreateByRelInput | StoreIncomeHistoryCreateManyStoreIncomeHistoryCreateByRelInput[]
    skipDuplicates?: boolean
  }

  export type StoreIncomeHistoryCreateWithoutStoreIncomeHistoryUpdateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    storeIncomeTypeHistoryIdRel: StoreIncomeTypeCreateNestedOneWithoutStoreIncomeTypeHistoryIdRelInput
    storeIncomeHistoryCreateByRel?: UserCreateNestedOneWithoutStoreIncomeHistoryCreateByRelInput
  }

  export type StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeHistoryUpdateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type StoreIncomeHistoryCreateOrConnectWithoutStoreIncomeHistoryUpdateByRelInput = {
    where: StoreIncomeHistoryWhereUniqueInput
    create: XOR<StoreIncomeHistoryCreateWithoutStoreIncomeHistoryUpdateByRelInput, StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeHistoryUpdateByRelInput>
  }

  export type StoreIncomeHistoryCreateManyStoreIncomeHistoryUpdateByRelInputEnvelope = {
    data: StoreIncomeHistoryCreateManyStoreIncomeHistoryUpdateByRelInput | StoreIncomeHistoryCreateManyStoreIncomeHistoryUpdateByRelInput[]
    skipDuplicates?: boolean
  }

  export type StoreSpendingHistoryCreateWithoutStoreSpendingHistoryCreateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    storeSpendingTypeHistoryIdRel: StoreSpendingTypeCreateNestedOneWithoutStoreSpendingTypeHistoryIdRelInput
    storeSpendingHistoryUpdateByRel?: UserCreateNestedOneWithoutStoreSpendingHistoryUpdateByRelInput
  }

  export type StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingHistoryCreateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreSpendingHistoryCreateOrConnectWithoutStoreSpendingHistoryCreateByRelInput = {
    where: StoreSpendingHistoryWhereUniqueInput
    create: XOR<StoreSpendingHistoryCreateWithoutStoreSpendingHistoryCreateByRelInput, StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingHistoryCreateByRelInput>
  }

  export type StoreSpendingHistoryCreateManyStoreSpendingHistoryCreateByRelInputEnvelope = {
    data: StoreSpendingHistoryCreateManyStoreSpendingHistoryCreateByRelInput | StoreSpendingHistoryCreateManyStoreSpendingHistoryCreateByRelInput[]
    skipDuplicates?: boolean
  }

  export type StoreSpendingHistoryCreateWithoutStoreSpendingHistoryUpdateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    storeSpendingTypeHistoryIdRel: StoreSpendingTypeCreateNestedOneWithoutStoreSpendingTypeHistoryIdRelInput
    storeSpendingHistoryCreateByRel?: UserCreateNestedOneWithoutStoreSpendingHistoryCreateByRelInput
  }

  export type StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingHistoryUpdateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type StoreSpendingHistoryCreateOrConnectWithoutStoreSpendingHistoryUpdateByRelInput = {
    where: StoreSpendingHistoryWhereUniqueInput
    create: XOR<StoreSpendingHistoryCreateWithoutStoreSpendingHistoryUpdateByRelInput, StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingHistoryUpdateByRelInput>
  }

  export type StoreSpendingHistoryCreateManyStoreSpendingHistoryUpdateByRelInputEnvelope = {
    data: StoreSpendingHistoryCreateManyStoreSpendingHistoryUpdateByRelInput | StoreSpendingHistoryCreateManyStoreSpendingHistoryUpdateByRelInput[]
    skipDuplicates?: boolean
  }

  export type FarmIncomeHistoryCreateWithoutFarmIncomeHistoryCreateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    amount?: bigint | number
    price: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    farmIncomeTypeHistoryIdRel: FarmIncomeTypeCreateNestedOneWithoutFarmIncomeTypeHistoryIdRelInput
    farmIncomeHistoryUpdateByRel?: UserCreateNestedOneWithoutFarmIncomeHistoryUpdateByRelInput
  }

  export type FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeHistoryCreateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    amount?: bigint | number
    price: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmIncomeHistoryCreateOrConnectWithoutFarmIncomeHistoryCreateByRelInput = {
    where: FarmIncomeHistoryWhereUniqueInput
    create: XOR<FarmIncomeHistoryCreateWithoutFarmIncomeHistoryCreateByRelInput, FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeHistoryCreateByRelInput>
  }

  export type FarmIncomeHistoryCreateManyFarmIncomeHistoryCreateByRelInputEnvelope = {
    data: FarmIncomeHistoryCreateManyFarmIncomeHistoryCreateByRelInput | FarmIncomeHistoryCreateManyFarmIncomeHistoryCreateByRelInput[]
    skipDuplicates?: boolean
  }

  export type FarmIncomeHistoryCreateWithoutFarmIncomeHistoryUpdateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    amount?: bigint | number
    price: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    farmIncomeTypeHistoryIdRel: FarmIncomeTypeCreateNestedOneWithoutFarmIncomeTypeHistoryIdRelInput
    farmIncomeHistoryCreateByRel?: UserCreateNestedOneWithoutFarmIncomeHistoryCreateByRelInput
  }

  export type FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeHistoryUpdateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    amount?: bigint | number
    price: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type FarmIncomeHistoryCreateOrConnectWithoutFarmIncomeHistoryUpdateByRelInput = {
    where: FarmIncomeHistoryWhereUniqueInput
    create: XOR<FarmIncomeHistoryCreateWithoutFarmIncomeHistoryUpdateByRelInput, FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeHistoryUpdateByRelInput>
  }

  export type FarmIncomeHistoryCreateManyFarmIncomeHistoryUpdateByRelInputEnvelope = {
    data: FarmIncomeHistoryCreateManyFarmIncomeHistoryUpdateByRelInput | FarmIncomeHistoryCreateManyFarmIncomeHistoryUpdateByRelInput[]
    skipDuplicates?: boolean
  }

  export type FarmSpendingHistoryCreateWithoutFarmSpendingHistoryCreateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    farmSpendingTypeHistoryIdRel: FarmSpendingTypeCreateNestedOneWithoutFarmSpendingTypeHistoryIdRelInput
    farmSpendingHistoryUpdateByRel?: UserCreateNestedOneWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingHistoryCreateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmSpendingHistoryCreateOrConnectWithoutFarmSpendingHistoryCreateByRelInput = {
    where: FarmSpendingHistoryWhereUniqueInput
    create: XOR<FarmSpendingHistoryCreateWithoutFarmSpendingHistoryCreateByRelInput, FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingHistoryCreateByRelInput>
  }

  export type FarmSpendingHistoryCreateManyFarmSpendingHistoryCreateByRelInputEnvelope = {
    data: FarmSpendingHistoryCreateManyFarmSpendingHistoryCreateByRelInput | FarmSpendingHistoryCreateManyFarmSpendingHistoryCreateByRelInput[]
    skipDuplicates?: boolean
  }

  export type FarmSpendingHistoryCreateWithoutFarmSpendingHistoryUpdateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    farmSpendingTypeHistoryIdRel: FarmSpendingTypeCreateNestedOneWithoutFarmSpendingTypeHistoryIdRelInput
    farmSpendingHistoryCreateByRel?: UserCreateNestedOneWithoutFarmSpendingHistoryCreateByRelInput
  }

  export type FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingHistoryUpdateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type FarmSpendingHistoryCreateOrConnectWithoutFarmSpendingHistoryUpdateByRelInput = {
    where: FarmSpendingHistoryWhereUniqueInput
    create: XOR<FarmSpendingHistoryCreateWithoutFarmSpendingHistoryUpdateByRelInput, FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingHistoryUpdateByRelInput>
  }

  export type FarmSpendingHistoryCreateManyFarmSpendingHistoryUpdateByRelInputEnvelope = {
    data: FarmSpendingHistoryCreateManyFarmSpendingHistoryUpdateByRelInput | FarmSpendingHistoryCreateManyFarmSpendingHistoryUpdateByRelInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutSelfCreatedByRelInput = {
    update: XOR<UserUpdateWithoutSelfCreatedByRelInput, UserUncheckedUpdateWithoutSelfCreatedByRelInput>
    create: XOR<UserCreateWithoutSelfCreatedByRelInput, UserUncheckedCreateWithoutSelfCreatedByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSelfCreatedByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSelfCreatedByRelInput, UserUncheckedUpdateWithoutSelfCreatedByRelInput>
  }

  export type UserUpdateWithoutSelfCreatedByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutSelfCreatedByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutCreatedByRelInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutCreatedByRelInput, UserUncheckedUpdateWithoutCreatedByRelInput>
    create: XOR<UserCreateWithoutCreatedByRelInput, UserUncheckedCreateWithoutCreatedByRelInput>
  }

  export type UserUpdateWithWhereUniqueWithoutCreatedByRelInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutCreatedByRelInput, UserUncheckedUpdateWithoutCreatedByRelInput>
  }

  export type UserUpdateManyWithWhereWithoutCreatedByRelInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutCreatedByRelInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: BigIntFilter<"User"> | bigint | number
    userName?: StringFilter<"User"> | string
    fullName?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    phoneNumber?: StringFilter<"User"> | string
    address?: StringFilter<"User"> | string
    role?: EnumRoleFilter<"User"> | $Enums.Role
    deleted?: BoolFilter<"User"> | boolean
    createAt?: DateTimeFilter<"User"> | Date | string
    createBy?: BigIntNullableFilter<"User"> | bigint | number | null
    updatedAt?: DateTimeFilter<"User"> | Date | string
    updatedBy?: BigIntNullableFilter<"User"> | bigint | number | null
  }

  export type UserUpsertWithoutSelfUpdatedByRelInput = {
    update: XOR<UserUpdateWithoutSelfUpdatedByRelInput, UserUncheckedUpdateWithoutSelfUpdatedByRelInput>
    create: XOR<UserCreateWithoutSelfUpdatedByRelInput, UserUncheckedCreateWithoutSelfUpdatedByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSelfUpdatedByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSelfUpdatedByRelInput, UserUncheckedUpdateWithoutSelfUpdatedByRelInput>
  }

  export type UserUpdateWithoutSelfUpdatedByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutSelfUpdatedByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutUpdatedByRelInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutUpdatedByRelInput, UserUncheckedUpdateWithoutUpdatedByRelInput>
    create: XOR<UserCreateWithoutUpdatedByRelInput, UserUncheckedCreateWithoutUpdatedByRelInput>
  }

  export type UserUpdateWithWhereUniqueWithoutUpdatedByRelInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutUpdatedByRelInput, UserUncheckedUpdateWithoutUpdatedByRelInput>
  }

  export type UserUpdateManyWithWhereWithoutUpdatedByRelInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutUpdatedByRelInput>
  }

  export type ChurchIncomeUpsertWithWhereUniqueWithoutChurchIncomeCreateByRelInput = {
    where: ChurchIncomeWhereUniqueInput
    update: XOR<ChurchIncomeUpdateWithoutChurchIncomeCreateByRelInput, ChurchIncomeUncheckedUpdateWithoutChurchIncomeCreateByRelInput>
    create: XOR<ChurchIncomeCreateWithoutChurchIncomeCreateByRelInput, ChurchIncomeUncheckedCreateWithoutChurchIncomeCreateByRelInput>
  }

  export type ChurchIncomeUpdateWithWhereUniqueWithoutChurchIncomeCreateByRelInput = {
    where: ChurchIncomeWhereUniqueInput
    data: XOR<ChurchIncomeUpdateWithoutChurchIncomeCreateByRelInput, ChurchIncomeUncheckedUpdateWithoutChurchIncomeCreateByRelInput>
  }

  export type ChurchIncomeUpdateManyWithWhereWithoutChurchIncomeCreateByRelInput = {
    where: ChurchIncomeScalarWhereInput
    data: XOR<ChurchIncomeUpdateManyMutationInput, ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelInput>
  }

  export type ChurchIncomeScalarWhereInput = {
    AND?: ChurchIncomeScalarWhereInput | ChurchIncomeScalarWhereInput[]
    OR?: ChurchIncomeScalarWhereInput[]
    NOT?: ChurchIncomeScalarWhereInput | ChurchIncomeScalarWhereInput[]
    id?: BigIntFilter<"ChurchIncome"> | bigint | number
    incomeTypeId?: BigIntFilter<"ChurchIncome"> | bigint | number
    detail?: StringNullableFilter<"ChurchIncome"> | string | null
    funds?: BigIntFilter<"ChurchIncome"> | bigint | number
    date?: DateTimeFilter<"ChurchIncome"> | Date | string
    deleted?: BoolFilter<"ChurchIncome"> | boolean
    createAt?: DateTimeFilter<"ChurchIncome"> | Date | string
    createBy?: BigIntNullableFilter<"ChurchIncome"> | bigint | number | null
    updatedAt?: DateTimeFilter<"ChurchIncome"> | Date | string
    updatedBy?: BigIntNullableFilter<"ChurchIncome"> | bigint | number | null
  }

  export type ChurchIncomeUpsertWithWhereUniqueWithoutChurchIncomeUpdateByRelInput = {
    where: ChurchIncomeWhereUniqueInput
    update: XOR<ChurchIncomeUpdateWithoutChurchIncomeUpdateByRelInput, ChurchIncomeUncheckedUpdateWithoutChurchIncomeUpdateByRelInput>
    create: XOR<ChurchIncomeCreateWithoutChurchIncomeUpdateByRelInput, ChurchIncomeUncheckedCreateWithoutChurchIncomeUpdateByRelInput>
  }

  export type ChurchIncomeUpdateWithWhereUniqueWithoutChurchIncomeUpdateByRelInput = {
    where: ChurchIncomeWhereUniqueInput
    data: XOR<ChurchIncomeUpdateWithoutChurchIncomeUpdateByRelInput, ChurchIncomeUncheckedUpdateWithoutChurchIncomeUpdateByRelInput>
  }

  export type ChurchIncomeUpdateManyWithWhereWithoutChurchIncomeUpdateByRelInput = {
    where: ChurchIncomeScalarWhereInput
    data: XOR<ChurchIncomeUpdateManyMutationInput, ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelInput>
  }

  export type ChurchIncomeTypeUpsertWithWhereUniqueWithoutChurchIncomeTypeCreateByRelInput = {
    where: ChurchIncomeTypeWhereUniqueInput
    update: XOR<ChurchIncomeTypeUpdateWithoutChurchIncomeTypeCreateByRelInput, ChurchIncomeTypeUncheckedUpdateWithoutChurchIncomeTypeCreateByRelInput>
    create: XOR<ChurchIncomeTypeCreateWithoutChurchIncomeTypeCreateByRelInput, ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeCreateByRelInput>
  }

  export type ChurchIncomeTypeUpdateWithWhereUniqueWithoutChurchIncomeTypeCreateByRelInput = {
    where: ChurchIncomeTypeWhereUniqueInput
    data: XOR<ChurchIncomeTypeUpdateWithoutChurchIncomeTypeCreateByRelInput, ChurchIncomeTypeUncheckedUpdateWithoutChurchIncomeTypeCreateByRelInput>
  }

  export type ChurchIncomeTypeUpdateManyWithWhereWithoutChurchIncomeTypeCreateByRelInput = {
    where: ChurchIncomeTypeScalarWhereInput
    data: XOR<ChurchIncomeTypeUpdateManyMutationInput, ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelInput>
  }

  export type ChurchIncomeTypeScalarWhereInput = {
    AND?: ChurchIncomeTypeScalarWhereInput | ChurchIncomeTypeScalarWhereInput[]
    OR?: ChurchIncomeTypeScalarWhereInput[]
    NOT?: ChurchIncomeTypeScalarWhereInput | ChurchIncomeTypeScalarWhereInput[]
    id?: BigIntFilter<"ChurchIncomeType"> | bigint | number
    incomeTypeName?: StringFilter<"ChurchIncomeType"> | string
    code?: StringFilter<"ChurchIncomeType"> | string
    description?: StringFilter<"ChurchIncomeType"> | string
    deleted?: BoolFilter<"ChurchIncomeType"> | boolean
    createAt?: DateTimeFilter<"ChurchIncomeType"> | Date | string
    createBy?: BigIntNullableFilter<"ChurchIncomeType"> | bigint | number | null
    updatedAt?: DateTimeFilter<"ChurchIncomeType"> | Date | string
    updatedBy?: BigIntNullableFilter<"ChurchIncomeType"> | bigint | number | null
  }

  export type ChurchIncomeTypeUpsertWithWhereUniqueWithoutChurchIncomeTypeUpdateByRelInput = {
    where: ChurchIncomeTypeWhereUniqueInput
    update: XOR<ChurchIncomeTypeUpdateWithoutChurchIncomeTypeUpdateByRelInput, ChurchIncomeTypeUncheckedUpdateWithoutChurchIncomeTypeUpdateByRelInput>
    create: XOR<ChurchIncomeTypeCreateWithoutChurchIncomeTypeUpdateByRelInput, ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeUpdateByRelInput>
  }

  export type ChurchIncomeTypeUpdateWithWhereUniqueWithoutChurchIncomeTypeUpdateByRelInput = {
    where: ChurchIncomeTypeWhereUniqueInput
    data: XOR<ChurchIncomeTypeUpdateWithoutChurchIncomeTypeUpdateByRelInput, ChurchIncomeTypeUncheckedUpdateWithoutChurchIncomeTypeUpdateByRelInput>
  }

  export type ChurchIncomeTypeUpdateManyWithWhereWithoutChurchIncomeTypeUpdateByRelInput = {
    where: ChurchIncomeTypeScalarWhereInput
    data: XOR<ChurchIncomeTypeUpdateManyMutationInput, ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelInput>
  }

  export type ChurchSpendingUpsertWithWhereUniqueWithoutChurchSpendingCreateByRelInput = {
    where: ChurchSpendingWhereUniqueInput
    update: XOR<ChurchSpendingUpdateWithoutChurchSpendingCreateByRelInput, ChurchSpendingUncheckedUpdateWithoutChurchSpendingCreateByRelInput>
    create: XOR<ChurchSpendingCreateWithoutChurchSpendingCreateByRelInput, ChurchSpendingUncheckedCreateWithoutChurchSpendingCreateByRelInput>
  }

  export type ChurchSpendingUpdateWithWhereUniqueWithoutChurchSpendingCreateByRelInput = {
    where: ChurchSpendingWhereUniqueInput
    data: XOR<ChurchSpendingUpdateWithoutChurchSpendingCreateByRelInput, ChurchSpendingUncheckedUpdateWithoutChurchSpendingCreateByRelInput>
  }

  export type ChurchSpendingUpdateManyWithWhereWithoutChurchSpendingCreateByRelInput = {
    where: ChurchSpendingScalarWhereInput
    data: XOR<ChurchSpendingUpdateManyMutationInput, ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelInput>
  }

  export type ChurchSpendingScalarWhereInput = {
    AND?: ChurchSpendingScalarWhereInput | ChurchSpendingScalarWhereInput[]
    OR?: ChurchSpendingScalarWhereInput[]
    NOT?: ChurchSpendingScalarWhereInput | ChurchSpendingScalarWhereInput[]
    id?: BigIntFilter<"ChurchSpending"> | bigint | number
    spendingTypeId?: BigIntFilter<"ChurchSpending"> | bigint | number
    detail?: StringNullableFilter<"ChurchSpending"> | string | null
    funds?: BigIntFilter<"ChurchSpending"> | bigint | number
    date?: DateTimeFilter<"ChurchSpending"> | Date | string
    bill?: StringNullableFilter<"ChurchSpending"> | string | null
    billNumber?: StringNullableFilter<"ChurchSpending"> | string | null
    deleted?: BoolFilter<"ChurchSpending"> | boolean
    createAt?: DateTimeFilter<"ChurchSpending"> | Date | string
    createBy?: BigIntNullableFilter<"ChurchSpending"> | bigint | number | null
    updatedAt?: DateTimeFilter<"ChurchSpending"> | Date | string
    updatedBy?: BigIntNullableFilter<"ChurchSpending"> | bigint | number | null
  }

  export type ChurchSpendingUpsertWithWhereUniqueWithoutChurchSpendingUpdateByRelInput = {
    where: ChurchSpendingWhereUniqueInput
    update: XOR<ChurchSpendingUpdateWithoutChurchSpendingUpdateByRelInput, ChurchSpendingUncheckedUpdateWithoutChurchSpendingUpdateByRelInput>
    create: XOR<ChurchSpendingCreateWithoutChurchSpendingUpdateByRelInput, ChurchSpendingUncheckedCreateWithoutChurchSpendingUpdateByRelInput>
  }

  export type ChurchSpendingUpdateWithWhereUniqueWithoutChurchSpendingUpdateByRelInput = {
    where: ChurchSpendingWhereUniqueInput
    data: XOR<ChurchSpendingUpdateWithoutChurchSpendingUpdateByRelInput, ChurchSpendingUncheckedUpdateWithoutChurchSpendingUpdateByRelInput>
  }

  export type ChurchSpendingUpdateManyWithWhereWithoutChurchSpendingUpdateByRelInput = {
    where: ChurchSpendingScalarWhereInput
    data: XOR<ChurchSpendingUpdateManyMutationInput, ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelInput>
  }

  export type ChurchSpendingTypeUpsertWithWhereUniqueWithoutChurchSpendingTypeCreateByRelInput = {
    where: ChurchSpendingTypeWhereUniqueInput
    update: XOR<ChurchSpendingTypeUpdateWithoutChurchSpendingTypeCreateByRelInput, ChurchSpendingTypeUncheckedUpdateWithoutChurchSpendingTypeCreateByRelInput>
    create: XOR<ChurchSpendingTypeCreateWithoutChurchSpendingTypeCreateByRelInput, ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeCreateByRelInput>
  }

  export type ChurchSpendingTypeUpdateWithWhereUniqueWithoutChurchSpendingTypeCreateByRelInput = {
    where: ChurchSpendingTypeWhereUniqueInput
    data: XOR<ChurchSpendingTypeUpdateWithoutChurchSpendingTypeCreateByRelInput, ChurchSpendingTypeUncheckedUpdateWithoutChurchSpendingTypeCreateByRelInput>
  }

  export type ChurchSpendingTypeUpdateManyWithWhereWithoutChurchSpendingTypeCreateByRelInput = {
    where: ChurchSpendingTypeScalarWhereInput
    data: XOR<ChurchSpendingTypeUpdateManyMutationInput, ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelInput>
  }

  export type ChurchSpendingTypeScalarWhereInput = {
    AND?: ChurchSpendingTypeScalarWhereInput | ChurchSpendingTypeScalarWhereInput[]
    OR?: ChurchSpendingTypeScalarWhereInput[]
    NOT?: ChurchSpendingTypeScalarWhereInput | ChurchSpendingTypeScalarWhereInput[]
    id?: BigIntFilter<"ChurchSpendingType"> | bigint | number
    spendingTypeName?: StringFilter<"ChurchSpendingType"> | string
    code?: StringFilter<"ChurchSpendingType"> | string
    description?: StringFilter<"ChurchSpendingType"> | string
    createAt?: DateTimeFilter<"ChurchSpendingType"> | Date | string
    createBy?: BigIntNullableFilter<"ChurchSpendingType"> | bigint | number | null
    deleted?: BoolFilter<"ChurchSpendingType"> | boolean
    updatedAt?: DateTimeFilter<"ChurchSpendingType"> | Date | string
    updatedBy?: BigIntNullableFilter<"ChurchSpendingType"> | bigint | number | null
  }

  export type ChurchSpendingTypeUpsertWithWhereUniqueWithoutChurchSpendingTypeUpdateByRelInput = {
    where: ChurchSpendingTypeWhereUniqueInput
    update: XOR<ChurchSpendingTypeUpdateWithoutChurchSpendingTypeUpdateByRelInput, ChurchSpendingTypeUncheckedUpdateWithoutChurchSpendingTypeUpdateByRelInput>
    create: XOR<ChurchSpendingTypeCreateWithoutChurchSpendingTypeUpdateByRelInput, ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeUpdateByRelInput>
  }

  export type ChurchSpendingTypeUpdateWithWhereUniqueWithoutChurchSpendingTypeUpdateByRelInput = {
    where: ChurchSpendingTypeWhereUniqueInput
    data: XOR<ChurchSpendingTypeUpdateWithoutChurchSpendingTypeUpdateByRelInput, ChurchSpendingTypeUncheckedUpdateWithoutChurchSpendingTypeUpdateByRelInput>
  }

  export type ChurchSpendingTypeUpdateManyWithWhereWithoutChurchSpendingTypeUpdateByRelInput = {
    where: ChurchSpendingTypeScalarWhereInput
    data: XOR<ChurchSpendingTypeUpdateManyMutationInput, ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelInput>
  }

  export type StoreIncomeUpsertWithWhereUniqueWithoutStoreIncomeCreateByRelInput = {
    where: StoreIncomeWhereUniqueInput
    update: XOR<StoreIncomeUpdateWithoutStoreIncomeCreateByRelInput, StoreIncomeUncheckedUpdateWithoutStoreIncomeCreateByRelInput>
    create: XOR<StoreIncomeCreateWithoutStoreIncomeCreateByRelInput, StoreIncomeUncheckedCreateWithoutStoreIncomeCreateByRelInput>
  }

  export type StoreIncomeUpdateWithWhereUniqueWithoutStoreIncomeCreateByRelInput = {
    where: StoreIncomeWhereUniqueInput
    data: XOR<StoreIncomeUpdateWithoutStoreIncomeCreateByRelInput, StoreIncomeUncheckedUpdateWithoutStoreIncomeCreateByRelInput>
  }

  export type StoreIncomeUpdateManyWithWhereWithoutStoreIncomeCreateByRelInput = {
    where: StoreIncomeScalarWhereInput
    data: XOR<StoreIncomeUpdateManyMutationInput, StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelInput>
  }

  export type StoreIncomeScalarWhereInput = {
    AND?: StoreIncomeScalarWhereInput | StoreIncomeScalarWhereInput[]
    OR?: StoreIncomeScalarWhereInput[]
    NOT?: StoreIncomeScalarWhereInput | StoreIncomeScalarWhereInput[]
    id?: BigIntFilter<"StoreIncome"> | bigint | number
    incomeTypeId?: BigIntFilter<"StoreIncome"> | bigint | number
    detail?: StringNullableFilter<"StoreIncome"> | string | null
    funds?: BigIntFilter<"StoreIncome"> | bigint | number
    date?: DateTimeFilter<"StoreIncome"> | Date | string
    deleted?: BoolFilter<"StoreIncome"> | boolean
    createAt?: DateTimeFilter<"StoreIncome"> | Date | string
    createBy?: BigIntNullableFilter<"StoreIncome"> | bigint | number | null
    updatedAt?: DateTimeFilter<"StoreIncome"> | Date | string
    updatedBy?: BigIntNullableFilter<"StoreIncome"> | bigint | number | null
  }

  export type StoreIncomeUpsertWithWhereUniqueWithoutStoreIncomeUpdateByRelInput = {
    where: StoreIncomeWhereUniqueInput
    update: XOR<StoreIncomeUpdateWithoutStoreIncomeUpdateByRelInput, StoreIncomeUncheckedUpdateWithoutStoreIncomeUpdateByRelInput>
    create: XOR<StoreIncomeCreateWithoutStoreIncomeUpdateByRelInput, StoreIncomeUncheckedCreateWithoutStoreIncomeUpdateByRelInput>
  }

  export type StoreIncomeUpdateWithWhereUniqueWithoutStoreIncomeUpdateByRelInput = {
    where: StoreIncomeWhereUniqueInput
    data: XOR<StoreIncomeUpdateWithoutStoreIncomeUpdateByRelInput, StoreIncomeUncheckedUpdateWithoutStoreIncomeUpdateByRelInput>
  }

  export type StoreIncomeUpdateManyWithWhereWithoutStoreIncomeUpdateByRelInput = {
    where: StoreIncomeScalarWhereInput
    data: XOR<StoreIncomeUpdateManyMutationInput, StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelInput>
  }

  export type StoreIncomeTypeUpsertWithWhereUniqueWithoutStoreIncomeTypeCreateByRelInput = {
    where: StoreIncomeTypeWhereUniqueInput
    update: XOR<StoreIncomeTypeUpdateWithoutStoreIncomeTypeCreateByRelInput, StoreIncomeTypeUncheckedUpdateWithoutStoreIncomeTypeCreateByRelInput>
    create: XOR<StoreIncomeTypeCreateWithoutStoreIncomeTypeCreateByRelInput, StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeCreateByRelInput>
  }

  export type StoreIncomeTypeUpdateWithWhereUniqueWithoutStoreIncomeTypeCreateByRelInput = {
    where: StoreIncomeTypeWhereUniqueInput
    data: XOR<StoreIncomeTypeUpdateWithoutStoreIncomeTypeCreateByRelInput, StoreIncomeTypeUncheckedUpdateWithoutStoreIncomeTypeCreateByRelInput>
  }

  export type StoreIncomeTypeUpdateManyWithWhereWithoutStoreIncomeTypeCreateByRelInput = {
    where: StoreIncomeTypeScalarWhereInput
    data: XOR<StoreIncomeTypeUpdateManyMutationInput, StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelInput>
  }

  export type StoreIncomeTypeScalarWhereInput = {
    AND?: StoreIncomeTypeScalarWhereInput | StoreIncomeTypeScalarWhereInput[]
    OR?: StoreIncomeTypeScalarWhereInput[]
    NOT?: StoreIncomeTypeScalarWhereInput | StoreIncomeTypeScalarWhereInput[]
    id?: BigIntFilter<"StoreIncomeType"> | bigint | number
    incomeTypeName?: StringFilter<"StoreIncomeType"> | string
    code?: StringFilter<"StoreIncomeType"> | string
    description?: StringFilter<"StoreIncomeType"> | string
    deleted?: BoolFilter<"StoreIncomeType"> | boolean
    createAt?: DateTimeFilter<"StoreIncomeType"> | Date | string
    createBy?: BigIntNullableFilter<"StoreIncomeType"> | bigint | number | null
    updatedAt?: DateTimeFilter<"StoreIncomeType"> | Date | string
    updatedBy?: BigIntNullableFilter<"StoreIncomeType"> | bigint | number | null
  }

  export type StoreIncomeTypeUpsertWithWhereUniqueWithoutStoreIncomeTypeUpdateByRelInput = {
    where: StoreIncomeTypeWhereUniqueInput
    update: XOR<StoreIncomeTypeUpdateWithoutStoreIncomeTypeUpdateByRelInput, StoreIncomeTypeUncheckedUpdateWithoutStoreIncomeTypeUpdateByRelInput>
    create: XOR<StoreIncomeTypeCreateWithoutStoreIncomeTypeUpdateByRelInput, StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeUpdateByRelInput>
  }

  export type StoreIncomeTypeUpdateWithWhereUniqueWithoutStoreIncomeTypeUpdateByRelInput = {
    where: StoreIncomeTypeWhereUniqueInput
    data: XOR<StoreIncomeTypeUpdateWithoutStoreIncomeTypeUpdateByRelInput, StoreIncomeTypeUncheckedUpdateWithoutStoreIncomeTypeUpdateByRelInput>
  }

  export type StoreIncomeTypeUpdateManyWithWhereWithoutStoreIncomeTypeUpdateByRelInput = {
    where: StoreIncomeTypeScalarWhereInput
    data: XOR<StoreIncomeTypeUpdateManyMutationInput, StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelInput>
  }

  export type StoreSpendingUpsertWithWhereUniqueWithoutStoreSpendingCreateByRelInput = {
    where: StoreSpendingWhereUniqueInput
    update: XOR<StoreSpendingUpdateWithoutStoreSpendingCreateByRelInput, StoreSpendingUncheckedUpdateWithoutStoreSpendingCreateByRelInput>
    create: XOR<StoreSpendingCreateWithoutStoreSpendingCreateByRelInput, StoreSpendingUncheckedCreateWithoutStoreSpendingCreateByRelInput>
  }

  export type StoreSpendingUpdateWithWhereUniqueWithoutStoreSpendingCreateByRelInput = {
    where: StoreSpendingWhereUniqueInput
    data: XOR<StoreSpendingUpdateWithoutStoreSpendingCreateByRelInput, StoreSpendingUncheckedUpdateWithoutStoreSpendingCreateByRelInput>
  }

  export type StoreSpendingUpdateManyWithWhereWithoutStoreSpendingCreateByRelInput = {
    where: StoreSpendingScalarWhereInput
    data: XOR<StoreSpendingUpdateManyMutationInput, StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelInput>
  }

  export type StoreSpendingScalarWhereInput = {
    AND?: StoreSpendingScalarWhereInput | StoreSpendingScalarWhereInput[]
    OR?: StoreSpendingScalarWhereInput[]
    NOT?: StoreSpendingScalarWhereInput | StoreSpendingScalarWhereInput[]
    id?: BigIntFilter<"StoreSpending"> | bigint | number
    spendingTypeId?: BigIntFilter<"StoreSpending"> | bigint | number
    detail?: StringNullableFilter<"StoreSpending"> | string | null
    funds?: BigIntFilter<"StoreSpending"> | bigint | number
    date?: DateTimeFilter<"StoreSpending"> | Date | string
    deleted?: BoolFilter<"StoreSpending"> | boolean
    createAt?: DateTimeFilter<"StoreSpending"> | Date | string
    createBy?: BigIntNullableFilter<"StoreSpending"> | bigint | number | null
    updatedAt?: DateTimeFilter<"StoreSpending"> | Date | string
    updatedBy?: BigIntNullableFilter<"StoreSpending"> | bigint | number | null
  }

  export type StoreSpendingUpsertWithWhereUniqueWithoutStoreSpendingUpdateByRelInput = {
    where: StoreSpendingWhereUniqueInput
    update: XOR<StoreSpendingUpdateWithoutStoreSpendingUpdateByRelInput, StoreSpendingUncheckedUpdateWithoutStoreSpendingUpdateByRelInput>
    create: XOR<StoreSpendingCreateWithoutStoreSpendingUpdateByRelInput, StoreSpendingUncheckedCreateWithoutStoreSpendingUpdateByRelInput>
  }

  export type StoreSpendingUpdateWithWhereUniqueWithoutStoreSpendingUpdateByRelInput = {
    where: StoreSpendingWhereUniqueInput
    data: XOR<StoreSpendingUpdateWithoutStoreSpendingUpdateByRelInput, StoreSpendingUncheckedUpdateWithoutStoreSpendingUpdateByRelInput>
  }

  export type StoreSpendingUpdateManyWithWhereWithoutStoreSpendingUpdateByRelInput = {
    where: StoreSpendingScalarWhereInput
    data: XOR<StoreSpendingUpdateManyMutationInput, StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelInput>
  }

  export type StoreSpendingTypeUpsertWithWhereUniqueWithoutStoreSpendingTypeCreateByRelInput = {
    where: StoreSpendingTypeWhereUniqueInput
    update: XOR<StoreSpendingTypeUpdateWithoutStoreSpendingTypeCreateByRelInput, StoreSpendingTypeUncheckedUpdateWithoutStoreSpendingTypeCreateByRelInput>
    create: XOR<StoreSpendingTypeCreateWithoutStoreSpendingTypeCreateByRelInput, StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeCreateByRelInput>
  }

  export type StoreSpendingTypeUpdateWithWhereUniqueWithoutStoreSpendingTypeCreateByRelInput = {
    where: StoreSpendingTypeWhereUniqueInput
    data: XOR<StoreSpendingTypeUpdateWithoutStoreSpendingTypeCreateByRelInput, StoreSpendingTypeUncheckedUpdateWithoutStoreSpendingTypeCreateByRelInput>
  }

  export type StoreSpendingTypeUpdateManyWithWhereWithoutStoreSpendingTypeCreateByRelInput = {
    where: StoreSpendingTypeScalarWhereInput
    data: XOR<StoreSpendingTypeUpdateManyMutationInput, StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelInput>
  }

  export type StoreSpendingTypeScalarWhereInput = {
    AND?: StoreSpendingTypeScalarWhereInput | StoreSpendingTypeScalarWhereInput[]
    OR?: StoreSpendingTypeScalarWhereInput[]
    NOT?: StoreSpendingTypeScalarWhereInput | StoreSpendingTypeScalarWhereInput[]
    id?: BigIntFilter<"StoreSpendingType"> | bigint | number
    spendingTypeName?: StringFilter<"StoreSpendingType"> | string
    code?: StringFilter<"StoreSpendingType"> | string
    description?: StringFilter<"StoreSpendingType"> | string
    deleted?: BoolFilter<"StoreSpendingType"> | boolean
    createAt?: DateTimeFilter<"StoreSpendingType"> | Date | string
    createBy?: BigIntNullableFilter<"StoreSpendingType"> | bigint | number | null
    updatedAt?: DateTimeFilter<"StoreSpendingType"> | Date | string
    updatedBy?: BigIntNullableFilter<"StoreSpendingType"> | bigint | number | null
  }

  export type StoreSpendingTypeUpsertWithWhereUniqueWithoutStoreSpendingTypeUpdateByRelInput = {
    where: StoreSpendingTypeWhereUniqueInput
    update: XOR<StoreSpendingTypeUpdateWithoutStoreSpendingTypeUpdateByRelInput, StoreSpendingTypeUncheckedUpdateWithoutStoreSpendingTypeUpdateByRelInput>
    create: XOR<StoreSpendingTypeCreateWithoutStoreSpendingTypeUpdateByRelInput, StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeUpdateByRelInput>
  }

  export type StoreSpendingTypeUpdateWithWhereUniqueWithoutStoreSpendingTypeUpdateByRelInput = {
    where: StoreSpendingTypeWhereUniqueInput
    data: XOR<StoreSpendingTypeUpdateWithoutStoreSpendingTypeUpdateByRelInput, StoreSpendingTypeUncheckedUpdateWithoutStoreSpendingTypeUpdateByRelInput>
  }

  export type StoreSpendingTypeUpdateManyWithWhereWithoutStoreSpendingTypeUpdateByRelInput = {
    where: StoreSpendingTypeScalarWhereInput
    data: XOR<StoreSpendingTypeUpdateManyMutationInput, StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelInput>
  }

  export type FarmIncomeUpsertWithWhereUniqueWithoutFarmIncomeCreateByRelInput = {
    where: FarmIncomeWhereUniqueInput
    update: XOR<FarmIncomeUpdateWithoutFarmIncomeCreateByRelInput, FarmIncomeUncheckedUpdateWithoutFarmIncomeCreateByRelInput>
    create: XOR<FarmIncomeCreateWithoutFarmIncomeCreateByRelInput, FarmIncomeUncheckedCreateWithoutFarmIncomeCreateByRelInput>
  }

  export type FarmIncomeUpdateWithWhereUniqueWithoutFarmIncomeCreateByRelInput = {
    where: FarmIncomeWhereUniqueInput
    data: XOR<FarmIncomeUpdateWithoutFarmIncomeCreateByRelInput, FarmIncomeUncheckedUpdateWithoutFarmIncomeCreateByRelInput>
  }

  export type FarmIncomeUpdateManyWithWhereWithoutFarmIncomeCreateByRelInput = {
    where: FarmIncomeScalarWhereInput
    data: XOR<FarmIncomeUpdateManyMutationInput, FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelInput>
  }

  export type FarmIncomeScalarWhereInput = {
    AND?: FarmIncomeScalarWhereInput | FarmIncomeScalarWhereInput[]
    OR?: FarmIncomeScalarWhereInput[]
    NOT?: FarmIncomeScalarWhereInput | FarmIncomeScalarWhereInput[]
    id?: BigIntFilter<"FarmIncome"> | bigint | number
    incomeTypeId?: BigIntFilter<"FarmIncome"> | bigint | number
    detail?: StringNullableFilter<"FarmIncome"> | string | null
    amount?: BigIntFilter<"FarmIncome"> | bigint | number
    price?: BigIntFilter<"FarmIncome"> | bigint | number
    date?: DateTimeFilter<"FarmIncome"> | Date | string
    deleted?: BoolFilter<"FarmIncome"> | boolean
    createAt?: DateTimeFilter<"FarmIncome"> | Date | string
    createBy?: BigIntNullableFilter<"FarmIncome"> | bigint | number | null
    updatedAt?: DateTimeFilter<"FarmIncome"> | Date | string
    updatedBy?: BigIntNullableFilter<"FarmIncome"> | bigint | number | null
  }

  export type FarmIncomeUpsertWithWhereUniqueWithoutFarmIncomeUpdateByRelInput = {
    where: FarmIncomeWhereUniqueInput
    update: XOR<FarmIncomeUpdateWithoutFarmIncomeUpdateByRelInput, FarmIncomeUncheckedUpdateWithoutFarmIncomeUpdateByRelInput>
    create: XOR<FarmIncomeCreateWithoutFarmIncomeUpdateByRelInput, FarmIncomeUncheckedCreateWithoutFarmIncomeUpdateByRelInput>
  }

  export type FarmIncomeUpdateWithWhereUniqueWithoutFarmIncomeUpdateByRelInput = {
    where: FarmIncomeWhereUniqueInput
    data: XOR<FarmIncomeUpdateWithoutFarmIncomeUpdateByRelInput, FarmIncomeUncheckedUpdateWithoutFarmIncomeUpdateByRelInput>
  }

  export type FarmIncomeUpdateManyWithWhereWithoutFarmIncomeUpdateByRelInput = {
    where: FarmIncomeScalarWhereInput
    data: XOR<FarmIncomeUpdateManyMutationInput, FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelInput>
  }

  export type FarmIncomeTypeUpsertWithWhereUniqueWithoutFarmIncomeTypeCreateByRelInput = {
    where: FarmIncomeTypeWhereUniqueInput
    update: XOR<FarmIncomeTypeUpdateWithoutFarmIncomeTypeCreateByRelInput, FarmIncomeTypeUncheckedUpdateWithoutFarmIncomeTypeCreateByRelInput>
    create: XOR<FarmIncomeTypeCreateWithoutFarmIncomeTypeCreateByRelInput, FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeCreateByRelInput>
  }

  export type FarmIncomeTypeUpdateWithWhereUniqueWithoutFarmIncomeTypeCreateByRelInput = {
    where: FarmIncomeTypeWhereUniqueInput
    data: XOR<FarmIncomeTypeUpdateWithoutFarmIncomeTypeCreateByRelInput, FarmIncomeTypeUncheckedUpdateWithoutFarmIncomeTypeCreateByRelInput>
  }

  export type FarmIncomeTypeUpdateManyWithWhereWithoutFarmIncomeTypeCreateByRelInput = {
    where: FarmIncomeTypeScalarWhereInput
    data: XOR<FarmIncomeTypeUpdateManyMutationInput, FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelInput>
  }

  export type FarmIncomeTypeScalarWhereInput = {
    AND?: FarmIncomeTypeScalarWhereInput | FarmIncomeTypeScalarWhereInput[]
    OR?: FarmIncomeTypeScalarWhereInput[]
    NOT?: FarmIncomeTypeScalarWhereInput | FarmIncomeTypeScalarWhereInput[]
    id?: BigIntFilter<"FarmIncomeType"> | bigint | number
    incomeTypeName?: StringFilter<"FarmIncomeType"> | string
    code?: StringFilter<"FarmIncomeType"> | string
    description?: StringFilter<"FarmIncomeType"> | string
    deleted?: BoolFilter<"FarmIncomeType"> | boolean
    createAt?: DateTimeFilter<"FarmIncomeType"> | Date | string
    createBy?: BigIntNullableFilter<"FarmIncomeType"> | bigint | number | null
    updatedAt?: DateTimeFilter<"FarmIncomeType"> | Date | string
    updatedBy?: BigIntNullableFilter<"FarmIncomeType"> | bigint | number | null
  }

  export type FarmIncomeTypeUpsertWithWhereUniqueWithoutFarmIncomeTypeUpdateByRelInput = {
    where: FarmIncomeTypeWhereUniqueInput
    update: XOR<FarmIncomeTypeUpdateWithoutFarmIncomeTypeUpdateByRelInput, FarmIncomeTypeUncheckedUpdateWithoutFarmIncomeTypeUpdateByRelInput>
    create: XOR<FarmIncomeTypeCreateWithoutFarmIncomeTypeUpdateByRelInput, FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeUpdateByRelInput>
  }

  export type FarmIncomeTypeUpdateWithWhereUniqueWithoutFarmIncomeTypeUpdateByRelInput = {
    where: FarmIncomeTypeWhereUniqueInput
    data: XOR<FarmIncomeTypeUpdateWithoutFarmIncomeTypeUpdateByRelInput, FarmIncomeTypeUncheckedUpdateWithoutFarmIncomeTypeUpdateByRelInput>
  }

  export type FarmIncomeTypeUpdateManyWithWhereWithoutFarmIncomeTypeUpdateByRelInput = {
    where: FarmIncomeTypeScalarWhereInput
    data: XOR<FarmIncomeTypeUpdateManyMutationInput, FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelInput>
  }

  export type FarmSpendingUpsertWithWhereUniqueWithoutFarmSpendingCreateByRelInput = {
    where: FarmSpendingWhereUniqueInput
    update: XOR<FarmSpendingUpdateWithoutFarmSpendingCreateByRelInput, FarmSpendingUncheckedUpdateWithoutFarmSpendingCreateByRelInput>
    create: XOR<FarmSpendingCreateWithoutFarmSpendingCreateByRelInput, FarmSpendingUncheckedCreateWithoutFarmSpendingCreateByRelInput>
  }

  export type FarmSpendingUpdateWithWhereUniqueWithoutFarmSpendingCreateByRelInput = {
    where: FarmSpendingWhereUniqueInput
    data: XOR<FarmSpendingUpdateWithoutFarmSpendingCreateByRelInput, FarmSpendingUncheckedUpdateWithoutFarmSpendingCreateByRelInput>
  }

  export type FarmSpendingUpdateManyWithWhereWithoutFarmSpendingCreateByRelInput = {
    where: FarmSpendingScalarWhereInput
    data: XOR<FarmSpendingUpdateManyMutationInput, FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelInput>
  }

  export type FarmSpendingScalarWhereInput = {
    AND?: FarmSpendingScalarWhereInput | FarmSpendingScalarWhereInput[]
    OR?: FarmSpendingScalarWhereInput[]
    NOT?: FarmSpendingScalarWhereInput | FarmSpendingScalarWhereInput[]
    id?: BigIntFilter<"FarmSpending"> | bigint | number
    spendingTypeId?: BigIntFilter<"FarmSpending"> | bigint | number
    detail?: StringNullableFilter<"FarmSpending"> | string | null
    funds?: BigIntFilter<"FarmSpending"> | bigint | number
    date?: DateTimeFilter<"FarmSpending"> | Date | string
    deleted?: BoolFilter<"FarmSpending"> | boolean
    createAt?: DateTimeFilter<"FarmSpending"> | Date | string
    createBy?: BigIntNullableFilter<"FarmSpending"> | bigint | number | null
    updatedAt?: DateTimeFilter<"FarmSpending"> | Date | string
    updatedBy?: BigIntNullableFilter<"FarmSpending"> | bigint | number | null
  }

  export type FarmSpendingUpsertWithWhereUniqueWithoutFarmSpendingUpdateByRelInput = {
    where: FarmSpendingWhereUniqueInput
    update: XOR<FarmSpendingUpdateWithoutFarmSpendingUpdateByRelInput, FarmSpendingUncheckedUpdateWithoutFarmSpendingUpdateByRelInput>
    create: XOR<FarmSpendingCreateWithoutFarmSpendingUpdateByRelInput, FarmSpendingUncheckedCreateWithoutFarmSpendingUpdateByRelInput>
  }

  export type FarmSpendingUpdateWithWhereUniqueWithoutFarmSpendingUpdateByRelInput = {
    where: FarmSpendingWhereUniqueInput
    data: XOR<FarmSpendingUpdateWithoutFarmSpendingUpdateByRelInput, FarmSpendingUncheckedUpdateWithoutFarmSpendingUpdateByRelInput>
  }

  export type FarmSpendingUpdateManyWithWhereWithoutFarmSpendingUpdateByRelInput = {
    where: FarmSpendingScalarWhereInput
    data: XOR<FarmSpendingUpdateManyMutationInput, FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelInput>
  }

  export type FarmSpendingTypeUpsertWithWhereUniqueWithoutFarmSpendingTypeCreateByRelInput = {
    where: FarmSpendingTypeWhereUniqueInput
    update: XOR<FarmSpendingTypeUpdateWithoutFarmSpendingTypeCreateByRelInput, FarmSpendingTypeUncheckedUpdateWithoutFarmSpendingTypeCreateByRelInput>
    create: XOR<FarmSpendingTypeCreateWithoutFarmSpendingTypeCreateByRelInput, FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeCreateByRelInput>
  }

  export type FarmSpendingTypeUpdateWithWhereUniqueWithoutFarmSpendingTypeCreateByRelInput = {
    where: FarmSpendingTypeWhereUniqueInput
    data: XOR<FarmSpendingTypeUpdateWithoutFarmSpendingTypeCreateByRelInput, FarmSpendingTypeUncheckedUpdateWithoutFarmSpendingTypeCreateByRelInput>
  }

  export type FarmSpendingTypeUpdateManyWithWhereWithoutFarmSpendingTypeCreateByRelInput = {
    where: FarmSpendingTypeScalarWhereInput
    data: XOR<FarmSpendingTypeUpdateManyMutationInput, FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelInput>
  }

  export type FarmSpendingTypeScalarWhereInput = {
    AND?: FarmSpendingTypeScalarWhereInput | FarmSpendingTypeScalarWhereInput[]
    OR?: FarmSpendingTypeScalarWhereInput[]
    NOT?: FarmSpendingTypeScalarWhereInput | FarmSpendingTypeScalarWhereInput[]
    id?: BigIntFilter<"FarmSpendingType"> | bigint | number
    spendingTypeName?: StringFilter<"FarmSpendingType"> | string
    code?: StringFilter<"FarmSpendingType"> | string
    description?: StringFilter<"FarmSpendingType"> | string
    deleted?: BoolFilter<"FarmSpendingType"> | boolean
    createAt?: DateTimeFilter<"FarmSpendingType"> | Date | string
    createBy?: BigIntNullableFilter<"FarmSpendingType"> | bigint | number | null
    updatedAt?: DateTimeFilter<"FarmSpendingType"> | Date | string
    updatedBy?: BigIntNullableFilter<"FarmSpendingType"> | bigint | number | null
  }

  export type FarmSpendingTypeUpsertWithWhereUniqueWithoutFarmSpendingTypeUpdateByRelInput = {
    where: FarmSpendingTypeWhereUniqueInput
    update: XOR<FarmSpendingTypeUpdateWithoutFarmSpendingTypeUpdateByRelInput, FarmSpendingTypeUncheckedUpdateWithoutFarmSpendingTypeUpdateByRelInput>
    create: XOR<FarmSpendingTypeCreateWithoutFarmSpendingTypeUpdateByRelInput, FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeUpdateByRelInput>
  }

  export type FarmSpendingTypeUpdateWithWhereUniqueWithoutFarmSpendingTypeUpdateByRelInput = {
    where: FarmSpendingTypeWhereUniqueInput
    data: XOR<FarmSpendingTypeUpdateWithoutFarmSpendingTypeUpdateByRelInput, FarmSpendingTypeUncheckedUpdateWithoutFarmSpendingTypeUpdateByRelInput>
  }

  export type FarmSpendingTypeUpdateManyWithWhereWithoutFarmSpendingTypeUpdateByRelInput = {
    where: FarmSpendingTypeScalarWhereInput
    data: XOR<FarmSpendingTypeUpdateManyMutationInput, FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelInput>
  }

  export type UserHistoryUpsertWithWhereUniqueWithoutUserHistoryCreatedByRelInput = {
    where: UserHistoryWhereUniqueInput
    update: XOR<UserHistoryUpdateWithoutUserHistoryCreatedByRelInput, UserHistoryUncheckedUpdateWithoutUserHistoryCreatedByRelInput>
    create: XOR<UserHistoryCreateWithoutUserHistoryCreatedByRelInput, UserHistoryUncheckedCreateWithoutUserHistoryCreatedByRelInput>
  }

  export type UserHistoryUpdateWithWhereUniqueWithoutUserHistoryCreatedByRelInput = {
    where: UserHistoryWhereUniqueInput
    data: XOR<UserHistoryUpdateWithoutUserHistoryCreatedByRelInput, UserHistoryUncheckedUpdateWithoutUserHistoryCreatedByRelInput>
  }

  export type UserHistoryUpdateManyWithWhereWithoutUserHistoryCreatedByRelInput = {
    where: UserHistoryScalarWhereInput
    data: XOR<UserHistoryUpdateManyMutationInput, UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelInput>
  }

  export type UserHistoryScalarWhereInput = {
    AND?: UserHistoryScalarWhereInput | UserHistoryScalarWhereInput[]
    OR?: UserHistoryScalarWhereInput[]
    NOT?: UserHistoryScalarWhereInput | UserHistoryScalarWhereInput[]
    id?: BigIntFilter<"UserHistory"> | bigint | number
    userId?: BigIntFilter<"UserHistory"> | bigint | number
    createdAt?: DateTimeFilter<"UserHistory"> | Date | string
    createdBy?: BigIntNullableFilter<"UserHistory"> | bigint | number | null
    updatedAt?: DateTimeFilter<"UserHistory"> | Date | string
    updatedBy?: BigIntNullableFilter<"UserHistory"> | bigint | number | null
    deleted?: BoolFilter<"UserHistory"> | boolean
    oldData?: JsonFilter<"UserHistory">
    newData?: JsonFilter<"UserHistory">
  }

  export type UserHistoryUpsertWithWhereUniqueWithoutUserHistoryUpdatedByRelInput = {
    where: UserHistoryWhereUniqueInput
    update: XOR<UserHistoryUpdateWithoutUserHistoryUpdatedByRelInput, UserHistoryUncheckedUpdateWithoutUserHistoryUpdatedByRelInput>
    create: XOR<UserHistoryCreateWithoutUserHistoryUpdatedByRelInput, UserHistoryUncheckedCreateWithoutUserHistoryUpdatedByRelInput>
  }

  export type UserHistoryUpdateWithWhereUniqueWithoutUserHistoryUpdatedByRelInput = {
    where: UserHistoryWhereUniqueInput
    data: XOR<UserHistoryUpdateWithoutUserHistoryUpdatedByRelInput, UserHistoryUncheckedUpdateWithoutUserHistoryUpdatedByRelInput>
  }

  export type UserHistoryUpdateManyWithWhereWithoutUserHistoryUpdatedByRelInput = {
    where: UserHistoryScalarWhereInput
    data: XOR<UserHistoryUpdateManyMutationInput, UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelInput>
  }

  export type UserHistoryUpsertWithWhereUniqueWithoutUserHistoryIdRelInput = {
    where: UserHistoryWhereUniqueInput
    update: XOR<UserHistoryUpdateWithoutUserHistoryIdRelInput, UserHistoryUncheckedUpdateWithoutUserHistoryIdRelInput>
    create: XOR<UserHistoryCreateWithoutUserHistoryIdRelInput, UserHistoryUncheckedCreateWithoutUserHistoryIdRelInput>
  }

  export type UserHistoryUpdateWithWhereUniqueWithoutUserHistoryIdRelInput = {
    where: UserHistoryWhereUniqueInput
    data: XOR<UserHistoryUpdateWithoutUserHistoryIdRelInput, UserHistoryUncheckedUpdateWithoutUserHistoryIdRelInput>
  }

  export type UserHistoryUpdateManyWithWhereWithoutUserHistoryIdRelInput = {
    where: UserHistoryScalarWhereInput
    data: XOR<UserHistoryUpdateManyMutationInput, UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelInput>
  }

  export type ChurchIncomeHistoryUpsertWithWhereUniqueWithoutChurchIncomeHistoryCreateByRelInput = {
    where: ChurchIncomeHistoryWhereUniqueInput
    update: XOR<ChurchIncomeHistoryUpdateWithoutChurchIncomeHistoryCreateByRelInput, ChurchIncomeHistoryUncheckedUpdateWithoutChurchIncomeHistoryCreateByRelInput>
    create: XOR<ChurchIncomeHistoryCreateWithoutChurchIncomeHistoryCreateByRelInput, ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeHistoryCreateByRelInput>
  }

  export type ChurchIncomeHistoryUpdateWithWhereUniqueWithoutChurchIncomeHistoryCreateByRelInput = {
    where: ChurchIncomeHistoryWhereUniqueInput
    data: XOR<ChurchIncomeHistoryUpdateWithoutChurchIncomeHistoryCreateByRelInput, ChurchIncomeHistoryUncheckedUpdateWithoutChurchIncomeHistoryCreateByRelInput>
  }

  export type ChurchIncomeHistoryUpdateManyWithWhereWithoutChurchIncomeHistoryCreateByRelInput = {
    where: ChurchIncomeHistoryScalarWhereInput
    data: XOR<ChurchIncomeHistoryUpdateManyMutationInput, ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelInput>
  }

  export type ChurchIncomeHistoryScalarWhereInput = {
    AND?: ChurchIncomeHistoryScalarWhereInput | ChurchIncomeHistoryScalarWhereInput[]
    OR?: ChurchIncomeHistoryScalarWhereInput[]
    NOT?: ChurchIncomeHistoryScalarWhereInput | ChurchIncomeHistoryScalarWhereInput[]
    revId?: BigIntFilter<"ChurchIncomeHistory"> | bigint | number
    id?: BigIntFilter<"ChurchIncomeHistory"> | bigint | number
    incomeTypeId?: BigIntFilter<"ChurchIncomeHistory"> | bigint | number
    detail?: StringNullableFilter<"ChurchIncomeHistory"> | string | null
    funds?: BigIntFilter<"ChurchIncomeHistory"> | bigint | number
    date?: DateTimeFilter<"ChurchIncomeHistory"> | Date | string
    deleted?: BoolFilter<"ChurchIncomeHistory"> | boolean
    createAt?: DateTimeFilter<"ChurchIncomeHistory"> | Date | string
    createBy?: BigIntNullableFilter<"ChurchIncomeHistory"> | bigint | number | null
    updatedAt?: DateTimeFilter<"ChurchIncomeHistory"> | Date | string
    updatedBy?: BigIntNullableFilter<"ChurchIncomeHistory"> | bigint | number | null
  }

  export type ChurchIncomeHistoryUpsertWithWhereUniqueWithoutChurchIncomeHistoryUpdateByRelInput = {
    where: ChurchIncomeHistoryWhereUniqueInput
    update: XOR<ChurchIncomeHistoryUpdateWithoutChurchIncomeHistoryUpdateByRelInput, ChurchIncomeHistoryUncheckedUpdateWithoutChurchIncomeHistoryUpdateByRelInput>
    create: XOR<ChurchIncomeHistoryCreateWithoutChurchIncomeHistoryUpdateByRelInput, ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeHistoryUpdateByRelInput>
  }

  export type ChurchIncomeHistoryUpdateWithWhereUniqueWithoutChurchIncomeHistoryUpdateByRelInput = {
    where: ChurchIncomeHistoryWhereUniqueInput
    data: XOR<ChurchIncomeHistoryUpdateWithoutChurchIncomeHistoryUpdateByRelInput, ChurchIncomeHistoryUncheckedUpdateWithoutChurchIncomeHistoryUpdateByRelInput>
  }

  export type ChurchIncomeHistoryUpdateManyWithWhereWithoutChurchIncomeHistoryUpdateByRelInput = {
    where: ChurchIncomeHistoryScalarWhereInput
    data: XOR<ChurchIncomeHistoryUpdateManyMutationInput, ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelInput>
  }

  export type ChurchSpendingHistoryUpsertWithWhereUniqueWithoutChurchSpendingHistoryCreateByRelInput = {
    where: ChurchSpendingHistoryWhereUniqueInput
    update: XOR<ChurchSpendingHistoryUpdateWithoutChurchSpendingHistoryCreateByRelInput, ChurchSpendingHistoryUncheckedUpdateWithoutChurchSpendingHistoryCreateByRelInput>
    create: XOR<ChurchSpendingHistoryCreateWithoutChurchSpendingHistoryCreateByRelInput, ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingHistoryCreateByRelInput>
  }

  export type ChurchSpendingHistoryUpdateWithWhereUniqueWithoutChurchSpendingHistoryCreateByRelInput = {
    where: ChurchSpendingHistoryWhereUniqueInput
    data: XOR<ChurchSpendingHistoryUpdateWithoutChurchSpendingHistoryCreateByRelInput, ChurchSpendingHistoryUncheckedUpdateWithoutChurchSpendingHistoryCreateByRelInput>
  }

  export type ChurchSpendingHistoryUpdateManyWithWhereWithoutChurchSpendingHistoryCreateByRelInput = {
    where: ChurchSpendingHistoryScalarWhereInput
    data: XOR<ChurchSpendingHistoryUpdateManyMutationInput, ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelInput>
  }

  export type ChurchSpendingHistoryScalarWhereInput = {
    AND?: ChurchSpendingHistoryScalarWhereInput | ChurchSpendingHistoryScalarWhereInput[]
    OR?: ChurchSpendingHistoryScalarWhereInput[]
    NOT?: ChurchSpendingHistoryScalarWhereInput | ChurchSpendingHistoryScalarWhereInput[]
    revId?: BigIntFilter<"ChurchSpendingHistory"> | bigint | number
    id?: BigIntFilter<"ChurchSpendingHistory"> | bigint | number
    spendingTypeId?: BigIntFilter<"ChurchSpendingHistory"> | bigint | number
    detail?: StringNullableFilter<"ChurchSpendingHistory"> | string | null
    funds?: BigIntFilter<"ChurchSpendingHistory"> | bigint | number
    date?: DateTimeFilter<"ChurchSpendingHistory"> | Date | string
    bill?: StringFilter<"ChurchSpendingHistory"> | string
    billNumber?: StringFilter<"ChurchSpendingHistory"> | string
    deleted?: BoolFilter<"ChurchSpendingHistory"> | boolean
    createAt?: DateTimeFilter<"ChurchSpendingHistory"> | Date | string
    createBy?: BigIntNullableFilter<"ChurchSpendingHistory"> | bigint | number | null
    updatedAt?: DateTimeFilter<"ChurchSpendingHistory"> | Date | string
    updatedBy?: BigIntNullableFilter<"ChurchSpendingHistory"> | bigint | number | null
  }

  export type ChurchSpendingHistoryUpsertWithWhereUniqueWithoutChurchSpendingHistoryUpdateByRelInput = {
    where: ChurchSpendingHistoryWhereUniqueInput
    update: XOR<ChurchSpendingHistoryUpdateWithoutChurchSpendingHistoryUpdateByRelInput, ChurchSpendingHistoryUncheckedUpdateWithoutChurchSpendingHistoryUpdateByRelInput>
    create: XOR<ChurchSpendingHistoryCreateWithoutChurchSpendingHistoryUpdateByRelInput, ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingHistoryUpdateByRelInput>
  }

  export type ChurchSpendingHistoryUpdateWithWhereUniqueWithoutChurchSpendingHistoryUpdateByRelInput = {
    where: ChurchSpendingHistoryWhereUniqueInput
    data: XOR<ChurchSpendingHistoryUpdateWithoutChurchSpendingHistoryUpdateByRelInput, ChurchSpendingHistoryUncheckedUpdateWithoutChurchSpendingHistoryUpdateByRelInput>
  }

  export type ChurchSpendingHistoryUpdateManyWithWhereWithoutChurchSpendingHistoryUpdateByRelInput = {
    where: ChurchSpendingHistoryScalarWhereInput
    data: XOR<ChurchSpendingHistoryUpdateManyMutationInput, ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelInput>
  }

  export type StoreIncomeHistoryUpsertWithWhereUniqueWithoutStoreIncomeHistoryCreateByRelInput = {
    where: StoreIncomeHistoryWhereUniqueInput
    update: XOR<StoreIncomeHistoryUpdateWithoutStoreIncomeHistoryCreateByRelInput, StoreIncomeHistoryUncheckedUpdateWithoutStoreIncomeHistoryCreateByRelInput>
    create: XOR<StoreIncomeHistoryCreateWithoutStoreIncomeHistoryCreateByRelInput, StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeHistoryCreateByRelInput>
  }

  export type StoreIncomeHistoryUpdateWithWhereUniqueWithoutStoreIncomeHistoryCreateByRelInput = {
    where: StoreIncomeHistoryWhereUniqueInput
    data: XOR<StoreIncomeHistoryUpdateWithoutStoreIncomeHistoryCreateByRelInput, StoreIncomeHistoryUncheckedUpdateWithoutStoreIncomeHistoryCreateByRelInput>
  }

  export type StoreIncomeHistoryUpdateManyWithWhereWithoutStoreIncomeHistoryCreateByRelInput = {
    where: StoreIncomeHistoryScalarWhereInput
    data: XOR<StoreIncomeHistoryUpdateManyMutationInput, StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelInput>
  }

  export type StoreIncomeHistoryScalarWhereInput = {
    AND?: StoreIncomeHistoryScalarWhereInput | StoreIncomeHistoryScalarWhereInput[]
    OR?: StoreIncomeHistoryScalarWhereInput[]
    NOT?: StoreIncomeHistoryScalarWhereInput | StoreIncomeHistoryScalarWhereInput[]
    revId?: BigIntFilter<"StoreIncomeHistory"> | bigint | number
    id?: BigIntFilter<"StoreIncomeHistory"> | bigint | number
    incomeTypeId?: BigIntFilter<"StoreIncomeHistory"> | bigint | number
    detail?: StringNullableFilter<"StoreIncomeHistory"> | string | null
    funds?: BigIntFilter<"StoreIncomeHistory"> | bigint | number
    date?: DateTimeFilter<"StoreIncomeHistory"> | Date | string
    deleted?: BoolFilter<"StoreIncomeHistory"> | boolean
    createAt?: DateTimeFilter<"StoreIncomeHistory"> | Date | string
    createBy?: BigIntNullableFilter<"StoreIncomeHistory"> | bigint | number | null
    updatedAt?: DateTimeFilter<"StoreIncomeHistory"> | Date | string
    updatedBy?: BigIntNullableFilter<"StoreIncomeHistory"> | bigint | number | null
  }

  export type StoreIncomeHistoryUpsertWithWhereUniqueWithoutStoreIncomeHistoryUpdateByRelInput = {
    where: StoreIncomeHistoryWhereUniqueInput
    update: XOR<StoreIncomeHistoryUpdateWithoutStoreIncomeHistoryUpdateByRelInput, StoreIncomeHistoryUncheckedUpdateWithoutStoreIncomeHistoryUpdateByRelInput>
    create: XOR<StoreIncomeHistoryCreateWithoutStoreIncomeHistoryUpdateByRelInput, StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeHistoryUpdateByRelInput>
  }

  export type StoreIncomeHistoryUpdateWithWhereUniqueWithoutStoreIncomeHistoryUpdateByRelInput = {
    where: StoreIncomeHistoryWhereUniqueInput
    data: XOR<StoreIncomeHistoryUpdateWithoutStoreIncomeHistoryUpdateByRelInput, StoreIncomeHistoryUncheckedUpdateWithoutStoreIncomeHistoryUpdateByRelInput>
  }

  export type StoreIncomeHistoryUpdateManyWithWhereWithoutStoreIncomeHistoryUpdateByRelInput = {
    where: StoreIncomeHistoryScalarWhereInput
    data: XOR<StoreIncomeHistoryUpdateManyMutationInput, StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelInput>
  }

  export type StoreSpendingHistoryUpsertWithWhereUniqueWithoutStoreSpendingHistoryCreateByRelInput = {
    where: StoreSpendingHistoryWhereUniqueInput
    update: XOR<StoreSpendingHistoryUpdateWithoutStoreSpendingHistoryCreateByRelInput, StoreSpendingHistoryUncheckedUpdateWithoutStoreSpendingHistoryCreateByRelInput>
    create: XOR<StoreSpendingHistoryCreateWithoutStoreSpendingHistoryCreateByRelInput, StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingHistoryCreateByRelInput>
  }

  export type StoreSpendingHistoryUpdateWithWhereUniqueWithoutStoreSpendingHistoryCreateByRelInput = {
    where: StoreSpendingHistoryWhereUniqueInput
    data: XOR<StoreSpendingHistoryUpdateWithoutStoreSpendingHistoryCreateByRelInput, StoreSpendingHistoryUncheckedUpdateWithoutStoreSpendingHistoryCreateByRelInput>
  }

  export type StoreSpendingHistoryUpdateManyWithWhereWithoutStoreSpendingHistoryCreateByRelInput = {
    where: StoreSpendingHistoryScalarWhereInput
    data: XOR<StoreSpendingHistoryUpdateManyMutationInput, StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelInput>
  }

  export type StoreSpendingHistoryScalarWhereInput = {
    AND?: StoreSpendingHistoryScalarWhereInput | StoreSpendingHistoryScalarWhereInput[]
    OR?: StoreSpendingHistoryScalarWhereInput[]
    NOT?: StoreSpendingHistoryScalarWhereInput | StoreSpendingHistoryScalarWhereInput[]
    revId?: BigIntFilter<"StoreSpendingHistory"> | bigint | number
    id?: BigIntFilter<"StoreSpendingHistory"> | bigint | number
    spendingTypeId?: BigIntFilter<"StoreSpendingHistory"> | bigint | number
    detail?: StringNullableFilter<"StoreSpendingHistory"> | string | null
    funds?: BigIntFilter<"StoreSpendingHistory"> | bigint | number
    date?: DateTimeFilter<"StoreSpendingHistory"> | Date | string
    deleted?: BoolFilter<"StoreSpendingHistory"> | boolean
    createAt?: DateTimeFilter<"StoreSpendingHistory"> | Date | string
    createBy?: BigIntNullableFilter<"StoreSpendingHistory"> | bigint | number | null
    updatedAt?: DateTimeFilter<"StoreSpendingHistory"> | Date | string
    updatedBy?: BigIntNullableFilter<"StoreSpendingHistory"> | bigint | number | null
  }

  export type StoreSpendingHistoryUpsertWithWhereUniqueWithoutStoreSpendingHistoryUpdateByRelInput = {
    where: StoreSpendingHistoryWhereUniqueInput
    update: XOR<StoreSpendingHistoryUpdateWithoutStoreSpendingHistoryUpdateByRelInput, StoreSpendingHistoryUncheckedUpdateWithoutStoreSpendingHistoryUpdateByRelInput>
    create: XOR<StoreSpendingHistoryCreateWithoutStoreSpendingHistoryUpdateByRelInput, StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingHistoryUpdateByRelInput>
  }

  export type StoreSpendingHistoryUpdateWithWhereUniqueWithoutStoreSpendingHistoryUpdateByRelInput = {
    where: StoreSpendingHistoryWhereUniqueInput
    data: XOR<StoreSpendingHistoryUpdateWithoutStoreSpendingHistoryUpdateByRelInput, StoreSpendingHistoryUncheckedUpdateWithoutStoreSpendingHistoryUpdateByRelInput>
  }

  export type StoreSpendingHistoryUpdateManyWithWhereWithoutStoreSpendingHistoryUpdateByRelInput = {
    where: StoreSpendingHistoryScalarWhereInput
    data: XOR<StoreSpendingHistoryUpdateManyMutationInput, StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelInput>
  }

  export type FarmIncomeHistoryUpsertWithWhereUniqueWithoutFarmIncomeHistoryCreateByRelInput = {
    where: FarmIncomeHistoryWhereUniqueInput
    update: XOR<FarmIncomeHistoryUpdateWithoutFarmIncomeHistoryCreateByRelInput, FarmIncomeHistoryUncheckedUpdateWithoutFarmIncomeHistoryCreateByRelInput>
    create: XOR<FarmIncomeHistoryCreateWithoutFarmIncomeHistoryCreateByRelInput, FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeHistoryCreateByRelInput>
  }

  export type FarmIncomeHistoryUpdateWithWhereUniqueWithoutFarmIncomeHistoryCreateByRelInput = {
    where: FarmIncomeHistoryWhereUniqueInput
    data: XOR<FarmIncomeHistoryUpdateWithoutFarmIncomeHistoryCreateByRelInput, FarmIncomeHistoryUncheckedUpdateWithoutFarmIncomeHistoryCreateByRelInput>
  }

  export type FarmIncomeHistoryUpdateManyWithWhereWithoutFarmIncomeHistoryCreateByRelInput = {
    where: FarmIncomeHistoryScalarWhereInput
    data: XOR<FarmIncomeHistoryUpdateManyMutationInput, FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelInput>
  }

  export type FarmIncomeHistoryScalarWhereInput = {
    AND?: FarmIncomeHistoryScalarWhereInput | FarmIncomeHistoryScalarWhereInput[]
    OR?: FarmIncomeHistoryScalarWhereInput[]
    NOT?: FarmIncomeHistoryScalarWhereInput | FarmIncomeHistoryScalarWhereInput[]
    revId?: BigIntFilter<"FarmIncomeHistory"> | bigint | number
    id?: BigIntFilter<"FarmIncomeHistory"> | bigint | number
    incomeTypeId?: BigIntFilter<"FarmIncomeHistory"> | bigint | number
    detail?: StringNullableFilter<"FarmIncomeHistory"> | string | null
    amount?: BigIntFilter<"FarmIncomeHistory"> | bigint | number
    price?: BigIntFilter<"FarmIncomeHistory"> | bigint | number
    date?: DateTimeFilter<"FarmIncomeHistory"> | Date | string
    deleted?: BoolFilter<"FarmIncomeHistory"> | boolean
    createAt?: DateTimeFilter<"FarmIncomeHistory"> | Date | string
    createBy?: BigIntNullableFilter<"FarmIncomeHistory"> | bigint | number | null
    updatedAt?: DateTimeFilter<"FarmIncomeHistory"> | Date | string
    updatedBy?: BigIntNullableFilter<"FarmIncomeHistory"> | bigint | number | null
  }

  export type FarmIncomeHistoryUpsertWithWhereUniqueWithoutFarmIncomeHistoryUpdateByRelInput = {
    where: FarmIncomeHistoryWhereUniqueInput
    update: XOR<FarmIncomeHistoryUpdateWithoutFarmIncomeHistoryUpdateByRelInput, FarmIncomeHistoryUncheckedUpdateWithoutFarmIncomeHistoryUpdateByRelInput>
    create: XOR<FarmIncomeHistoryCreateWithoutFarmIncomeHistoryUpdateByRelInput, FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeHistoryUpdateByRelInput>
  }

  export type FarmIncomeHistoryUpdateWithWhereUniqueWithoutFarmIncomeHistoryUpdateByRelInput = {
    where: FarmIncomeHistoryWhereUniqueInput
    data: XOR<FarmIncomeHistoryUpdateWithoutFarmIncomeHistoryUpdateByRelInput, FarmIncomeHistoryUncheckedUpdateWithoutFarmIncomeHistoryUpdateByRelInput>
  }

  export type FarmIncomeHistoryUpdateManyWithWhereWithoutFarmIncomeHistoryUpdateByRelInput = {
    where: FarmIncomeHistoryScalarWhereInput
    data: XOR<FarmIncomeHistoryUpdateManyMutationInput, FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelInput>
  }

  export type FarmSpendingHistoryUpsertWithWhereUniqueWithoutFarmSpendingHistoryCreateByRelInput = {
    where: FarmSpendingHistoryWhereUniqueInput
    update: XOR<FarmSpendingHistoryUpdateWithoutFarmSpendingHistoryCreateByRelInput, FarmSpendingHistoryUncheckedUpdateWithoutFarmSpendingHistoryCreateByRelInput>
    create: XOR<FarmSpendingHistoryCreateWithoutFarmSpendingHistoryCreateByRelInput, FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingHistoryCreateByRelInput>
  }

  export type FarmSpendingHistoryUpdateWithWhereUniqueWithoutFarmSpendingHistoryCreateByRelInput = {
    where: FarmSpendingHistoryWhereUniqueInput
    data: XOR<FarmSpendingHistoryUpdateWithoutFarmSpendingHistoryCreateByRelInput, FarmSpendingHistoryUncheckedUpdateWithoutFarmSpendingHistoryCreateByRelInput>
  }

  export type FarmSpendingHistoryUpdateManyWithWhereWithoutFarmSpendingHistoryCreateByRelInput = {
    where: FarmSpendingHistoryScalarWhereInput
    data: XOR<FarmSpendingHistoryUpdateManyMutationInput, FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelInput>
  }

  export type FarmSpendingHistoryScalarWhereInput = {
    AND?: FarmSpendingHistoryScalarWhereInput | FarmSpendingHistoryScalarWhereInput[]
    OR?: FarmSpendingHistoryScalarWhereInput[]
    NOT?: FarmSpendingHistoryScalarWhereInput | FarmSpendingHistoryScalarWhereInput[]
    revId?: BigIntFilter<"FarmSpendingHistory"> | bigint | number
    id?: BigIntFilter<"FarmSpendingHistory"> | bigint | number
    spendingTypeId?: BigIntFilter<"FarmSpendingHistory"> | bigint | number
    detail?: StringNullableFilter<"FarmSpendingHistory"> | string | null
    funds?: BigIntFilter<"FarmSpendingHistory"> | bigint | number
    date?: DateTimeFilter<"FarmSpendingHistory"> | Date | string
    deleted?: BoolFilter<"FarmSpendingHistory"> | boolean
    createAt?: DateTimeFilter<"FarmSpendingHistory"> | Date | string
    createBy?: BigIntNullableFilter<"FarmSpendingHistory"> | bigint | number | null
    updatedAt?: DateTimeFilter<"FarmSpendingHistory"> | Date | string
    updatedBy?: BigIntNullableFilter<"FarmSpendingHistory"> | bigint | number | null
  }

  export type FarmSpendingHistoryUpsertWithWhereUniqueWithoutFarmSpendingHistoryUpdateByRelInput = {
    where: FarmSpendingHistoryWhereUniqueInput
    update: XOR<FarmSpendingHistoryUpdateWithoutFarmSpendingHistoryUpdateByRelInput, FarmSpendingHistoryUncheckedUpdateWithoutFarmSpendingHistoryUpdateByRelInput>
    create: XOR<FarmSpendingHistoryCreateWithoutFarmSpendingHistoryUpdateByRelInput, FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingHistoryUpdateByRelInput>
  }

  export type FarmSpendingHistoryUpdateWithWhereUniqueWithoutFarmSpendingHistoryUpdateByRelInput = {
    where: FarmSpendingHistoryWhereUniqueInput
    data: XOR<FarmSpendingHistoryUpdateWithoutFarmSpendingHistoryUpdateByRelInput, FarmSpendingHistoryUncheckedUpdateWithoutFarmSpendingHistoryUpdateByRelInput>
  }

  export type FarmSpendingHistoryUpdateManyWithWhereWithoutFarmSpendingHistoryUpdateByRelInput = {
    where: FarmSpendingHistoryScalarWhereInput
    data: XOR<FarmSpendingHistoryUpdateManyMutationInput, FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelInput>
  }

  export type UserCreateWithoutUserHistoryCreatedByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutUserHistoryCreatedByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutUserHistoryCreatedByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserHistoryCreatedByRelInput, UserUncheckedCreateWithoutUserHistoryCreatedByRelInput>
  }

  export type UserCreateWithoutUserHistoryUpdatedByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutUserHistoryUpdatedByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutUserHistoryUpdatedByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserHistoryUpdatedByRelInput, UserUncheckedCreateWithoutUserHistoryUpdatedByRelInput>
  }

  export type UserCreateWithoutUserHistoryIdRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutUserHistoryIdRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutUserHistoryIdRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserHistoryIdRelInput, UserUncheckedCreateWithoutUserHistoryIdRelInput>
  }

  export type UserUpsertWithoutUserHistoryCreatedByRelInput = {
    update: XOR<UserUpdateWithoutUserHistoryCreatedByRelInput, UserUncheckedUpdateWithoutUserHistoryCreatedByRelInput>
    create: XOR<UserCreateWithoutUserHistoryCreatedByRelInput, UserUncheckedCreateWithoutUserHistoryCreatedByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUserHistoryCreatedByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUserHistoryCreatedByRelInput, UserUncheckedUpdateWithoutUserHistoryCreatedByRelInput>
  }

  export type UserUpdateWithoutUserHistoryCreatedByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutUserHistoryCreatedByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUpsertWithoutUserHistoryUpdatedByRelInput = {
    update: XOR<UserUpdateWithoutUserHistoryUpdatedByRelInput, UserUncheckedUpdateWithoutUserHistoryUpdatedByRelInput>
    create: XOR<UserCreateWithoutUserHistoryUpdatedByRelInput, UserUncheckedCreateWithoutUserHistoryUpdatedByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUserHistoryUpdatedByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUserHistoryUpdatedByRelInput, UserUncheckedUpdateWithoutUserHistoryUpdatedByRelInput>
  }

  export type UserUpdateWithoutUserHistoryUpdatedByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutUserHistoryUpdatedByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUpsertWithoutUserHistoryIdRelInput = {
    update: XOR<UserUpdateWithoutUserHistoryIdRelInput, UserUncheckedUpdateWithoutUserHistoryIdRelInput>
    create: XOR<UserCreateWithoutUserHistoryIdRelInput, UserUncheckedCreateWithoutUserHistoryIdRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUserHistoryIdRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUserHistoryIdRelInput, UserUncheckedUpdateWithoutUserHistoryIdRelInput>
  }

  export type UserUpdateWithoutUserHistoryIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutUserHistoryIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type ChurchIncomeTypeCreateWithoutChurchIncomeTypeIdRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    churchIncomeTypeCreateByRel?: UserCreateNestedOneWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: UserCreateNestedOneWithoutChurchIncomeTypeUpdateByRelInput
    churchIncomeTypeHistoryIdRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeTypeHistoryIdRelInput
  }

  export type ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeIdRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    churchIncomeTypeHistoryIdRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeTypeHistoryIdRelInput
  }

  export type ChurchIncomeTypeCreateOrConnectWithoutChurchIncomeTypeIdRelInput = {
    where: ChurchIncomeTypeWhereUniqueInput
    create: XOR<ChurchIncomeTypeCreateWithoutChurchIncomeTypeIdRelInput, ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeIdRelInput>
  }

  export type UserCreateWithoutChurchIncomeCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutChurchIncomeCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutChurchIncomeCreateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutChurchIncomeCreateByRelInput, UserUncheckedCreateWithoutChurchIncomeCreateByRelInput>
  }

  export type UserCreateWithoutChurchIncomeUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutChurchIncomeUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutChurchIncomeUpdateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutChurchIncomeUpdateByRelInput, UserUncheckedCreateWithoutChurchIncomeUpdateByRelInput>
  }

  export type ChurchIncomeTypeUpsertWithoutChurchIncomeTypeIdRelInput = {
    update: XOR<ChurchIncomeTypeUpdateWithoutChurchIncomeTypeIdRelInput, ChurchIncomeTypeUncheckedUpdateWithoutChurchIncomeTypeIdRelInput>
    create: XOR<ChurchIncomeTypeCreateWithoutChurchIncomeTypeIdRelInput, ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeIdRelInput>
    where?: ChurchIncomeTypeWhereInput
  }

  export type ChurchIncomeTypeUpdateToOneWithWhereWithoutChurchIncomeTypeIdRelInput = {
    where?: ChurchIncomeTypeWhereInput
    data: XOR<ChurchIncomeTypeUpdateWithoutChurchIncomeTypeIdRelInput, ChurchIncomeTypeUncheckedUpdateWithoutChurchIncomeTypeIdRelInput>
  }

  export type ChurchIncomeTypeUpdateWithoutChurchIncomeTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchIncomeTypeCreateByRel?: UserUpdateOneWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: UserUpdateOneWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchIncomeTypeHistoryIdRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeTypeHistoryIdRelNestedInput
  }

  export type ChurchIncomeTypeUncheckedUpdateWithoutChurchIncomeTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    churchIncomeTypeHistoryIdRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeTypeHistoryIdRelNestedInput
  }

  export type UserUpsertWithoutChurchIncomeCreateByRelInput = {
    update: XOR<UserUpdateWithoutChurchIncomeCreateByRelInput, UserUncheckedUpdateWithoutChurchIncomeCreateByRelInput>
    create: XOR<UserCreateWithoutChurchIncomeCreateByRelInput, UserUncheckedCreateWithoutChurchIncomeCreateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutChurchIncomeCreateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutChurchIncomeCreateByRelInput, UserUncheckedUpdateWithoutChurchIncomeCreateByRelInput>
  }

  export type UserUpdateWithoutChurchIncomeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutChurchIncomeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUpsertWithoutChurchIncomeUpdateByRelInput = {
    update: XOR<UserUpdateWithoutChurchIncomeUpdateByRelInput, UserUncheckedUpdateWithoutChurchIncomeUpdateByRelInput>
    create: XOR<UserCreateWithoutChurchIncomeUpdateByRelInput, UserUncheckedCreateWithoutChurchIncomeUpdateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutChurchIncomeUpdateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutChurchIncomeUpdateByRelInput, UserUncheckedUpdateWithoutChurchIncomeUpdateByRelInput>
  }

  export type UserUpdateWithoutChurchIncomeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutChurchIncomeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type ChurchIncomeTypeCreateWithoutChurchIncomeTypeHistoryIdRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    churchIncomeTypeCreateByRel?: UserCreateNestedOneWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: UserCreateNestedOneWithoutChurchIncomeTypeUpdateByRelInput
    churchIncomeTypeIdRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeTypeIdRelInput
  }

  export type ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeHistoryIdRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    churchIncomeTypeIdRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeTypeIdRelInput
  }

  export type ChurchIncomeTypeCreateOrConnectWithoutChurchIncomeTypeHistoryIdRelInput = {
    where: ChurchIncomeTypeWhereUniqueInput
    create: XOR<ChurchIncomeTypeCreateWithoutChurchIncomeTypeHistoryIdRelInput, ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeHistoryIdRelInput>
  }

  export type UserCreateWithoutChurchIncomeHistoryCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutChurchIncomeHistoryCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutChurchIncomeHistoryCreateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutChurchIncomeHistoryCreateByRelInput, UserUncheckedCreateWithoutChurchIncomeHistoryCreateByRelInput>
  }

  export type UserCreateWithoutChurchIncomeHistoryUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutChurchIncomeHistoryUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutChurchIncomeHistoryUpdateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutChurchIncomeHistoryUpdateByRelInput, UserUncheckedCreateWithoutChurchIncomeHistoryUpdateByRelInput>
  }

  export type ChurchIncomeTypeUpsertWithoutChurchIncomeTypeHistoryIdRelInput = {
    update: XOR<ChurchIncomeTypeUpdateWithoutChurchIncomeTypeHistoryIdRelInput, ChurchIncomeTypeUncheckedUpdateWithoutChurchIncomeTypeHistoryIdRelInput>
    create: XOR<ChurchIncomeTypeCreateWithoutChurchIncomeTypeHistoryIdRelInput, ChurchIncomeTypeUncheckedCreateWithoutChurchIncomeTypeHistoryIdRelInput>
    where?: ChurchIncomeTypeWhereInput
  }

  export type ChurchIncomeTypeUpdateToOneWithWhereWithoutChurchIncomeTypeHistoryIdRelInput = {
    where?: ChurchIncomeTypeWhereInput
    data: XOR<ChurchIncomeTypeUpdateWithoutChurchIncomeTypeHistoryIdRelInput, ChurchIncomeTypeUncheckedUpdateWithoutChurchIncomeTypeHistoryIdRelInput>
  }

  export type ChurchIncomeTypeUpdateWithoutChurchIncomeTypeHistoryIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchIncomeTypeCreateByRel?: UserUpdateOneWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: UserUpdateOneWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchIncomeTypeIdRel?: ChurchIncomeUpdateManyWithoutChurchIncomeTypeIdRelNestedInput
  }

  export type ChurchIncomeTypeUncheckedUpdateWithoutChurchIncomeTypeHistoryIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    churchIncomeTypeIdRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeTypeIdRelNestedInput
  }

  export type UserUpsertWithoutChurchIncomeHistoryCreateByRelInput = {
    update: XOR<UserUpdateWithoutChurchIncomeHistoryCreateByRelInput, UserUncheckedUpdateWithoutChurchIncomeHistoryCreateByRelInput>
    create: XOR<UserCreateWithoutChurchIncomeHistoryCreateByRelInput, UserUncheckedCreateWithoutChurchIncomeHistoryCreateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutChurchIncomeHistoryCreateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutChurchIncomeHistoryCreateByRelInput, UserUncheckedUpdateWithoutChurchIncomeHistoryCreateByRelInput>
  }

  export type UserUpdateWithoutChurchIncomeHistoryCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutChurchIncomeHistoryCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUpsertWithoutChurchIncomeHistoryUpdateByRelInput = {
    update: XOR<UserUpdateWithoutChurchIncomeHistoryUpdateByRelInput, UserUncheckedUpdateWithoutChurchIncomeHistoryUpdateByRelInput>
    create: XOR<UserCreateWithoutChurchIncomeHistoryUpdateByRelInput, UserUncheckedCreateWithoutChurchIncomeHistoryUpdateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutChurchIncomeHistoryUpdateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutChurchIncomeHistoryUpdateByRelInput, UserUncheckedUpdateWithoutChurchIncomeHistoryUpdateByRelInput>
  }

  export type UserUpdateWithoutChurchIncomeHistoryUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutChurchIncomeHistoryUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserCreateWithoutChurchIncomeTypeCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutChurchIncomeTypeCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutChurchIncomeTypeCreateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutChurchIncomeTypeCreateByRelInput, UserUncheckedCreateWithoutChurchIncomeTypeCreateByRelInput>
  }

  export type UserCreateWithoutChurchIncomeTypeUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutChurchIncomeTypeUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutChurchIncomeTypeUpdateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutChurchIncomeTypeUpdateByRelInput, UserUncheckedCreateWithoutChurchIncomeTypeUpdateByRelInput>
  }

  export type ChurchIncomeCreateWithoutChurchIncomeTypeIdRelInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    churchIncomeCreateByRel?: UserCreateNestedOneWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: UserCreateNestedOneWithoutChurchIncomeUpdateByRelInput
  }

  export type ChurchIncomeUncheckedCreateWithoutChurchIncomeTypeIdRelInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchIncomeCreateOrConnectWithoutChurchIncomeTypeIdRelInput = {
    where: ChurchIncomeWhereUniqueInput
    create: XOR<ChurchIncomeCreateWithoutChurchIncomeTypeIdRelInput, ChurchIncomeUncheckedCreateWithoutChurchIncomeTypeIdRelInput>
  }

  export type ChurchIncomeCreateManyChurchIncomeTypeIdRelInputEnvelope = {
    data: ChurchIncomeCreateManyChurchIncomeTypeIdRelInput | ChurchIncomeCreateManyChurchIncomeTypeIdRelInput[]
    skipDuplicates?: boolean
  }

  export type ChurchIncomeHistoryCreateWithoutChurchIncomeTypeHistoryIdRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    churchIncomeHistoryCreateByRel?: UserCreateNestedOneWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: UserCreateNestedOneWithoutChurchIncomeHistoryUpdateByRelInput
  }

  export type ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeTypeHistoryIdRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchIncomeHistoryCreateOrConnectWithoutChurchIncomeTypeHistoryIdRelInput = {
    where: ChurchIncomeHistoryWhereUniqueInput
    create: XOR<ChurchIncomeHistoryCreateWithoutChurchIncomeTypeHistoryIdRelInput, ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeTypeHistoryIdRelInput>
  }

  export type ChurchIncomeHistoryCreateManyChurchIncomeTypeHistoryIdRelInputEnvelope = {
    data: ChurchIncomeHistoryCreateManyChurchIncomeTypeHistoryIdRelInput | ChurchIncomeHistoryCreateManyChurchIncomeTypeHistoryIdRelInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutChurchIncomeTypeCreateByRelInput = {
    update: XOR<UserUpdateWithoutChurchIncomeTypeCreateByRelInput, UserUncheckedUpdateWithoutChurchIncomeTypeCreateByRelInput>
    create: XOR<UserCreateWithoutChurchIncomeTypeCreateByRelInput, UserUncheckedCreateWithoutChurchIncomeTypeCreateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutChurchIncomeTypeCreateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutChurchIncomeTypeCreateByRelInput, UserUncheckedUpdateWithoutChurchIncomeTypeCreateByRelInput>
  }

  export type UserUpdateWithoutChurchIncomeTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutChurchIncomeTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUpsertWithoutChurchIncomeTypeUpdateByRelInput = {
    update: XOR<UserUpdateWithoutChurchIncomeTypeUpdateByRelInput, UserUncheckedUpdateWithoutChurchIncomeTypeUpdateByRelInput>
    create: XOR<UserCreateWithoutChurchIncomeTypeUpdateByRelInput, UserUncheckedCreateWithoutChurchIncomeTypeUpdateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutChurchIncomeTypeUpdateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutChurchIncomeTypeUpdateByRelInput, UserUncheckedUpdateWithoutChurchIncomeTypeUpdateByRelInput>
  }

  export type UserUpdateWithoutChurchIncomeTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutChurchIncomeTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type ChurchIncomeUpsertWithWhereUniqueWithoutChurchIncomeTypeIdRelInput = {
    where: ChurchIncomeWhereUniqueInput
    update: XOR<ChurchIncomeUpdateWithoutChurchIncomeTypeIdRelInput, ChurchIncomeUncheckedUpdateWithoutChurchIncomeTypeIdRelInput>
    create: XOR<ChurchIncomeCreateWithoutChurchIncomeTypeIdRelInput, ChurchIncomeUncheckedCreateWithoutChurchIncomeTypeIdRelInput>
  }

  export type ChurchIncomeUpdateWithWhereUniqueWithoutChurchIncomeTypeIdRelInput = {
    where: ChurchIncomeWhereUniqueInput
    data: XOR<ChurchIncomeUpdateWithoutChurchIncomeTypeIdRelInput, ChurchIncomeUncheckedUpdateWithoutChurchIncomeTypeIdRelInput>
  }

  export type ChurchIncomeUpdateManyWithWhereWithoutChurchIncomeTypeIdRelInput = {
    where: ChurchIncomeScalarWhereInput
    data: XOR<ChurchIncomeUpdateManyMutationInput, ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeTypeIdRelInput>
  }

  export type ChurchIncomeHistoryUpsertWithWhereUniqueWithoutChurchIncomeTypeHistoryIdRelInput = {
    where: ChurchIncomeHistoryWhereUniqueInput
    update: XOR<ChurchIncomeHistoryUpdateWithoutChurchIncomeTypeHistoryIdRelInput, ChurchIncomeHistoryUncheckedUpdateWithoutChurchIncomeTypeHistoryIdRelInput>
    create: XOR<ChurchIncomeHistoryCreateWithoutChurchIncomeTypeHistoryIdRelInput, ChurchIncomeHistoryUncheckedCreateWithoutChurchIncomeTypeHistoryIdRelInput>
  }

  export type ChurchIncomeHistoryUpdateWithWhereUniqueWithoutChurchIncomeTypeHistoryIdRelInput = {
    where: ChurchIncomeHistoryWhereUniqueInput
    data: XOR<ChurchIncomeHistoryUpdateWithoutChurchIncomeTypeHistoryIdRelInput, ChurchIncomeHistoryUncheckedUpdateWithoutChurchIncomeTypeHistoryIdRelInput>
  }

  export type ChurchIncomeHistoryUpdateManyWithWhereWithoutChurchIncomeTypeHistoryIdRelInput = {
    where: ChurchIncomeHistoryScalarWhereInput
    data: XOR<ChurchIncomeHistoryUpdateManyMutationInput, ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeTypeHistoryIdRelInput>
  }

  export type ChurchSpendingTypeCreateWithoutChurchSpendingTypeIdRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    createAt?: Date | string
    deleted?: boolean
    updatedAt?: Date | string
    churchSpendingTypeCreateByRel?: UserCreateNestedOneWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: UserCreateNestedOneWithoutChurchSpendingTypeUpdateByRelInput
    churchSpendingTypeHistoryIdRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingTypeHistoryIdRelInput
  }

  export type ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeIdRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    createAt?: Date | string
    createBy?: bigint | number | null
    deleted?: boolean
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    churchSpendingTypeHistoryIdRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingTypeHistoryIdRelInput
  }

  export type ChurchSpendingTypeCreateOrConnectWithoutChurchSpendingTypeIdRelInput = {
    where: ChurchSpendingTypeWhereUniqueInput
    create: XOR<ChurchSpendingTypeCreateWithoutChurchSpendingTypeIdRelInput, ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeIdRelInput>
  }

  export type UserCreateWithoutChurchSpendingCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutChurchSpendingCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutChurchSpendingCreateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutChurchSpendingCreateByRelInput, UserUncheckedCreateWithoutChurchSpendingCreateByRelInput>
  }

  export type UserCreateWithoutChurchSpendingUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutChurchSpendingUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutChurchSpendingUpdateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutChurchSpendingUpdateByRelInput, UserUncheckedCreateWithoutChurchSpendingUpdateByRelInput>
  }

  export type ChurchSpendingTypeUpsertWithoutChurchSpendingTypeIdRelInput = {
    update: XOR<ChurchSpendingTypeUpdateWithoutChurchSpendingTypeIdRelInput, ChurchSpendingTypeUncheckedUpdateWithoutChurchSpendingTypeIdRelInput>
    create: XOR<ChurchSpendingTypeCreateWithoutChurchSpendingTypeIdRelInput, ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeIdRelInput>
    where?: ChurchSpendingTypeWhereInput
  }

  export type ChurchSpendingTypeUpdateToOneWithWhereWithoutChurchSpendingTypeIdRelInput = {
    where?: ChurchSpendingTypeWhereInput
    data: XOR<ChurchSpendingTypeUpdateWithoutChurchSpendingTypeIdRelInput, ChurchSpendingTypeUncheckedUpdateWithoutChurchSpendingTypeIdRelInput>
  }

  export type ChurchSpendingTypeUpdateWithoutChurchSpendingTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchSpendingTypeCreateByRel?: UserUpdateOneWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: UserUpdateOneWithoutChurchSpendingTypeUpdateByRelNestedInput
    churchSpendingTypeHistoryIdRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingTypeHistoryIdRelNestedInput
  }

  export type ChurchSpendingTypeUncheckedUpdateWithoutChurchSpendingTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    churchSpendingTypeHistoryIdRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingTypeHistoryIdRelNestedInput
  }

  export type UserUpsertWithoutChurchSpendingCreateByRelInput = {
    update: XOR<UserUpdateWithoutChurchSpendingCreateByRelInput, UserUncheckedUpdateWithoutChurchSpendingCreateByRelInput>
    create: XOR<UserCreateWithoutChurchSpendingCreateByRelInput, UserUncheckedCreateWithoutChurchSpendingCreateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutChurchSpendingCreateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutChurchSpendingCreateByRelInput, UserUncheckedUpdateWithoutChurchSpendingCreateByRelInput>
  }

  export type UserUpdateWithoutChurchSpendingCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutChurchSpendingCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUpsertWithoutChurchSpendingUpdateByRelInput = {
    update: XOR<UserUpdateWithoutChurchSpendingUpdateByRelInput, UserUncheckedUpdateWithoutChurchSpendingUpdateByRelInput>
    create: XOR<UserCreateWithoutChurchSpendingUpdateByRelInput, UserUncheckedCreateWithoutChurchSpendingUpdateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutChurchSpendingUpdateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutChurchSpendingUpdateByRelInput, UserUncheckedUpdateWithoutChurchSpendingUpdateByRelInput>
  }

  export type UserUpdateWithoutChurchSpendingUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutChurchSpendingUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type ChurchSpendingTypeCreateWithoutChurchSpendingTypeHistoryIdRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    createAt?: Date | string
    deleted?: boolean
    updatedAt?: Date | string
    churchSpendingTypeCreateByRel?: UserCreateNestedOneWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: UserCreateNestedOneWithoutChurchSpendingTypeUpdateByRelInput
    churchSpendingTypeIdRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingTypeIdRelInput
  }

  export type ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeHistoryIdRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    createAt?: Date | string
    createBy?: bigint | number | null
    deleted?: boolean
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    churchSpendingTypeIdRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingTypeIdRelInput
  }

  export type ChurchSpendingTypeCreateOrConnectWithoutChurchSpendingTypeHistoryIdRelInput = {
    where: ChurchSpendingTypeWhereUniqueInput
    create: XOR<ChurchSpendingTypeCreateWithoutChurchSpendingTypeHistoryIdRelInput, ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeHistoryIdRelInput>
  }

  export type UserCreateWithoutChurchSpendingHistoryCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutChurchSpendingHistoryCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutChurchSpendingHistoryCreateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutChurchSpendingHistoryCreateByRelInput, UserUncheckedCreateWithoutChurchSpendingHistoryCreateByRelInput>
  }

  export type UserCreateWithoutChurchSpendingHistoryUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutChurchSpendingHistoryUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutChurchSpendingHistoryUpdateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutChurchSpendingHistoryUpdateByRelInput, UserUncheckedCreateWithoutChurchSpendingHistoryUpdateByRelInput>
  }

  export type ChurchSpendingTypeUpsertWithoutChurchSpendingTypeHistoryIdRelInput = {
    update: XOR<ChurchSpendingTypeUpdateWithoutChurchSpendingTypeHistoryIdRelInput, ChurchSpendingTypeUncheckedUpdateWithoutChurchSpendingTypeHistoryIdRelInput>
    create: XOR<ChurchSpendingTypeCreateWithoutChurchSpendingTypeHistoryIdRelInput, ChurchSpendingTypeUncheckedCreateWithoutChurchSpendingTypeHistoryIdRelInput>
    where?: ChurchSpendingTypeWhereInput
  }

  export type ChurchSpendingTypeUpdateToOneWithWhereWithoutChurchSpendingTypeHistoryIdRelInput = {
    where?: ChurchSpendingTypeWhereInput
    data: XOR<ChurchSpendingTypeUpdateWithoutChurchSpendingTypeHistoryIdRelInput, ChurchSpendingTypeUncheckedUpdateWithoutChurchSpendingTypeHistoryIdRelInput>
  }

  export type ChurchSpendingTypeUpdateWithoutChurchSpendingTypeHistoryIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchSpendingTypeCreateByRel?: UserUpdateOneWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: UserUpdateOneWithoutChurchSpendingTypeUpdateByRelNestedInput
    churchSpendingTypeIdRel?: ChurchSpendingUpdateManyWithoutChurchSpendingTypeIdRelNestedInput
  }

  export type ChurchSpendingTypeUncheckedUpdateWithoutChurchSpendingTypeHistoryIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    churchSpendingTypeIdRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingTypeIdRelNestedInput
  }

  export type UserUpsertWithoutChurchSpendingHistoryCreateByRelInput = {
    update: XOR<UserUpdateWithoutChurchSpendingHistoryCreateByRelInput, UserUncheckedUpdateWithoutChurchSpendingHistoryCreateByRelInput>
    create: XOR<UserCreateWithoutChurchSpendingHistoryCreateByRelInput, UserUncheckedCreateWithoutChurchSpendingHistoryCreateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutChurchSpendingHistoryCreateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutChurchSpendingHistoryCreateByRelInput, UserUncheckedUpdateWithoutChurchSpendingHistoryCreateByRelInput>
  }

  export type UserUpdateWithoutChurchSpendingHistoryCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutChurchSpendingHistoryCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUpsertWithoutChurchSpendingHistoryUpdateByRelInput = {
    update: XOR<UserUpdateWithoutChurchSpendingHistoryUpdateByRelInput, UserUncheckedUpdateWithoutChurchSpendingHistoryUpdateByRelInput>
    create: XOR<UserCreateWithoutChurchSpendingHistoryUpdateByRelInput, UserUncheckedCreateWithoutChurchSpendingHistoryUpdateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutChurchSpendingHistoryUpdateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutChurchSpendingHistoryUpdateByRelInput, UserUncheckedUpdateWithoutChurchSpendingHistoryUpdateByRelInput>
  }

  export type UserUpdateWithoutChurchSpendingHistoryUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutChurchSpendingHistoryUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserCreateWithoutChurchSpendingTypeCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutChurchSpendingTypeCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutChurchSpendingTypeCreateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutChurchSpendingTypeCreateByRelInput, UserUncheckedCreateWithoutChurchSpendingTypeCreateByRelInput>
  }

  export type UserCreateWithoutChurchSpendingTypeUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutChurchSpendingTypeUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutChurchSpendingTypeUpdateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutChurchSpendingTypeUpdateByRelInput, UserUncheckedCreateWithoutChurchSpendingTypeUpdateByRelInput>
  }

  export type ChurchSpendingCreateWithoutChurchSpendingTypeIdRelInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    bill?: string | null
    billNumber?: string | null
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    churchSpendingCreateByRel?: UserCreateNestedOneWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: UserCreateNestedOneWithoutChurchSpendingUpdateByRelInput
  }

  export type ChurchSpendingUncheckedCreateWithoutChurchSpendingTypeIdRelInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    bill?: string | null
    billNumber?: string | null
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchSpendingCreateOrConnectWithoutChurchSpendingTypeIdRelInput = {
    where: ChurchSpendingWhereUniqueInput
    create: XOR<ChurchSpendingCreateWithoutChurchSpendingTypeIdRelInput, ChurchSpendingUncheckedCreateWithoutChurchSpendingTypeIdRelInput>
  }

  export type ChurchSpendingCreateManyChurchSpendingTypeIdRelInputEnvelope = {
    data: ChurchSpendingCreateManyChurchSpendingTypeIdRelInput | ChurchSpendingCreateManyChurchSpendingTypeIdRelInput[]
    skipDuplicates?: boolean
  }

  export type ChurchSpendingHistoryCreateWithoutChurchSpendingTypeHistoryIdRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    bill: string
    billNumber: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    churchSpendingHistoryCreateByRel?: UserCreateNestedOneWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: UserCreateNestedOneWithoutChurchSpendingHistoryUpdateByRelInput
  }

  export type ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingTypeHistoryIdRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    bill: string
    billNumber: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchSpendingHistoryCreateOrConnectWithoutChurchSpendingTypeHistoryIdRelInput = {
    where: ChurchSpendingHistoryWhereUniqueInput
    create: XOR<ChurchSpendingHistoryCreateWithoutChurchSpendingTypeHistoryIdRelInput, ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingTypeHistoryIdRelInput>
  }

  export type ChurchSpendingHistoryCreateManyChurchSpendingTypeHistoryIdRelInputEnvelope = {
    data: ChurchSpendingHistoryCreateManyChurchSpendingTypeHistoryIdRelInput | ChurchSpendingHistoryCreateManyChurchSpendingTypeHistoryIdRelInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutChurchSpendingTypeCreateByRelInput = {
    update: XOR<UserUpdateWithoutChurchSpendingTypeCreateByRelInput, UserUncheckedUpdateWithoutChurchSpendingTypeCreateByRelInput>
    create: XOR<UserCreateWithoutChurchSpendingTypeCreateByRelInput, UserUncheckedCreateWithoutChurchSpendingTypeCreateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutChurchSpendingTypeCreateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutChurchSpendingTypeCreateByRelInput, UserUncheckedUpdateWithoutChurchSpendingTypeCreateByRelInput>
  }

  export type UserUpdateWithoutChurchSpendingTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutChurchSpendingTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUpsertWithoutChurchSpendingTypeUpdateByRelInput = {
    update: XOR<UserUpdateWithoutChurchSpendingTypeUpdateByRelInput, UserUncheckedUpdateWithoutChurchSpendingTypeUpdateByRelInput>
    create: XOR<UserCreateWithoutChurchSpendingTypeUpdateByRelInput, UserUncheckedCreateWithoutChurchSpendingTypeUpdateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutChurchSpendingTypeUpdateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutChurchSpendingTypeUpdateByRelInput, UserUncheckedUpdateWithoutChurchSpendingTypeUpdateByRelInput>
  }

  export type UserUpdateWithoutChurchSpendingTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutChurchSpendingTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type ChurchSpendingUpsertWithWhereUniqueWithoutChurchSpendingTypeIdRelInput = {
    where: ChurchSpendingWhereUniqueInput
    update: XOR<ChurchSpendingUpdateWithoutChurchSpendingTypeIdRelInput, ChurchSpendingUncheckedUpdateWithoutChurchSpendingTypeIdRelInput>
    create: XOR<ChurchSpendingCreateWithoutChurchSpendingTypeIdRelInput, ChurchSpendingUncheckedCreateWithoutChurchSpendingTypeIdRelInput>
  }

  export type ChurchSpendingUpdateWithWhereUniqueWithoutChurchSpendingTypeIdRelInput = {
    where: ChurchSpendingWhereUniqueInput
    data: XOR<ChurchSpendingUpdateWithoutChurchSpendingTypeIdRelInput, ChurchSpendingUncheckedUpdateWithoutChurchSpendingTypeIdRelInput>
  }

  export type ChurchSpendingUpdateManyWithWhereWithoutChurchSpendingTypeIdRelInput = {
    where: ChurchSpendingScalarWhereInput
    data: XOR<ChurchSpendingUpdateManyMutationInput, ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingTypeIdRelInput>
  }

  export type ChurchSpendingHistoryUpsertWithWhereUniqueWithoutChurchSpendingTypeHistoryIdRelInput = {
    where: ChurchSpendingHistoryWhereUniqueInput
    update: XOR<ChurchSpendingHistoryUpdateWithoutChurchSpendingTypeHistoryIdRelInput, ChurchSpendingHistoryUncheckedUpdateWithoutChurchSpendingTypeHistoryIdRelInput>
    create: XOR<ChurchSpendingHistoryCreateWithoutChurchSpendingTypeHistoryIdRelInput, ChurchSpendingHistoryUncheckedCreateWithoutChurchSpendingTypeHistoryIdRelInput>
  }

  export type ChurchSpendingHistoryUpdateWithWhereUniqueWithoutChurchSpendingTypeHistoryIdRelInput = {
    where: ChurchSpendingHistoryWhereUniqueInput
    data: XOR<ChurchSpendingHistoryUpdateWithoutChurchSpendingTypeHistoryIdRelInput, ChurchSpendingHistoryUncheckedUpdateWithoutChurchSpendingTypeHistoryIdRelInput>
  }

  export type ChurchSpendingHistoryUpdateManyWithWhereWithoutChurchSpendingTypeHistoryIdRelInput = {
    where: ChurchSpendingHistoryScalarWhereInput
    data: XOR<ChurchSpendingHistoryUpdateManyMutationInput, ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingTypeHistoryIdRelInput>
  }

  export type StoreIncomeTypeCreateWithoutStoreIncomeTypeIdRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    storeIncomeTypeCreateByRel?: UserCreateNestedOneWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: UserCreateNestedOneWithoutStoreIncomeTypeUpdateByRelInput
    storeIncomeTypeHistoryIdRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeTypeHistoryIdRelInput
  }

  export type StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeIdRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    storeIncomeTypeHistoryIdRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeTypeHistoryIdRelInput
  }

  export type StoreIncomeTypeCreateOrConnectWithoutStoreIncomeTypeIdRelInput = {
    where: StoreIncomeTypeWhereUniqueInput
    create: XOR<StoreIncomeTypeCreateWithoutStoreIncomeTypeIdRelInput, StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeIdRelInput>
  }

  export type UserCreateWithoutStoreIncomeCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutStoreIncomeCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutStoreIncomeCreateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutStoreIncomeCreateByRelInput, UserUncheckedCreateWithoutStoreIncomeCreateByRelInput>
  }

  export type UserCreateWithoutStoreIncomeUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutStoreIncomeUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutStoreIncomeUpdateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutStoreIncomeUpdateByRelInput, UserUncheckedCreateWithoutStoreIncomeUpdateByRelInput>
  }

  export type StoreIncomeTypeUpsertWithoutStoreIncomeTypeIdRelInput = {
    update: XOR<StoreIncomeTypeUpdateWithoutStoreIncomeTypeIdRelInput, StoreIncomeTypeUncheckedUpdateWithoutStoreIncomeTypeIdRelInput>
    create: XOR<StoreIncomeTypeCreateWithoutStoreIncomeTypeIdRelInput, StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeIdRelInput>
    where?: StoreIncomeTypeWhereInput
  }

  export type StoreIncomeTypeUpdateToOneWithWhereWithoutStoreIncomeTypeIdRelInput = {
    where?: StoreIncomeTypeWhereInput
    data: XOR<StoreIncomeTypeUpdateWithoutStoreIncomeTypeIdRelInput, StoreIncomeTypeUncheckedUpdateWithoutStoreIncomeTypeIdRelInput>
  }

  export type StoreIncomeTypeUpdateWithoutStoreIncomeTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeIncomeTypeCreateByRel?: UserUpdateOneWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: UserUpdateOneWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeIncomeTypeHistoryIdRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeTypeHistoryIdRelNestedInput
  }

  export type StoreIncomeTypeUncheckedUpdateWithoutStoreIncomeTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    storeIncomeTypeHistoryIdRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeTypeHistoryIdRelNestedInput
  }

  export type UserUpsertWithoutStoreIncomeCreateByRelInput = {
    update: XOR<UserUpdateWithoutStoreIncomeCreateByRelInput, UserUncheckedUpdateWithoutStoreIncomeCreateByRelInput>
    create: XOR<UserCreateWithoutStoreIncomeCreateByRelInput, UserUncheckedCreateWithoutStoreIncomeCreateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutStoreIncomeCreateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutStoreIncomeCreateByRelInput, UserUncheckedUpdateWithoutStoreIncomeCreateByRelInput>
  }

  export type UserUpdateWithoutStoreIncomeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutStoreIncomeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUpsertWithoutStoreIncomeUpdateByRelInput = {
    update: XOR<UserUpdateWithoutStoreIncomeUpdateByRelInput, UserUncheckedUpdateWithoutStoreIncomeUpdateByRelInput>
    create: XOR<UserCreateWithoutStoreIncomeUpdateByRelInput, UserUncheckedCreateWithoutStoreIncomeUpdateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutStoreIncomeUpdateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutStoreIncomeUpdateByRelInput, UserUncheckedUpdateWithoutStoreIncomeUpdateByRelInput>
  }

  export type UserUpdateWithoutStoreIncomeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutStoreIncomeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type StoreIncomeTypeCreateWithoutStoreIncomeTypeHistoryIdRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    storeIncomeTypeCreateByRel?: UserCreateNestedOneWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: UserCreateNestedOneWithoutStoreIncomeTypeUpdateByRelInput
    storeIncomeTypeIdRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeTypeIdRelInput
  }

  export type StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeHistoryIdRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    storeIncomeTypeIdRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeTypeIdRelInput
  }

  export type StoreIncomeTypeCreateOrConnectWithoutStoreIncomeTypeHistoryIdRelInput = {
    where: StoreIncomeTypeWhereUniqueInput
    create: XOR<StoreIncomeTypeCreateWithoutStoreIncomeTypeHistoryIdRelInput, StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeHistoryIdRelInput>
  }

  export type UserCreateWithoutStoreIncomeHistoryCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutStoreIncomeHistoryCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutStoreIncomeHistoryCreateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutStoreIncomeHistoryCreateByRelInput, UserUncheckedCreateWithoutStoreIncomeHistoryCreateByRelInput>
  }

  export type UserCreateWithoutStoreIncomeHistoryUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutStoreIncomeHistoryUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutStoreIncomeHistoryUpdateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutStoreIncomeHistoryUpdateByRelInput, UserUncheckedCreateWithoutStoreIncomeHistoryUpdateByRelInput>
  }

  export type StoreIncomeTypeUpsertWithoutStoreIncomeTypeHistoryIdRelInput = {
    update: XOR<StoreIncomeTypeUpdateWithoutStoreIncomeTypeHistoryIdRelInput, StoreIncomeTypeUncheckedUpdateWithoutStoreIncomeTypeHistoryIdRelInput>
    create: XOR<StoreIncomeTypeCreateWithoutStoreIncomeTypeHistoryIdRelInput, StoreIncomeTypeUncheckedCreateWithoutStoreIncomeTypeHistoryIdRelInput>
    where?: StoreIncomeTypeWhereInput
  }

  export type StoreIncomeTypeUpdateToOneWithWhereWithoutStoreIncomeTypeHistoryIdRelInput = {
    where?: StoreIncomeTypeWhereInput
    data: XOR<StoreIncomeTypeUpdateWithoutStoreIncomeTypeHistoryIdRelInput, StoreIncomeTypeUncheckedUpdateWithoutStoreIncomeTypeHistoryIdRelInput>
  }

  export type StoreIncomeTypeUpdateWithoutStoreIncomeTypeHistoryIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeIncomeTypeCreateByRel?: UserUpdateOneWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: UserUpdateOneWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeIncomeTypeIdRel?: StoreIncomeUpdateManyWithoutStoreIncomeTypeIdRelNestedInput
  }

  export type StoreIncomeTypeUncheckedUpdateWithoutStoreIncomeTypeHistoryIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    storeIncomeTypeIdRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeTypeIdRelNestedInput
  }

  export type UserUpsertWithoutStoreIncomeHistoryCreateByRelInput = {
    update: XOR<UserUpdateWithoutStoreIncomeHistoryCreateByRelInput, UserUncheckedUpdateWithoutStoreIncomeHistoryCreateByRelInput>
    create: XOR<UserCreateWithoutStoreIncomeHistoryCreateByRelInput, UserUncheckedCreateWithoutStoreIncomeHistoryCreateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutStoreIncomeHistoryCreateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutStoreIncomeHistoryCreateByRelInput, UserUncheckedUpdateWithoutStoreIncomeHistoryCreateByRelInput>
  }

  export type UserUpdateWithoutStoreIncomeHistoryCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutStoreIncomeHistoryCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUpsertWithoutStoreIncomeHistoryUpdateByRelInput = {
    update: XOR<UserUpdateWithoutStoreIncomeHistoryUpdateByRelInput, UserUncheckedUpdateWithoutStoreIncomeHistoryUpdateByRelInput>
    create: XOR<UserCreateWithoutStoreIncomeHistoryUpdateByRelInput, UserUncheckedCreateWithoutStoreIncomeHistoryUpdateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutStoreIncomeHistoryUpdateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutStoreIncomeHistoryUpdateByRelInput, UserUncheckedUpdateWithoutStoreIncomeHistoryUpdateByRelInput>
  }

  export type UserUpdateWithoutStoreIncomeHistoryUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutStoreIncomeHistoryUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserCreateWithoutStoreIncomeTypeCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutStoreIncomeTypeCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutStoreIncomeTypeCreateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutStoreIncomeTypeCreateByRelInput, UserUncheckedCreateWithoutStoreIncomeTypeCreateByRelInput>
  }

  export type UserCreateWithoutStoreIncomeTypeUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutStoreIncomeTypeUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutStoreIncomeTypeUpdateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutStoreIncomeTypeUpdateByRelInput, UserUncheckedCreateWithoutStoreIncomeTypeUpdateByRelInput>
  }

  export type StoreIncomeCreateWithoutStoreIncomeTypeIdRelInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    storeIncomeCreateByRel?: UserCreateNestedOneWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: UserCreateNestedOneWithoutStoreIncomeUpdateByRelInput
  }

  export type StoreIncomeUncheckedCreateWithoutStoreIncomeTypeIdRelInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreIncomeCreateOrConnectWithoutStoreIncomeTypeIdRelInput = {
    where: StoreIncomeWhereUniqueInput
    create: XOR<StoreIncomeCreateWithoutStoreIncomeTypeIdRelInput, StoreIncomeUncheckedCreateWithoutStoreIncomeTypeIdRelInput>
  }

  export type StoreIncomeCreateManyStoreIncomeTypeIdRelInputEnvelope = {
    data: StoreIncomeCreateManyStoreIncomeTypeIdRelInput | StoreIncomeCreateManyStoreIncomeTypeIdRelInput[]
    skipDuplicates?: boolean
  }

  export type StoreIncomeHistoryCreateWithoutStoreIncomeTypeHistoryIdRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    storeIncomeHistoryCreateByRel?: UserCreateNestedOneWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: UserCreateNestedOneWithoutStoreIncomeHistoryUpdateByRelInput
  }

  export type StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeTypeHistoryIdRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreIncomeHistoryCreateOrConnectWithoutStoreIncomeTypeHistoryIdRelInput = {
    where: StoreIncomeHistoryWhereUniqueInput
    create: XOR<StoreIncomeHistoryCreateWithoutStoreIncomeTypeHistoryIdRelInput, StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeTypeHistoryIdRelInput>
  }

  export type StoreIncomeHistoryCreateManyStoreIncomeTypeHistoryIdRelInputEnvelope = {
    data: StoreIncomeHistoryCreateManyStoreIncomeTypeHistoryIdRelInput | StoreIncomeHistoryCreateManyStoreIncomeTypeHistoryIdRelInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutStoreIncomeTypeCreateByRelInput = {
    update: XOR<UserUpdateWithoutStoreIncomeTypeCreateByRelInput, UserUncheckedUpdateWithoutStoreIncomeTypeCreateByRelInput>
    create: XOR<UserCreateWithoutStoreIncomeTypeCreateByRelInput, UserUncheckedCreateWithoutStoreIncomeTypeCreateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutStoreIncomeTypeCreateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutStoreIncomeTypeCreateByRelInput, UserUncheckedUpdateWithoutStoreIncomeTypeCreateByRelInput>
  }

  export type UserUpdateWithoutStoreIncomeTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutStoreIncomeTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUpsertWithoutStoreIncomeTypeUpdateByRelInput = {
    update: XOR<UserUpdateWithoutStoreIncomeTypeUpdateByRelInput, UserUncheckedUpdateWithoutStoreIncomeTypeUpdateByRelInput>
    create: XOR<UserCreateWithoutStoreIncomeTypeUpdateByRelInput, UserUncheckedCreateWithoutStoreIncomeTypeUpdateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutStoreIncomeTypeUpdateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutStoreIncomeTypeUpdateByRelInput, UserUncheckedUpdateWithoutStoreIncomeTypeUpdateByRelInput>
  }

  export type UserUpdateWithoutStoreIncomeTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutStoreIncomeTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type StoreIncomeUpsertWithWhereUniqueWithoutStoreIncomeTypeIdRelInput = {
    where: StoreIncomeWhereUniqueInput
    update: XOR<StoreIncomeUpdateWithoutStoreIncomeTypeIdRelInput, StoreIncomeUncheckedUpdateWithoutStoreIncomeTypeIdRelInput>
    create: XOR<StoreIncomeCreateWithoutStoreIncomeTypeIdRelInput, StoreIncomeUncheckedCreateWithoutStoreIncomeTypeIdRelInput>
  }

  export type StoreIncomeUpdateWithWhereUniqueWithoutStoreIncomeTypeIdRelInput = {
    where: StoreIncomeWhereUniqueInput
    data: XOR<StoreIncomeUpdateWithoutStoreIncomeTypeIdRelInput, StoreIncomeUncheckedUpdateWithoutStoreIncomeTypeIdRelInput>
  }

  export type StoreIncomeUpdateManyWithWhereWithoutStoreIncomeTypeIdRelInput = {
    where: StoreIncomeScalarWhereInput
    data: XOR<StoreIncomeUpdateManyMutationInput, StoreIncomeUncheckedUpdateManyWithoutStoreIncomeTypeIdRelInput>
  }

  export type StoreIncomeHistoryUpsertWithWhereUniqueWithoutStoreIncomeTypeHistoryIdRelInput = {
    where: StoreIncomeHistoryWhereUniqueInput
    update: XOR<StoreIncomeHistoryUpdateWithoutStoreIncomeTypeHistoryIdRelInput, StoreIncomeHistoryUncheckedUpdateWithoutStoreIncomeTypeHistoryIdRelInput>
    create: XOR<StoreIncomeHistoryCreateWithoutStoreIncomeTypeHistoryIdRelInput, StoreIncomeHistoryUncheckedCreateWithoutStoreIncomeTypeHistoryIdRelInput>
  }

  export type StoreIncomeHistoryUpdateWithWhereUniqueWithoutStoreIncomeTypeHistoryIdRelInput = {
    where: StoreIncomeHistoryWhereUniqueInput
    data: XOR<StoreIncomeHistoryUpdateWithoutStoreIncomeTypeHistoryIdRelInput, StoreIncomeHistoryUncheckedUpdateWithoutStoreIncomeTypeHistoryIdRelInput>
  }

  export type StoreIncomeHistoryUpdateManyWithWhereWithoutStoreIncomeTypeHistoryIdRelInput = {
    where: StoreIncomeHistoryScalarWhereInput
    data: XOR<StoreIncomeHistoryUpdateManyMutationInput, StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeTypeHistoryIdRelInput>
  }

  export type StoreSpendingTypeCreateWithoutStoreSpendingTypeIdRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    storeSpendingTypeCreateByRel?: UserCreateNestedOneWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: UserCreateNestedOneWithoutStoreSpendingTypeUpdateByRelInput
    storeSpendingTypeHistoryIdRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingTypeHistoryIdRelInput
  }

  export type StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeIdRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    storeSpendingTypeHistoryIdRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingTypeHistoryIdRelInput
  }

  export type StoreSpendingTypeCreateOrConnectWithoutStoreSpendingTypeIdRelInput = {
    where: StoreSpendingTypeWhereUniqueInput
    create: XOR<StoreSpendingTypeCreateWithoutStoreSpendingTypeIdRelInput, StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeIdRelInput>
  }

  export type UserCreateWithoutStoreSpendingCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutStoreSpendingCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutStoreSpendingCreateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutStoreSpendingCreateByRelInput, UserUncheckedCreateWithoutStoreSpendingCreateByRelInput>
  }

  export type UserCreateWithoutStoreSpendingUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutStoreSpendingUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutStoreSpendingUpdateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutStoreSpendingUpdateByRelInput, UserUncheckedCreateWithoutStoreSpendingUpdateByRelInput>
  }

  export type StoreSpendingTypeUpsertWithoutStoreSpendingTypeIdRelInput = {
    update: XOR<StoreSpendingTypeUpdateWithoutStoreSpendingTypeIdRelInput, StoreSpendingTypeUncheckedUpdateWithoutStoreSpendingTypeIdRelInput>
    create: XOR<StoreSpendingTypeCreateWithoutStoreSpendingTypeIdRelInput, StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeIdRelInput>
    where?: StoreSpendingTypeWhereInput
  }

  export type StoreSpendingTypeUpdateToOneWithWhereWithoutStoreSpendingTypeIdRelInput = {
    where?: StoreSpendingTypeWhereInput
    data: XOR<StoreSpendingTypeUpdateWithoutStoreSpendingTypeIdRelInput, StoreSpendingTypeUncheckedUpdateWithoutStoreSpendingTypeIdRelInput>
  }

  export type StoreSpendingTypeUpdateWithoutStoreSpendingTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeSpendingTypeCreateByRel?: UserUpdateOneWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: UserUpdateOneWithoutStoreSpendingTypeUpdateByRelNestedInput
    storeSpendingTypeHistoryIdRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingTypeHistoryIdRelNestedInput
  }

  export type StoreSpendingTypeUncheckedUpdateWithoutStoreSpendingTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    storeSpendingTypeHistoryIdRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingTypeHistoryIdRelNestedInput
  }

  export type UserUpsertWithoutStoreSpendingCreateByRelInput = {
    update: XOR<UserUpdateWithoutStoreSpendingCreateByRelInput, UserUncheckedUpdateWithoutStoreSpendingCreateByRelInput>
    create: XOR<UserCreateWithoutStoreSpendingCreateByRelInput, UserUncheckedCreateWithoutStoreSpendingCreateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutStoreSpendingCreateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutStoreSpendingCreateByRelInput, UserUncheckedUpdateWithoutStoreSpendingCreateByRelInput>
  }

  export type UserUpdateWithoutStoreSpendingCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutStoreSpendingCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUpsertWithoutStoreSpendingUpdateByRelInput = {
    update: XOR<UserUpdateWithoutStoreSpendingUpdateByRelInput, UserUncheckedUpdateWithoutStoreSpendingUpdateByRelInput>
    create: XOR<UserCreateWithoutStoreSpendingUpdateByRelInput, UserUncheckedCreateWithoutStoreSpendingUpdateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutStoreSpendingUpdateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutStoreSpendingUpdateByRelInput, UserUncheckedUpdateWithoutStoreSpendingUpdateByRelInput>
  }

  export type UserUpdateWithoutStoreSpendingUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutStoreSpendingUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type StoreSpendingTypeCreateWithoutStoreSpendingTypeHistoryIdRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    storeSpendingTypeCreateByRel?: UserCreateNestedOneWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: UserCreateNestedOneWithoutStoreSpendingTypeUpdateByRelInput
    storeSpendingTypeIdRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingTypeIdRelInput
  }

  export type StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeHistoryIdRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    storeSpendingTypeIdRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingTypeIdRelInput
  }

  export type StoreSpendingTypeCreateOrConnectWithoutStoreSpendingTypeHistoryIdRelInput = {
    where: StoreSpendingTypeWhereUniqueInput
    create: XOR<StoreSpendingTypeCreateWithoutStoreSpendingTypeHistoryIdRelInput, StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeHistoryIdRelInput>
  }

  export type UserCreateWithoutStoreSpendingHistoryCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutStoreSpendingHistoryCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutStoreSpendingHistoryCreateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutStoreSpendingHistoryCreateByRelInput, UserUncheckedCreateWithoutStoreSpendingHistoryCreateByRelInput>
  }

  export type UserCreateWithoutStoreSpendingHistoryUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutStoreSpendingHistoryUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutStoreSpendingHistoryUpdateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutStoreSpendingHistoryUpdateByRelInput, UserUncheckedCreateWithoutStoreSpendingHistoryUpdateByRelInput>
  }

  export type StoreSpendingTypeUpsertWithoutStoreSpendingTypeHistoryIdRelInput = {
    update: XOR<StoreSpendingTypeUpdateWithoutStoreSpendingTypeHistoryIdRelInput, StoreSpendingTypeUncheckedUpdateWithoutStoreSpendingTypeHistoryIdRelInput>
    create: XOR<StoreSpendingTypeCreateWithoutStoreSpendingTypeHistoryIdRelInput, StoreSpendingTypeUncheckedCreateWithoutStoreSpendingTypeHistoryIdRelInput>
    where?: StoreSpendingTypeWhereInput
  }

  export type StoreSpendingTypeUpdateToOneWithWhereWithoutStoreSpendingTypeHistoryIdRelInput = {
    where?: StoreSpendingTypeWhereInput
    data: XOR<StoreSpendingTypeUpdateWithoutStoreSpendingTypeHistoryIdRelInput, StoreSpendingTypeUncheckedUpdateWithoutStoreSpendingTypeHistoryIdRelInput>
  }

  export type StoreSpendingTypeUpdateWithoutStoreSpendingTypeHistoryIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeSpendingTypeCreateByRel?: UserUpdateOneWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: UserUpdateOneWithoutStoreSpendingTypeUpdateByRelNestedInput
    storeSpendingTypeIdRel?: StoreSpendingUpdateManyWithoutStoreSpendingTypeIdRelNestedInput
  }

  export type StoreSpendingTypeUncheckedUpdateWithoutStoreSpendingTypeHistoryIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    storeSpendingTypeIdRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingTypeIdRelNestedInput
  }

  export type UserUpsertWithoutStoreSpendingHistoryCreateByRelInput = {
    update: XOR<UserUpdateWithoutStoreSpendingHistoryCreateByRelInput, UserUncheckedUpdateWithoutStoreSpendingHistoryCreateByRelInput>
    create: XOR<UserCreateWithoutStoreSpendingHistoryCreateByRelInput, UserUncheckedCreateWithoutStoreSpendingHistoryCreateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutStoreSpendingHistoryCreateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutStoreSpendingHistoryCreateByRelInput, UserUncheckedUpdateWithoutStoreSpendingHistoryCreateByRelInput>
  }

  export type UserUpdateWithoutStoreSpendingHistoryCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutStoreSpendingHistoryCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUpsertWithoutStoreSpendingHistoryUpdateByRelInput = {
    update: XOR<UserUpdateWithoutStoreSpendingHistoryUpdateByRelInput, UserUncheckedUpdateWithoutStoreSpendingHistoryUpdateByRelInput>
    create: XOR<UserCreateWithoutStoreSpendingHistoryUpdateByRelInput, UserUncheckedCreateWithoutStoreSpendingHistoryUpdateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutStoreSpendingHistoryUpdateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutStoreSpendingHistoryUpdateByRelInput, UserUncheckedUpdateWithoutStoreSpendingHistoryUpdateByRelInput>
  }

  export type UserUpdateWithoutStoreSpendingHistoryUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutStoreSpendingHistoryUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserCreateWithoutStoreSpendingTypeCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutStoreSpendingTypeCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutStoreSpendingTypeCreateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutStoreSpendingTypeCreateByRelInput, UserUncheckedCreateWithoutStoreSpendingTypeCreateByRelInput>
  }

  export type UserCreateWithoutStoreSpendingTypeUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutStoreSpendingTypeUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutStoreSpendingTypeUpdateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutStoreSpendingTypeUpdateByRelInput, UserUncheckedCreateWithoutStoreSpendingTypeUpdateByRelInput>
  }

  export type StoreSpendingCreateWithoutStoreSpendingTypeIdRelInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    storeSpendingCreateByRel?: UserCreateNestedOneWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: UserCreateNestedOneWithoutStoreSpendingUpdateByRelInput
  }

  export type StoreSpendingUncheckedCreateWithoutStoreSpendingTypeIdRelInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreSpendingCreateOrConnectWithoutStoreSpendingTypeIdRelInput = {
    where: StoreSpendingWhereUniqueInput
    create: XOR<StoreSpendingCreateWithoutStoreSpendingTypeIdRelInput, StoreSpendingUncheckedCreateWithoutStoreSpendingTypeIdRelInput>
  }

  export type StoreSpendingCreateManyStoreSpendingTypeIdRelInputEnvelope = {
    data: StoreSpendingCreateManyStoreSpendingTypeIdRelInput | StoreSpendingCreateManyStoreSpendingTypeIdRelInput[]
    skipDuplicates?: boolean
  }

  export type StoreSpendingHistoryCreateWithoutStoreSpendingTypeHistoryIdRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    storeSpendingHistoryCreateByRel?: UserCreateNestedOneWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: UserCreateNestedOneWithoutStoreSpendingHistoryUpdateByRelInput
  }

  export type StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingTypeHistoryIdRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreSpendingHistoryCreateOrConnectWithoutStoreSpendingTypeHistoryIdRelInput = {
    where: StoreSpendingHistoryWhereUniqueInput
    create: XOR<StoreSpendingHistoryCreateWithoutStoreSpendingTypeHistoryIdRelInput, StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingTypeHistoryIdRelInput>
  }

  export type StoreSpendingHistoryCreateManyStoreSpendingTypeHistoryIdRelInputEnvelope = {
    data: StoreSpendingHistoryCreateManyStoreSpendingTypeHistoryIdRelInput | StoreSpendingHistoryCreateManyStoreSpendingTypeHistoryIdRelInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutStoreSpendingTypeCreateByRelInput = {
    update: XOR<UserUpdateWithoutStoreSpendingTypeCreateByRelInput, UserUncheckedUpdateWithoutStoreSpendingTypeCreateByRelInput>
    create: XOR<UserCreateWithoutStoreSpendingTypeCreateByRelInput, UserUncheckedCreateWithoutStoreSpendingTypeCreateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutStoreSpendingTypeCreateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutStoreSpendingTypeCreateByRelInput, UserUncheckedUpdateWithoutStoreSpendingTypeCreateByRelInput>
  }

  export type UserUpdateWithoutStoreSpendingTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutStoreSpendingTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUpsertWithoutStoreSpendingTypeUpdateByRelInput = {
    update: XOR<UserUpdateWithoutStoreSpendingTypeUpdateByRelInput, UserUncheckedUpdateWithoutStoreSpendingTypeUpdateByRelInput>
    create: XOR<UserCreateWithoutStoreSpendingTypeUpdateByRelInput, UserUncheckedCreateWithoutStoreSpendingTypeUpdateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutStoreSpendingTypeUpdateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutStoreSpendingTypeUpdateByRelInput, UserUncheckedUpdateWithoutStoreSpendingTypeUpdateByRelInput>
  }

  export type UserUpdateWithoutStoreSpendingTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutStoreSpendingTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type StoreSpendingUpsertWithWhereUniqueWithoutStoreSpendingTypeIdRelInput = {
    where: StoreSpendingWhereUniqueInput
    update: XOR<StoreSpendingUpdateWithoutStoreSpendingTypeIdRelInput, StoreSpendingUncheckedUpdateWithoutStoreSpendingTypeIdRelInput>
    create: XOR<StoreSpendingCreateWithoutStoreSpendingTypeIdRelInput, StoreSpendingUncheckedCreateWithoutStoreSpendingTypeIdRelInput>
  }

  export type StoreSpendingUpdateWithWhereUniqueWithoutStoreSpendingTypeIdRelInput = {
    where: StoreSpendingWhereUniqueInput
    data: XOR<StoreSpendingUpdateWithoutStoreSpendingTypeIdRelInput, StoreSpendingUncheckedUpdateWithoutStoreSpendingTypeIdRelInput>
  }

  export type StoreSpendingUpdateManyWithWhereWithoutStoreSpendingTypeIdRelInput = {
    where: StoreSpendingScalarWhereInput
    data: XOR<StoreSpendingUpdateManyMutationInput, StoreSpendingUncheckedUpdateManyWithoutStoreSpendingTypeIdRelInput>
  }

  export type StoreSpendingHistoryUpsertWithWhereUniqueWithoutStoreSpendingTypeHistoryIdRelInput = {
    where: StoreSpendingHistoryWhereUniqueInput
    update: XOR<StoreSpendingHistoryUpdateWithoutStoreSpendingTypeHistoryIdRelInput, StoreSpendingHistoryUncheckedUpdateWithoutStoreSpendingTypeHistoryIdRelInput>
    create: XOR<StoreSpendingHistoryCreateWithoutStoreSpendingTypeHistoryIdRelInput, StoreSpendingHistoryUncheckedCreateWithoutStoreSpendingTypeHistoryIdRelInput>
  }

  export type StoreSpendingHistoryUpdateWithWhereUniqueWithoutStoreSpendingTypeHistoryIdRelInput = {
    where: StoreSpendingHistoryWhereUniqueInput
    data: XOR<StoreSpendingHistoryUpdateWithoutStoreSpendingTypeHistoryIdRelInput, StoreSpendingHistoryUncheckedUpdateWithoutStoreSpendingTypeHistoryIdRelInput>
  }

  export type StoreSpendingHistoryUpdateManyWithWhereWithoutStoreSpendingTypeHistoryIdRelInput = {
    where: StoreSpendingHistoryScalarWhereInput
    data: XOR<StoreSpendingHistoryUpdateManyMutationInput, StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingTypeHistoryIdRelInput>
  }

  export type FarmIncomeTypeCreateWithoutFarmIncomeTypeIdRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    farmIncomeTypeCreateByRel?: UserCreateNestedOneWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: UserCreateNestedOneWithoutFarmIncomeTypeUpdateByRelInput
    farmIncomeTypeHistoryIdRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeTypeHistoryIdRelInput
  }

  export type FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeIdRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    farmIncomeTypeHistoryIdRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeTypeHistoryIdRelInput
  }

  export type FarmIncomeTypeCreateOrConnectWithoutFarmIncomeTypeIdRelInput = {
    where: FarmIncomeTypeWhereUniqueInput
    create: XOR<FarmIncomeTypeCreateWithoutFarmIncomeTypeIdRelInput, FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeIdRelInput>
  }

  export type UserCreateWithoutFarmIncomeCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutFarmIncomeCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutFarmIncomeCreateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFarmIncomeCreateByRelInput, UserUncheckedCreateWithoutFarmIncomeCreateByRelInput>
  }

  export type UserCreateWithoutFarmIncomeUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutFarmIncomeUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutFarmIncomeUpdateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFarmIncomeUpdateByRelInput, UserUncheckedCreateWithoutFarmIncomeUpdateByRelInput>
  }

  export type FarmIncomeTypeUpsertWithoutFarmIncomeTypeIdRelInput = {
    update: XOR<FarmIncomeTypeUpdateWithoutFarmIncomeTypeIdRelInput, FarmIncomeTypeUncheckedUpdateWithoutFarmIncomeTypeIdRelInput>
    create: XOR<FarmIncomeTypeCreateWithoutFarmIncomeTypeIdRelInput, FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeIdRelInput>
    where?: FarmIncomeTypeWhereInput
  }

  export type FarmIncomeTypeUpdateToOneWithWhereWithoutFarmIncomeTypeIdRelInput = {
    where?: FarmIncomeTypeWhereInput
    data: XOR<FarmIncomeTypeUpdateWithoutFarmIncomeTypeIdRelInput, FarmIncomeTypeUncheckedUpdateWithoutFarmIncomeTypeIdRelInput>
  }

  export type FarmIncomeTypeUpdateWithoutFarmIncomeTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmIncomeTypeCreateByRel?: UserUpdateOneWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: UserUpdateOneWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmIncomeTypeHistoryIdRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeTypeHistoryIdRelNestedInput
  }

  export type FarmIncomeTypeUncheckedUpdateWithoutFarmIncomeTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    farmIncomeTypeHistoryIdRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeTypeHistoryIdRelNestedInput
  }

  export type UserUpsertWithoutFarmIncomeCreateByRelInput = {
    update: XOR<UserUpdateWithoutFarmIncomeCreateByRelInput, UserUncheckedUpdateWithoutFarmIncomeCreateByRelInput>
    create: XOR<UserCreateWithoutFarmIncomeCreateByRelInput, UserUncheckedCreateWithoutFarmIncomeCreateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFarmIncomeCreateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFarmIncomeCreateByRelInput, UserUncheckedUpdateWithoutFarmIncomeCreateByRelInput>
  }

  export type UserUpdateWithoutFarmIncomeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutFarmIncomeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUpsertWithoutFarmIncomeUpdateByRelInput = {
    update: XOR<UserUpdateWithoutFarmIncomeUpdateByRelInput, UserUncheckedUpdateWithoutFarmIncomeUpdateByRelInput>
    create: XOR<UserCreateWithoutFarmIncomeUpdateByRelInput, UserUncheckedCreateWithoutFarmIncomeUpdateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFarmIncomeUpdateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFarmIncomeUpdateByRelInput, UserUncheckedUpdateWithoutFarmIncomeUpdateByRelInput>
  }

  export type UserUpdateWithoutFarmIncomeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutFarmIncomeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type FarmIncomeTypeCreateWithoutFarmIncomeTypeHistoryIdRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    farmIncomeTypeCreateByRel?: UserCreateNestedOneWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: UserCreateNestedOneWithoutFarmIncomeTypeUpdateByRelInput
    farmIncomeTypeIdRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeTypeIdRelInput
  }

  export type FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeHistoryIdRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    farmIncomeTypeIdRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeTypeIdRelInput
  }

  export type FarmIncomeTypeCreateOrConnectWithoutFarmIncomeTypeHistoryIdRelInput = {
    where: FarmIncomeTypeWhereUniqueInput
    create: XOR<FarmIncomeTypeCreateWithoutFarmIncomeTypeHistoryIdRelInput, FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeHistoryIdRelInput>
  }

  export type UserCreateWithoutFarmIncomeHistoryCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutFarmIncomeHistoryCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutFarmIncomeHistoryCreateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFarmIncomeHistoryCreateByRelInput, UserUncheckedCreateWithoutFarmIncomeHistoryCreateByRelInput>
  }

  export type UserCreateWithoutFarmIncomeHistoryUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutFarmIncomeHistoryUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutFarmIncomeHistoryUpdateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFarmIncomeHistoryUpdateByRelInput, UserUncheckedCreateWithoutFarmIncomeHistoryUpdateByRelInput>
  }

  export type FarmIncomeTypeUpsertWithoutFarmIncomeTypeHistoryIdRelInput = {
    update: XOR<FarmIncomeTypeUpdateWithoutFarmIncomeTypeHistoryIdRelInput, FarmIncomeTypeUncheckedUpdateWithoutFarmIncomeTypeHistoryIdRelInput>
    create: XOR<FarmIncomeTypeCreateWithoutFarmIncomeTypeHistoryIdRelInput, FarmIncomeTypeUncheckedCreateWithoutFarmIncomeTypeHistoryIdRelInput>
    where?: FarmIncomeTypeWhereInput
  }

  export type FarmIncomeTypeUpdateToOneWithWhereWithoutFarmIncomeTypeHistoryIdRelInput = {
    where?: FarmIncomeTypeWhereInput
    data: XOR<FarmIncomeTypeUpdateWithoutFarmIncomeTypeHistoryIdRelInput, FarmIncomeTypeUncheckedUpdateWithoutFarmIncomeTypeHistoryIdRelInput>
  }

  export type FarmIncomeTypeUpdateWithoutFarmIncomeTypeHistoryIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmIncomeTypeCreateByRel?: UserUpdateOneWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: UserUpdateOneWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmIncomeTypeIdRel?: FarmIncomeUpdateManyWithoutFarmIncomeTypeIdRelNestedInput
  }

  export type FarmIncomeTypeUncheckedUpdateWithoutFarmIncomeTypeHistoryIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    farmIncomeTypeIdRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeTypeIdRelNestedInput
  }

  export type UserUpsertWithoutFarmIncomeHistoryCreateByRelInput = {
    update: XOR<UserUpdateWithoutFarmIncomeHistoryCreateByRelInput, UserUncheckedUpdateWithoutFarmIncomeHistoryCreateByRelInput>
    create: XOR<UserCreateWithoutFarmIncomeHistoryCreateByRelInput, UserUncheckedCreateWithoutFarmIncomeHistoryCreateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFarmIncomeHistoryCreateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFarmIncomeHistoryCreateByRelInput, UserUncheckedUpdateWithoutFarmIncomeHistoryCreateByRelInput>
  }

  export type UserUpdateWithoutFarmIncomeHistoryCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutFarmIncomeHistoryCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUpsertWithoutFarmIncomeHistoryUpdateByRelInput = {
    update: XOR<UserUpdateWithoutFarmIncomeHistoryUpdateByRelInput, UserUncheckedUpdateWithoutFarmIncomeHistoryUpdateByRelInput>
    create: XOR<UserCreateWithoutFarmIncomeHistoryUpdateByRelInput, UserUncheckedCreateWithoutFarmIncomeHistoryUpdateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFarmIncomeHistoryUpdateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFarmIncomeHistoryUpdateByRelInput, UserUncheckedUpdateWithoutFarmIncomeHistoryUpdateByRelInput>
  }

  export type UserUpdateWithoutFarmIncomeHistoryUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutFarmIncomeHistoryUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserCreateWithoutFarmIncomeTypeCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutFarmIncomeTypeCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutFarmIncomeTypeCreateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFarmIncomeTypeCreateByRelInput, UserUncheckedCreateWithoutFarmIncomeTypeCreateByRelInput>
  }

  export type UserCreateWithoutFarmIncomeTypeUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutFarmIncomeTypeUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutFarmIncomeTypeUpdateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFarmIncomeTypeUpdateByRelInput, UserUncheckedCreateWithoutFarmIncomeTypeUpdateByRelInput>
  }

  export type FarmIncomeCreateWithoutFarmIncomeTypeIdRelInput = {
    id?: bigint | number
    detail?: string | null
    amount?: bigint | number
    price: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    farmIncomeCreateByRel?: UserCreateNestedOneWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: UserCreateNestedOneWithoutFarmIncomeUpdateByRelInput
  }

  export type FarmIncomeUncheckedCreateWithoutFarmIncomeTypeIdRelInput = {
    id?: bigint | number
    detail?: string | null
    amount?: bigint | number
    price: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmIncomeCreateOrConnectWithoutFarmIncomeTypeIdRelInput = {
    where: FarmIncomeWhereUniqueInput
    create: XOR<FarmIncomeCreateWithoutFarmIncomeTypeIdRelInput, FarmIncomeUncheckedCreateWithoutFarmIncomeTypeIdRelInput>
  }

  export type FarmIncomeCreateManyFarmIncomeTypeIdRelInputEnvelope = {
    data: FarmIncomeCreateManyFarmIncomeTypeIdRelInput | FarmIncomeCreateManyFarmIncomeTypeIdRelInput[]
    skipDuplicates?: boolean
  }

  export type FarmIncomeHistoryCreateWithoutFarmIncomeTypeHistoryIdRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    amount?: bigint | number
    price: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    farmIncomeHistoryCreateByRel?: UserCreateNestedOneWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: UserCreateNestedOneWithoutFarmIncomeHistoryUpdateByRelInput
  }

  export type FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeTypeHistoryIdRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    amount?: bigint | number
    price: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmIncomeHistoryCreateOrConnectWithoutFarmIncomeTypeHistoryIdRelInput = {
    where: FarmIncomeHistoryWhereUniqueInput
    create: XOR<FarmIncomeHistoryCreateWithoutFarmIncomeTypeHistoryIdRelInput, FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeTypeHistoryIdRelInput>
  }

  export type FarmIncomeHistoryCreateManyFarmIncomeTypeHistoryIdRelInputEnvelope = {
    data: FarmIncomeHistoryCreateManyFarmIncomeTypeHistoryIdRelInput | FarmIncomeHistoryCreateManyFarmIncomeTypeHistoryIdRelInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutFarmIncomeTypeCreateByRelInput = {
    update: XOR<UserUpdateWithoutFarmIncomeTypeCreateByRelInput, UserUncheckedUpdateWithoutFarmIncomeTypeCreateByRelInput>
    create: XOR<UserCreateWithoutFarmIncomeTypeCreateByRelInput, UserUncheckedCreateWithoutFarmIncomeTypeCreateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFarmIncomeTypeCreateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFarmIncomeTypeCreateByRelInput, UserUncheckedUpdateWithoutFarmIncomeTypeCreateByRelInput>
  }

  export type UserUpdateWithoutFarmIncomeTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutFarmIncomeTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUpsertWithoutFarmIncomeTypeUpdateByRelInput = {
    update: XOR<UserUpdateWithoutFarmIncomeTypeUpdateByRelInput, UserUncheckedUpdateWithoutFarmIncomeTypeUpdateByRelInput>
    create: XOR<UserCreateWithoutFarmIncomeTypeUpdateByRelInput, UserUncheckedCreateWithoutFarmIncomeTypeUpdateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFarmIncomeTypeUpdateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFarmIncomeTypeUpdateByRelInput, UserUncheckedUpdateWithoutFarmIncomeTypeUpdateByRelInput>
  }

  export type UserUpdateWithoutFarmIncomeTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutFarmIncomeTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type FarmIncomeUpsertWithWhereUniqueWithoutFarmIncomeTypeIdRelInput = {
    where: FarmIncomeWhereUniqueInput
    update: XOR<FarmIncomeUpdateWithoutFarmIncomeTypeIdRelInput, FarmIncomeUncheckedUpdateWithoutFarmIncomeTypeIdRelInput>
    create: XOR<FarmIncomeCreateWithoutFarmIncomeTypeIdRelInput, FarmIncomeUncheckedCreateWithoutFarmIncomeTypeIdRelInput>
  }

  export type FarmIncomeUpdateWithWhereUniqueWithoutFarmIncomeTypeIdRelInput = {
    where: FarmIncomeWhereUniqueInput
    data: XOR<FarmIncomeUpdateWithoutFarmIncomeTypeIdRelInput, FarmIncomeUncheckedUpdateWithoutFarmIncomeTypeIdRelInput>
  }

  export type FarmIncomeUpdateManyWithWhereWithoutFarmIncomeTypeIdRelInput = {
    where: FarmIncomeScalarWhereInput
    data: XOR<FarmIncomeUpdateManyMutationInput, FarmIncomeUncheckedUpdateManyWithoutFarmIncomeTypeIdRelInput>
  }

  export type FarmIncomeHistoryUpsertWithWhereUniqueWithoutFarmIncomeTypeHistoryIdRelInput = {
    where: FarmIncomeHistoryWhereUniqueInput
    update: XOR<FarmIncomeHistoryUpdateWithoutFarmIncomeTypeHistoryIdRelInput, FarmIncomeHistoryUncheckedUpdateWithoutFarmIncomeTypeHistoryIdRelInput>
    create: XOR<FarmIncomeHistoryCreateWithoutFarmIncomeTypeHistoryIdRelInput, FarmIncomeHistoryUncheckedCreateWithoutFarmIncomeTypeHistoryIdRelInput>
  }

  export type FarmIncomeHistoryUpdateWithWhereUniqueWithoutFarmIncomeTypeHistoryIdRelInput = {
    where: FarmIncomeHistoryWhereUniqueInput
    data: XOR<FarmIncomeHistoryUpdateWithoutFarmIncomeTypeHistoryIdRelInput, FarmIncomeHistoryUncheckedUpdateWithoutFarmIncomeTypeHistoryIdRelInput>
  }

  export type FarmIncomeHistoryUpdateManyWithWhereWithoutFarmIncomeTypeHistoryIdRelInput = {
    where: FarmIncomeHistoryScalarWhereInput
    data: XOR<FarmIncomeHistoryUpdateManyMutationInput, FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeTypeHistoryIdRelInput>
  }

  export type FarmSpendingTypeCreateWithoutFarmSpendingTypeIdRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    farmSpendingTypeCreateByRel?: UserCreateNestedOneWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: UserCreateNestedOneWithoutFarmSpendingTypeUpdateByRelInput
    farmSpendingTypeHistoryIdRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingTypeHistoryIdRelInput
  }

  export type FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeIdRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    farmSpendingTypeHistoryIdRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingTypeHistoryIdRelInput
  }

  export type FarmSpendingTypeCreateOrConnectWithoutFarmSpendingTypeIdRelInput = {
    where: FarmSpendingTypeWhereUniqueInput
    create: XOR<FarmSpendingTypeCreateWithoutFarmSpendingTypeIdRelInput, FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeIdRelInput>
  }

  export type UserCreateWithoutFarmSpendingCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutFarmSpendingCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutFarmSpendingCreateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFarmSpendingCreateByRelInput, UserUncheckedCreateWithoutFarmSpendingCreateByRelInput>
  }

  export type UserCreateWithoutFarmSpendingUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutFarmSpendingUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutFarmSpendingUpdateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFarmSpendingUpdateByRelInput, UserUncheckedCreateWithoutFarmSpendingUpdateByRelInput>
  }

  export type FarmSpendingTypeUpsertWithoutFarmSpendingTypeIdRelInput = {
    update: XOR<FarmSpendingTypeUpdateWithoutFarmSpendingTypeIdRelInput, FarmSpendingTypeUncheckedUpdateWithoutFarmSpendingTypeIdRelInput>
    create: XOR<FarmSpendingTypeCreateWithoutFarmSpendingTypeIdRelInput, FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeIdRelInput>
    where?: FarmSpendingTypeWhereInput
  }

  export type FarmSpendingTypeUpdateToOneWithWhereWithoutFarmSpendingTypeIdRelInput = {
    where?: FarmSpendingTypeWhereInput
    data: XOR<FarmSpendingTypeUpdateWithoutFarmSpendingTypeIdRelInput, FarmSpendingTypeUncheckedUpdateWithoutFarmSpendingTypeIdRelInput>
  }

  export type FarmSpendingTypeUpdateWithoutFarmSpendingTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmSpendingTypeCreateByRel?: UserUpdateOneWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: UserUpdateOneWithoutFarmSpendingTypeUpdateByRelNestedInput
    farmSpendingTypeHistoryIdRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingTypeHistoryIdRelNestedInput
  }

  export type FarmSpendingTypeUncheckedUpdateWithoutFarmSpendingTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    farmSpendingTypeHistoryIdRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingTypeHistoryIdRelNestedInput
  }

  export type UserUpsertWithoutFarmSpendingCreateByRelInput = {
    update: XOR<UserUpdateWithoutFarmSpendingCreateByRelInput, UserUncheckedUpdateWithoutFarmSpendingCreateByRelInput>
    create: XOR<UserCreateWithoutFarmSpendingCreateByRelInput, UserUncheckedCreateWithoutFarmSpendingCreateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFarmSpendingCreateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFarmSpendingCreateByRelInput, UserUncheckedUpdateWithoutFarmSpendingCreateByRelInput>
  }

  export type UserUpdateWithoutFarmSpendingCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutFarmSpendingCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUpsertWithoutFarmSpendingUpdateByRelInput = {
    update: XOR<UserUpdateWithoutFarmSpendingUpdateByRelInput, UserUncheckedUpdateWithoutFarmSpendingUpdateByRelInput>
    create: XOR<UserCreateWithoutFarmSpendingUpdateByRelInput, UserUncheckedCreateWithoutFarmSpendingUpdateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFarmSpendingUpdateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFarmSpendingUpdateByRelInput, UserUncheckedUpdateWithoutFarmSpendingUpdateByRelInput>
  }

  export type UserUpdateWithoutFarmSpendingUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutFarmSpendingUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type FarmSpendingTypeCreateWithoutFarmSpendingTypeHistoryIdRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    farmSpendingTypeCreateByRel?: UserCreateNestedOneWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: UserCreateNestedOneWithoutFarmSpendingTypeUpdateByRelInput
    farmSpendingTypeIdRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingTypeIdRelInput
  }

  export type FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeHistoryIdRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    farmSpendingTypeIdRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingTypeIdRelInput
  }

  export type FarmSpendingTypeCreateOrConnectWithoutFarmSpendingTypeHistoryIdRelInput = {
    where: FarmSpendingTypeWhereUniqueInput
    create: XOR<FarmSpendingTypeCreateWithoutFarmSpendingTypeHistoryIdRelInput, FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeHistoryIdRelInput>
  }

  export type UserCreateWithoutFarmSpendingHistoryCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutFarmSpendingHistoryCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutFarmSpendingHistoryCreateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFarmSpendingHistoryCreateByRelInput, UserUncheckedCreateWithoutFarmSpendingHistoryCreateByRelInput>
  }

  export type UserCreateWithoutFarmSpendingHistoryUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
  }

  export type UserUncheckedCreateWithoutFarmSpendingHistoryUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
  }

  export type UserCreateOrConnectWithoutFarmSpendingHistoryUpdateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFarmSpendingHistoryUpdateByRelInput, UserUncheckedCreateWithoutFarmSpendingHistoryUpdateByRelInput>
  }

  export type FarmSpendingTypeUpsertWithoutFarmSpendingTypeHistoryIdRelInput = {
    update: XOR<FarmSpendingTypeUpdateWithoutFarmSpendingTypeHistoryIdRelInput, FarmSpendingTypeUncheckedUpdateWithoutFarmSpendingTypeHistoryIdRelInput>
    create: XOR<FarmSpendingTypeCreateWithoutFarmSpendingTypeHistoryIdRelInput, FarmSpendingTypeUncheckedCreateWithoutFarmSpendingTypeHistoryIdRelInput>
    where?: FarmSpendingTypeWhereInput
  }

  export type FarmSpendingTypeUpdateToOneWithWhereWithoutFarmSpendingTypeHistoryIdRelInput = {
    where?: FarmSpendingTypeWhereInput
    data: XOR<FarmSpendingTypeUpdateWithoutFarmSpendingTypeHistoryIdRelInput, FarmSpendingTypeUncheckedUpdateWithoutFarmSpendingTypeHistoryIdRelInput>
  }

  export type FarmSpendingTypeUpdateWithoutFarmSpendingTypeHistoryIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmSpendingTypeCreateByRel?: UserUpdateOneWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: UserUpdateOneWithoutFarmSpendingTypeUpdateByRelNestedInput
    farmSpendingTypeIdRel?: FarmSpendingUpdateManyWithoutFarmSpendingTypeIdRelNestedInput
  }

  export type FarmSpendingTypeUncheckedUpdateWithoutFarmSpendingTypeHistoryIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    farmSpendingTypeIdRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingTypeIdRelNestedInput
  }

  export type UserUpsertWithoutFarmSpendingHistoryCreateByRelInput = {
    update: XOR<UserUpdateWithoutFarmSpendingHistoryCreateByRelInput, UserUncheckedUpdateWithoutFarmSpendingHistoryCreateByRelInput>
    create: XOR<UserCreateWithoutFarmSpendingHistoryCreateByRelInput, UserUncheckedCreateWithoutFarmSpendingHistoryCreateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFarmSpendingHistoryCreateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFarmSpendingHistoryCreateByRelInput, UserUncheckedUpdateWithoutFarmSpendingHistoryCreateByRelInput>
  }

  export type UserUpdateWithoutFarmSpendingHistoryCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutFarmSpendingHistoryCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUpsertWithoutFarmSpendingHistoryUpdateByRelInput = {
    update: XOR<UserUpdateWithoutFarmSpendingHistoryUpdateByRelInput, UserUncheckedUpdateWithoutFarmSpendingHistoryUpdateByRelInput>
    create: XOR<UserCreateWithoutFarmSpendingHistoryUpdateByRelInput, UserUncheckedCreateWithoutFarmSpendingHistoryUpdateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFarmSpendingHistoryUpdateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFarmSpendingHistoryUpdateByRelInput, UserUncheckedUpdateWithoutFarmSpendingHistoryUpdateByRelInput>
  }

  export type UserUpdateWithoutFarmSpendingHistoryUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutFarmSpendingHistoryUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
  }

  export type UserCreateWithoutFarmSpendingTypeCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutFarmSpendingTypeCreateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeUpdateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutFarmSpendingTypeCreateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFarmSpendingTypeCreateByRelInput, UserUncheckedCreateWithoutFarmSpendingTypeCreateByRelInput>
  }

  export type UserCreateWithoutFarmSpendingTypeUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    createdByRel?: UserCreateNestedOneWithoutSelfCreatedByRelInput
    selfCreatedByRel?: UserCreateNestedManyWithoutCreatedByRelInput
    updatedByRel?: UserCreateNestedOneWithoutSelfUpdatedByRelInput
    selfUpdatedByRel?: UserCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    userHistoryCreatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserUncheckedCreateWithoutFarmSpendingTypeUpdateByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    selfCreatedByRel?: UserUncheckedCreateNestedManyWithoutCreatedByRelInput
    selfUpdatedByRel?: UserUncheckedCreateNestedManyWithoutUpdatedByRelInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeCreateByRelInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedCreateNestedManyWithoutChurchIncomeUpdateByRelInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeCreateByRelInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedCreateNestedManyWithoutChurchIncomeTypeUpdateByRelInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingCreateByRelInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedCreateNestedManyWithoutChurchSpendingUpdateByRelInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeCreateByRelInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedCreateNestedManyWithoutChurchSpendingTypeUpdateByRelInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeCreateByRelInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedCreateNestedManyWithoutStoreIncomeUpdateByRelInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeCreateByRelInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedCreateNestedManyWithoutStoreIncomeTypeUpdateByRelInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingCreateByRelInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedCreateNestedManyWithoutStoreSpendingUpdateByRelInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeCreateByRelInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedCreateNestedManyWithoutStoreSpendingTypeUpdateByRelInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeCreateByRelInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedCreateNestedManyWithoutFarmIncomeUpdateByRelInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeCreateByRelInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedCreateNestedManyWithoutFarmIncomeTypeUpdateByRelInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedCreateNestedManyWithoutFarmSpendingUpdateByRelInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedCreateNestedManyWithoutFarmSpendingTypeCreateByRelInput
    userHistoryCreatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryCreatedByRelInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryUpdatedByRelInput
    userHistoryIdRel?: UserHistoryUncheckedCreateNestedManyWithoutUserHistoryIdRelInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryCreateByRelInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedCreateNestedManyWithoutChurchIncomeHistoryUpdateByRelInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryCreateByRelInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedCreateNestedManyWithoutChurchSpendingHistoryUpdateByRelInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryCreateByRelInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedCreateNestedManyWithoutStoreIncomeHistoryUpdateByRelInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryCreateByRelInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedCreateNestedManyWithoutStoreSpendingHistoryUpdateByRelInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryCreateByRelInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedCreateNestedManyWithoutFarmIncomeHistoryUpdateByRelInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedCreateNestedManyWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type UserCreateOrConnectWithoutFarmSpendingTypeUpdateByRelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFarmSpendingTypeUpdateByRelInput, UserUncheckedCreateWithoutFarmSpendingTypeUpdateByRelInput>
  }

  export type FarmSpendingCreateWithoutFarmSpendingTypeIdRelInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    farmSpendingCreateByRel?: UserCreateNestedOneWithoutFarmSpendingCreateByRelInput
    farmSpendingUpdateByRel?: UserCreateNestedOneWithoutFarmSpendingUpdateByRelInput
  }

  export type FarmSpendingUncheckedCreateWithoutFarmSpendingTypeIdRelInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmSpendingCreateOrConnectWithoutFarmSpendingTypeIdRelInput = {
    where: FarmSpendingWhereUniqueInput
    create: XOR<FarmSpendingCreateWithoutFarmSpendingTypeIdRelInput, FarmSpendingUncheckedCreateWithoutFarmSpendingTypeIdRelInput>
  }

  export type FarmSpendingCreateManyFarmSpendingTypeIdRelInputEnvelope = {
    data: FarmSpendingCreateManyFarmSpendingTypeIdRelInput | FarmSpendingCreateManyFarmSpendingTypeIdRelInput[]
    skipDuplicates?: boolean
  }

  export type FarmSpendingHistoryCreateWithoutFarmSpendingTypeHistoryIdRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    farmSpendingHistoryCreateByRel?: UserCreateNestedOneWithoutFarmSpendingHistoryCreateByRelInput
    farmSpendingHistoryUpdateByRel?: UserCreateNestedOneWithoutFarmSpendingHistoryUpdateByRelInput
  }

  export type FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingTypeHistoryIdRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmSpendingHistoryCreateOrConnectWithoutFarmSpendingTypeHistoryIdRelInput = {
    where: FarmSpendingHistoryWhereUniqueInput
    create: XOR<FarmSpendingHistoryCreateWithoutFarmSpendingTypeHistoryIdRelInput, FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingTypeHistoryIdRelInput>
  }

  export type FarmSpendingHistoryCreateManyFarmSpendingTypeHistoryIdRelInputEnvelope = {
    data: FarmSpendingHistoryCreateManyFarmSpendingTypeHistoryIdRelInput | FarmSpendingHistoryCreateManyFarmSpendingTypeHistoryIdRelInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutFarmSpendingTypeCreateByRelInput = {
    update: XOR<UserUpdateWithoutFarmSpendingTypeCreateByRelInput, UserUncheckedUpdateWithoutFarmSpendingTypeCreateByRelInput>
    create: XOR<UserCreateWithoutFarmSpendingTypeCreateByRelInput, UserUncheckedCreateWithoutFarmSpendingTypeCreateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFarmSpendingTypeCreateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFarmSpendingTypeCreateByRelInput, UserUncheckedUpdateWithoutFarmSpendingTypeCreateByRelInput>
  }

  export type UserUpdateWithoutFarmSpendingTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutFarmSpendingTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUpsertWithoutFarmSpendingTypeUpdateByRelInput = {
    update: XOR<UserUpdateWithoutFarmSpendingTypeUpdateByRelInput, UserUncheckedUpdateWithoutFarmSpendingTypeUpdateByRelInput>
    create: XOR<UserCreateWithoutFarmSpendingTypeUpdateByRelInput, UserUncheckedCreateWithoutFarmSpendingTypeUpdateByRelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFarmSpendingTypeUpdateByRelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFarmSpendingTypeUpdateByRelInput, UserUncheckedUpdateWithoutFarmSpendingTypeUpdateByRelInput>
  }

  export type UserUpdateWithoutFarmSpendingTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutFarmSpendingTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type FarmSpendingUpsertWithWhereUniqueWithoutFarmSpendingTypeIdRelInput = {
    where: FarmSpendingWhereUniqueInput
    update: XOR<FarmSpendingUpdateWithoutFarmSpendingTypeIdRelInput, FarmSpendingUncheckedUpdateWithoutFarmSpendingTypeIdRelInput>
    create: XOR<FarmSpendingCreateWithoutFarmSpendingTypeIdRelInput, FarmSpendingUncheckedCreateWithoutFarmSpendingTypeIdRelInput>
  }

  export type FarmSpendingUpdateWithWhereUniqueWithoutFarmSpendingTypeIdRelInput = {
    where: FarmSpendingWhereUniqueInput
    data: XOR<FarmSpendingUpdateWithoutFarmSpendingTypeIdRelInput, FarmSpendingUncheckedUpdateWithoutFarmSpendingTypeIdRelInput>
  }

  export type FarmSpendingUpdateManyWithWhereWithoutFarmSpendingTypeIdRelInput = {
    where: FarmSpendingScalarWhereInput
    data: XOR<FarmSpendingUpdateManyMutationInput, FarmSpendingUncheckedUpdateManyWithoutFarmSpendingTypeIdRelInput>
  }

  export type FarmSpendingHistoryUpsertWithWhereUniqueWithoutFarmSpendingTypeHistoryIdRelInput = {
    where: FarmSpendingHistoryWhereUniqueInput
    update: XOR<FarmSpendingHistoryUpdateWithoutFarmSpendingTypeHistoryIdRelInput, FarmSpendingHistoryUncheckedUpdateWithoutFarmSpendingTypeHistoryIdRelInput>
    create: XOR<FarmSpendingHistoryCreateWithoutFarmSpendingTypeHistoryIdRelInput, FarmSpendingHistoryUncheckedCreateWithoutFarmSpendingTypeHistoryIdRelInput>
  }

  export type FarmSpendingHistoryUpdateWithWhereUniqueWithoutFarmSpendingTypeHistoryIdRelInput = {
    where: FarmSpendingHistoryWhereUniqueInput
    data: XOR<FarmSpendingHistoryUpdateWithoutFarmSpendingTypeHistoryIdRelInput, FarmSpendingHistoryUncheckedUpdateWithoutFarmSpendingTypeHistoryIdRelInput>
  }

  export type FarmSpendingHistoryUpdateManyWithWhereWithoutFarmSpendingTypeHistoryIdRelInput = {
    where: FarmSpendingHistoryScalarWhereInput
    data: XOR<FarmSpendingHistoryUpdateManyMutationInput, FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingTypeHistoryIdRelInput>
  }

  export type UserCreateManyCreatedByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type UserCreateManyUpdatedByRelInput = {
    id?: bigint | number
    userName: string
    fullName: string
    email: string
    password: string
    phoneNumber: string
    address: string
    role: $Enums.Role
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type ChurchIncomeCreateManyChurchIncomeCreateByRelInput = {
    id?: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchIncomeCreateManyChurchIncomeUpdateByRelInput = {
    id?: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type ChurchIncomeTypeCreateManyChurchIncomeTypeCreateByRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchIncomeTypeCreateManyChurchIncomeTypeUpdateByRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type ChurchSpendingCreateManyChurchSpendingCreateByRelInput = {
    id?: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    bill?: string | null
    billNumber?: string | null
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchSpendingCreateManyChurchSpendingUpdateByRelInput = {
    id?: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    bill?: string | null
    billNumber?: string | null
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type ChurchSpendingTypeCreateManyChurchSpendingTypeCreateByRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    createAt?: Date | string
    deleted?: boolean
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchSpendingTypeCreateManyChurchSpendingTypeUpdateByRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    createAt?: Date | string
    createBy?: bigint | number | null
    deleted?: boolean
    updatedAt?: Date | string
  }

  export type StoreIncomeCreateManyStoreIncomeCreateByRelInput = {
    id?: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreIncomeCreateManyStoreIncomeUpdateByRelInput = {
    id?: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type StoreIncomeTypeCreateManyStoreIncomeTypeCreateByRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreIncomeTypeCreateManyStoreIncomeTypeUpdateByRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type StoreSpendingCreateManyStoreSpendingCreateByRelInput = {
    id?: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreSpendingCreateManyStoreSpendingUpdateByRelInput = {
    id?: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type StoreSpendingTypeCreateManyStoreSpendingTypeCreateByRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreSpendingTypeCreateManyStoreSpendingTypeUpdateByRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type FarmIncomeCreateManyFarmIncomeCreateByRelInput = {
    id?: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    amount?: bigint | number
    price: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmIncomeCreateManyFarmIncomeUpdateByRelInput = {
    id?: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    amount?: bigint | number
    price: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type FarmIncomeTypeCreateManyFarmIncomeTypeCreateByRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmIncomeTypeCreateManyFarmIncomeTypeUpdateByRelInput = {
    id?: bigint | number
    incomeTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type FarmSpendingCreateManyFarmSpendingCreateByRelInput = {
    id?: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmSpendingCreateManyFarmSpendingUpdateByRelInput = {
    id?: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type FarmSpendingTypeCreateManyFarmSpendingTypeCreateByRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmSpendingTypeCreateManyFarmSpendingTypeUpdateByRelInput = {
    id?: bigint | number
    spendingTypeName: string
    code: string
    description: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type UserHistoryCreateManyUserHistoryCreatedByRelInput = {
    id?: bigint | number
    userId: bigint | number
    createdAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    deleted?: boolean
    oldData: JsonNullValueInput | InputJsonValue
    newData: JsonNullValueInput | InputJsonValue
  }

  export type UserHistoryCreateManyUserHistoryUpdatedByRelInput = {
    id?: bigint | number
    userId: bigint | number
    createdAt?: Date | string
    createdBy?: bigint | number | null
    updatedAt?: Date | string
    deleted?: boolean
    oldData: JsonNullValueInput | InputJsonValue
    newData: JsonNullValueInput | InputJsonValue
  }

  export type UserHistoryCreateManyUserHistoryIdRelInput = {
    id?: bigint | number
    createdAt?: Date | string
    createdBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
    deleted?: boolean
    oldData: JsonNullValueInput | InputJsonValue
    newData: JsonNullValueInput | InputJsonValue
  }

  export type ChurchIncomeHistoryCreateManyChurchIncomeHistoryCreateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchIncomeHistoryCreateManyChurchIncomeHistoryUpdateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type ChurchSpendingHistoryCreateManyChurchSpendingHistoryCreateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    bill: string
    billNumber: string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchSpendingHistoryCreateManyChurchSpendingHistoryUpdateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    bill: string
    billNumber: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type StoreIncomeHistoryCreateManyStoreIncomeHistoryCreateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreIncomeHistoryCreateManyStoreIncomeHistoryUpdateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type StoreSpendingHistoryCreateManyStoreSpendingHistoryCreateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreSpendingHistoryCreateManyStoreSpendingHistoryUpdateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type FarmIncomeHistoryCreateManyFarmIncomeHistoryCreateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    amount?: bigint | number
    price: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmIncomeHistoryCreateManyFarmIncomeHistoryUpdateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    incomeTypeId: bigint | number
    detail?: string | null
    amount?: bigint | number
    price: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type FarmSpendingHistoryCreateManyFarmSpendingHistoryCreateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmSpendingHistoryCreateManyFarmSpendingHistoryUpdateByRelInput = {
    revId?: bigint | number
    id: bigint | number
    spendingTypeId: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
  }

  export type UserUpdateWithoutCreatedByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    updatedByRel?: UserUpdateOneWithoutSelfUpdatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateManyWithoutCreatedByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type UserUpdateWithoutUpdatedByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByRel?: UserUpdateOneWithoutSelfCreatedByRelNestedInput
    selfCreatedByRel?: UserUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdatedByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    selfCreatedByRel?: UserUncheckedUpdateManyWithoutCreatedByRelNestedInput
    selfUpdatedByRel?: UserUncheckedUpdateManyWithoutUpdatedByRelNestedInput
    churchIncomeCreateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelNestedInput
    churchIncomeTypeCreateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeUpdateByRel?: ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchSpendingCreateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelNestedInput
    churchSpendingTypeCreateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeUpdateByRel?: ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelNestedInput
    storeIncomeCreateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelNestedInput
    storeIncomeTypeCreateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeUpdateByRel?: StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeSpendingCreateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelNestedInput
    storeSpendingTypeCreateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeUpdateByRel?: StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelNestedInput
    farmIncomeCreateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelNestedInput
    farmIncomeTypeCreateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeUpdateByRel?: FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmSpendingCreateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelNestedInput
    farmSpendingTypeCreateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeUpdateByRel?: FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelNestedInput
    userHistoryCreatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelNestedInput
    churchSpendingHistoryCreateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelNestedInput
    storeIncomeHistoryCreateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelNestedInput
    storeSpendingHistoryCreateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelNestedInput
    farmIncomeHistoryCreateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelNestedInput
    farmSpendingHistoryCreateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type UserUncheckedUpdateManyWithoutUpdatedByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userName?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChurchIncomeUpdateWithoutChurchIncomeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchIncomeTypeIdRel?: ChurchIncomeTypeUpdateOneRequiredWithoutChurchIncomeTypeIdRelNestedInput
    churchIncomeUpdateByRel?: UserUpdateOneWithoutChurchIncomeUpdateByRelNestedInput
  }

  export type ChurchIncomeUncheckedUpdateWithoutChurchIncomeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type ChurchIncomeUpdateWithoutChurchIncomeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchIncomeTypeIdRel?: ChurchIncomeTypeUpdateOneRequiredWithoutChurchIncomeTypeIdRelNestedInput
    churchIncomeCreateByRel?: UserUpdateOneWithoutChurchIncomeCreateByRelNestedInput
  }

  export type ChurchIncomeUncheckedUpdateWithoutChurchIncomeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChurchIncomeTypeUpdateWithoutChurchIncomeTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchIncomeTypeUpdateByRel?: UserUpdateOneWithoutChurchIncomeTypeUpdateByRelNestedInput
    churchIncomeTypeIdRel?: ChurchIncomeUpdateManyWithoutChurchIncomeTypeIdRelNestedInput
    churchIncomeTypeHistoryIdRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeTypeHistoryIdRelNestedInput
  }

  export type ChurchIncomeTypeUncheckedUpdateWithoutChurchIncomeTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    churchIncomeTypeIdRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeTypeIdRelNestedInput
    churchIncomeTypeHistoryIdRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeTypeHistoryIdRelNestedInput
  }

  export type ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type ChurchIncomeTypeUpdateWithoutChurchIncomeTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchIncomeTypeCreateByRel?: UserUpdateOneWithoutChurchIncomeTypeCreateByRelNestedInput
    churchIncomeTypeIdRel?: ChurchIncomeUpdateManyWithoutChurchIncomeTypeIdRelNestedInput
    churchIncomeTypeHistoryIdRel?: ChurchIncomeHistoryUpdateManyWithoutChurchIncomeTypeHistoryIdRelNestedInput
  }

  export type ChurchIncomeTypeUncheckedUpdateWithoutChurchIncomeTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchIncomeTypeIdRel?: ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeTypeIdRelNestedInput
    churchIncomeTypeHistoryIdRel?: ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeTypeHistoryIdRelNestedInput
  }

  export type ChurchIncomeTypeUncheckedUpdateManyWithoutChurchIncomeTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChurchSpendingUpdateWithoutChurchSpendingCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    bill?: NullableStringFieldUpdateOperationsInput | string | null
    billNumber?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchSpendingTypeIdRel?: ChurchSpendingTypeUpdateOneRequiredWithoutChurchSpendingTypeIdRelNestedInput
    churchSpendingUpdateByRel?: UserUpdateOneWithoutChurchSpendingUpdateByRelNestedInput
  }

  export type ChurchSpendingUncheckedUpdateWithoutChurchSpendingCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    bill?: NullableStringFieldUpdateOperationsInput | string | null
    billNumber?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    bill?: NullableStringFieldUpdateOperationsInput | string | null
    billNumber?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type ChurchSpendingUpdateWithoutChurchSpendingUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    bill?: NullableStringFieldUpdateOperationsInput | string | null
    billNumber?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchSpendingTypeIdRel?: ChurchSpendingTypeUpdateOneRequiredWithoutChurchSpendingTypeIdRelNestedInput
    churchSpendingCreateByRel?: UserUpdateOneWithoutChurchSpendingCreateByRelNestedInput
  }

  export type ChurchSpendingUncheckedUpdateWithoutChurchSpendingUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    bill?: NullableStringFieldUpdateOperationsInput | string | null
    billNumber?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    bill?: NullableStringFieldUpdateOperationsInput | string | null
    billNumber?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChurchSpendingTypeUpdateWithoutChurchSpendingTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchSpendingTypeUpdateByRel?: UserUpdateOneWithoutChurchSpendingTypeUpdateByRelNestedInput
    churchSpendingTypeIdRel?: ChurchSpendingUpdateManyWithoutChurchSpendingTypeIdRelNestedInput
    churchSpendingTypeHistoryIdRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingTypeHistoryIdRelNestedInput
  }

  export type ChurchSpendingTypeUncheckedUpdateWithoutChurchSpendingTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    churchSpendingTypeIdRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingTypeIdRelNestedInput
    churchSpendingTypeHistoryIdRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingTypeHistoryIdRelNestedInput
  }

  export type ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type ChurchSpendingTypeUpdateWithoutChurchSpendingTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchSpendingTypeCreateByRel?: UserUpdateOneWithoutChurchSpendingTypeCreateByRelNestedInput
    churchSpendingTypeIdRel?: ChurchSpendingUpdateManyWithoutChurchSpendingTypeIdRelNestedInput
    churchSpendingTypeHistoryIdRel?: ChurchSpendingHistoryUpdateManyWithoutChurchSpendingTypeHistoryIdRelNestedInput
  }

  export type ChurchSpendingTypeUncheckedUpdateWithoutChurchSpendingTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchSpendingTypeIdRel?: ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingTypeIdRelNestedInput
    churchSpendingTypeHistoryIdRel?: ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingTypeHistoryIdRelNestedInput
  }

  export type ChurchSpendingTypeUncheckedUpdateManyWithoutChurchSpendingTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StoreIncomeUpdateWithoutStoreIncomeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeIncomeTypeIdRel?: StoreIncomeTypeUpdateOneRequiredWithoutStoreIncomeTypeIdRelNestedInput
    storeIncomeUpdateByRel?: UserUpdateOneWithoutStoreIncomeUpdateByRelNestedInput
  }

  export type StoreIncomeUncheckedUpdateWithoutStoreIncomeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreIncomeUncheckedUpdateManyWithoutStoreIncomeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreIncomeUpdateWithoutStoreIncomeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeIncomeTypeIdRel?: StoreIncomeTypeUpdateOneRequiredWithoutStoreIncomeTypeIdRelNestedInput
    storeIncomeCreateByRel?: UserUpdateOneWithoutStoreIncomeCreateByRelNestedInput
  }

  export type StoreIncomeUncheckedUpdateWithoutStoreIncomeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StoreIncomeUncheckedUpdateManyWithoutStoreIncomeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StoreIncomeTypeUpdateWithoutStoreIncomeTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeIncomeTypeUpdateByRel?: UserUpdateOneWithoutStoreIncomeTypeUpdateByRelNestedInput
    storeIncomeTypeIdRel?: StoreIncomeUpdateManyWithoutStoreIncomeTypeIdRelNestedInput
    storeIncomeTypeHistoryIdRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeTypeHistoryIdRelNestedInput
  }

  export type StoreIncomeTypeUncheckedUpdateWithoutStoreIncomeTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    storeIncomeTypeIdRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeTypeIdRelNestedInput
    storeIncomeTypeHistoryIdRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeTypeHistoryIdRelNestedInput
  }

  export type StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreIncomeTypeUpdateWithoutStoreIncomeTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeIncomeTypeCreateByRel?: UserUpdateOneWithoutStoreIncomeTypeCreateByRelNestedInput
    storeIncomeTypeIdRel?: StoreIncomeUpdateManyWithoutStoreIncomeTypeIdRelNestedInput
    storeIncomeTypeHistoryIdRel?: StoreIncomeHistoryUpdateManyWithoutStoreIncomeTypeHistoryIdRelNestedInput
  }

  export type StoreIncomeTypeUncheckedUpdateWithoutStoreIncomeTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeIncomeTypeIdRel?: StoreIncomeUncheckedUpdateManyWithoutStoreIncomeTypeIdRelNestedInput
    storeIncomeTypeHistoryIdRel?: StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeTypeHistoryIdRelNestedInput
  }

  export type StoreIncomeTypeUncheckedUpdateManyWithoutStoreIncomeTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StoreSpendingUpdateWithoutStoreSpendingCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeSpendingTypeIdRel?: StoreSpendingTypeUpdateOneRequiredWithoutStoreSpendingTypeIdRelNestedInput
    storeSpendingUpdateByRel?: UserUpdateOneWithoutStoreSpendingUpdateByRelNestedInput
  }

  export type StoreSpendingUncheckedUpdateWithoutStoreSpendingCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreSpendingUncheckedUpdateManyWithoutStoreSpendingCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreSpendingUpdateWithoutStoreSpendingUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeSpendingTypeIdRel?: StoreSpendingTypeUpdateOneRequiredWithoutStoreSpendingTypeIdRelNestedInput
    storeSpendingCreateByRel?: UserUpdateOneWithoutStoreSpendingCreateByRelNestedInput
  }

  export type StoreSpendingUncheckedUpdateWithoutStoreSpendingUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StoreSpendingUncheckedUpdateManyWithoutStoreSpendingUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StoreSpendingTypeUpdateWithoutStoreSpendingTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeSpendingTypeUpdateByRel?: UserUpdateOneWithoutStoreSpendingTypeUpdateByRelNestedInput
    storeSpendingTypeIdRel?: StoreSpendingUpdateManyWithoutStoreSpendingTypeIdRelNestedInput
    storeSpendingTypeHistoryIdRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingTypeHistoryIdRelNestedInput
  }

  export type StoreSpendingTypeUncheckedUpdateWithoutStoreSpendingTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    storeSpendingTypeIdRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingTypeIdRelNestedInput
    storeSpendingTypeHistoryIdRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingTypeHistoryIdRelNestedInput
  }

  export type StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreSpendingTypeUpdateWithoutStoreSpendingTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeSpendingTypeCreateByRel?: UserUpdateOneWithoutStoreSpendingTypeCreateByRelNestedInput
    storeSpendingTypeIdRel?: StoreSpendingUpdateManyWithoutStoreSpendingTypeIdRelNestedInput
    storeSpendingTypeHistoryIdRel?: StoreSpendingHistoryUpdateManyWithoutStoreSpendingTypeHistoryIdRelNestedInput
  }

  export type StoreSpendingTypeUncheckedUpdateWithoutStoreSpendingTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeSpendingTypeIdRel?: StoreSpendingUncheckedUpdateManyWithoutStoreSpendingTypeIdRelNestedInput
    storeSpendingTypeHistoryIdRel?: StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingTypeHistoryIdRelNestedInput
  }

  export type StoreSpendingTypeUncheckedUpdateManyWithoutStoreSpendingTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FarmIncomeUpdateWithoutFarmIncomeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmIncomeTypeIdRel?: FarmIncomeTypeUpdateOneRequiredWithoutFarmIncomeTypeIdRelNestedInput
    farmIncomeUpdateByRel?: UserUpdateOneWithoutFarmIncomeUpdateByRelNestedInput
  }

  export type FarmIncomeUncheckedUpdateWithoutFarmIncomeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmIncomeUncheckedUpdateManyWithoutFarmIncomeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmIncomeUpdateWithoutFarmIncomeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmIncomeTypeIdRel?: FarmIncomeTypeUpdateOneRequiredWithoutFarmIncomeTypeIdRelNestedInput
    farmIncomeCreateByRel?: UserUpdateOneWithoutFarmIncomeCreateByRelNestedInput
  }

  export type FarmIncomeUncheckedUpdateWithoutFarmIncomeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FarmIncomeUncheckedUpdateManyWithoutFarmIncomeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FarmIncomeTypeUpdateWithoutFarmIncomeTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmIncomeTypeUpdateByRel?: UserUpdateOneWithoutFarmIncomeTypeUpdateByRelNestedInput
    farmIncomeTypeIdRel?: FarmIncomeUpdateManyWithoutFarmIncomeTypeIdRelNestedInput
    farmIncomeTypeHistoryIdRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeTypeHistoryIdRelNestedInput
  }

  export type FarmIncomeTypeUncheckedUpdateWithoutFarmIncomeTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    farmIncomeTypeIdRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeTypeIdRelNestedInput
    farmIncomeTypeHistoryIdRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeTypeHistoryIdRelNestedInput
  }

  export type FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmIncomeTypeUpdateWithoutFarmIncomeTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmIncomeTypeCreateByRel?: UserUpdateOneWithoutFarmIncomeTypeCreateByRelNestedInput
    farmIncomeTypeIdRel?: FarmIncomeUpdateManyWithoutFarmIncomeTypeIdRelNestedInput
    farmIncomeTypeHistoryIdRel?: FarmIncomeHistoryUpdateManyWithoutFarmIncomeTypeHistoryIdRelNestedInput
  }

  export type FarmIncomeTypeUncheckedUpdateWithoutFarmIncomeTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmIncomeTypeIdRel?: FarmIncomeUncheckedUpdateManyWithoutFarmIncomeTypeIdRelNestedInput
    farmIncomeTypeHistoryIdRel?: FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeTypeHistoryIdRelNestedInput
  }

  export type FarmIncomeTypeUncheckedUpdateManyWithoutFarmIncomeTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FarmSpendingUpdateWithoutFarmSpendingCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmSpendingTypeIdRel?: FarmSpendingTypeUpdateOneRequiredWithoutFarmSpendingTypeIdRelNestedInput
    farmSpendingUpdateByRel?: UserUpdateOneWithoutFarmSpendingUpdateByRelNestedInput
  }

  export type FarmSpendingUncheckedUpdateWithoutFarmSpendingCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmSpendingUncheckedUpdateManyWithoutFarmSpendingCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmSpendingUpdateWithoutFarmSpendingUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmSpendingTypeIdRel?: FarmSpendingTypeUpdateOneRequiredWithoutFarmSpendingTypeIdRelNestedInput
    farmSpendingCreateByRel?: UserUpdateOneWithoutFarmSpendingCreateByRelNestedInput
  }

  export type FarmSpendingUncheckedUpdateWithoutFarmSpendingUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FarmSpendingUncheckedUpdateManyWithoutFarmSpendingUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FarmSpendingTypeUpdateWithoutFarmSpendingTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmSpendingTypeUpdateByRel?: UserUpdateOneWithoutFarmSpendingTypeUpdateByRelNestedInput
    farmSpendingTypeIdRel?: FarmSpendingUpdateManyWithoutFarmSpendingTypeIdRelNestedInput
    farmSpendingTypeHistoryIdRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingTypeHistoryIdRelNestedInput
  }

  export type FarmSpendingTypeUncheckedUpdateWithoutFarmSpendingTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    farmSpendingTypeIdRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingTypeIdRelNestedInput
    farmSpendingTypeHistoryIdRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingTypeHistoryIdRelNestedInput
  }

  export type FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeCreateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmSpendingTypeUpdateWithoutFarmSpendingTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmSpendingTypeCreateByRel?: UserUpdateOneWithoutFarmSpendingTypeCreateByRelNestedInput
    farmSpendingTypeIdRel?: FarmSpendingUpdateManyWithoutFarmSpendingTypeIdRelNestedInput
    farmSpendingTypeHistoryIdRel?: FarmSpendingHistoryUpdateManyWithoutFarmSpendingTypeHistoryIdRelNestedInput
  }

  export type FarmSpendingTypeUncheckedUpdateWithoutFarmSpendingTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmSpendingTypeIdRel?: FarmSpendingUncheckedUpdateManyWithoutFarmSpendingTypeIdRelNestedInput
    farmSpendingTypeHistoryIdRel?: FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingTypeHistoryIdRelNestedInput
  }

  export type FarmSpendingTypeUncheckedUpdateManyWithoutFarmSpendingTypeUpdateByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeName?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserHistoryUpdateWithoutUserHistoryCreatedByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    oldData?: JsonNullValueInput | InputJsonValue
    newData?: JsonNullValueInput | InputJsonValue
    userHistoryUpdatedByRel?: UserUpdateOneWithoutUserHistoryUpdatedByRelNestedInput
    userHistoryIdRel?: UserUpdateOneRequiredWithoutUserHistoryIdRelNestedInput
  }

  export type UserHistoryUncheckedUpdateWithoutUserHistoryCreatedByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userId?: BigIntFieldUpdateOperationsInput | bigint | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    oldData?: JsonNullValueInput | InputJsonValue
    newData?: JsonNullValueInput | InputJsonValue
  }

  export type UserHistoryUncheckedUpdateManyWithoutUserHistoryCreatedByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userId?: BigIntFieldUpdateOperationsInput | bigint | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    oldData?: JsonNullValueInput | InputJsonValue
    newData?: JsonNullValueInput | InputJsonValue
  }

  export type UserHistoryUpdateWithoutUserHistoryUpdatedByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    oldData?: JsonNullValueInput | InputJsonValue
    newData?: JsonNullValueInput | InputJsonValue
    userHistoryCreatedByRel?: UserUpdateOneWithoutUserHistoryCreatedByRelNestedInput
    userHistoryIdRel?: UserUpdateOneRequiredWithoutUserHistoryIdRelNestedInput
  }

  export type UserHistoryUncheckedUpdateWithoutUserHistoryUpdatedByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userId?: BigIntFieldUpdateOperationsInput | bigint | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    oldData?: JsonNullValueInput | InputJsonValue
    newData?: JsonNullValueInput | InputJsonValue
  }

  export type UserHistoryUncheckedUpdateManyWithoutUserHistoryUpdatedByRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    userId?: BigIntFieldUpdateOperationsInput | bigint | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    oldData?: JsonNullValueInput | InputJsonValue
    newData?: JsonNullValueInput | InputJsonValue
  }

  export type UserHistoryUpdateWithoutUserHistoryIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    oldData?: JsonNullValueInput | InputJsonValue
    newData?: JsonNullValueInput | InputJsonValue
    userHistoryCreatedByRel?: UserUpdateOneWithoutUserHistoryCreatedByRelNestedInput
    userHistoryUpdatedByRel?: UserUpdateOneWithoutUserHistoryUpdatedByRelNestedInput
  }

  export type UserHistoryUncheckedUpdateWithoutUserHistoryIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    oldData?: JsonNullValueInput | InputJsonValue
    newData?: JsonNullValueInput | InputJsonValue
  }

  export type UserHistoryUncheckedUpdateManyWithoutUserHistoryIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    oldData?: JsonNullValueInput | InputJsonValue
    newData?: JsonNullValueInput | InputJsonValue
  }

  export type ChurchIncomeHistoryUpdateWithoutChurchIncomeHistoryCreateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchIncomeTypeHistoryIdRel?: ChurchIncomeTypeUpdateOneRequiredWithoutChurchIncomeTypeHistoryIdRelNestedInput
    churchIncomeHistoryUpdateByRel?: UserUpdateOneWithoutChurchIncomeHistoryUpdateByRelNestedInput
  }

  export type ChurchIncomeHistoryUncheckedUpdateWithoutChurchIncomeHistoryCreateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryCreateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type ChurchIncomeHistoryUpdateWithoutChurchIncomeHistoryUpdateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchIncomeTypeHistoryIdRel?: ChurchIncomeTypeUpdateOneRequiredWithoutChurchIncomeTypeHistoryIdRelNestedInput
    churchIncomeHistoryCreateByRel?: UserUpdateOneWithoutChurchIncomeHistoryCreateByRelNestedInput
  }

  export type ChurchIncomeHistoryUncheckedUpdateWithoutChurchIncomeHistoryUpdateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeHistoryUpdateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChurchSpendingHistoryUpdateWithoutChurchSpendingHistoryCreateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    bill?: StringFieldUpdateOperationsInput | string
    billNumber?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchSpendingTypeHistoryIdRel?: ChurchSpendingTypeUpdateOneRequiredWithoutChurchSpendingTypeHistoryIdRelNestedInput
    churchSpendingHistoryUpdateByRel?: UserUpdateOneWithoutChurchSpendingHistoryUpdateByRelNestedInput
  }

  export type ChurchSpendingHistoryUncheckedUpdateWithoutChurchSpendingHistoryCreateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    bill?: StringFieldUpdateOperationsInput | string
    billNumber?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryCreateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    bill?: StringFieldUpdateOperationsInput | string
    billNumber?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type ChurchSpendingHistoryUpdateWithoutChurchSpendingHistoryUpdateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    bill?: StringFieldUpdateOperationsInput | string
    billNumber?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchSpendingTypeHistoryIdRel?: ChurchSpendingTypeUpdateOneRequiredWithoutChurchSpendingTypeHistoryIdRelNestedInput
    churchSpendingHistoryCreateByRel?: UserUpdateOneWithoutChurchSpendingHistoryCreateByRelNestedInput
  }

  export type ChurchSpendingHistoryUncheckedUpdateWithoutChurchSpendingHistoryUpdateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    bill?: StringFieldUpdateOperationsInput | string
    billNumber?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingHistoryUpdateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    bill?: StringFieldUpdateOperationsInput | string
    billNumber?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StoreIncomeHistoryUpdateWithoutStoreIncomeHistoryCreateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeIncomeTypeHistoryIdRel?: StoreIncomeTypeUpdateOneRequiredWithoutStoreIncomeTypeHistoryIdRelNestedInput
    storeIncomeHistoryUpdateByRel?: UserUpdateOneWithoutStoreIncomeHistoryUpdateByRelNestedInput
  }

  export type StoreIncomeHistoryUncheckedUpdateWithoutStoreIncomeHistoryCreateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryCreateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreIncomeHistoryUpdateWithoutStoreIncomeHistoryUpdateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeIncomeTypeHistoryIdRel?: StoreIncomeTypeUpdateOneRequiredWithoutStoreIncomeTypeHistoryIdRelNestedInput
    storeIncomeHistoryCreateByRel?: UserUpdateOneWithoutStoreIncomeHistoryCreateByRelNestedInput
  }

  export type StoreIncomeHistoryUncheckedUpdateWithoutStoreIncomeHistoryUpdateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeHistoryUpdateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StoreSpendingHistoryUpdateWithoutStoreSpendingHistoryCreateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeSpendingTypeHistoryIdRel?: StoreSpendingTypeUpdateOneRequiredWithoutStoreSpendingTypeHistoryIdRelNestedInput
    storeSpendingHistoryUpdateByRel?: UserUpdateOneWithoutStoreSpendingHistoryUpdateByRelNestedInput
  }

  export type StoreSpendingHistoryUncheckedUpdateWithoutStoreSpendingHistoryCreateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryCreateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreSpendingHistoryUpdateWithoutStoreSpendingHistoryUpdateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeSpendingTypeHistoryIdRel?: StoreSpendingTypeUpdateOneRequiredWithoutStoreSpendingTypeHistoryIdRelNestedInput
    storeSpendingHistoryCreateByRel?: UserUpdateOneWithoutStoreSpendingHistoryCreateByRelNestedInput
  }

  export type StoreSpendingHistoryUncheckedUpdateWithoutStoreSpendingHistoryUpdateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingHistoryUpdateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FarmIncomeHistoryUpdateWithoutFarmIncomeHistoryCreateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmIncomeTypeHistoryIdRel?: FarmIncomeTypeUpdateOneRequiredWithoutFarmIncomeTypeHistoryIdRelNestedInput
    farmIncomeHistoryUpdateByRel?: UserUpdateOneWithoutFarmIncomeHistoryUpdateByRelNestedInput
  }

  export type FarmIncomeHistoryUncheckedUpdateWithoutFarmIncomeHistoryCreateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryCreateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmIncomeHistoryUpdateWithoutFarmIncomeHistoryUpdateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmIncomeTypeHistoryIdRel?: FarmIncomeTypeUpdateOneRequiredWithoutFarmIncomeTypeHistoryIdRelNestedInput
    farmIncomeHistoryCreateByRel?: UserUpdateOneWithoutFarmIncomeHistoryCreateByRelNestedInput
  }

  export type FarmIncomeHistoryUncheckedUpdateWithoutFarmIncomeHistoryUpdateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeHistoryUpdateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    incomeTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FarmSpendingHistoryUpdateWithoutFarmSpendingHistoryCreateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmSpendingTypeHistoryIdRel?: FarmSpendingTypeUpdateOneRequiredWithoutFarmSpendingTypeHistoryIdRelNestedInput
    farmSpendingHistoryUpdateByRel?: UserUpdateOneWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type FarmSpendingHistoryUncheckedUpdateWithoutFarmSpendingHistoryCreateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryCreateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmSpendingHistoryUpdateWithoutFarmSpendingHistoryUpdateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmSpendingTypeHistoryIdRel?: FarmSpendingTypeUpdateOneRequiredWithoutFarmSpendingTypeHistoryIdRelNestedInput
    farmSpendingHistoryCreateByRel?: UserUpdateOneWithoutFarmSpendingHistoryCreateByRelNestedInput
  }

  export type FarmSpendingHistoryUncheckedUpdateWithoutFarmSpendingHistoryUpdateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingHistoryUpdateByRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    spendingTypeId?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChurchIncomeCreateManyChurchIncomeTypeIdRelInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchIncomeHistoryCreateManyChurchIncomeTypeHistoryIdRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchIncomeUpdateWithoutChurchIncomeTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchIncomeCreateByRel?: UserUpdateOneWithoutChurchIncomeCreateByRelNestedInput
    churchIncomeUpdateByRel?: UserUpdateOneWithoutChurchIncomeUpdateByRelNestedInput
  }

  export type ChurchIncomeUncheckedUpdateWithoutChurchIncomeTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type ChurchIncomeUncheckedUpdateManyWithoutChurchIncomeTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type ChurchIncomeHistoryUpdateWithoutChurchIncomeTypeHistoryIdRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchIncomeHistoryCreateByRel?: UserUpdateOneWithoutChurchIncomeHistoryCreateByRelNestedInput
    churchIncomeHistoryUpdateByRel?: UserUpdateOneWithoutChurchIncomeHistoryUpdateByRelNestedInput
  }

  export type ChurchIncomeHistoryUncheckedUpdateWithoutChurchIncomeTypeHistoryIdRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type ChurchIncomeHistoryUncheckedUpdateManyWithoutChurchIncomeTypeHistoryIdRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type ChurchSpendingCreateManyChurchSpendingTypeIdRelInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    bill?: string | null
    billNumber?: string | null
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchSpendingHistoryCreateManyChurchSpendingTypeHistoryIdRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    bill: string
    billNumber: string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type ChurchSpendingUpdateWithoutChurchSpendingTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    bill?: NullableStringFieldUpdateOperationsInput | string | null
    billNumber?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchSpendingCreateByRel?: UserUpdateOneWithoutChurchSpendingCreateByRelNestedInput
    churchSpendingUpdateByRel?: UserUpdateOneWithoutChurchSpendingUpdateByRelNestedInput
  }

  export type ChurchSpendingUncheckedUpdateWithoutChurchSpendingTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    bill?: NullableStringFieldUpdateOperationsInput | string | null
    billNumber?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type ChurchSpendingUncheckedUpdateManyWithoutChurchSpendingTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    bill?: NullableStringFieldUpdateOperationsInput | string | null
    billNumber?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type ChurchSpendingHistoryUpdateWithoutChurchSpendingTypeHistoryIdRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    bill?: StringFieldUpdateOperationsInput | string
    billNumber?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    churchSpendingHistoryCreateByRel?: UserUpdateOneWithoutChurchSpendingHistoryCreateByRelNestedInput
    churchSpendingHistoryUpdateByRel?: UserUpdateOneWithoutChurchSpendingHistoryUpdateByRelNestedInput
  }

  export type ChurchSpendingHistoryUncheckedUpdateWithoutChurchSpendingTypeHistoryIdRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    bill?: StringFieldUpdateOperationsInput | string
    billNumber?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type ChurchSpendingHistoryUncheckedUpdateManyWithoutChurchSpendingTypeHistoryIdRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    bill?: StringFieldUpdateOperationsInput | string
    billNumber?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreIncomeCreateManyStoreIncomeTypeIdRelInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreIncomeHistoryCreateManyStoreIncomeTypeHistoryIdRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreIncomeUpdateWithoutStoreIncomeTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeIncomeCreateByRel?: UserUpdateOneWithoutStoreIncomeCreateByRelNestedInput
    storeIncomeUpdateByRel?: UserUpdateOneWithoutStoreIncomeUpdateByRelNestedInput
  }

  export type StoreIncomeUncheckedUpdateWithoutStoreIncomeTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreIncomeUncheckedUpdateManyWithoutStoreIncomeTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreIncomeHistoryUpdateWithoutStoreIncomeTypeHistoryIdRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeIncomeHistoryCreateByRel?: UserUpdateOneWithoutStoreIncomeHistoryCreateByRelNestedInput
    storeIncomeHistoryUpdateByRel?: UserUpdateOneWithoutStoreIncomeHistoryUpdateByRelNestedInput
  }

  export type StoreIncomeHistoryUncheckedUpdateWithoutStoreIncomeTypeHistoryIdRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreIncomeHistoryUncheckedUpdateManyWithoutStoreIncomeTypeHistoryIdRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreSpendingCreateManyStoreSpendingTypeIdRelInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreSpendingHistoryCreateManyStoreSpendingTypeHistoryIdRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type StoreSpendingUpdateWithoutStoreSpendingTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeSpendingCreateByRel?: UserUpdateOneWithoutStoreSpendingCreateByRelNestedInput
    storeSpendingUpdateByRel?: UserUpdateOneWithoutStoreSpendingUpdateByRelNestedInput
  }

  export type StoreSpendingUncheckedUpdateWithoutStoreSpendingTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreSpendingUncheckedUpdateManyWithoutStoreSpendingTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreSpendingHistoryUpdateWithoutStoreSpendingTypeHistoryIdRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    storeSpendingHistoryCreateByRel?: UserUpdateOneWithoutStoreSpendingHistoryCreateByRelNestedInput
    storeSpendingHistoryUpdateByRel?: UserUpdateOneWithoutStoreSpendingHistoryUpdateByRelNestedInput
  }

  export type StoreSpendingHistoryUncheckedUpdateWithoutStoreSpendingTypeHistoryIdRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type StoreSpendingHistoryUncheckedUpdateManyWithoutStoreSpendingTypeHistoryIdRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmIncomeCreateManyFarmIncomeTypeIdRelInput = {
    id?: bigint | number
    detail?: string | null
    amount?: bigint | number
    price: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmIncomeHistoryCreateManyFarmIncomeTypeHistoryIdRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    amount?: bigint | number
    price: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmIncomeUpdateWithoutFarmIncomeTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmIncomeCreateByRel?: UserUpdateOneWithoutFarmIncomeCreateByRelNestedInput
    farmIncomeUpdateByRel?: UserUpdateOneWithoutFarmIncomeUpdateByRelNestedInput
  }

  export type FarmIncomeUncheckedUpdateWithoutFarmIncomeTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmIncomeUncheckedUpdateManyWithoutFarmIncomeTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmIncomeHistoryUpdateWithoutFarmIncomeTypeHistoryIdRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmIncomeHistoryCreateByRel?: UserUpdateOneWithoutFarmIncomeHistoryCreateByRelNestedInput
    farmIncomeHistoryUpdateByRel?: UserUpdateOneWithoutFarmIncomeHistoryUpdateByRelNestedInput
  }

  export type FarmIncomeHistoryUncheckedUpdateWithoutFarmIncomeTypeHistoryIdRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmIncomeHistoryUncheckedUpdateManyWithoutFarmIncomeTypeHistoryIdRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmSpendingCreateManyFarmSpendingTypeIdRelInput = {
    id?: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmSpendingHistoryCreateManyFarmSpendingTypeHistoryIdRelInput = {
    revId?: bigint | number
    id: bigint | number
    detail?: string | null
    funds: bigint | number
    date: Date | string
    deleted?: boolean
    createAt?: Date | string
    createBy?: bigint | number | null
    updatedAt?: Date | string
    updatedBy?: bigint | number | null
  }

  export type FarmSpendingUpdateWithoutFarmSpendingTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmSpendingCreateByRel?: UserUpdateOneWithoutFarmSpendingCreateByRelNestedInput
    farmSpendingUpdateByRel?: UserUpdateOneWithoutFarmSpendingUpdateByRelNestedInput
  }

  export type FarmSpendingUncheckedUpdateWithoutFarmSpendingTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmSpendingUncheckedUpdateManyWithoutFarmSpendingTypeIdRelInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmSpendingHistoryUpdateWithoutFarmSpendingTypeHistoryIdRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    farmSpendingHistoryCreateByRel?: UserUpdateOneWithoutFarmSpendingHistoryCreateByRelNestedInput
    farmSpendingHistoryUpdateByRel?: UserUpdateOneWithoutFarmSpendingHistoryUpdateByRelNestedInput
  }

  export type FarmSpendingHistoryUncheckedUpdateWithoutFarmSpendingTypeHistoryIdRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }

  export type FarmSpendingHistoryUncheckedUpdateManyWithoutFarmSpendingTypeHistoryIdRelInput = {
    revId?: BigIntFieldUpdateOperationsInput | bigint | number
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    detail?: NullableStringFieldUpdateOperationsInput | string | null
    funds?: BigIntFieldUpdateOperationsInput | bigint | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}